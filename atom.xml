<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ryan</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-17T16:21:06.515Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Ryan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>谷粒学院day11—权限管理和配置中心</title>
    <link href="http://yoursite.com/2020/07/18/%E5%AD%A6%E9%99%A2day11%E2%80%94%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E5%92%8C%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/"/>
    <id>http://yoursite.com/2020/07/18/%E5%AD%A6%E9%99%A2day11%E2%80%94%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E5%92%8C%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/</id>
    <published>2020-07-17T16:18:00.000Z</published>
    <updated>2020-07-17T16:21:06.515Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、需求分析"><a href="#1、需求分析" class="headerlink" title="1、需求分析"></a>1、需求分析</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>在一个企业中，角色总是分为很多， 不同的角色权限也会有所不同，这个在一个互联网公司的后台管理系统也可以体现出来，所以后台一般都需要一个权限管理功能</p><p>而常见的后台管理系统，一般都有菜单、角色、用户三个模块，他们的关系是这样的：不同角色对应不同菜单，是多对多的关系，用户可以是一个角色也可以是多个角色，所以用户和角色也是多对多的关系，这样的话，至少需要菜单表、角色表、用户表、菜单_角色、角色__用户表至少5张表，才能实现比较完善的权限管理系统</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717092308.png" alt="image-20200717092300994"></p><p>功能描述</p><h3 id="菜单管理"><a href="#菜单管理" class="headerlink" title="菜单管理"></a>菜单管理</h3><p>（1）菜单列表：使用树形结构显示菜单列表</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717092442.png" alt="img"></p><p>（2）添加菜单：点击添加菜单，弹框进行添加</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717092454.png" alt="img"></p><p>(3) 修改菜单</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717092521.png" alt="img"></p><p>(4) 删除菜单</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717092534.png" alt="img"></p><h3 id="角色管理"><a href="#角色管理" class="headerlink" title="角色管理"></a>角色管理</h3><p>(1) 角色列表，实现角色的条件查询带分页功能</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717092610.png" alt="img"></p><p>(2) 角色添加</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717092626.png" alt="img"></p><p>(3) 角色修改</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717092641.png" alt="img"></p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717092648.png" alt="img"></p><p>(4) 角色删除</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717092706.png" alt="img"></p><p>批量删除</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717092719.png" alt="img"></p><p>(5) 角色分配菜单</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717092733.png" alt="img"></p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717092739.png" alt="img"></p><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><p>(1) 用户列表</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717092759.png" alt="img"></p><p>(2) 用户添加</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717092811.png" alt="img"></p><p>(3) 用户修改</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717092823.png" alt="img"></p><p>(4) 用户删除</p><p>普通删除和批量删除</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717092844.png" alt="img"></p><p>(5) 用户分配角色</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717092859.png" alt="img"></p><h2 id="2、spring-security模块"><a href="#2、spring-security模块" class="headerlink" title="2、spring_security模块"></a>2、spring_security模块</h2><h3 id="框架介绍"><a href="#框架介绍" class="headerlink" title="框架介绍"></a>框架介绍</h3><p>Spring 是一个非常流行和成功的 Java 应用开发框架。Spring Security 基于 Spring 框架，提供了一套 Web 应用安全性的完整解决方案。一般来说，Web 应用的安全性包括<strong>用户认证**</strong>（<strong><strong>Authentication</strong></strong>）和用户授权（<strong><strong>Authorization</strong></strong>）**两个部分。</p><p>（1）用户认证指的是：验证某个用户是否为系统中的合法主体，也就是说用户能否访问该系统。用户认证一般要求用户提供用户名和密码。系统通过校验用户名和密码来完成认证过程。</p><p>（2）用户授权指的是验证某个用户是否有权限执行某个操作。在一个系统中，不同用户所具有的权限是不同的。比如对一个文件来说，有的用户只能进行读取，而有的用户可以进行修改。一般来说，系统会为不同的用户分配不同的角色，而每个角色则对应一系列的权限。</p><p><strong>Spring Security其实就是用filter，多请求的路径进行过滤。</strong></p><p>（1）如果是基于Session，那么Spring-security会对cookie里的sessionid进行解析，找到服务器存储的sesion信息，然后判断当前用户是否符合请求的要求。</p><p>（2）如果是token，则是解析出token，然后将当前请求加入到Spring-security管理的权限信息中去</p><p><strong>认证与授权实现思路</strong></p><p>如果系统的模块众多，每个模块都需要就行授权与认证，所以我们选择基于token的形式进行授权与认证，用户根据用户名密码认证成功，然后获取当前用户角色的一系列权限值，并以用户名为key，权限列表为value的形式存入redis缓存中，根据用户名相关信息生成token返回，浏览器将token记录到cookie中，每次调用api接口都默认将token携带到header请求头中，Spring-security解析header头获取token信息，解析token获取当前用户名，根据用户名就可以从redis中获取权限列表，这样Spring-security就能够判断当前请求是否有权限访问</p><h3 id="项目整合spring-security"><a href="#项目整合spring-security" class="headerlink" title="项目整合spring security"></a>项目整合spring security</h3><p>在common中新建spring_security模块，同时在common_utils中新建一个工具类</p><p>ResponseUtil</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResponseUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">out</span><span class="params">(HttpServletResponse response, R r)</span> </span>&#123;</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        response.setStatus(HttpStatus.OK.value());</span><br><span class="line">        response.setContentType(MediaType.APPLICATION_JSON_UTF8_VALUE);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            mapper.writeValue(response.getWriter(), r);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ryan<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common_utils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Spring Security依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="代码接口说明"><a href="#代码接口说明" class="headerlink" title="代码接口说明"></a>代码接口说明</h4><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717175023.png" alt="img"></p><h4 id="entity"><a href="#entity" class="headerlink" title="entity"></a>entity</h4><p>提示：spring security中需要的两个实体类</p><p>SecurityUser</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 安全认证用户详情信息</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> qy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2019-11-08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityUser</span> <span class="keyword">implements</span> <span class="title">UserDetails</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//当前登录用户</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">transient</span> User currentUserInfo;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//当前权限</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; permissionValueList;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SecurityUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SecurityUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.currentUserInfo = user;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Collection&lt;? extends GrantedAuthority&gt; getAuthorities() &#123;</span><br><span class="line">        Collection&lt;GrantedAuthority&gt; authorities = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(String permissionValue : permissionValueList) &#123;</span><br><span class="line">            <span class="keyword">if</span>(StringUtils.isEmpty(permissionValue)) <span class="keyword">continue</span>;</span><br><span class="line">            SimpleGrantedAuthority authority = <span class="keyword">new</span> SimpleGrantedAuthority(permissionValue);</span><br><span class="line">            authorities.add(authority);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> authorities;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> currentUserInfo.getPassword();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> currentUserInfo.getUsername();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAccountNonExpired</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAccountNonLocked</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isCredentialsNonExpired</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEnabled</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>user</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 用户实体类</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> qy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2019-11-08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ApiModel</span>(description = <span class="string">"用户实体类"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"微信openid"</span>)</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"密码"</span>)</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"昵称"</span>)</span><br><span class="line">    <span class="keyword">private</span> String nickName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"用户头像"</span>)</span><br><span class="line">    <span class="keyword">private</span> String salt;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"用户签名"</span>)</span><br><span class="line">    <span class="keyword">private</span> String token;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="config"><a href="#config" class="headerlink" title="config"></a>config</h4><p>核心配置类：TokenWebSecurityConfig</p><p>Spring Security的核心配置就是继承WebSecurityConfigurerAdapter并注解@EnableWebSecurity的配置。</p><p>这个配置指明了用户名密码的处理方式、请求路径的开合、登录登出控制等和安全相关的配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * Security配置类</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> qy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2019-11-18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="meta">@EnableGlobalMethodSecurity</span>(prePostEnabled = <span class="keyword">true</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TokenWebSecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UserDetailsService userDetailsService;</span><br><span class="line">    <span class="keyword">private</span> TokenManager tokenManager;</span><br><span class="line">    <span class="keyword">private</span> DefaultPasswordEncoder defaultPasswordEncoder;</span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TokenWebSecurityConfig</span><span class="params">(UserDetailsService userDetailsService, DefaultPasswordEncoder defaultPasswordEncoder,</span></span></span><br><span class="line"><span class="function"><span class="params">                                  TokenManager tokenManager, RedisTemplate redisTemplate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userDetailsService = userDetailsService;</span><br><span class="line">        <span class="keyword">this</span>.defaultPasswordEncoder = defaultPasswordEncoder;</span><br><span class="line">        <span class="keyword">this</span>.tokenManager = tokenManager;</span><br><span class="line">        <span class="keyword">this</span>.redisTemplate = redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 配置设置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> http</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        http.exceptionHandling()</span><br><span class="line">                .authenticationEntryPoint(<span class="keyword">new</span> UnauthorizedEntryPoint())</span><br><span class="line">                .and().csrf().disable()</span><br><span class="line">                .authorizeRequests()</span><br><span class="line">                .anyRequest().authenticated()</span><br><span class="line">                .and().logout().logoutUrl(<span class="string">"/admin/acl/index/logout"</span>)</span><br><span class="line">                .addLogoutHandler(<span class="keyword">new</span> TokenLogoutHandler(tokenManager,redisTemplate)).and()</span><br><span class="line">                .addFilter(<span class="keyword">new</span> TokenLoginFilter(authenticationManager(), tokenManager, redisTemplate))</span><br><span class="line">                .addFilter(<span class="keyword">new</span> TokenAuthenticationFilter(authenticationManager(), tokenManager, redisTemplate)).httpBasic();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 密码处理</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> auth</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        auth.userDetailsService(userDetailsService).passwordEncoder(defaultPasswordEncoder);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 配置哪些请求不拦截</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> web</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(WebSecurity web)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">//        web.ignoring().antMatchers("/api/**",</span></span><br><span class="line"><span class="comment">//                "/swagger-resources/**", "/webjars/**", "/v2/**", "/swagger-ui.html/**"</span></span><br><span class="line"><span class="comment">//               );</span></span><br><span class="line">        web.ignoring().antMatchers(<span class="string">"/*/**"</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h4><p>TokenAuthenticationFilter：授权的filter</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 访问过滤器</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> qy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2019-11-08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TokenAuthenticationFilter</span> <span class="keyword">extends</span> <span class="title">BasicAuthenticationFilter</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> TokenManager tokenManager;</span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TokenAuthenticationFilter</span><span class="params">(AuthenticationManager authManager, TokenManager tokenManager, RedisTemplate redisTemplate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(authManager);</span><br><span class="line">        <span class="keyword">this</span>.tokenManager = tokenManager;</span><br><span class="line">        <span class="keyword">this</span>.redisTemplate = redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doFilterInternal</span><span class="params">(HttpServletRequest req, HttpServletResponse res, FilterChain chain)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"================="</span>+req.getRequestURI());</span><br><span class="line">        <span class="keyword">if</span>(req.getRequestURI().indexOf(<span class="string">"admin"</span>) == -<span class="number">1</span>) &#123;</span><br><span class="line">            chain.doFilter(req, res);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        UsernamePasswordAuthenticationToken authentication = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            authentication = getAuthentication(req);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            ResponseUtil.out(res, R.error());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (authentication != <span class="keyword">null</span>) &#123;</span><br><span class="line">            SecurityContextHolder.getContext().setAuthentication(authentication);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ResponseUtil.out(res, R.error());</span><br><span class="line">        &#125;</span><br><span class="line">        chain.doFilter(req, res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> UsernamePasswordAuthenticationToken <span class="title">getAuthentication</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// token置于header里</span></span><br><span class="line">        String token = request.getHeader(<span class="string">"token"</span>);</span><br><span class="line">        <span class="keyword">if</span> (token != <span class="keyword">null</span> &amp;&amp; !<span class="string">""</span>.equals(token.trim())) &#123;</span><br><span class="line">            String userName = tokenManager.getUserFromToken(token);</span><br><span class="line"></span><br><span class="line">            List&lt;String&gt; permissionValueList = (List&lt;String&gt;) redisTemplate.opsForValue().get(userName);</span><br><span class="line">            Collection&lt;GrantedAuthority&gt; authorities = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span>(String permissionValue : permissionValueList) &#123;</span><br><span class="line">                <span class="keyword">if</span>(StringUtils.isEmpty(permissionValue)) <span class="keyword">continue</span>;</span><br><span class="line">                SimpleGrantedAuthority authority = <span class="keyword">new</span> SimpleGrantedAuthority(permissionValue);</span><br><span class="line">                authorities.add(authority);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!StringUtils.isEmpty(userName)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> UsernamePasswordAuthenticationToken(userName, token, authorities);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TokenLoginFilter：认证的filter</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 登录过滤器，继承UsernamePasswordAuthenticationFilter，对用户名密码进行登录校验</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> qy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2019-11-08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TokenLoginFilter</span> <span class="keyword">extends</span> <span class="title">UsernamePasswordAuthenticationFilter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> AuthenticationManager authenticationManager;</span><br><span class="line">    <span class="keyword">private</span> TokenManager tokenManager;</span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TokenLoginFilter</span><span class="params">(AuthenticationManager authenticationManager, TokenManager tokenManager, RedisTemplate redisTemplate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.authenticationManager = authenticationManager;</span><br><span class="line">        <span class="keyword">this</span>.tokenManager = tokenManager;</span><br><span class="line">        <span class="keyword">this</span>.redisTemplate = redisTemplate;</span><br><span class="line">        <span class="keyword">this</span>.setPostOnly(<span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">this</span>.setRequiresAuthenticationRequestMatcher(<span class="keyword">new</span> AntPathRequestMatcher(<span class="string">"/admin/acl/login"</span>,<span class="string">"POST"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Authentication <span class="title">attemptAuthentication</span><span class="params">(HttpServletRequest req, HttpServletResponse res)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            User user = <span class="keyword">new</span> ObjectMapper().readValue(req.getInputStream(), User<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> authenticationManager.authenticate(<span class="keyword">new</span> UsernamePasswordAuthenticationToken(user.getUsername(), user.getPassword(), <span class="keyword">new</span> ArrayList&lt;&gt;()));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录成功</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> req</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> res</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> chain</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> auth</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ServletException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">successfulAuthentication</span><span class="params">(HttpServletRequest req, HttpServletResponse res, FilterChain chain,</span></span></span><br><span class="line"><span class="function"><span class="params">                                            Authentication auth)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        SecurityUser user = (SecurityUser) auth.getPrincipal();</span><br><span class="line">        String token = tokenManager.createToken(user.getCurrentUserInfo().getUsername());</span><br><span class="line">        redisTemplate.opsForValue().set(user.getCurrentUserInfo().getUsername(), user.getPermissionValueList());</span><br><span class="line"></span><br><span class="line">        ResponseUtil.out(res, R.ok().data(<span class="string">"token"</span>, token));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录失败</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> e</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ServletException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">unsuccessfulAuthentication</span><span class="params">(HttpServletRequest request, HttpServletResponse response,</span></span></span><br><span class="line"><span class="function"><span class="params">                                              AuthenticationException e)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        ResponseUtil.out(response, R.error());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="security"><a href="#security" class="headerlink" title="security"></a>security</h4><p>DefultPasswordEncoder：密码处理的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * t密码的处理方法类型</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> qy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2019-11-08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DefaultPasswordEncoder</span> <span class="keyword">implements</span> <span class="title">PasswordEncoder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DefaultPasswordEncoder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> strength</span></span><br><span class="line"><span class="comment">     *            the log rounds to use, between 4 and 31</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DefaultPasswordEncoder</span><span class="params">(<span class="keyword">int</span> strength)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">encode</span><span class="params">(CharSequence rawPassword)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> MD5.encrypt(rawPassword.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">matches</span><span class="params">(CharSequence rawPassword, String encodedPassword)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> encodedPassword.equals(MD5.encrypt(rawPassword.toString()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TokenLogoutHandler：退出实现</p><p>用户退出操作交给spring security，不再需要我们自己来写了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 登出业务逻辑类</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> qy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2019-11-08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TokenLogoutHandler</span> <span class="keyword">implements</span> <span class="title">LogoutHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TokenManager tokenManager;</span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TokenLogoutHandler</span><span class="params">(TokenManager tokenManager, RedisTemplate redisTemplate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.tokenManager = tokenManager;</span><br><span class="line">        <span class="keyword">this</span>.redisTemplate = redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">logout</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Authentication authentication)</span> </span>&#123;</span><br><span class="line">        String token = request.getHeader(<span class="string">"token"</span>);</span><br><span class="line">        <span class="keyword">if</span> (token != <span class="keyword">null</span>) &#123;</span><br><span class="line">            tokenManager.removeToken(token);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//清空当前用户缓存中的权限数据</span></span><br><span class="line">            String userName = tokenManager.getUserFromToken(token);</span><br><span class="line">            redisTemplate.delete(userName);</span><br><span class="line">        &#125;</span><br><span class="line">        ResponseUtil.out(response, R.ok());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TokenManager：token操作的工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * token管理</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> qy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2019-11-08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TokenManager</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> tokenExpiration = <span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">private</span> String tokenSignKey = <span class="string">"123456"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">createToken</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        String token = Jwts.builder().setSubject(username)</span><br><span class="line">                .setExpiration(<span class="keyword">new</span> Date(System.currentTimeMillis() + tokenExpiration))</span><br><span class="line">                .signWith(SignatureAlgorithm.HS512, tokenSignKey).compressWith(CompressionCodecs.GZIP).compact();</span><br><span class="line">        <span class="keyword">return</span> token;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserFromToken</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">        String user = Jwts.parser().setSigningKey(tokenSignKey).parseClaimsJws(token).getBody().getSubject();</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeToken</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//jwttoken无需删除，客户端扔掉即可。</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UnauthorizeEntryPoint：未授权统一处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UnauthorizedEntryPoint</span> <span class="keyword">implements</span> <span class="title">AuthenticationEntryPoint</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">commence</span><span class="params">(HttpServletRequest request, HttpServletResponse response, AuthenticationException e)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        ResponseUtil.out(response, R.error());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、菜单接口"><a href="#3、菜单接口" class="headerlink" title="3、菜单接口"></a>3、菜单接口</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>数据库准备</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`acl_permission`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'编号'</span>,</span><br><span class="line">  <span class="string">`pid`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'所属上级'</span>,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'名称'</span>,</span><br><span class="line">  <span class="string">`type`</span> <span class="built_in">tinyint</span>(<span class="number">3</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'类型(1:菜单,2:按钮)'</span>,</span><br><span class="line">  <span class="string">`permission_value`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'权限值'</span>,</span><br><span class="line">  <span class="string">`path`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'访问路径'</span>,</span><br><span class="line">  <span class="string">`component`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'组件路径'</span>,</span><br><span class="line">  <span class="string">`icon`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'图标'</span>,</span><br><span class="line">  <span class="string">`status`</span> <span class="built_in">tinyint</span>(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'状态(0:禁止,1:正常)'</span>,</span><br><span class="line">  <span class="string">`is_deleted`</span> <span class="built_in">tinyint</span>(<span class="number">1</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'逻辑删除 1（true）已删除， 0（false）未删除'</span>,</span><br><span class="line">  <span class="string">`gmt_create`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  <span class="string">`gmt_modified`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_pid`</span> (<span class="string">`pid`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4 <span class="keyword">COMMENT</span>=<span class="string">'权限'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`acl_role`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'角色id'</span>,</span><br><span class="line">  <span class="string">`role_name`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'角色名称'</span>,</span><br><span class="line">  <span class="string">`role_code`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'角色编码'</span>,</span><br><span class="line">  <span class="string">`remark`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'备注'</span>,</span><br><span class="line">  <span class="string">`is_deleted`</span> <span class="built_in">tinyint</span>(<span class="number">1</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'逻辑删除 1（true）已删除， 0（false）未删除'</span>,</span><br><span class="line">  <span class="string">`gmt_create`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  <span class="string">`gmt_modified`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`acl_role_permission`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span>,</span><br><span class="line">  <span class="string">`role_id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span>,</span><br><span class="line">  <span class="string">`permission_id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span>,</span><br><span class="line">  <span class="string">`is_deleted`</span> <span class="built_in">tinyint</span>(<span class="number">1</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'逻辑删除 1（true）已删除， 0（false）未删除'</span>,</span><br><span class="line">  <span class="string">`gmt_create`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  <span class="string">`gmt_modified`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_role_id`</span> (<span class="string">`role_id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_permission_id`</span> (<span class="string">`permission_id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'角色权限'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`acl_user`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'会员id'</span>,</span><br><span class="line">  <span class="string">`username`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'微信openid'</span>,</span><br><span class="line">  <span class="string">`password`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'密码'</span>,</span><br><span class="line">  <span class="string">`nick_name`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'昵称'</span>,</span><br><span class="line">  <span class="string">`salt`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户头像'</span>,</span><br><span class="line">  <span class="string">`token`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户签名'</span>,</span><br><span class="line">  <span class="string">`is_deleted`</span> <span class="built_in">tinyint</span>(<span class="number">1</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'逻辑删除 1（true）已删除， 0（false）未删除'</span>,</span><br><span class="line">  <span class="string">`gmt_create`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  <span class="string">`gmt_modified`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`uk_username`</span> (<span class="string">`username`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4 <span class="keyword">COMMENT</span>=<span class="string">'用户表'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`acl_user_role`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'主键id'</span>,</span><br><span class="line">  <span class="string">`role_id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'角色id'</span>,</span><br><span class="line">  <span class="string">`user_id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'用户id'</span>,</span><br><span class="line">  <span class="string">`is_deleted`</span> <span class="built_in">tinyint</span>(<span class="number">1</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'逻辑删除 1（true）已删除， 0（false）未删除'</span>,</span><br><span class="line">  <span class="string">`gmt_create`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  <span class="string">`gmt_modified`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_role_id`</span> (<span class="string">`role_id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_user_id`</span> (<span class="string">`user_id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure><p>数据表的关系如下</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717130354.jpg" alt="img"></p><p>新建模块service_acl</p><p>代码生成</p><p>完善实体类，并在Permission实体类中添加三个属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiModelProperty</span>(value = <span class="string">"层级"</span>)</span><br><span class="line"><span class="meta">@TableField</span>(exist = <span class="keyword">false</span>)</span><br><span class="line"><span class="keyword">private</span> Integer level;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiModelProperty</span>(value = <span class="string">"下级"</span>)</span><br><span class="line"><span class="meta">@TableField</span>(exist = <span class="keyword">false</span>)</span><br><span class="line"><span class="keyword">private</span> List&lt;Permission&gt; children;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiModelProperty</span>(value = <span class="string">"是否选中"</span>)</span><br><span class="line"><span class="meta">@TableField</span>(exist = <span class="keyword">false</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> isSelect;</span><br></pre></td></tr></table></figure><p>配置yml文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 服务端口</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8009</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment"># 服务名</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-acl</span></span><br><span class="line">  <span class="comment"># 环境设置</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># mysql数据库连接</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">  <span class="comment"># 返回json的全局时间格式</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">date-format:</span> <span class="string">yyyy-MM-dd</span> <span class="string">HH:mm:ss</span></span><br><span class="line">    <span class="attr">time-zone:</span> <span class="string">GMT+8</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置mapper xml文件的路径</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:com/ryan/acl/mapper/xml/*.xml</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line"><span class="comment">## 开启hystrix服务</span></span><br><span class="line"><span class="comment">#feign:</span></span><br><span class="line"><span class="comment">#  hystrix:</span></span><br><span class="line"><span class="comment">#    enabled: true</span></span><br></pre></td></tr></table></figure><p>编写启动类</p><h3 id="递归查询所有菜单"><a href="#递归查询所有菜单" class="headerlink" title="递归查询所有菜单"></a>递归查询所有菜单</h3><p>分析：菜单会分为很多级，需要达到树状显示的效果，根据以前的做法，是新建实体类，封装数据，最后返回，但是这种做法比较麻烦，效率也相对较低，加上菜单的层级可能会非常多，这种比较原始的方法不是很适用，所以这里推荐使用递归查询，并封装list返回</p><p>编写接口前记得完善一下Permission的实体类</p><h4 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/eduacl/permission"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PermissionController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PermissionService permissionService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取所有菜单</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/getAllPermission"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">getAllPermission</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;Permission&gt; list =  permissionService.getAllPermission();</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">"list"</span>, list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="service"><a href="#service" class="headerlink" title="service"></a>service</h4><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PermissionService</span> <span class="keyword">extends</span> <span class="title">IService</span>&lt;<span class="title">Permission</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Permission&gt; <span class="title">getAllPermission</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现类</p><p>提示：好好总结这个递归的思路和使用，包括后面删除菜单也是需要用到递归的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PermissionServiceImpl</span> <span class="keyword">extends</span> <span class="title">ServiceImpl</span>&lt;<span class="title">PermissionMapper</span>, <span class="title">Permission</span>&gt; <span class="keyword">implements</span> <span class="title">PermissionService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//==================================递归查询所有菜单=============================================</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Permission&gt; <span class="title">getAllPermission</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//如果要使用递归函数，第一步就是分析并找到一个入口</span></span><br><span class="line">        <span class="comment">//从数据表中可以看到，顶层菜单的pid是0，这是一个入口，从顶层菜单开始，level逐层+1，并往下递归查询数据，直到没有为止</span></span><br><span class="line">        <span class="comment">//先查出所有数据</span></span><br><span class="line">        QueryWrapper&lt;Permission&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        wrapper.orderByDesc(<span class="string">"id"</span>);</span><br><span class="line">        List&lt;Permission&gt; permissionList = baseMapper.selectList(wrapper);</span><br><span class="line">        <span class="comment">//构建菜单，新建一个方法进行查询数据</span></span><br><span class="line">        List&lt;Permission&gt; resultList = buildPermission(permissionList);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> resultList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取顶层菜单，并设置子菜单</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  List&lt;Permission&gt; <span class="title">buildPermission</span><span class="params">(List&lt;Permission&gt; permissionList)</span> </span>&#123;</span><br><span class="line">        List&lt;Permission&gt; finalList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//遍历所有的数据</span></span><br><span class="line">        <span class="keyword">for</span> (Permission permission : permissionList) &#123;</span><br><span class="line">            <span class="comment">//如果pid为0，则是顶级菜单</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="string">"0"</span>.equals(permission.getPid()))&#123;</span><br><span class="line">                <span class="comment">//将其层级设为1</span></span><br><span class="line">                permission.setLevel(<span class="number">1</span>);</span><br><span class="line">                <span class="comment">//封装到finalList中,如果直接传入permission的话，就只能封装一次，这不是我们想要的效果，我们需要继续往下查询数据</span></span><br><span class="line">                finalList.add(selectChildren(permission, permissionList));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> finalList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取子菜单，并递归设置子菜单</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Permission <span class="title">selectChildren</span><span class="params">(Permission permission, List&lt;Permission&gt; permissionList)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//因为要向一层菜单里面放二层菜单，二层菜单里面还要放三层菜单，所以没调用一次都需要初始化数据</span></span><br><span class="line">        permission.setChildren(<span class="keyword">new</span> ArrayList&lt;Permission&gt;());</span><br><span class="line">        <span class="comment">//继续遍历所有数据</span></span><br><span class="line">        <span class="keyword">for</span> (Permission nextPermission : permissionList) &#123;</span><br><span class="line">            <span class="comment">//pid与上一层的id相等的话，数据就符合，并封装</span></span><br><span class="line">            <span class="keyword">if</span>(permission.getId().equals(nextPermission.getPid()))&#123;</span><br><span class="line">                <span class="comment">//将下一级的层级在父级的基础上+1</span></span><br><span class="line">                nextPermission.setLevel(permission.getLevel() + <span class="number">1</span>);</span><br><span class="line">                <span class="comment">//封装数据前应该先判断permission的子菜单是否为空，如果为空则进行初始化即可，然后再进行封装</span></span><br><span class="line">                <span class="keyword">if</span>(permission.getChildren() == <span class="keyword">null</span>)&#123;</span><br><span class="line">                    permission.setChildren(<span class="keyword">new</span> ArrayList&lt;Permission&gt;());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//封装数据，并使用递归</span></span><br><span class="line">                permission.getChildren().add(selectChildren(nextPermission, permissionList));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> permission;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="swagger测试"><a href="#swagger测试" class="headerlink" title="swagger测试"></a>swagger测试</h4><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717115737.png" alt="image-20200717115736968"></p><p>测试成功</p><h3 id="递归删除菜单"><a href="#递归删除菜单" class="headerlink" title="递归删除菜单"></a>递归删除菜单</h3><p>提示：根据菜单id删除该菜单以及其所有的子菜单</p><p>controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据菜单id递归删除菜单</span></span><br><span class="line"><span class="meta">@DeleteMapping</span>(<span class="string">"/deletePermissionById/&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">deletePermissionById</span><span class="params">(@PathVariable String id)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count = permissionService.deletePermissionById(id);</span><br><span class="line">    <span class="keyword">if</span>(count&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok().message(<span class="string">"菜单已删除"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error().message(<span class="string">"删除菜单失败"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>service</p><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deletePermissionById</span><span class="params">(String id)</span></span>;</span><br></pre></td></tr></table></figure><p>实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//==========================================递归删除菜单===================================================</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deletePermissionById</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//mp中有一个可删除多条记录的方法:deleteBatchIds(),里面需要传一个集合，也就是id的集合</span></span><br><span class="line">    <span class="comment">//所以我们可以新建一个list集合，用于封装所有要删除的id</span></span><br><span class="line">    List&lt;String&gt; idList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="comment">//将要删除的id封装到集合中</span></span><br><span class="line">    idList.add(id);</span><br><span class="line">    <span class="keyword">this</span>.selectChildrenByIds(id, idList);</span><br><span class="line">    <span class="comment">//执行删除</span></span><br><span class="line">    <span class="keyword">int</span> count = baseMapper.deleteBatchIds(idList);</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据当前id，查询子菜单中的id并封装</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">selectChildrenByIds</span><span class="params">(String id, List&lt;String&gt; idList)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//根据当前id查询该条记录</span></span><br><span class="line">    QueryWrapper&lt;Permission&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.eq(<span class="string">"pid"</span>, id);</span><br><span class="line">    wrapper.select(<span class="string">"id"</span>);</span><br><span class="line">    <span class="comment">//注意，多条记录都可能是同一个父级，也就是pid相同，所以这里应该selectList</span></span><br><span class="line">    List&lt;Permission&gt; permissionList = baseMapper.selectList(wrapper);</span><br><span class="line">    <span class="comment">//遍历，这里换一种方式，使用stream流+lambda表达式来遍历</span></span><br><span class="line">    permissionList.stream().forEach(permission -&gt; &#123;</span><br><span class="line">        <span class="comment">//封装当前id</span></span><br><span class="line">        idList.add(permission.getId());</span><br><span class="line">        <span class="comment">//使用递归继续封装其子菜单id</span></span><br><span class="line">        <span class="keyword">this</span>.selectChildrenByIds(permission.getId(), idList);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>swagger测试</p><p>比如我要删除id为11的菜单以及其所有子菜单</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717122901.png" alt="image-20200717122901656"></p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717123627.png" alt="image-20200717123627695"></p><p>结果都变为已删除状态，测试成功</p><p>提醒：使用递归的时候，要注意检查代码，否则很容易出现栈溢出的状况：Handler dispatch failed; nested exception is java.lang.StackOverflowError</p><h3 id="角色分配菜单"><a href="#角色分配菜单" class="headerlink" title="角色分配菜单"></a>角色分配菜单</h3><p>因为是多对多的关系，所以新建了角色-菜单的表，对应角色id和菜单id</p><h4 id="controller-1"><a href="#controller-1" class="headerlink" title="controller"></a>controller</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//给角色分配菜单</span></span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/setPermissionForRole"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">setPermissionForRole</span><span class="params">(String roleId, String[] permissionIds)</span></span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> success = permissionService.setPermissionForRole(roleId, permissionIds);</span><br><span class="line">    <span class="keyword">if</span>(success)&#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok().message(<span class="string">"已授权"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error().message(<span class="string">"授权失败"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="service-1"><a href="#service-1" class="headerlink" title="service"></a>service</h4><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">setPermissionForRole</span><span class="params">(String roleId, String[] permissionIds)</span></span>;</span><br></pre></td></tr></table></figure><p>实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">setPermissionForRole</span><span class="params">(String roleId, String[] permissionIds)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//rolePermissionService中有一个savebatchs的方法，里面需要传一个集合</span></span><br><span class="line">    List&lt;RolePermission&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (String permissionId : permissionIds) &#123;</span><br><span class="line">        RolePermission rolePermission = <span class="keyword">new</span> RolePermission();</span><br><span class="line">        rolePermission.setRoleId(roleId);</span><br><span class="line">        rolePermission.setPermissionId(permissionId);</span><br><span class="line">        list.add(rolePermission);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">boolean</span> success = rolePermissionService.saveBatch(list);</span><br><span class="line">    <span class="keyword">return</span> success;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="swagger测试-1"><a href="#swagger测试-1" class="headerlink" title="swagger测试"></a>swagger测试</h4><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717125819.png" alt="image-20200717125819788"></p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717125830.png" alt="image-20200717125830771"></p><p>数据表成功添加，测试成功</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717125851.png" alt="image-20200717125851319"></p><h2 id="4、其他代码"><a href="#4、其他代码" class="headerlink" title="4、其他代码"></a>4、其他代码</h2><p>自己写的话主要写以上几个接口体会一下，大部分代码一般都不需要自己写，直接复制粘贴即可，但是要明白这个代码的主要执行流程，待会整合前端的时候一起说明一下</p><h2 id="5、前端修改"><a href="#5、前端修改" class="headerlink" title="5、前端修改"></a>5、前端修改</h2><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717172455.png" alt="image-20200717172455570"></p><p>将以上两个文件夹中的前端代码都替换掉原来的项目，并把一些路径或者名称都修改会自己的即可</p><ul><li><p>网关ip，记得在dev.env.js中修改回来</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717172633.png" alt="image-20200717172633298"></p></li><li><p>router下的index.js，除权限管理外的其他路径都记得改回自己的</p></li><li><p>需要额外安装vuex-persistedstate依赖</p><p>如登录状态、<code>token</code>、以及一些不常更新的状态等，我们更希望能够固化到本地，减少无用的接口访问，以及更佳的用户体验，所以建议安装这个依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save vuex-persistedstate</span><br></pre></td></tr></table></figure></li></ul><p>启动前端项目</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717173948.png" alt="image-20200717173948271"></p><p>没问题再启动后端项目，主要启动已下网关和acl模块测试一下权限管理的整合，并分析其整个执行流程，可以使用debug来调试</p><p>提示：别忘了启动nacos和redis</p><p>==权限管理的执行流程==</p><p>(1) 当我们输入账号密码，点击登陆，会调用spring security中的认证类TokenLoginFilter的attemptAuthentication方法</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717180036.png" alt="image-20200717180036740"></p><p>(2) 获取到用户输入的信息之后，会调用UserDetails的实现类UserDetailsServiceImpl的loadUserByUsername方法去查询数据库，判断账号密码是否正确，如果正确则封装为securityUser返回</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717180317.png" alt="image-20200717180317126"></p><p>(3) 获取到返回的securityUser对象之后，则执行successfulAuthentication的方法，在这里生成token，并将用户名和权限信息列表放到redis中，最后返回生成的token信息</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717181022.png" alt="image-20200717181021720"></p><p>(4) 最后是授权，在发送其他请求时，会去获取存在header中的token信息，并且根据header获取用户名，再根据用户名获取redis中的value也就是权限信息，最后给用户授权</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717181326.png" alt="image-20200717181326768"></p><h2 id="5、nacos配置中心"><a href="#5、nacos配置中心" class="headerlink" title="5、nacos配置中心"></a>5、nacos配置中心</h2><h3 id="配置中心介绍"><a href="#配置中心介绍" class="headerlink" title="配置中心介绍"></a>配置中心介绍</h3><p><strong>(1) Spring Cloud Config</strong></p><p>Spring Cloud Config 为分布式系统的外部配置提供了服务端和客户端的支持方案。在配置的服务端您可以在所有环境中为应用程序管理外部属性的中心位置。客户端和服务端概念上的Spring Environment 和 PropertySource 抽象保持同步, 它们非常适合Spring应用程序，但是可以与任何语言中运行的应用程序一起使用。当应用程序在部署管道中从一个开发到测试直至进入生产时，您可以管理这些环境之间的配置，并确保应用程序在迁移时具有它们需要运行的所有内容。服务器存储后端的默认实现使用git，因此它很容易支持标记版本的配置环境，并且能够被管理内容的各种工具访问。很容易添加替代的实现，并用Spring配置将它们插入。</p><p>Spring Cloud Config 包含了Client和Server两个部分，server提供配置文件的存储、以接口的形式将配置文件的内容提供出去，client通过接口获取数据、并依据此数据初始化自己的应用。Spring cloud使用git或svn存放配置文件，默认情况下使用git。</p><p>(2) <strong>Nacos替换Config</strong></p><p>Nacos 可以与 Spring, Spring Boot, Spring Cloud 集成，并能代替 Spring Cloud Eureka, Spring Cloud Config。通过 Nacos Server 和 spring-cloud-starter-alibaba-nacos-config 实现配置的动态变更。</p><p><strong>应用场景</strong></p><p>在系统开发过程中，开发者通常会将一些需要变更的参数、变量等从代码中分离出来独立管理，以独立的配置文件的形式存在。目的是让静态的系统工件或者交付物（如 WAR，JAR 包等）更好地和实际的物理运行环境进行适配。配置管理一般包含在系统部署的过程中，由系统管理员或者运维人员完成。配置变更是调整系统运行时的行为的有效手段。</p><p>如果微服务架构中没有使用统一配置中心时，所存在的问题：</p><p>- 配置文件分散在各个项目里，不方便维护</p><p>- 配置内容安全与权限</p><p>- 更新配置后，项目需要重启</p><p>nacos配置中心：系统配置的集中管理（编辑、存储、分发）、动态更新不重启、回滚配置（变更管理、历史版本管理、变更审计）等所有与配置相关的活动。</p><p><strong>读取nacos配置中心的配置文件</strong></p><p>在nacos主页面点击配置列表，点击加号添加配置</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717202440.png" alt="image-20200717202439886"></p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717202616.png" alt="image-20200717202616579"></p><p>那么DataID是按照什么规则来填写的呢？</p><p><strong>${prefix}-${spring.profiles.active}.${file-extension}</strong></p><p><strong>- prefix</strong> 模块服务名称(spring-application-name的值)</p><p><strong>- spring.profiles.active=dev</strong> 环境名称（dev/test/prod），如果没有设置，则不需要写</p><p><strong>- file-exetension</strong> 文件类型(yml/properties)</p><p>配置写完了之后，可以在要测试的项目模块中，比如我拿service-statistics这个模块来测试，端口号改为8888，环境先注释掉，最后发布</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717214541.png" alt="image-20200717214540895"></p><p>导入以下依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--nacos配置中心--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将原来的配置文件删除掉，或者注释掉，新建bootstrap.yml文件（项目启动首先会读取bootstrap配置文件），亲测无论是yml文件还是properties文件类型都行，但是必须在配置中指定配置中心写的文件类型，否则读取不到，另外项目中写的地址是配置地址，而不是服务发现地址</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-statistics</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yaml</span></span><br></pre></td></tr></table></figure><p>启动项目，查看项目注册的端口号是否变为8888</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717214912.png" alt="image-20200717214912104"></p><p>测试成功</p><p>使用命名空间可以灵活切换环境</p><p>上面说过默认是public的命名空间，我们可以新建三个环境命名空间，</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717215211.png" alt="image-20200717215211479"></p><p>将刚刚的配置文件克隆一份到dev环境中</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717215321.png" alt="image-20200717215321093"></p><p>修改dev环境的端口号为8999</p><p>修改项目中的配置文件，主要是添加环境的配置，namespace的识别码就是在nacos配置中心的后面一段字符串，复制粘贴到配置文件中即可</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-statistics</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yaml</span></span><br><span class="line">        <span class="attr">namespace:</span> <span class="string">780a1877-b526-44b6-807f-70122f883131</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br></pre></td></tr></table></figure><p>启动项目测试</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717215715.png" alt="image-20200717215715277"></p><p>端口号成功变为8999，测试成功</p><p>以上测试的都是单个配置文件，如果是多个配置文件，比如我单独将端口号的配置抽出来，即两个配置文件，并把端口号设置为8866</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717220024.png" alt="image-20200717220024116"></p><p>在项目的配置文件中添加以下配置，主要是添加指定某个配置中心的id，另外如果开启refresh的话，配置更新了会有提示信息，但需要重启才会生效</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-statistics</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yaml</span></span><br><span class="line">        <span class="attr">namespace:</span> <span class="string">780a1877-b526-44b6-807f-70122f883131</span></span><br><span class="line">        <span class="string">ext-config[0]:</span></span><br><span class="line">          <span class="attr">data-id:</span> <span class="string">port.yaml</span></span><br><span class="line">          <span class="attr">refresh:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717220842.png" alt="image-20200717220842492"></p><p>端口号成功修改为8866，测试成功</p><p>最后再强调下，建议在项目的配置文件中指定nacos配置中心的文件类型</p><h2 id="6、git"><a href="#6、git" class="headerlink" title="6、git"></a>6、git</h2><p>整个项目写完了，如果我们想要将整个项目的代码放到远程的仓库中该怎么操作呢？</p><p>首先在gitee或者github中新建一个仓库，比如我在github中新建了MyGuli的仓库</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717224333.png" alt="image-20200717224333684"></p><p>回到idea中按照一下步骤一步步设置</p><p>准备git环境</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717224756.png" alt="image-20200717224752197"></p><p>创建本地仓库</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717224323.png" alt="image-20200717224323037"></p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717224515.png" alt="image-20200717224515226"></p><p>提交到远程仓库</p><p>先add</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717224925.png" alt="image-20200717224925006"></p><p>设置远程仓库地址</p><p>再commit，添加备注，最后记得选择commit and push</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200717225338.png" alt="image-20200717225338533"></p><p>一路点击确定即可</p><p>最后确定push</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200718001334.png" alt="image-20200718001334084"></p><p>这里演示的github操作，码云也是一样的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1、需求分析&quot;&gt;&lt;a href=&quot;#1、需求分析&quot; class=&quot;headerlink&quot; title=&quot;1、需求分析&quot;&gt;&lt;/a&gt;1、需求分析&lt;/h2&gt;&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="前后端分离" scheme="http://yoursite.com/categories/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="springboot" scheme="http://yoursite.com/tags/springboot/"/>
    
      <category term="springcloud" scheme="http://yoursite.com/tags/springcloud/"/>
    
      <category term="nacos" scheme="http://yoursite.com/tags/nacos/"/>
    
  </entry>
  
  <entry>
    <title>谷粒学院实战day10—数据分析和网关</title>
    <link href="http://yoursite.com/2020/07/18/%E5%AD%A6%E9%99%A2%E5%AE%9E%E6%88%98day10%E2%80%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%92%8C%E7%BD%91%E5%85%B3/"/>
    <id>http://yoursite.com/2020/07/18/%E5%AD%A6%E9%99%A2%E5%AE%9E%E6%88%98day10%E2%80%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%92%8C%E7%BD%91%E5%85%B3/</id>
    <published>2020-07-17T16:17:00.000Z</published>
    <updated>2020-07-17T16:20:00.826Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-后台数据统计分析"><a href="#1-后台数据统计分析" class="headerlink" title="1 后台数据统计分析"></a>1 后台数据统计分析</h2><h3 id="1-1-需求分析"><a href="#1-1-需求分析" class="headerlink" title="1.1 需求分析"></a>1.1 需求分析</h3><p>一个在线教育平台，为了更好的运营，应该提供数据统计分析的入口的， 所以我们将其整合到后台管理系统中</p><p>比如我要查询某个日期的注册人数，那么我们需要在ucenter这个模块种查询这个日期的注册人数，然后注册到nacos中，供我们新的模块statistics来调用，调用之后，将查询到的数据插入的新的数据库中，最后再整合后台管理系统的前端显示即可，前端需要整合apache的一个框架——echart，专门用来统计分析图标的</p><h3 id="1-2-准备工作"><a href="#1-2-准备工作" class="headerlink" title="1.2 准备工作"></a>1.2 准备工作</h3><p>数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`statistics_daily`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'主键'</span>,</span><br><span class="line">  <span class="string">`date_calculated`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'统计日期'</span>,</span><br><span class="line">  <span class="string">`register_num`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'注册人数'</span>,</span><br><span class="line">  <span class="string">`login_num`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'登录人数'</span>,</span><br><span class="line">  <span class="string">`video_view_num`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'每日播放视频数'</span>,</span><br><span class="line">  <span class="string">`course_num`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'每日新增课程数'</span>,</span><br><span class="line">  <span class="string">`gmt_create`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  <span class="string">`gmt_modified`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`statistics_day`</span> (<span class="string">`date_calculated`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'网站统计日数据'</span>;</span><br></pre></td></tr></table></figure><p>新建一个service_statistic模块</p><p>mp生成代码</p><p>实体类完善（这里没有逻辑删除）</p><p>工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 日期操作工具类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> qy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String dateFormat = <span class="string">"yyyy-MM-dd"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 格式化日期</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">formatDate</span><span class="params">(Date date)</span> </span>&#123;</span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(dateFormat);</span><br><span class="line">        <span class="keyword">return</span> sdf.format(date);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在日期date上增加amount天 。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date   处理的日期，非null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> amount 要加的天数，可能为负数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">addDays</span><span class="params">(Date date, <span class="keyword">int</span> amount)</span> </span>&#123;</span><br><span class="line">        Calendar now =Calendar.getInstance();</span><br><span class="line">        now.setTime(date);</span><br><span class="line">        now.set(Calendar.DATE,now.get(Calendar.DATE)+amount);</span><br><span class="line">        <span class="keyword">return</span> now.getTime();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(DateUtil.formatDate(<span class="keyword">new</span> Date()));</span><br><span class="line">        System.out.println(DateUtil.formatDate(DateUtil.addDays(<span class="keyword">new</span> Date(), -<span class="number">1</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-3-查询和生成数据后端"><a href="#1-3-查询和生成数据后端" class="headerlink" title="1.3 查询和生成数据后端"></a>1.3 查询和生成数据后端</h3><p>在写接口之前我们得弄明白这个数据是怎么查询的，比如说我想要查询2020-7-12当日的注册人数，应该使用数据库的date类型,只关注年月日，不关注时分秒，最终在接口开发中我们也是使用sql语句来查询的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> <span class="string">`ucenter_member`</span> <span class="keyword">AS</span> uc <span class="keyword">WHERE</span> <span class="built_in">DATE</span>(uc.<span class="string">`gmt_create`</span>)=<span class="string">'2020-7-12'</span></span><br></pre></td></tr></table></figure><h4 id="ucenter模块"><a href="#ucenter模块" class="headerlink" title="ucenter模块"></a>ucenter模块</h4><p>MemberController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//供统计分析的查询数据接口,通过day来查询</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/countRegister/&#123;day&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">countRegister</span><span class="params">(@PathVariable String day)</span></span>&#123;</span><br><span class="line">    Integer registerCount = memberService.countRegister(day);</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">"registerCount"</span>, registerCount);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>service</p><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Integer <span class="title">countRegister</span><span class="params">(String day)</span></span>;</span><br></pre></td></tr></table></figure><p>实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">countRegister</span><span class="params">(String day)</span> </span>&#123;</span><br><span class="line">    Integer count = baseMapper.countRegister(day);</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>mapper</p><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Integer <span class="title">countRegister</span><span class="params">(String day)</span></span>;</span><br></pre></td></tr></table></figure><p>xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.ryan.ucenter.mapper.MemberMapper"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"countRegister"</span> <span class="attr">resultType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></span><br><span class="line">        select count(*) from ucenter_member uc where date(uc.gmt_create)=#&#123;day&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="statistics模块"><a href="#statistics模块" class="headerlink" title="statistics模块"></a>statistics模块</h4><p>远程调用的client</p><p>Ucenter接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@FeignClient</span>(name = <span class="string">"service-ucenter"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UcenterClient</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/ucenter/member/countRegister/&#123;day&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">countRegister</span><span class="params">(@PathVariable(<span class="string">"day"</span>)</span> String day)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/edusta/sta"</span>)</span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StatisticsDailyController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StatisticsDailyService statisticsDailyService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生成数据的方法</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/createRegisterData/&#123;day&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">createRegisterData</span><span class="params">(@PathVariable String day)</span></span>&#123;</span><br><span class="line">        statisticsDailyService.createRegisterData(day);</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>service</p><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">StatisticsDailyService</span> <span class="keyword">extends</span> <span class="title">IService</span>&lt;<span class="title">StatisticsDaily</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">createRegisterData</span><span class="params">(String day)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StatisticsDailyServiceImpl</span> <span class="keyword">extends</span> <span class="title">ServiceImpl</span>&lt;<span class="title">StatisticsDailyMapper</span>, <span class="title">StatisticsDaily</span>&gt; <span class="keyword">implements</span> <span class="title">StatisticsDailyService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UcenterClient ucenterClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createRegisterData</span><span class="params">(String day)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//为了保证数据是最新的，我们应该先删除已有数据，最后再插入新的数据</span></span><br><span class="line">        QueryWrapper&lt;StatisticsDaily&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        wrapper.eq(<span class="string">"date_calculated"</span>, day);</span><br><span class="line">        baseMapper.delete(wrapper);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//先根据day查询数据</span></span><br><span class="line">        R r = ucenterClient.countRegister(day);</span><br><span class="line">        Integer registerCount = (Integer) r.getData().get(<span class="string">"registerCount"</span>);</span><br><span class="line">        Integer loginNum = RandomUtils.nextInt(<span class="number">100</span>, <span class="number">200</span>);<span class="comment">//TODO</span></span><br><span class="line">        Integer videoViewNum = RandomUtils.nextInt(<span class="number">100</span>, <span class="number">200</span>);<span class="comment">//TODO</span></span><br><span class="line">        Integer courseNum = RandomUtils.nextInt(<span class="number">100</span>, <span class="number">200</span>);<span class="comment">//TODO</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建新的数据对象，并将以上数据设置到此对象中</span></span><br><span class="line">        StatisticsDaily statisticsDaily = <span class="keyword">new</span> StatisticsDaily();</span><br><span class="line">        statisticsDaily.setRegisterNum(registerCount);</span><br><span class="line">        statisticsDaily.setLoginNum(loginNum);</span><br><span class="line">        statisticsDaily.setVideoViewNum(videoViewNum);</span><br><span class="line">        statisticsDaily.setCourseNum(courseNum);</span><br><span class="line">        statisticsDaily.setDateCalculated(day);</span><br><span class="line"></span><br><span class="line">        baseMapper.insert(statisticsDaily);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h4><p>生成数据一般不用手动去生成，我们可以设置一个定时任务，在每天凌晨的1点自动生成前一天的数据</p><p>首先在启动类添加开启定时任务的注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableScheduling</span><span class="comment">//开启定时任务</span></span><br></pre></td></tr></table></figure><p>接在新建一个task包和定时任务类</p><p>Schedule</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScheduleTask</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StatisticsDailyService statisticsDailyService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//每天凌晨1点执行生成前一天的数据的任务</span></span><br><span class="line">    <span class="meta">@Scheduled</span>(cron = <span class="string">"0 0 1 * * ?"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">task1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//获取上一天的时间</span></span><br><span class="line">        String day = DateUtil.formatDate(DateUtil.addDays(<span class="keyword">new</span> Date(), -<span class="number">1</span>));</span><br><span class="line">        statisticsDailyService.createRegisterData(day);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="swagger测试"><a href="#swagger测试" class="headerlink" title="swagger测试"></a>swagger测试</h4><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200715181556.png" alt="image-20200715181556577"></p><p>查询到了数据，并且插入了一条记录到statistics表中</p><h3 id="1-4-查询和生成数据前端"><a href="#1-4-查询和生成数据前端" class="headerlink" title="1.4 查询和生成数据前端"></a>1.4 查询和生成数据前端</h3><h4 id="添加路由"><a href="#添加路由" class="headerlink" title="添加路由"></a>添加路由</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    path: <span class="string">'/sta'</span>,</span><br><span class="line">    component: Layout,</span><br><span class="line">    redirect: <span class="string">'/sta/create'</span>,</span><br><span class="line">    name: <span class="string">'统计分析'</span>,</span><br><span class="line">    meta: &#123; <span class="attr">title</span>: <span class="string">'统计分析'</span>, <span class="attr">icon</span>: <span class="string">'example'</span> &#125;,</span><br><span class="line">    children: [</span><br><span class="line">        &#123;</span><br><span class="line">            path: <span class="string">'create'</span>,</span><br><span class="line">            name: <span class="string">'生成数据'</span>,</span><br><span class="line">            component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/views/sta/create'</span>),</span><br><span class="line">            meta: &#123; <span class="attr">title</span>: <span class="string">'生成数据'</span>, <span class="attr">icon</span>: <span class="string">'table'</span> &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            path: <span class="string">'show'</span>,</span><br><span class="line">            name: <span class="string">'图表展示'</span>,</span><br><span class="line">            component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/views/sta/show'</span>),</span><br><span class="line">            meta: &#123; <span class="attr">title</span>: <span class="string">'图表展示'</span>, <span class="attr">icon</span>: <span class="string">'tree'</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h4 id="api"><a href="#api" class="headerlink" title="api"></a>api</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">'@/utils/request'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">//生成数据</span></span><br><span class="line">    createRegisterData(day)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">'/edusta/sta/createRegisterData/'</span> + day,</span><br><span class="line">            method: <span class="string">'post'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="添加路由页面"><a href="#添加路由页面" class="headerlink" title="添加路由页面"></a>添加路由页面</h4><p>create.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;!--表单--&gt;</span><br><span class="line">    &lt;el-form :inline&#x3D;&quot;true&quot; class&#x3D;&quot;demo-form-inline&quot;&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-form-item label&#x3D;&quot;日期&quot;&gt;</span><br><span class="line">        &lt;el-date-picker</span><br><span class="line">          v-model&#x3D;&quot;day&quot;</span><br><span class="line">          type&#x3D;&quot;date&quot;</span><br><span class="line">          placeholder&#x3D;&quot;选择要统计的日期&quot;</span><br><span class="line">          value-format&#x3D;&quot;yyyy-MM-dd&quot; &#x2F;&gt;</span><br><span class="line">      &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &lt;el-button</span><br><span class="line">        :disabled&#x3D;&quot;btnDisabled&quot;</span><br><span class="line">        type&#x3D;&quot;primary&quot;</span><br><span class="line">        @click&#x3D;&quot;create()&quot;&gt;生成&lt;&#x2F;el-button&gt;</span><br><span class="line">    &lt;&#x2F;el-form&gt;</span><br><span class="line"></span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import sta from &quot;@&#x2F;api&#x2F;sta&#x2F;sta&quot;</span><br><span class="line">export default &#123;</span><br><span class="line">    data()&#123;</span><br><span class="line">        return&#123;</span><br><span class="line">            day:&#39;&#39;,</span><br><span class="line">            btnDisabled: false</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    created()&#123;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line">        create()&#123;</span><br><span class="line">            sta.createRegisterData(this.day)</span><br><span class="line">                .then(response&#x3D;&gt;&#123;</span><br><span class="line">                    this.$message(&#123;</span><br><span class="line">                        type: &#39;success&#39;,</span><br><span class="line">                        message: &#39;数据已添加!&#39;</span><br><span class="line">                    &#125;);</span><br><span class="line">                    this.$router.push(&#123;path:&quot;&#x2F;sta&#x2F;show&quot;&#125;)</span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>效果测试：</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200715181727.png" alt="image-20200715181727235"></p><p>具体的图标展示，待会需要整合一个echarts解决，开发之前先了解一下这个echarts</p><h3 id="1-5-Echarts"><a href="#1-5-Echarts" class="headerlink" title="1.5 Echarts"></a>1.5 Echarts</h3><p>ECharts，一个使用 JavaScript 实现的开源可视化库，可以流畅的运行在 PC 和移动设备上，兼容当前绝大部分浏览器（IE8/9/10/11，Chrome，Firefox，Safari等），底层依赖矢量图形库 <a href="https://github.com/ecomfe/zrender" target="_blank" rel="noopener">ZRender</a>，提供直观，交互丰富，可高度个性化定制的数据可视化图表。</p><p>快速入门</p><p>获取依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install echarts --save</span><br></pre></td></tr></table></figure><p>这里我们测试一下代码，所以先下载好这个js文件，开始测试：</p><p>引入js文件</p><ul><li><p>为 ECharts 准备一个具备大小（宽高）的 DOM</p></li><li><p>基于准备好的dom，初始化echarts实例</p></li><li><p>指定图表的配置项和数据</p></li><li><p>myChart.setOption(option);</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入 ECharts 文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/test/js/echarts.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 为 ECharts 准备一个具备大小（宽高）的 DOM --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span> <span class="attr">style</span>=<span class="string">"width: 600px;height:400px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 基于准备好的dom，初始化echarts实例</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'main'</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// 指定图表的配置项和数据</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> option = &#123;</span></span><br><span class="line">            title: &#123;</span><br><span class="line"><span class="actionscript">                text: <span class="string">'ECharts 入门示例'</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            tooltip: &#123;&#125;,</span><br><span class="line">            legend: &#123;</span><br><span class="line"><span class="actionscript">                data:[<span class="string">'销量'</span>]</span></span><br><span class="line">            &#125;,</span><br><span class="line">            xAxis: &#123;</span><br><span class="line"><span class="actionscript">                data: [<span class="string">"衬衫"</span>,<span class="string">"羊毛衫"</span>,<span class="string">"雪纺衫"</span>,<span class="string">"裤子"</span>,<span class="string">"高跟鞋"</span>,<span class="string">"袜子"</span>]</span></span><br><span class="line">            &#125;,</span><br><span class="line">            yAxis: &#123;&#125;,</span><br><span class="line">            series: [&#123;</span><br><span class="line"><span class="actionscript">                name: <span class="string">'销量'</span>,</span></span><br><span class="line"><span class="actionscript">                type: <span class="string">'bar'</span>,</span></span><br><span class="line">                data: [5, 20, 36, 10, 10, 20]</span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// 使用刚指定的配置项和数据显示图表。</span></span></span><br><span class="line">        myChart.setOption(option);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>浏览器测试</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200715182343.png" alt="image-20200715182343862"></p><p>更多的图表显示代码可以在官网中看到：<a href="https://echarts.apache.org/examples/zh/index.html#chart-type-line" target="_blank" rel="noopener">https://echarts.apache.org/examples/zh/index.html#chart-type-line</a></p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200715182445.png" alt="image-20200715182445018"></p><h3 id="1-6-整合Echarts"><a href="#1-6-整合Echarts" class="headerlink" title="1.6 整合Echarts"></a>1.6 整合Echarts</h3><h4 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h4><p>开发后端接口前，我们得分析一下图标展示的前端页面是想要怎么展示，比如</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200715182818.png" alt="image-20200715182818199"></p><p>具体的类型使用下拉列表来实现，选择开始时间和结束时间后，点击显示即可显示对应类型的数据图表</p><p>再来看下的图表的代码结构</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> option = &#123;</span><br><span class="line">    title: &#123;</span><br><span class="line">        text: <span class="string">'ECharts 入门示例'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    tooltip: &#123;&#125;,</span><br><span class="line">    legend: &#123;</span><br><span class="line">        data:[<span class="string">'销量'</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    xAxis: &#123;</span><br><span class="line">        data: [<span class="string">"衬衫"</span>,<span class="string">"羊毛衫"</span>,<span class="string">"雪纺衫"</span>,<span class="string">"裤子"</span>,<span class="string">"高跟鞋"</span>,<span class="string">"袜子"</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    yAxis: &#123;&#125;,</span><br><span class="line">    series: [&#123;</span><br><span class="line">        name: <span class="string">'销量'</span>,</span><br><span class="line">        type: <span class="string">'bar'</span>,</span><br><span class="line">        data: [<span class="number">5</span>, <span class="number">20</span>, <span class="number">36</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">20</span>]</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>x轴xAxis对应的数据，y轴的数据是固定的，柱形的值就是series的data</p><p>然后x轴的数据和y轴的数据，都是以数组的形式显示，所以我们在后端返回数组形式也就是list集合的数据给前端去展示即可</p><h4 id="后端接口开发"><a href="#后端接口开发" class="headerlink" title="后端接口开发"></a>后端接口开发</h4><h5 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取图标需要的数据</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/getShowData/&#123;type&#125;/&#123;begin&#125;/&#123;end&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">getShowData</span><span class="params">(@PathVariable String type, @PathVariable String begin, @PathVariable String end)</span></span>&#123;</span><br><span class="line">    <span class="comment">//返回的数据分别需要X轴和Y轴的两个数组，所以最好都放到map集合中返回</span></span><br><span class="line">    Map&lt;String, Object&gt; map = statisticsDailyService.getShowData(type, begin, end);</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(map);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="service"><a href="#service" class="headerlink" title="service"></a>service</h5><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Map&lt;String, Object&gt;  <span class="title">getShowData</span><span class="params">(String type, String begin, String end)</span></span>;</span><br></pre></td></tr></table></figure><p>实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//展示数据</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt;  <span class="title">getShowData</span><span class="params">(String type, String begin, String end)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据客户所选的数据，查询数据库并得到数据</span></span><br><span class="line">    QueryWrapper&lt;StatisticsDaily&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.between(<span class="string">"date_calculated"</span>, begin, end);</span><br><span class="line">    wrapper.select(<span class="string">"date_calculated"</span>, type);</span><br><span class="line">    List&lt;StatisticsDaily&gt; staList = <span class="keyword">this</span>.list(wrapper);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//new一个map集合和两个list集合，准备座数据封装</span></span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    List&lt;Integer&gt; dataList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    List&lt;String&gt; dateList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="comment">//封装数据</span></span><br><span class="line">    <span class="comment">//首先对查询出来的数据做遍历，根据客户选择的类型将数据封装到不同的集合中</span></span><br><span class="line">    <span class="keyword">for</span> (StatisticsDaily daily : staList) &#123;</span><br><span class="line">        <span class="comment">//日期都是固定的，直接添加到date集合中即可</span></span><br><span class="line">        dateList.add(daily.getDateCalculated());</span><br><span class="line">        <span class="comment">//判断客户选择要显示数据的类型</span></span><br><span class="line">        <span class="keyword">switch</span> (type)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"register_num"</span>:</span><br><span class="line">                dataList.add(daily.getRegisterNum());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"login_num"</span>:</span><br><span class="line">                dataList.add(daily.getLoginNum());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"video_view_num"</span>:</span><br><span class="line">                dataList.add(daily.getVideoViewNum());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"course_num"</span>:</span><br><span class="line">                dataList.add(daily.getCourseNum());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    map.put(<span class="string">"dataList"</span>,dataList);</span><br><span class="line">    map.put(<span class="string">"dateList"</span>,dateList);</span><br><span class="line">    <span class="keyword">return</span> map;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="swagger测试-1"><a href="#swagger测试-1" class="headerlink" title="swagger测试"></a>swagger测试</h5><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200716093903.png" alt="image-20200716093856135"></p><h4 id="整合前端开发"><a href="#整合前端开发" class="headerlink" title="整合前端开发"></a>整合前端开发</h4><p>准备工作，再次提醒，整合echarts，需要先在项目中安装好echarts的依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install echarts --save</span><br></pre></td></tr></table></figure><p>并且需要在对应的页面中导入这个依赖</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> echarts <span class="keyword">from</span> <span class="string">'echarts'</span><span class="comment">//别忘了导入echarts</span></span><br></pre></td></tr></table></figure><h5 id="api-1"><a href="#api-1" class="headerlink" title="api"></a>api</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//展示数据</span></span><br><span class="line">getShowData(searchObj)&#123;</span><br><span class="line">    <span class="keyword">return</span> request(&#123;</span><br><span class="line">        url: <span class="string">`/edusta/sta/getShowData/<span class="subst">$&#123;searchObj.type&#125;</span>/<span class="subst">$&#123;searchObj.begin&#125;</span>/<span class="subst">$&#123;searchObj.end&#125;</span>`</span>,</span><br><span class="line">        method: <span class="string">'get'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="show-vue"><a href="#show-vue" class="headerlink" title="show.vue"></a>show.vue</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;!--表单--&gt;</span><br><span class="line">    &lt;el-form :inline&#x3D;&quot;true&quot; class&#x3D;&quot;demo-form-inline&quot;&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;el-select v-model&#x3D;&quot;searchObj.type&quot; clearable placeholder&#x3D;&quot;请选择&quot;&gt;</span><br><span class="line">          &lt;el-option label&#x3D;&quot;学员登录数统计&quot; value&#x3D;&quot;login_num&quot;&#x2F;&gt;</span><br><span class="line">          &lt;el-option label&#x3D;&quot;学员注册数统计&quot; value&#x3D;&quot;register_num&quot;&#x2F;&gt;</span><br><span class="line">          &lt;el-option label&#x3D;&quot;课程播放数统计&quot; value&#x3D;&quot;video_view_num&quot;&#x2F;&gt;</span><br><span class="line">          &lt;el-option label&#x3D;&quot;每日课程数统计&quot; value&#x3D;&quot;course_num&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;el-select&gt;</span><br><span class="line">      &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;el-date-picker</span><br><span class="line">          v-model&#x3D;&quot;searchObj.begin&quot;</span><br><span class="line">          type&#x3D;&quot;date&quot;</span><br><span class="line">          placeholder&#x3D;&quot;选择开始日期&quot;</span><br><span class="line">          value-format&#x3D;&quot;yyyy-MM-dd&quot; &#x2F;&gt;</span><br><span class="line">      &lt;&#x2F;el-form-item&gt;</span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;el-date-picker</span><br><span class="line">          v-model&#x3D;&quot;searchObj.end&quot;</span><br><span class="line">          type&#x3D;&quot;date&quot;</span><br><span class="line">          placeholder&#x3D;&quot;选择截止日期&quot;</span><br><span class="line">          value-format&#x3D;&quot;yyyy-MM-dd&quot; &#x2F;&gt;</span><br><span class="line">      &lt;&#x2F;el-form-item&gt;</span><br><span class="line">      &lt;el-button</span><br><span class="line">        :disabled&#x3D;&quot;btnDisabled&quot;</span><br><span class="line">        type&#x3D;&quot;primary&quot;</span><br><span class="line">        icon&#x3D;&quot;el-icon-search&quot;</span><br><span class="line">        @click&#x3D;&quot;showChart()&quot;&gt;查询&lt;&#x2F;el-button&gt;</span><br><span class="line">    &lt;&#x2F;el-form&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class&#x3D;&quot;chart-container&quot;&gt;</span><br><span class="line">      &lt;div id&#x3D;&quot;chart&quot; class&#x3D;&quot;chart&quot; style&#x3D;&quot;height:500px;width:100%&quot; &#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import echarts from &#39;echarts&#39;&#x2F;&#x2F;别忘了导入echarts</span><br><span class="line">import sta from &quot;@&#x2F;api&#x2F;sta&#x2F;sta&quot;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">    data()&#123;</span><br><span class="line">        return&#123;</span><br><span class="line">            searchObj:&#123;&#125;,</span><br><span class="line">            btnDisabled:false,</span><br><span class="line">            xData:[],</span><br><span class="line">            yData:[]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    created()&#123;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line">        showChart()&#123;</span><br><span class="line">            sta.getShowData(this.searchObj)</span><br><span class="line">                .then(response&#x3D;&gt;&#123;</span><br><span class="line">                    console.log(response.data.dateList)</span><br><span class="line">                    console.log(response.data.dataList)</span><br><span class="line">                    this.xData &#x3D; response.data.dateList</span><br><span class="line">                    this.yData &#x3D; response.data.dataList</span><br><span class="line">                    this.setChart()</span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        setChart()&#123;</span><br><span class="line">            &#x2F;&#x2F;基于准备好的dom，初始化echarts实例</span><br><span class="line">            this.chart &#x3D; echarts.init(document.getElementById(&#39;chart&#39;))</span><br><span class="line">            &#x2F;&#x2F; 指定图表的配置项和数据</span><br><span class="line">            var option &#x3D; &#123;</span><br><span class="line">                title: &#123;</span><br><span class="line">                    text: &#39;数据统计&#39;&#x2F;&#x2F;图标的名称</span><br><span class="line">                &#125;,</span><br><span class="line">                tooltip: &#123;</span><br><span class="line">                    trigger: &#39;axis&#39;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#x2F;&#x2F; x轴是类目轴（离散数据）,必须通过data设置类目数据</span><br><span class="line">                xAxis: &#123;</span><br><span class="line">                    type: &#39;category&#39;,</span><br><span class="line">                    data: this.xData</span><br><span class="line">                &#125;,</span><br><span class="line">                &#x2F;&#x2F; y轴是数据轴（连续数据）</span><br><span class="line">                yAxis: &#123;</span><br><span class="line">                    type: &#39;value&#39;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#x2F;&#x2F; 系列列表。每个系列通过 type 决定自己的图表类型</span><br><span class="line">                series: [&#123;</span><br><span class="line">                    &#x2F;&#x2F; 系列中的数据内容数组</span><br><span class="line">                    data: this.yData,</span><br><span class="line">                    &#x2F;&#x2F; 折线图</span><br><span class="line">                    type: &#39;line&#39;</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;</span><br><span class="line">            &#x2F;&#x2F;将数据挂载到dom中</span><br><span class="line">            this.chart.setOption(option)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h5 id="效果测试"><a href="#效果测试" class="headerlink" title="效果测试"></a>效果测试</h5><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200716094247.png" alt="image-20200716094246928"></p><p>测试成功</p><h2 id="2-linux安装mysql"><a href="#2-linux安装mysql" class="headerlink" title="2 linux安装mysql"></a>2 linux安装mysql</h2><p>说多都是泪，记录以下怎么安装的吧，以mysql5.7为例</p><p>下载安装包</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200716162414.png" alt="image-20200716162414541"></p><p>将下载好的压缩包上传到linux的home目录下，并解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxf mysql-5.7.29-linux-glibc2.12-x86_64.tar.gz</span><br></pre></td></tr></table></figure><p>解压完成后将解压后的文件夹移动到usr/local下并重命名为mysql</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv mysql-5.7.29-linux-glibc2.12-x86_64 /usr/<span class="built_in">local</span>/mysql</span><br></pre></td></tr></table></figure><p>增加用户组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -r -s /sbin/nologin mysql</span><br></pre></td></tr></table></figure><p>给mysql设置权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R mysql.mysql /usr/local/mysql</span><br></pre></td></tr></table></figure><p>删除mariadb-libs</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove mariadb-libs</span><br></pre></td></tr></table></figure><p>在mysql目录下创建mysql-files目录和data目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir mysql-files</span><br><span class="line">mkdir data</span><br></pre></td></tr></table></figure><p>再次设置权限，.代表当前目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ryan mysql]# chown -R mysql.mysql .</span><br></pre></td></tr></table></figure><p>初始化</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/mysqld --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data</span><br></pre></td></tr></table></figure><p>手动创建mysql配置文件my.cnf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br></pre></td></tr></table></figure><p>并配置以下信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">port=3306</span><br><span class="line">socket=/tmp/mysql/mysql.sock</span><br><span class="line">default-character-set=utf8mb4</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/usr/local/mysql</span><br><span class="line">datadir=/usr/local/mysql/data</span><br><span class="line">user=mysql</span><br><span class="line">symbolic-links=0</span><br><span class="line">socket=/tmp/mysql/mysql.sock</span><br></pre></td></tr></table></figure><p>复制脚本到etc</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cp support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">chmod a+x /etc/init.d/mysqld</span><br><span class="line">chkconfig --add /etc/init.d/mysqld</span><br><span class="line">chkconfig mysqld on</span><br></pre></td></tr></table></figure><p>创建tmp的mysql目录，并设置权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /tmp/mysql</span><br><span class="line">chmod 777 /tmp/mysql</span><br></pre></td></tr></table></figure><p>通过 systemctl start mysqld，启动mysql服务端生成mysql.sock文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><p>重启mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysqld restart</span><br></pre></td></tr></table></figure><p>查看相关信息，可以看到数据库位置，日志位置等信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@ryan mysql]# ps aux |grep mysqld</span><br><span class="line">root      6086  0.0  0.0  11816  1592 pts/0    S    16:05   0:00 /bin/sh /usr/local/mysql/bin/mysql_safe --datadir=/usr/local/mysql/data --pid-file=/usr/local/mysql/data/ryan.pid</span><br><span class="line">mysql     6198  0.1  9.2 1123620 174160 pts/0  Sl   16:05   0:00 /usr/local/mysql/bin/mysqld --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data --plugin-dir=/usr/local/mysql/lib/plugin --user=mysql --log-error=ryan.err --pid-file=/usr/local/mysql/data/ryan.pid</span><br><span class="line">root      6506  0.0  0.0 112816   972 pts/0    R+   16:06   0:00 grep --color=auto mysqld</span><br></pre></td></tr></table></figure><p>直接输入mysql命令发现无效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ryan mysql]# mysql</span><br><span class="line">-bash: /usr/bin/mysql: No such file or directory</span><br></pre></td></tr></table></figure><p>但是加上路径是可以的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@ryan mysql]# /usr/local/mysql/bin/mysql -uroot -p'SyQM5wh&lt;QVoS'</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 2</span><br><span class="line">Server version: 5.7.29</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> ^C</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> <span class="built_in">exit</span></span></span><br></pre></td></tr></table></figure><p>但是这样也太麻烦了，需要配置一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo "export PATH=$PATH:/usr/local/mysql/bin" &gt;&gt; /etc/profile</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>使用mysql命令登陆，注意密码是刚刚初始化的时候输出的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p'xxx'</span><br></pre></td></tr></table></figure><p>成功登陆，尝试显示数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show databases</span></span><br><span class="line">    -&gt; ;</span><br><span class="line">ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.</span><br></pre></td></tr></table></figure><p>提示必须重设密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter user root@'localhost' identified by 'your password'</span><br></pre></td></tr></table></figure><p>大功告成</p><p>最后尝试在sqlyog连接linux的数据库，发现被拒绝访问，需要在数据库中配置一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to <span class="string">'your username'</span>@<span class="string">'%'</span>  identified by <span class="string">'your password'</span> with grant option;</span><br></pre></td></tr></table></figure><p>用户名和密码换成你自己的即可</p><p>另外如果linux系统还没关闭防火墙记得关闭防火墙</p><p>再次连接数据库，亲测成功</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200716143056.png" alt="image-20200716143056238"></p><h2 id="3-Canal"><a href="#3-Canal" class="headerlink" title="3 Canal"></a>3 Canal</h2><h3 id="3-1-应用常见"><a href="#3-1-应用常见" class="headerlink" title="3.1 应用常见"></a>3.1 应用常见</h3><p>在前面的统计分析功能中，我们采取了服务调用获取统计数据，这样耦合度高，效率相对较低，目前我采取另一种实现方式，通过实时同步数据库表的方式实现，例如我们要统计每天注册与登录人数，我们只需把会员表同步到统计库中，实现本地统计就可以了，这样效率更高，耦合度更低，Canal就是一个很好的数据库同步工具。canal是阿里巴巴旗下的一款开源项目，纯Java开发。基于数据库增量日志解析，提供增量数据订阅&amp;消费，目前主要支持了MySQL。</p><h3 id="3-2-Canal环境搭建"><a href="#3-2-Canal环境搭建" class="headerlink" title="3.2 Canal环境搭建"></a>3.2 Canal环境搭建</h3><p>canal的原理是基于mysql binlog技术，所以这里一定需要开启mysql的binlog写入功能</p><p>linux启动mysql服务</p><p>检查binlog功能是否有开启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like <span class="string">'log_bin'</span>;</span><br><span class="line">+---------------+-------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span><br><span class="line">| log_bin       | OFF   |</span><br><span class="line">+---------------+-------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><p>结果为OFF，我们需要手动开启一下</p><p>编辑mysql配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br></pre></td></tr></table></figure><p>追加以下配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">log</span>-bin=/usr/<span class="built_in">local</span>/mysql/mysql-bin<span class="comment"># binlog文件名</span></span><br><span class="line">binlog_format=ROW <span class="comment">#选择row模式</span></span><br><span class="line">server_id=1<span class="comment">#mysql实例id，不能和cannal的slaveId重复</span></span><br></pre></td></tr></table></figure><p>保存退出，并重启mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysqld restart</span><br></pre></td></tr></table></figure><p>登陆再次查询</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show variables like <span class="string">'log_bin'</span></span></span><br><span class="line">    -&gt; ;</span><br><span class="line">+---------------+-------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span><br><span class="line">| log_bin       | ON    |</span><br><span class="line">+---------------+-------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>已经开启</p><p>下载canal：<a href="https://github.com/alibaba/canal/releases" target="_blank" rel="noopener">https://github.com/alibaba/canal/releases</a></p><p>上传至linux的usr/local/canal目录，然后解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf canal.deployer-1.1.4.tar.gz</span><br></pre></td></tr></table></figure><p>修改配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi conf/example/instance.properties</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 修改数据库信息</span></span><br><span class="line">canal.instance.master.address=203.195.160.231:3306</span><br><span class="line"><span class="meta">#</span><span class="bash">需要改成自己的数据库用户名与密码</span></span><br><span class="line">canal.instance.dbUsername=your user</span><br><span class="line">canal.instance.dbPassword=your password</span><br><span class="line"><span class="meta">#</span><span class="bash">需要改成同步的数据库表规则，例如只是同步一下表</span></span><br><span class="line">canal.instance.filter.regex=.*\\..*</span><br></pre></td></tr></table></figure><p>提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql 数据解析关注的表，Perl正则表达式.</span><br><span class="line">多个正则之间以逗号(,)分隔，转义符需要双斜杠(\\) </span><br><span class="line">常见例子：</span><br><span class="line">1.  所有表：.*   or  .*\\..*</span><br><span class="line">2.  canal schema下所有表： canal\\..*</span><br><span class="line">3.  canal下的以canal打头的表：canal\\.canal.*</span><br><span class="line">4.  canal schema下的一张表：canal.test1</span><br><span class="line">5.  多个规则组合使用：canal\\..*,mysql.test1,mysql.test2 (逗号分隔)</span><br><span class="line">注意：此过滤条件只针对row模式的数据有效(ps. mixed&#x2F;statement因为不解析sql，所以无法准确提取tableName进行过滤)</span><br></pre></td></tr></table></figure><p>进入bin目录，启动canal</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./startup.sh</span><br></pre></td></tr></table></figure><p>测试：</p><p>在两个数据库中都新建一个一样的member表，字段有id,username,age</p><h3 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h3><h2 id="4-SpringCloud-Gateway"><a href="#4-SpringCloud-Gateway" class="headerlink" title="4 SpringCloud Gateway"></a>4 SpringCloud Gateway</h2><h3 id="api网关"><a href="#api网关" class="headerlink" title="api网关"></a>api网关</h3><p>API 网关出现的原因是微服务架构的出现，不同的微服务一般会有不同的网络地址，而外部客户端可能需要调用多个服务的接口才能完成一个业务需求，如果让客户端直接与各个微服务通信，会有以下的问题：</p><p>（1）客户端会多次请求不同的微服务，增加了客户端的复杂性。</p><p>（2）存在跨域请求，在一定场景下处理相对复杂。</p><p>（3）认证复杂，每个服务都需要独立认证。</p><p>（4）难以重构，随着项目的迭代，可能需要重新划分微服务。例如，可能将多个服务合并成一个或者将一个服务拆分成多个。如果客户端直接与微服务通信，那么重构将会很难实施。</p><p>（5）某些微服务可能使用了防火墙 / 浏览器不友好的协议，直接访问会有一定的困难。</p><p>以上这些问题可以借助 API 网关解决。API 网关是介于客户端和服务器端之间的中间层，所有的外部请求都会先经过 API 网关这一层。也就是说，API 的实现方面更多的考虑业务逻辑，而安全、性能、监控可以交由 API 网关来做，这样既提高业务灵活性又不缺安全性</p><h3 id="Spring-Cloud-Gateway"><a href="#Spring-Cloud-Gateway" class="headerlink" title="Spring Cloud Gateway"></a>Spring Cloud Gateway</h3><p>是spring官方基于Spring 5.0、Spring Boot2.0和Project Reactor等技术开发的网关，Spring Cloud Gateway旨在为微服务架构提供简单、有效和统一的API路由管理方式，Spring Cloud Gateway作为Spring Cloud生态系统中的网关，目标是替代Netflix Zuul，其不仅提供统一的路由方式，并且还基于Filer链的方式提供了网关基本的功能，例如：安全、监控/埋点、限流等。</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200716221225.jpg" alt="img"></p><p>核心概念</p><p>网关提供API全托管服务，丰富的API管理功能，辅助企业管理大规模的API，以降低管理成本和安全风险，包括协议适配、协议转发、安全策略、防刷、流量、监控日志等贡呢。一般来说网关对外暴露的URL或者接口信息，我们统称为路由信息。如果研发过网关中间件或者使用过Zuul的人，会知道网关的核心是Filter以及Filter Chain（Filter责任链）。Sprig Cloud Gateway也具有路由和Filter的概念。下面介绍一下Spring Cloud Gateway中几个重要的概念。</p><p>（1）路由。路由是网关最基础的部分，路由信息有一个ID、一个目的URL、一组断言和一组Filter组成。如果断言路由为真，则说明请求的URL和配置匹配</p><p>（2）断言。Java8中的断言函数。Spring Cloud Gateway中的断言函数输入类型是Spring5.0框架中的ServerWebExchange。Spring Cloud Gateway中的断言函数允许开发者去定义匹配来自于http request中的任何信息，比如请求头和参数等。</p><p>（3）过滤器。一个标准的Spring webFilter。Spring cloud gateway中的filter分为两种类型的Filter，分别是Gateway Filter和Global Filter。过滤器Filter将会对请求和响应进行修改处理</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200716221358.jpg" alt="img"></p><h3 id="springboot整合gateway"><a href="#springboot整合gateway" class="headerlink" title="springboot整合gateway"></a>springboot整合gateway</h3><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><p>在guli_parent中创建infrastructure模块，再创建子模块api_gateway</p><p>在api_gateway中导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ryan<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common_utils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--gson--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--服务调用--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="配置yml文件"><a href="#配置yml文件" class="headerlink" title="配置yml文件"></a>配置yml文件</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8222</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-gateway</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">locator:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment"># 默认是false，需要手动开启，这样才能在服务注册中心匹配对应的服务</span></span><br><span class="line">      <span class="comment"># 网关路由，注意书写格式，尤其是path后面的是=号而不是:号，别写错了，另外如果开启了gateway，对应的api的跨域注解要去掉</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">service-edu</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://service-edu</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">Path=/eduservice/**</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">service-oss</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://service-oss</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">Path=/eduoss/**</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">service-vod</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://service-vod</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">Path=/eduvod/**</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">service-cms</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://service-cms</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">Path=/cmsservice/**</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">service-msm</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://service-msm</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">Path=/edumsm/**</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">service-order</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://service-order</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">Path=/eduorder/**</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">service-ucenter</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://service-ucenter</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">Path=/ucenter/**</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">service-statistics</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://service-statistics</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">Path=/edusta/**</span></span><br></pre></td></tr></table></figure><h4 id="编写启动类"><a href="#编写启动类" class="headerlink" title="编写启动类"></a>编写启动类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GatewayApplication</span> </span>&#123;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">           SpringApplication.run(GatewayApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写工具类"><a href="#编写工具类" class="headerlink" title="编写工具类"></a>编写工具类</h4><p>config下的CorsConfig，解决跨域问题</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理跨域</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CorsConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CorsWebFilter <span class="title">corsFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        CorsConfiguration config = <span class="keyword">new</span> CorsConfiguration();</span><br><span class="line">        config.addAllowedMethod(<span class="string">"*"</span>);</span><br><span class="line">        config.addAllowedOrigin(<span class="string">"*"</span>);</span><br><span class="line">        config.addAllowedHeader(<span class="string">"*"</span>);</span><br><span class="line"></span><br><span class="line">        UrlBasedCorsConfigurationSource source = <span class="keyword">new</span> UrlBasedCorsConfigurationSource(<span class="keyword">new</span> PathPatternParser());</span><br><span class="line">        source.registerCorsConfiguration(<span class="string">"/**"</span>, config);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> CorsWebFilter(source);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>filter目录下的AuthGlobalFilter，主要解决权限问题</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthGlobalFilter</span> <span class="keyword">implements</span> <span class="title">GlobalFilter</span>, <span class="title">Ordered</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> AntPathMatcher antPathMatcher = <span class="keyword">new</span> AntPathMatcher();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;Void&gt; <span class="title">filter</span><span class="params">(ServerWebExchange exchange, GatewayFilterChain chain)</span> </span>&#123;</span><br><span class="line">        ServerHttpRequest request = exchange.getRequest();</span><br><span class="line">        String path = request.getURI().getPath();</span><br><span class="line">        <span class="comment">//谷粒学院api接口，校验用户必须登录</span></span><br><span class="line">        <span class="keyword">if</span>(antPathMatcher.match(<span class="string">"/api/**/auth/**"</span>, path)) &#123;</span><br><span class="line">            List&lt;String&gt; tokenList = request.getHeaders().get(<span class="string">"token"</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">null</span> == tokenList) &#123;</span><br><span class="line">                ServerHttpResponse response = exchange.getResponse();</span><br><span class="line">                <span class="keyword">return</span> out(response);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//                Boolean isCheck = JwtUtils.checkToken(tokenList.get(0));</span></span><br><span class="line"><span class="comment">//                if(!isCheck) &#123;</span></span><br><span class="line">                ServerHttpResponse response = exchange.getResponse();</span><br><span class="line">                <span class="keyword">return</span> out(response);</span><br><span class="line"><span class="comment">//                &#125;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//内部服务接口，不允许外部访问</span></span><br><span class="line">        <span class="keyword">if</span>(antPathMatcher.match(<span class="string">"/**/inner/**"</span>, path)) &#123;</span><br><span class="line">            ServerHttpResponse response = exchange.getResponse();</span><br><span class="line">            <span class="keyword">return</span> out(response);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> chain.filter(exchange);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Mono&lt;Void&gt; <span class="title">out</span><span class="params">(ServerHttpResponse response)</span> </span>&#123;</span><br><span class="line">        JsonObject message = <span class="keyword">new</span> JsonObject();</span><br><span class="line">        message.addProperty(<span class="string">"success"</span>, <span class="keyword">false</span>);</span><br><span class="line">        message.addProperty(<span class="string">"code"</span>, <span class="number">28004</span>);</span><br><span class="line">        message.addProperty(<span class="string">"data"</span>, <span class="string">"鉴权失败"</span>);</span><br><span class="line">        <span class="keyword">byte</span>[] bits = message.toString().getBytes(StandardCharsets.UTF_8);</span><br><span class="line">        DataBuffer buffer = response.bufferFactory().wrap(bits);</span><br><span class="line">        <span class="comment">//response.setStatusCode(HttpStatus.UNAUTHORIZED);</span></span><br><span class="line">        <span class="comment">//指定编码，否则在浏览器中会中文乱码</span></span><br><span class="line">        response.getHeaders().add(<span class="string">"Content-Type"</span>, <span class="string">"application/json;charset=UTF-8"</span>);</span><br><span class="line">        <span class="keyword">return</span> response.writeWith(Mono.just(buffer));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>handler下的ErrorHandlerConfig，错误处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableConfigurationProperties</span>(&#123;ServerProperties<span class="class">.<span class="keyword">class</span>, <span class="title">ResourceProperties</span>.<span class="title">class</span>&#125;)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">ErrorHandlerConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ServerProperties serverProperties;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ApplicationContext applicationContext;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ResourceProperties resourceProperties;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> List&lt;ViewResolver&gt; viewResolvers;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ServerCodecConfigurer serverCodecConfigurer;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ErrorHandlerConfig</span><span class="params">(ServerProperties serverProperties,</span></span></span><br><span class="line"><span class="function"><span class="params">                              ResourceProperties resourceProperties,</span></span></span><br><span class="line"><span class="function"><span class="params">                              ObjectProvider&lt;List&lt;ViewResolver&gt;&gt; viewResolversProvider,</span></span></span><br><span class="line"><span class="function"><span class="params">                              ServerCodecConfigurer serverCodecConfigurer,</span></span></span><br><span class="line"><span class="function"><span class="params">                              ApplicationContext applicationContext)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.serverProperties = serverProperties;</span><br><span class="line">        <span class="keyword">this</span>.applicationContext = applicationContext;</span><br><span class="line">        <span class="keyword">this</span>.resourceProperties = resourceProperties;</span><br><span class="line">        <span class="keyword">this</span>.viewResolvers = viewResolversProvider.getIfAvailable(Collections::emptyList);</span><br><span class="line">        <span class="keyword">this</span>.serverCodecConfigurer = serverCodecConfigurer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Order</span>(Ordered.HIGHEST_PRECEDENCE)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ErrorWebExceptionHandler <span class="title">errorWebExceptionHandler</span><span class="params">(ErrorAttributes errorAttributes)</span> </span>&#123;</span><br><span class="line">        JsonExceptionHandler exceptionHandler = <span class="keyword">new</span> JsonExceptionHandler(</span><br><span class="line">                errorAttributes,</span><br><span class="line">                <span class="keyword">this</span>.resourceProperties,</span><br><span class="line">                <span class="keyword">this</span>.serverProperties.getError(),</span><br><span class="line">                <span class="keyword">this</span>.applicationContext);</span><br><span class="line">        exceptionHandler.setViewResolvers(<span class="keyword">this</span>.viewResolvers);</span><br><span class="line">        exceptionHandler.setMessageWriters(<span class="keyword">this</span>.serverCodecConfigurer.getWriters());</span><br><span class="line">        exceptionHandler.setMessageReaders(<span class="keyword">this</span>.serverCodecConfigurer.getReaders());</span><br><span class="line">        <span class="keyword">return</span> exceptionHandler;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>handler下的JsonExceptionHandler，主要解决异常处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义异常处理</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;异常时用JSON代替HTML异常信息&lt;p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> yinjihuan</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JsonExceptionHandler</span> <span class="keyword">extends</span> <span class="title">DefaultErrorWebExceptionHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">JsonExceptionHandler</span><span class="params">(ErrorAttributes errorAttributes, ResourceProperties resourceProperties,</span></span></span><br><span class="line"><span class="function"><span class="params">                                ErrorProperties errorProperties, ApplicationContext applicationContext)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(errorAttributes, resourceProperties, errorProperties, applicationContext);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取异常属性</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Map&lt;String, Object&gt; <span class="title">getErrorAttributes</span><span class="params">(ServerRequest request, <span class="keyword">boolean</span> includeStackTrace)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">"success"</span>, <span class="keyword">false</span>);</span><br><span class="line">        map.put(<span class="string">"code"</span>, <span class="number">20005</span>);</span><br><span class="line">        map.put(<span class="string">"message"</span>, <span class="string">"网关失败"</span>);</span><br><span class="line">        map.put(<span class="string">"data"</span>, <span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 指定响应处理方法为JSON处理的方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> errorAttributes</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> RouterFunction&lt;ServerResponse&gt; <span class="title">getRoutingFunction</span><span class="params">(ErrorAttributes errorAttributes)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> RouterFunctions.route(RequestPredicates.all(), <span class="keyword">this</span>::renderErrorResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据code获取对应的HttpStatus</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> errorAttributes</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">int</span> <span class="title">getHttpStatus</span><span class="params">(Map&lt;String, Object&gt; errorAttributes)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">200</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上都配置好之后，记得在其他service模块中，去掉跨域注解，不然重复了会出现问题</p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>先使用原生端口访问edu其中的一个api</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200716222204.png" alt="image-20200716222204672"></p><p>再使用gateway的端口8222去访问同样的api</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200716222247.png" alt="image-20200716222246972"></p><p>测试成功</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-后台数据统计分析&quot;&gt;&lt;a href=&quot;#1-后台数据统计分析&quot; class=&quot;headerlink&quot; title=&quot;1 后台数据统计分析&quot;&gt;&lt;/a&gt;1 后台数据统计分析&lt;/h2&gt;&lt;h3 id=&quot;1-1-需求分析&quot;&gt;&lt;a href=&quot;#1-1-需求分析&quot; cla
      
    
    </summary>
    
    
      <category term="前后端分离" scheme="http://yoursite.com/categories/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="springboot" scheme="http://yoursite.com/tags/springboot/"/>
    
      <category term="springcloud" scheme="http://yoursite.com/tags/springcloud/"/>
    
  </entry>
  
  <entry>
    <title>谷粒学院实战day09—课程订单和微信支付</title>
    <link href="http://yoursite.com/2020/07/15/%E5%AD%A6%E9%99%A2%E5%AE%9E%E6%88%98day09%E2%80%94%E8%AF%BE%E7%A8%8B%E8%AE%A2%E5%8D%95%E5%92%8C%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98/"/>
    <id>http://yoursite.com/2020/07/15/%E5%AD%A6%E9%99%A2%E5%AE%9E%E6%88%98day09%E2%80%94%E8%AF%BE%E7%A8%8B%E8%AE%A2%E5%8D%95%E5%92%8C%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98/</id>
    <published>2020-07-14T17:47:00.000Z</published>
    <updated>2020-07-15T03:34:31.423Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、课程评论功能"><a href="#1、课程评论功能" class="headerlink" title="1、课程评论功能"></a>1、课程评论功能</h2><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>看看数据库表的设计</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200714105831.png" alt="image-20200714105831440"></p><ul><li>首先是评论的分页查询，也就是以分页的形式显示所有的评论内容</li><li>关键是评论的添加功能，这里涉及的流程相对比较复杂的<ul><li>一个是需要获取到课程的id和讲师的id，这个在课程详情页都可以获取到</li><li>还有就是需要考虑到评论需要现实用户的昵称，头像，这就要求获取到用户信息了，而且需要用户登陆后才能发表评论，那么这个用户信息该怎么获取到呢？<ul><li>之前做过登陆模块的功能，应该还记得是将token放到header中，所以我们可以从header中获取到token</li><li>而在token中就可以获取到用户id</li><li>获取到用户id之后可以查询到用户信息</li></ul></li></ul></li></ul><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>新建数据库表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`edu_comment`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">CHAR</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'讲师ID'</span>,</span><br><span class="line">  <span class="string">`course_id`</span> <span class="built_in">VARCHAR</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'课程id'</span>,</span><br><span class="line">  <span class="string">`teacher_id`</span> <span class="built_in">CHAR</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'讲师id'</span>,</span><br><span class="line">  <span class="string">`member_id`</span> <span class="built_in">VARCHAR</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'会员id'</span>,</span><br><span class="line">  <span class="string">`nickname`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'会员昵称'</span>,</span><br><span class="line">  <span class="string">`avatar`</span> <span class="built_in">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'会员头像'</span>,</span><br><span class="line">  <span class="string">`content`</span> <span class="built_in">VARCHAR</span>(<span class="number">500</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'评论内容'</span>,</span><br><span class="line">  <span class="string">`is_deleted`</span> <span class="built_in">TINYINT</span>(<span class="number">1</span>) <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'逻辑删除 1（true）已删除， 0（false）未删除'</span>,</span><br><span class="line">  <span class="string">`gmt_create`</span> DATETIME <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  <span class="string">`gmt_modified`</span> DATETIME <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_course_id`</span> (<span class="string">`course_id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_teacher_id`</span> (<span class="string">`teacher_id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_member_id`</span> (<span class="string">`member_id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4 <span class="keyword">COMMENT</span>=<span class="string">'评论'</span>;</span><br></pre></td></tr></table></figure><h3 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h3><h2 id="2、课程订单模块"><a href="#2、课程订单模块" class="headerlink" title="2、课程订单模块"></a>2、课程订单模块</h2><h3 id="2-1-需求分析"><a href="#2-1-需求分析" class="headerlink" title="2.1 需求分析"></a>2.1 需求分析</h3><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200714181406.png" alt="image-20200714181406781"></p><p>在课程详情页中，如果是免费的，则可<code>立即观看</code>，如果是收费的，则需要点击<code>立即购买</code></p><p>点击立即购买后，则需要根据课程id生成一个订单，并返回订单号</p><p>然后带着生成的订单号跳转到订单详情页（如下），订单详情可根据刚携带的订单号查询出来</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200714181836.png" alt="image-20200714181836338"></p><p>点击去支付后，需要生成一个微信支付的二维码</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200714181914.png" alt="image-20200714181914883"></p><p>支付成功后，需要查询订单状态，如果为支付完成则继续等待，如果已支付完成，则跳转到课程详情页，付费课程编程可点击立即观看</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200714182024.jpg" alt="img"></p><h3 id="2-2-开发流程分析"><a href="#2-2-开发流程分析" class="headerlink" title="2.2 开发流程分析"></a>2.2 开发流程分析</h3><ul><li><p>首先点击立即购买，需要生成一个订单，并返回订单号，这是一个接口</p><ul><li><p>从数据库表中可以看到既有课程基本信息，又有用户基本信息，所以少不了去调用课程和用户这两个模块的方法了</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200714183207.jpg" alt="img"></p></li></ul></li><li><p>接着跳转到订单页面的时候，需要查询订单详情，这是一个接口</p></li><li><p>点击去支付，需要生成微信支付二维码，这是一个接口</p></li><li><p>微信扫码支付后，需要查询订单状态，这是一个接口</p></li></ul><h3 id="2-3-准备数据库"><a href="#2-3-准备数据库" class="headerlink" title="2.3 准备数据库"></a>2.3 准备数据库</h3><p>t_order</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`t_order`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span>,</span><br><span class="line">  <span class="string">`order_no`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'订单号'</span>,</span><br><span class="line">  <span class="string">`course_id`</span> <span class="built_in">varchar</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'课程id'</span>,</span><br><span class="line">  <span class="string">`course_title`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'课程名称'</span>,</span><br><span class="line">  <span class="string">`course_cover`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'课程封面'</span>,</span><br><span class="line">  <span class="string">`teacher_name`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'讲师名称'</span>,</span><br><span class="line">  <span class="string">`member_id`</span> <span class="built_in">varchar</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'会员id'</span>,</span><br><span class="line">  <span class="string">`nickname`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'会员昵称'</span>,</span><br><span class="line">  <span class="string">`mobile`</span> <span class="built_in">varchar</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'会员手机'</span>,</span><br><span class="line">  <span class="string">`total_fee`</span> <span class="built_in">decimal</span>(<span class="number">10</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="string">'0.01'</span> <span class="keyword">COMMENT</span> <span class="string">'订单金额（分）'</span>,</span><br><span class="line">  <span class="string">`pay_type`</span> <span class="built_in">tinyint</span>(<span class="number">3</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'支付类型（1：微信 2：支付宝）'</span>,</span><br><span class="line">  <span class="string">`status`</span> <span class="built_in">tinyint</span>(<span class="number">3</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'订单状态（0：未支付 1：已支付）'</span>,</span><br><span class="line">  <span class="string">`is_deleted`</span> <span class="built_in">tinyint</span>(<span class="number">1</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'逻辑删除 1（true）已删除， 0（false）未删除'</span>,</span><br><span class="line">  <span class="string">`gmt_create`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  <span class="string">`gmt_modified`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`ux_order_no`</span> (<span class="string">`order_no`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_course_id`</span> (<span class="string">`course_id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_member_id`</span> (<span class="string">`member_id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4 <span class="keyword">COMMENT</span>=<span class="string">'订单'</span>;</span><br></pre></td></tr></table></figure><p>t_pay_log</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`t_pay_log`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span>,</span><br><span class="line">  <span class="string">`order_no`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'订单号'</span>,</span><br><span class="line">  <span class="string">`pay_time`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'支付完成时间'</span>,</span><br><span class="line">  <span class="string">`total_fee`</span> <span class="built_in">decimal</span>(<span class="number">10</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="string">'0.01'</span> <span class="keyword">COMMENT</span> <span class="string">'支付金额（分）'</span>,</span><br><span class="line">  <span class="string">`transaction_id`</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'交易流水号'</span>,</span><br><span class="line">  <span class="string">`trade_state`</span> <span class="built_in">char</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'交易状态'</span>,</span><br><span class="line">  <span class="string">`pay_type`</span> <span class="built_in">tinyint</span>(<span class="number">3</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'支付类型（1：微信 2：支付宝）'</span>,</span><br><span class="line">  <span class="string">`attr`</span> <span class="built_in">text</span> <span class="keyword">COMMENT</span> <span class="string">'其他属性'</span>,</span><br><span class="line">  <span class="string">`is_deleted`</span> <span class="built_in">tinyint</span>(<span class="number">1</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'逻辑删除 1（true）已删除， 0（false）未删除'</span>,</span><br><span class="line">  <span class="string">`gmt_create`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  <span class="string">`gmt_modified`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`uk_order_no`</span> (<span class="string">`order_no`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4 <span class="keyword">COMMENT</span>=<span class="string">'支付日志表'</span>;</span><br></pre></td></tr></table></figure><h3 id="2-4-新建service-order模块"><a href="#2-4-新建service-order模块" class="headerlink" title="2.4 新建service_order模块"></a>2.4 新建service_order模块</h3><p>导入相关依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--微信支付相关依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.wxpay<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>wxpay-sdk<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置yml文件</p><p>提示：别忘了在nginx中配置8007端口</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 服务端口</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8007</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment"># 服务名</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-order</span></span><br><span class="line">  <span class="comment"># 环境设置</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># mysql数据库连接</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">  <span class="comment"># 返回json的全局时间格式</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">date-format:</span> <span class="string">yyyy-MM-dd</span> <span class="string">HH:mm:ss</span></span><br><span class="line">    <span class="attr">time-zone:</span> <span class="string">GMT+8</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">203.195</span><span class="number">.160</span><span class="number">.231</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">    <span class="attr">database:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">timeout:</span> <span class="number">1800000</span></span><br><span class="line">    <span class="attr">lettuce:</span></span><br><span class="line">      <span class="attr">pool:</span></span><br><span class="line">        <span class="attr">max-active:</span> <span class="number">20</span></span><br><span class="line">        <span class="attr">max-wait:</span> <span class="number">1</span></span><br><span class="line">        <span class="comment"># 最大阻塞等待时间（负数表示没有限制）</span></span><br><span class="line">        <span class="attr">max-idle:</span> <span class="number">5</span></span><br><span class="line">        <span class="attr">min-idle:</span> <span class="number">0</span></span><br><span class="line"><span class="comment"># 配置mapper xml文件的路径</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:com/ryan/order/mapper/xml/*.xml</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line"><span class="comment"># 开启hystrix服务</span></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">hystrix:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="2-5-mp生成代码"><a href="#2-5-mp生成代码" class="headerlink" title="2.5 mp生成代码"></a>2.5 mp生成代码</h3><p>提示：生成以上两张表对应的代码，同时建议生成的代码中将前缀t_去掉</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strategy.setTablePrefix(<span class="string">"t"</span> + <span class="string">"_"</span>);</span><br></pre></td></tr></table></figure><h3 id="2-6-完善生成的代码"><a href="#2-6-完善生成的代码" class="headerlink" title="2.6 完善生成的代码"></a>2.6 完善生成的代码</h3><p>提示：主要是逻辑删除和自动填充注解，以及配置逻辑删除和分页的bean</p><h3 id="2-7-后端接口"><a href="#2-7-后端接口" class="headerlink" title="2.7 后端接口"></a>2.7 后端接口</h3><h4 id="生成订单"><a href="#生成订单" class="headerlink" title="生成订单"></a>生成订单</h4><h5 id="准备工作-1"><a href="#准备工作-1" class="headerlink" title="准备工作"></a>准备工作</h5><p>因为订单信息中同时包含课程信息和用户信息，所以需要远程调用，在远程调用的过程中，应该返回公共的实体类数据，所以首先应该新建两个对应的公共实体类</p><p>CourseInfoOrder</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CourseInfoOrder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程ID"</span>)</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程讲师ID"</span>)</span><br><span class="line">    <span class="keyword">private</span> String teacherId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程专业ID"</span>)</span><br><span class="line">    <span class="keyword">private</span> String SubjectId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程专业父级ID"</span>)</span><br><span class="line">    <span class="keyword">private</span> String subjectParentId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程标题"</span>)</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程销售价格，设置为0则可免费观看"</span>)</span><br><span class="line">    <span class="keyword">private</span> BigDecimal price;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"总课时"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer lessonNum;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程封面图片路径"</span>)</span><br><span class="line">    <span class="keyword">private</span> String cover;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程简介"</span>)</span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserInfoOrder</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserInfoOrder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"会员id"</span>)</span><br><span class="line">    <span class="meta">@TableId</span>(value = <span class="string">"id"</span>, type = IdType.ID_WORKER_STR)</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"微信openid"</span>)</span><br><span class="line">    <span class="keyword">private</span> String openid;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"手机号"</span>)</span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"密码"</span>)</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"昵称"</span>)</span><br><span class="line">    <span class="keyword">private</span> String nickname;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"性别 1 女，2 男"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer sex;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"年龄"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"用户头像"</span>)</span><br><span class="line">    <span class="keyword">private</span> String avatar;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"用户签名"</span>)</span><br><span class="line">    <span class="keyword">private</span> String sign;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"是否禁用 1（true）已禁用，  0（false）未禁用"</span>)</span><br><span class="line">    <span class="keyword">private</span> Boolean isDisabled;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"逻辑删除 1（true）已删除， 0（false）未删除"</span>)</span><br><span class="line">    <span class="meta">@TableLogic</span></span><br><span class="line">    <span class="keyword">private</span> Boolean isDeleted;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"创建时间"</span>)</span><br><span class="line">    <span class="meta">@TableField</span>(fill = FieldFill.INSERT)</span><br><span class="line">    <span class="keyword">private</span> Date gmtCreate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"更新时间"</span>)</span><br><span class="line">    <span class="meta">@TableField</span>(fill = FieldFill.INSERT_UPDATE)</span><br><span class="line">    <span class="keyword">private</span> Date gmtModified;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在被调用方编写对应的controller接口</p><p>注意：如果该模块已经开启了熔断机制的话，则需要编写fallback函数，否则会报错：找不到fallback函数，我这里没有开启，所以写一个几口就行</p><p>EduCourseController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据课程id查询课程信息，因为是别的模块调用，所以这里返回的不能是CourseInfoVo，需要在公共模块中重新封装实体类</span></span><br><span class="line"><span class="comment">//但是实体类的属性是一样的</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/getCourseInfoOrder/&#123;courseId&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> CourseInfoOrder <span class="title">getCourseInfoOrder</span><span class="params">(@PathVariable String courseId)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    CourseInfoVo courseInfo = eduCourseService.getCourseInfo(courseId);</span><br><span class="line">    CourseInfoOrder courseInfoOrder = <span class="keyword">new</span> CourseInfoOrder();</span><br><span class="line">    BeanUtils.copyProperties(courseInfo, courseInfoOrder);</span><br><span class="line">    <span class="keyword">return</span> courseInfoOrder;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MemberController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据用户id查询用户信息，注意这里是要被其他模块调用，所以不能直接返回Member，而是返回公共模块的封装实体类M</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/getUserInfoOder/&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> UserInfoOrder <span class="title">getUserInfoOder</span><span class="params">(@PathVariable String id)</span></span>&#123;</span><br><span class="line">    Member member = memberService.getById(id);</span><br><span class="line">    UserInfoOrder userInfoOrder = <span class="keyword">new</span> UserInfoOrder();</span><br><span class="line">    BeanUtils.copyProperties(member, userInfoOrder);</span><br><span class="line">    <span class="keyword">return</span> userInfoOrder;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在调用方新建两个对应的Feign接口</p><p>CourseInfoClient</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@FeignClient</span>(name = <span class="string">"service-edu"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CourseInfoClient</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/eduservice/edu-course/getCourseInfoOrder/&#123;courseId&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> CourseInfoOrder <span class="title">getCourseInfoOrder</span><span class="params">(@PathVariable(<span class="string">"courseId"</span>)</span> String courseId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserInfoClient</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@FeignClient</span>(name = <span class="string">"service-ucenter"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserInfoClient</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/ucenter/member/getUserInfoOder/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserInfoOrder <span class="title">getUserInfoOder</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> String id)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>feign接口别忘了添加Component接口</li><li>不一定要编写实现类，也就是回调函数</li><li>feign接口中对应的参数一定要在注解后面写上对应的参数</li></ul><h5 id="OrderController"><a href="#OrderController" class="headerlink" title="OrderController"></a>OrderController</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/eduorder/order"</span>)</span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderService orderService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据课程id和用户id生成订单</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/createOrder/&#123;courseId&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">createOrder</span><span class="params">(@PathVariable String courseId, HttpServletRequest request)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        String orderId = orderService.createOrder(courseId, JwtUtils.getMemberIdByJwtToken(request));</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">"orderId"</span>,orderId);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="OrderService"><a href="#OrderService" class="headerlink" title="OrderService"></a>OrderService</h5><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderService</span> <span class="keyword">extends</span> <span class="title">IService</span>&lt;<span class="title">Order</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">createOrder</span><span class="params">(String courseId, String memberIdByJwtToken)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderServiceImpl</span> <span class="keyword">extends</span> <span class="title">ServiceImpl</span>&lt;<span class="title">OrderMapper</span>, <span class="title">Order</span>&gt; <span class="keyword">implements</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CourseInfoClient courseInfoClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserInfoClient userInfoClient;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据课程id和用户id生成订单</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">createOrder</span><span class="params">(String courseId, String memberId)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//根据课程id获取课程信息</span></span><br><span class="line">        CourseInfoOrder courseInfo = courseInfoClient.getCourseInfoOrder(courseId);</span><br><span class="line">        <span class="comment">//根据用户id获取用户信息</span></span><br><span class="line">        UserInfoOrder userInfo = userInfoClient.getUserInfoOder(memberId);</span><br><span class="line">        <span class="comment">//使用工具类生成订单号</span></span><br><span class="line">        String orderNo = OrderNoUtil.getOrderNo();</span><br><span class="line">        <span class="comment">//配置订单信息</span></span><br><span class="line">        Order order = <span class="keyword">new</span> Order();</span><br><span class="line">        order.setOrderNo(orderNo);</span><br><span class="line">        order.setCourseId(courseId);</span><br><span class="line">        order.setCourseTitle(courseInfo.getTitle());</span><br><span class="line">        order.setCourseCover(courseInfo.getCover());</span><br><span class="line">        order.setTeacherName(<span class="string">"ryan"</span>);</span><br><span class="line">        order.setMemberId(memberId);</span><br><span class="line">        order.setNickname(userInfo.getNickname());</span><br><span class="line">        order.setMobile(userInfo.getMobile());</span><br><span class="line">        order.setTotalFee(courseInfo.getPrice());</span><br><span class="line">        order.setPayType(<span class="number">1</span>);<span class="comment">//微信支付</span></span><br><span class="line">        order.setStatus(<span class="number">0</span>);<span class="comment">//未支付状态</span></span><br><span class="line">        <span class="comment">//保存，返回订单号</span></span><br><span class="line">        baseMapper.insert(order);</span><br><span class="line">        <span class="keyword">return</span> order.getOrderNo();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：返回订单号是为了方便后面查询订单详情的接口</p><h4 id="查询订单"><a href="#查询订单" class="headerlink" title="查询订单"></a>查询订单</h4><h5 id="OrderController-1"><a href="#OrderController-1" class="headerlink" title="OrderController"></a>OrderController</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据订单号查询订单信息</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/getOrderInfo/&#123;orderNo&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">getOrderInfo</span><span class="params">(@PathVariable String orderNo)</span></span>&#123;</span><br><span class="line">    QueryWrapper&lt;Order&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.eq(<span class="string">"order_no"</span>, orderNo);</span><br><span class="line">    Order order = orderService.getOne(wrapper);</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">"order"</span>,order);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="生成微信支付二维码"><a href="#生成微信支付二维码" class="headerlink" title="生成微信支付二维码"></a>生成微信支付二维码</h4><h5 id="PayLogController"><a href="#PayLogController" class="headerlink" title="PayLogController"></a>PayLogController</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/eduorder/pay"</span>)</span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PayLogController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PayLogService payLogService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//点击去支付，根据订单号生成微信支付二维码</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/createNative/&#123;orderNo&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">createNative</span><span class="params">(@PathVariable String orderNo)</span></span>&#123;</span><br><span class="line">        <span class="comment">//返回map是为了方便取值，因为二维码中还是包含挺多支付信息的</span></span><br><span class="line">        Map map = payLogService.createNative(orderNo);</span><br><span class="line">        System.out.println(map);</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(map);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="PayLogService"><a href="#PayLogService" class="headerlink" title="PayLogService"></a>PayLogService</h5><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Map <span class="title">createNative</span><span class="params">(String orderNo)</span></span>;</span><br></pre></td></tr></table></figure><p>实现类</p><p>提示：</p><ul><li>一方面，这里只支持认证过的企业收款账户，暂时不支持个人的，里面相关账户都是尚硅谷官方提供的</li><li>很多参数和地址都是腾讯微信官方提供的，流程也比较固定</li><li>因为最后返回和需要用的数据比较多，所以建议最好返回的是一个map集合</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PayLogServiceImpl</span> <span class="keyword">extends</span> <span class="title">ServiceImpl</span>&lt;<span class="title">PayLogMapper</span>, <span class="title">PayLog</span>&gt; <span class="keyword">implements</span> <span class="title">PayLogService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderService orderService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据订单号生成微信支付二维码</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map <span class="title">createNative</span><span class="params">(String orderNo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">//根据orderNo查询订单信息</span></span><br><span class="line">            QueryWrapper&lt;Order&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">            wrapper.eq(<span class="string">"order_no"</span>, orderNo);</span><br><span class="line">            Order order = orderService.getOne(wrapper);</span><br><span class="line">            <span class="comment">//设置支付参数</span></span><br><span class="line">            Map m = <span class="keyword">new</span> HashMap();</span><br><span class="line">            m.put(<span class="string">"appid"</span>,<span class="string">"wx74862e0dfcf69954"</span>);<span class="comment">//微信公众号appid</span></span><br><span class="line">            m.put(<span class="string">"mch_id"</span>, <span class="string">"1558950191"</span>);<span class="comment">//商户号id</span></span><br><span class="line">            m.put(<span class="string">"nonce_str"</span>, WXPayUtil.generateNonceStr());<span class="comment">//微信工具类生成的随机签名，保证每一个订单都不一样</span></span><br><span class="line">            m.put(<span class="string">"body"</span>, order.getCourseTitle()); <span class="comment">//课程标题</span></span><br><span class="line">            m.put(<span class="string">"out_trade_no"</span>, orderNo); <span class="comment">//订单号</span></span><br><span class="line">            m.put(<span class="string">"total_fee"</span>, order.getTotalFee().multiply(<span class="keyword">new</span> BigDecimal(<span class="string">"100"</span>)).longValue()+<span class="string">""</span>);</span><br><span class="line">            m.put(<span class="string">"spbill_create_ip"</span>, <span class="string">"127.0.0.1"</span>);</span><br><span class="line">            m.put(<span class="string">"notify_url"</span>, <span class="string">"http://guli.shop/api/order/weixinPay/weixinNotify\n"</span>);</span><br><span class="line">            m.put(<span class="string">"trade_type"</span>, <span class="string">"NATIVE"</span>);</span><br><span class="line">            <span class="comment">//HTTPClient来根据URL访问第三方接口并且传递参数微信支付提供的固定的地址</span></span><br><span class="line">            HttpClient client = <span class="keyword">new</span> HttpClient(<span class="string">"https://api.mch.weixin.qq.com/pay/unifiedorder"</span>);</span><br><span class="line">            <span class="comment">//client设置参数，并发送请求,将map集合转换为xml格式，并且需要商户key</span></span><br><span class="line">            client.setXmlParam(WXPayUtil.generateSignedXml(m, <span class="string">"T6m9iK73b0kn9g5v426MKfHQH7X8rKwb"</span>));</span><br><span class="line">            client.setHttps(<span class="keyword">true</span>);<span class="comment">//支持Https，默认是不支持的</span></span><br><span class="line">            client.post();<span class="comment">//发送请求</span></span><br><span class="line">            <span class="comment">//获取返回数据,注意返回的数据也是xml数据，后面还需要转换为map</span></span><br><span class="line">            String xml = client.getContent();</span><br><span class="line">            Map&lt;String, String&gt; resultMap = WXPayUtil.xmlToMap(xml);</span><br><span class="line">            <span class="comment">//封装结果集</span></span><br><span class="line">            Map map = <span class="keyword">new</span> HashMap();</span><br><span class="line">            map.put(<span class="string">"out_trade_no"</span>, orderNo);</span><br><span class="line">            map.put(<span class="string">"course_id"</span>, order.getCourseId());</span><br><span class="line">            map.put(<span class="string">"total_fee"</span>, order.getTotalFee());</span><br><span class="line">            map.put(<span class="string">"result_code"</span>, resultMap.get(<span class="string">"result_code"</span>));  <span class="comment">//返回二维码操作状态码</span></span><br><span class="line">            map.put(<span class="string">"code_url"</span>, resultMap.get(<span class="string">"code_url"</span>));        <span class="comment">//二维码地址</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> map;</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> GuliException(<span class="number">20001</span>, <span class="string">"支付失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="查询订单支付状态"><a href="#查询订单支付状态" class="headerlink" title="查询订单支付状态"></a>查询订单支付状态</h4><h5 id="PayLogController-1"><a href="#PayLogController-1" class="headerlink" title="PayLogController"></a>PayLogController</h5><p>提示：</p><ul><li>支付中返回25000是为了配合前端的拦截器</li><li>这里涉及到两个方法，一个是查询返回数据的方法，一个是更新状态的方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据订单号查询支付状态的接口</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/queryPayStatus/&#123;orderNo&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">queryPayStatus</span><span class="params">(@PathVariable String orderNo)</span></span>&#123;</span><br><span class="line">    Map map = payLogService.queryPayStatus(orderNo);</span><br><span class="line">    <span class="keyword">if</span>(map == <span class="keyword">null</span>)<span class="keyword">return</span> R.error().message(<span class="string">"支付出错"</span>);</span><br><span class="line">    <span class="comment">//如果map不为空，则要么支付中，要么支付成功</span></span><br><span class="line">    <span class="keyword">if</span>(map.get(<span class="string">"trade_state"</span>).equals(<span class="string">"SUCCESS"</span>))&#123;</span><br><span class="line">        <span class="comment">//如果成功，则更新支付状态</span></span><br><span class="line">        payLogService.updatePayStatus(map);</span><br><span class="line">        System.out.println(map);</span><br><span class="line">        <span class="keyword">return</span> R.ok().message(<span class="string">"支付成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//其他情况，则属于支付中</span></span><br><span class="line">    <span class="keyword">return</span> R.ok().code(<span class="number">25000</span>).message(<span class="string">"支付中，请稍后"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="PayLogService-1"><a href="#PayLogService-1" class="headerlink" title="PayLogService"></a>PayLogService</h5><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Map <span class="title">queryPayStatus</span><span class="params">(String orderNo)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updatePayStatus</span><span class="params">(Map&lt;String, String&gt; map)</span></span>;</span><br></pre></td></tr></table></figure><p>实现类</p><ul><li>查询支付状态的方法和生成二维码的流程非常像，比较固定的流程</li><li>而更新订单状态的方法，则是根据查询状态方法返回的数据进一步判断和操作</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询支付状态</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map <span class="title">queryPayStatus</span><span class="params">(String orderNo)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//1、封装参数</span></span><br><span class="line">        Map m = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        m.put(<span class="string">"appid"</span>, <span class="string">"wx74862e0dfcf69954"</span>);</span><br><span class="line">        m.put(<span class="string">"mch_id"</span>, <span class="string">"1558950191"</span>);</span><br><span class="line">        m.put(<span class="string">"out_trade_no"</span>, orderNo);</span><br><span class="line">        m.put(<span class="string">"nonce_str"</span>, WXPayUtil.generateNonceStr());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2 发送httpclient</span></span><br><span class="line">        HttpClient client = <span class="keyword">new</span> HttpClient(<span class="string">"https://api.mch.weixin.qq.com/pay/orderquery"</span>);</span><br><span class="line">        client.setXmlParam(WXPayUtil.generateSignedXml(m,<span class="string">"T6m9iK73b0kn9g5v426MKfHQH7X8rKwb"</span>));</span><br><span class="line">        client.setHttps(<span class="keyword">true</span>);</span><br><span class="line">        client.post();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3 得到请求返回内容</span></span><br><span class="line">        String xml = client.getContent();</span><br><span class="line">        Map&lt;String, String&gt; resultMap = WXPayUtil.xmlToMap(xml);</span><br><span class="line">        <span class="comment">//6、转成Map再返回</span></span><br><span class="line">        <span class="keyword">return</span> resultMap;</span><br><span class="line">    &#125;<span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新支付状态</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updatePayStatus</span><span class="params">(Map&lt;String, String&gt; map)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//获取订单号</span></span><br><span class="line">    String orderNo = map.get(<span class="string">"out_trade_no"</span>);</span><br><span class="line">    <span class="comment">//首先根据订单号查询支付订单信息</span></span><br><span class="line">    QueryWrapper&lt;Order&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.eq(<span class="string">"order_no"</span>, orderNo);</span><br><span class="line">    Order order = orderService.getOne(wrapper);</span><br><span class="line">    <span class="comment">//判断支付状态值</span></span><br><span class="line">    <span class="keyword">if</span>(order.getStatus().intValue() == <span class="number">1</span>)&#123;<span class="keyword">return</span>;&#125;<span class="comment">//如果状态值为1，则表示已支付，不需要往下执行了</span></span><br><span class="line">    <span class="comment">//如果不是1则设置支付状态1</span></span><br><span class="line">    order.setStatus(<span class="number">1</span>);</span><br><span class="line">    orderService.updateById(order);</span><br><span class="line">    <span class="comment">//记录支付日志</span></span><br><span class="line">    <span class="comment">//向支付表添加支付记录</span></span><br><span class="line">    PayLog payLog = <span class="keyword">new</span> PayLog();</span><br><span class="line">    payLog.setOrderNo(orderNo);  <span class="comment">//订单号</span></span><br><span class="line">    payLog.setPayTime(<span class="keyword">new</span> Date()); <span class="comment">//订单完成时间</span></span><br><span class="line">    payLog.setPayType(<span class="number">1</span>);<span class="comment">//支付类型 1微信</span></span><br><span class="line">    payLog.setTotalFee(order.getTotalFee());<span class="comment">//总金额(分)</span></span><br><span class="line"></span><br><span class="line">    payLog.setTradeState(map.get(<span class="string">"trade_state"</span>));<span class="comment">//支付状态</span></span><br><span class="line">    payLog.setTransactionId(map.get(<span class="string">"transaction_id"</span>)); <span class="comment">//流水号</span></span><br><span class="line">    payLog.setAttr(JSONObject.toJSONString(map));</span><br><span class="line"></span><br><span class="line">    baseMapper.insert(payLog);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为这个配合前端测试效果才会比较明显，所以这里就先不用swagger测试了，先整合前端再最后测试</p><h3 id="2-8-前端接口"><a href="#2-8-前端接口" class="headerlink" title="2.8 前端接口"></a>2.8 前端接口</h3><p>提示：找到立即观看的页面，调用对应的接口和页面跳转即可</p><h4 id="准备工作-2"><a href="#准备工作-2" class="headerlink" title="准备工作"></a>准备工作</h4><p>复制粘贴覆盖原先assets下的静态资源，并在defaul.js中重新引入对应的资源</p><p>因为需要生成二维码，需要借助vue的一个工具——vue-qriously，执行下面的命令安装即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-qriously</span><br></pre></td></tr></table></figure><p>然后在plugin中引入和使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> VueQriously <span class="keyword">from</span> <span class="string">'vue-qriously'</span></span><br><span class="line">Vue.use(VueQriously)</span><br></pre></td></tr></table></figure><p>另外需要一个针对登陆状态和订单支付状态的拦截器，在request.js中添加此response拦截器</p><p>提示：不要忘了引入element-ui的MessageBox</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; MessageBox, Message &#125; <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="comment">// http response 拦截器</span></span><br><span class="line">service.interceptors.response.use(</span><br><span class="line">  response =&gt; &#123;</span><br><span class="line">    <span class="comment">//debugger</span></span><br><span class="line">    <span class="keyword">if</span> (response.data.code == <span class="number">28004</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"response.data.resultCode是28004"</span>)</span><br><span class="line">        <span class="comment">// 返回 错误代码-1 清除ticket信息并跳转到登录页面</span></span><br><span class="line">        <span class="comment">//debugger</span></span><br><span class="line">        <span class="built_in">window</span>.location.href=<span class="string">"/login"</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (response.data.code !== <span class="number">20000</span>) &#123;</span><br><span class="line">        <span class="comment">//25000：订单支付中，不做任何提示</span></span><br><span class="line">        <span class="keyword">if</span>(response.data.code != <span class="number">25000</span>) &#123;</span><br><span class="line">          Message(&#123;</span><br><span class="line">            message: response.data.message || <span class="string">'error'</span>,</span><br><span class="line">            type: <span class="string">'error'</span>,</span><br><span class="line">            duration: <span class="number">5</span> * <span class="number">1000</span></span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> response;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  error =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error.response)   <span class="comment">// 返回接口返回的错误信息</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="api"><a href="#api" class="headerlink" title="api"></a>api</h4><p>order.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">"@/utils/request.js"</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">//生成订单</span></span><br><span class="line">    createOrder(courseId, )&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">`/eduorder/order/createOrder/<span class="subst">$&#123;courseId&#125;</span>`</span>,</span><br><span class="line">            method: <span class="string">'post'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//查询订单</span></span><br><span class="line">    getOrder(orderNo)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">`/eduorder/order/getOrderInfo/<span class="subst">$&#123;orderNo&#125;</span>`</span>,</span><br><span class="line">            method: <span class="string">'get'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//生成微信支付二维码</span></span><br><span class="line">    createNative(orderNo)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">`/eduorder/pay/createNative/<span class="subst">$&#123;orderNo&#125;</span>`</span>,</span><br><span class="line">            method: <span class="string">'get'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//查询订单支付状态</span></span><br><span class="line">    queryPayStatus(orderNo)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">`/eduorder/pay/queryPayStatus/<span class="subst">$&#123;orderNo&#125;</span>`</span>,</span><br><span class="line">            method: <span class="string">'get'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="course下的-id-vue"><a href="#course下的-id-vue" class="headerlink" title="course下的_id.vue"></a>course下的_id.vue</h4><p>提示：</p><ul><li>编写点击时间对应的方法即可</li><li>生成订单后应携带生成的订单号跳转值订单详情页</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">methods:&#123;</span><br><span class="line">    <span class="comment">//生成订单</span></span><br><span class="line">    createOrders() &#123;</span><br><span class="line">        orderApi.createOrder(<span class="keyword">this</span>.courseId)</span><br><span class="line">            .then(response =&gt; &#123;</span><br><span class="line">                <span class="comment">//获取返回订单号</span></span><br><span class="line">                <span class="comment">//生成订单之后，跳转订单显示页面</span></span><br><span class="line">                <span class="keyword">this</span>.$router.push(&#123;path:<span class="string">'/order/'</span>+response.data.data.orderId&#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="order下的-oid-vue"><a href="#order下的-oid-vue" class="headerlink" title="order下的_oid.vue"></a>order下的_oid.vue</h4><p>提示：</p><ul><li>注意：在编写异步调用的时候，不要忘了参数是需要加{}的</li><li>点击去支付后应该携带订单号跳转至二维码界面</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;Page Confirm&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;Title&quot;&gt;</span><br><span class="line">      &lt;h1 class&#x3D;&quot;fl f18&quot;&gt;订单确认&lt;&#x2F;h1&gt;</span><br><span class="line">      &lt;img src&#x3D;&quot;~&#x2F;assets&#x2F;img&#x2F;cart_setp2.png&quot; class&#x3D;&quot;fr&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;clear&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;form name&#x3D;&quot;flowForm&quot; id&#x3D;&quot;flowForm&quot; method&#x3D;&quot;post&quot; action&#x3D;&quot;&quot;&gt;</span><br><span class="line">      &lt;table class&#x3D;&quot;GoodList&quot;&gt;</span><br><span class="line">        &lt;tbody&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">          &lt;th class&#x3D;&quot;name&quot;&gt;商品&lt;&#x2F;th&gt;</span><br><span class="line">          &lt;th class&#x3D;&quot;price&quot;&gt;原价&lt;&#x2F;th&gt;</span><br><span class="line">          &lt;th class&#x3D;&quot;priceNew&quot;&gt;价格&lt;&#x2F;th&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;</span><br><span class="line">        &lt;&#x2F;tbody&gt;</span><br><span class="line">        &lt;tbody&gt;</span><br><span class="line">        &lt;!-- &lt;tr&gt;</span><br><span class="line">          &lt;td colspan&#x3D;&quot;3&quot; class&#x3D;&quot;Title red f18 fb&quot;&gt;&lt;p&gt;限时折扣&lt;&#x2F;p&gt;&lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt; --&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">          &lt;td colspan&#x3D;&quot;3&quot; class&#x3D;&quot;teacher&quot;&gt;讲师：&#123;&#123;order.teacherName&#125;&#125;&lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;</span><br><span class="line">        &lt;tr class&#x3D;&quot;good&quot;&gt;</span><br><span class="line">          &lt;td class&#x3D;&quot;name First&quot;&gt;</span><br><span class="line">            &lt;a target&#x3D;&quot;_blank&quot; :href&#x3D;&quot;&#39;https:&#x2F;&#x2F;localhost:8030&#x2F;course&#x2F;&#39;+order.courseId&quot;&gt;</span><br><span class="line">              &lt;img :src&#x3D;&quot;order.courseCover&quot;&gt;&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;goodInfo&quot;&gt;</span><br><span class="line">              &lt;input type&#x3D;&quot;hidden&quot; class&#x3D;&quot;ids ids_14502&quot; value&#x3D;&quot;14502&quot;&gt;</span><br><span class="line">              &lt;a target&#x3D;&quot;_blank&quot; :href&#x3D;&quot;&#39;https:&#x2F;&#x2F;localhost:8030&#x2F;course&#x2F;&#39;+ order.courseId&quot;&gt;&#123;&#123;order.courseTitle&#125;&#125;&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">          &lt;&#x2F;td&gt;</span><br><span class="line">          &lt;td class&#x3D;&quot;price&quot;&gt;</span><br><span class="line">            &lt;p&gt;￥&lt;strong&gt;&#123;&#123;order.totalFee&#125;&#125;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;</span><br><span class="line">            &lt;!-- &lt;span class&#x3D;&quot;discName red&quot;&gt;限时8折&lt;&#x2F;span&gt; --&gt;</span><br><span class="line">          &lt;&#x2F;td&gt;</span><br><span class="line">          &lt;td class&#x3D;&quot;red priceNew Last&quot;&gt;￥&lt;strong&gt;&#123;&#123;order.totalFee&#125;&#125;&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">          &lt;td class&#x3D;&quot;Billing tr&quot; colspan&#x3D;&quot;3&quot;&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;tr&quot;&gt;</span><br><span class="line">              &lt;p&gt;共 &lt;strong class&#x3D;&quot;red&quot;&gt;1&lt;&#x2F;strong&gt; 件商品，合计&lt;span</span><br><span class="line">                class&#x3D;&quot;red f20&quot;&gt;￥&lt;strong&gt;&#123;&#123;order.totalFee&#125;&#125;&lt;&#x2F;strong&gt;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">          &lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;</span><br><span class="line">        &lt;&#x2F;tbody&gt;</span><br><span class="line">      &lt;&#x2F;table&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;Finish&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;fr&quot; id&#x3D;&quot;AgreeDiv&quot;&gt;</span><br><span class="line">          </span><br><span class="line">          &lt;label for&#x3D;&quot;Agree&quot;&gt;&lt;p class&#x3D;&quot;on&quot;&gt;&lt;input type&#x3D;&quot;checkbox&quot; checked&#x3D;&quot;checked&quot;&gt;我已阅读并同意&lt;a href&#x3D;&quot;javascript:&quot; target&#x3D;&quot;_blank&quot;&gt;《谷粒学院购买协议》&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;label&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;clear&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;Main fl&quot;&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;fl&quot;&gt;</span><br><span class="line">            &lt;a :href&#x3D;&quot;&#39;&#x2F;course&#x2F;&#39;+order.courseId&quot;&gt;返回课程详情页&lt;&#x2F;a&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;fr&quot;&gt;</span><br><span class="line">            &lt;p&gt;共 &lt;strong class&#x3D;&quot;red&quot;&gt;1&lt;&#x2F;strong&gt; 件商品，合计&lt;span class&#x3D;&quot;red f20&quot;&gt;￥&lt;strong</span><br><span class="line">              id&#x3D;&quot;AllPrice&quot;&gt;&#123;&#123;order.totalFee&#125;&#125;&lt;&#x2F;strong&gt;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;input name&#x3D;&quot;score&quot; value&#x3D;&quot;0&quot; type&#x3D;&quot;hidden&quot; id&#x3D;&quot;usedScore&quot;&gt;</span><br><span class="line">        &lt;button class&#x3D;&quot;fr redb&quot; type&#x3D;&quot;button&quot; id&#x3D;&quot;submitPay&quot; @click&#x3D;&quot;toPay()&quot;&gt;去支付&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;clear&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;form&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import orderApi from &#39;@&#x2F;api&#x2F;order&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">    asyncData(&#123; params, error &#125;) &#123;</span><br><span class="line">        return orderApi.getOrder(params.oid)</span><br><span class="line">            .then(response &#x3D;&gt; &#123;</span><br><span class="line">                return &#123;</span><br><span class="line">                    order: response.data.data.order</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line">      &#x2F;&#x2F;点击去支付,生成微信支付二维码，此二维码应该在新的窗口打开</span><br><span class="line">      toPay()&#123;</span><br><span class="line">        console.log(this.order.orderNo)</span><br><span class="line">        this.$router.push(&#123;path:&quot;&#x2F;pay&#x2F;&quot; + this.order.orderNo&#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h4 id="pay下的-pid-vue"><a href="#pay下的-pid-vue" class="headerlink" title="pay下的_pid.vue"></a>pay下的_pid.vue</h4><p>提示：</p><ul><li>跳转至支付页面的时候，应该每隔一段时间去查询订单支付状态，如已支付则跳转回到课程详情页</li><li>使用定时器查询订单状态，但是别忘了如果已支付的话需要清理这个定时器</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;cart py-container&quot;&gt;</span><br><span class="line">    &lt;!--主内容--&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;checkout py-container  pay&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;checkout-tit&quot;&gt;</span><br><span class="line">        &lt;h4 class&#x3D;&quot;fl tit-txt&quot;&gt;&lt;span class&#x3D;&quot;success-icon&quot;&gt;&lt;&#x2F;span&gt;&lt;span class&#x3D;&quot;success-info&quot;&gt;订单提交成功，请您及时付款！订单号：&#123;&#123;payObj.out_trade_no&#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;h4&gt;</span><br><span class="line">        &lt;span class&#x3D;&quot;fr&quot;&gt;&lt;em class&#x3D;&quot;sui-lead&quot;&gt;应付金额：&lt;&#x2F;em&gt;&lt;em class&#x3D;&quot;orange money&quot;&gt;￥&#123;&#123;payObj.total_fee&#125;&#125;&lt;&#x2F;em&gt;&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;clearfix&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;checkout-steps&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;fl weixin&quot;&gt;微信支付&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;fl sao&quot;&gt;</span><br><span class="line">          &lt;p class&#x3D;&quot;red&quot;&gt;请使用微信扫一扫。&lt;&#x2F;p&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;fl code&quot;&gt;</span><br><span class="line">            &lt;!-- &lt;img id&#x3D;&quot;qrious&quot; src&#x3D;&quot;~&#x2F;assets&#x2F;img&#x2F;erweima.png&quot; alt&#x3D;&quot;&quot;&gt; --&gt;</span><br><span class="line">            &lt;!-- &lt;qriously value&#x3D;&quot;weixin:&#x2F;&#x2F;wxpay&#x2F;bizpayurl?pr&#x3D;R7tnDpZ&quot; :size&#x3D;&quot;338&quot;&#x2F;&gt; --&gt;</span><br><span class="line">            &lt;qriously :value&#x3D;&quot;payObj.code_url&quot; :size&#x3D;&quot;338&quot;&#x2F;&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;saosao&quot;&gt;</span><br><span class="line">              &lt;p&gt;请使用微信扫一扫&lt;&#x2F;p&gt;</span><br><span class="line">              &lt;p&gt;扫描二维码支付&lt;&#x2F;p&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;clearfix&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;!-- &lt;p&gt;&lt;a href&#x3D;&quot;pay.html&quot; target&#x3D;&quot;_blank&quot;&gt;&gt; 其他支付方式&lt;&#x2F;a&gt;&lt;&#x2F;p&gt; --&gt;</span><br><span class="line">        </span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import orderApi from &quot;@&#x2F;api&#x2F;order&quot;</span><br><span class="line">export default &#123;</span><br><span class="line">    &#x2F;&#x2F;异步请求</span><br><span class="line">    asyncData(&#123;params, error&#125;)&#123;</span><br><span class="line">        return orderApi.createNative(params.pid)</span><br><span class="line">            .then(response&#x3D;&gt;&#123;</span><br><span class="line">              console.log(response.data.data)</span><br><span class="line">                return&#123;</span><br><span class="line">                    payObj: response.data.data</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    data()&#123;</span><br><span class="line">        return&#123;</span><br><span class="line">            timer1:&quot;&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    mounted()&#123;&#x2F;&#x2F;页面渲染之后执行</span><br><span class="line">        &#x2F;&#x2F;每个三秒查询一次订单支付状态</span><br><span class="line">        this.timer1 &#x3D; setInterval(()&#x3D;&gt;&#123;</span><br><span class="line">            this.queryPayStatus(this.payObj.out_trade_no)</span><br><span class="line">        &#125;,3000)</span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line">        &#x2F;&#x2F;查询订单支付状态</span><br><span class="line">        queryPayStatus(orderNo)&#123;</span><br><span class="line">          orderApi.queryPayStatus(orderNo)</span><br><span class="line">            .then(response&#x3D;&gt;&#123;</span><br><span class="line">              console.log(response.data)</span><br><span class="line">              &#x2F;&#x2F;判断是否成功支付</span><br><span class="line">              if(response.data.success)&#123;</span><br><span class="line">                  </span><br><span class="line">                  &#x2F;&#x2F;提示支付成功，先停止计时器，然后提示信息并跳转</span><br><span class="line">                  clearInterval(this.timer1)</span><br><span class="line">                  this.$message(&#123;</span><br><span class="line">                      type: &#39;success&#39;,</span><br><span class="line">                      message: &#39;支付成功!&#39;</span><br><span class="line">                  &#125;)</span><br><span class="line">                  &#x2F;&#x2F;跳转至课程详情页面</span><br><span class="line">                  this.$router.push(&#123;path: &quot;&#x2F;course&#x2F;&quot; + this.payObj.course_id&#125;)</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="2-9-支付流程测试"><a href="#2-9-支付流程测试" class="headerlink" title="2.9 支付流程测试"></a>2.9 支付流程测试</h3><p>启动nacos，确保服务注册</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200715093224.png" alt="image-20200715093224741"></p><p>点击立即购买</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200715093007.png" alt="image-20200715093000712"></p><p>生成订单详情页，并向订单表中添加了一条记录</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200715095105.png" alt="image-20200715095105475"></p><p>点击去支付</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200715095123.png" alt="image-20200715095122952"></p><p>扫码支付后提示信息并成功跳转，并向支付记录表中添加了一条记录</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200715095153.png" alt="image-20200715095153179"></p><p>但是你可以注意到支付跳转后，立即购买应该编程立即观看才对，所以下面就针对这些细节问题改善一下，整个支付流程已经走通的了</p><h3 id="2-10-完善细节"><a href="#2-10-完善细节" class="headerlink" title="2.10 完善细节"></a>2.10 完善细节</h3><p>根据刚刚说到的问题，应该怎么解决呢？</p><ul><li>如果课程价格为0，也就是免费，应该显示立即观看按钮</li><li>如果价格不为0，也就是收费，但是用户已经购买，应该显示立即观看按钮</li><li>如果价格不为0，也就是收费，但是用户没有购买，应该显示立即购买按钮</li></ul><p>如果这个问题解决了，那么也可以解决一个课程只需要购买一次的问题了</p><p>根据以上三个条件做判断即可，具体开发流程如下：</p><p>在进入课程详情界面的时候，首先应该判价格是否为0或者用户是否购买，判断价格比较容易，关键是需要判断用户是否购买怎么做呢？</p><p>只需要从订单数据库中根据courseId,memberId,status是否=1来查询即可，如果有数据，则表示已经购买，如果没有的则表示还没购买</p><p>。另外查询数据应该是在order模块中开发接口的，但是课程详情页应该是在edu模块中的，所以这里也少不了远程调用</p><p>提示：确保被调用方和调用方都开启了服务注册和服务发现</p><h4 id="后端查询订单"><a href="#后端查询订单" class="headerlink" title="后端查询订单"></a>后端查询订单</h4><p>OrderController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据课程id和用户id进行订单查询,因为只需要判断，不需要数据，所以这里返回布尔类型即可，也方便前端的调用</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/isBuyCourse/&#123;courseId&#125;/&#123;memberId&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isBuyCourse</span><span class="params">(@PathVariable String courseId, @PathVariable String memberId)</span></span>&#123;</span><br><span class="line">    QueryWrapper&lt;Order&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.eq(<span class="string">"course_id"</span>, courseId);</span><br><span class="line">    wrapper.eq(<span class="string">"member_id"</span>, memberId);</span><br><span class="line">    wrapper.eq(<span class="string">"status"</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> count = orderService.count(wrapper);</span><br><span class="line">    <span class="keyword">if</span>(count &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="comment">//有数据，则表示已经购买</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//没有数据，则没有购买</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>eduservice中的feign接口</p><p>OrderClient</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@FeignClient</span>(name = <span class="string">"service-order"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderClient</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/eduorder/order/isBuyCourse/&#123;courseId&#125;/&#123;memberId&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isBuyCourse</span><span class="params">(@PathVariable(<span class="string">"courseId"</span>)</span> String courseId, @<span class="title">PathVariable</span><span class="params">(<span class="string">"memberId"</span>)</span> String memberId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改之前的课程详情接口</p><p>ClientCourseController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据课程id查询课程详情、章节和小节信息</span></span><br><span class="line"><span class="comment">//补充，查询用户是否已经购买课程，因为要获取到用户id，所以还需要传request参数</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/getCourseDetail/&#123;courseId&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">getCourseDetail</span><span class="params">(@PathVariable String courseId, HttpServletRequest request)</span></span>&#123;</span><br><span class="line">    <span class="comment">//课程详情</span></span><br><span class="line">    ClientCourseDetailVo courseDetailVo = eduCourseService.getCourseDetail(courseId);</span><br><span class="line">    <span class="comment">//章节信息，直接调用之前的api</span></span><br><span class="line">    List&lt;ChapterVo&gt; chapterVoList = chapterService.getCourseChapters(courseId);</span><br><span class="line">    <span class="comment">//查询用户是否已经购买该课程</span></span><br><span class="line">    <span class="keyword">boolean</span> isBuy = <span class="keyword">false</span>;</span><br><span class="line">    String memberId = JwtUtils.getMemberIdByJwtToken(request);</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(memberId))&#123;</span><br><span class="line">        <span class="comment">//已经登陆</span></span><br><span class="line">        isBuy = orderClient.isBuyCourse(courseId, memberId);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回数据</span></span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">"courseDetailVo"</span>,courseDetailVo).data(<span class="string">"chapterVoList"</span>,chapterVoList).data(<span class="string">"isBuy"</span>, isBuy);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="前端接口完善"><a href="#前端接口完善" class="headerlink" title="前端接口完善"></a>前端接口完善</h4><p>找到课程详情页_id.vue</p><p>接口调用和数据返回</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> courseApi <span class="keyword">from</span> <span class="string">'@/api/course'</span></span><br><span class="line"><span class="keyword">import</span> orderApi <span class="keyword">from</span> <span class="string">'@/api/order'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">   asyncData(&#123; params, error &#125;) &#123;</span><br><span class="line">     <span class="keyword">return</span> &#123;</span><br><span class="line">       courseId: params.id</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;,</span><br><span class="line">   data()&#123;</span><br><span class="line">     <span class="keyword">return</span>&#123;</span><br><span class="line">       courseWebVo:[],</span><br><span class="line">       chapterVideoList:[],</span><br><span class="line">       isBuy:<span class="literal">false</span></span><br><span class="line">     &#125;</span><br><span class="line">   &#125;,</span><br><span class="line">   created()&#123;</span><br><span class="line">     <span class="keyword">this</span>.initCourseInfo()</span><br><span class="line">   &#125;,</span><br><span class="line">   methods:&#123;</span><br><span class="line">     <span class="comment">//初始化课程详情</span></span><br><span class="line">     initCourseInfo()&#123;</span><br><span class="line">      courseApi.getCourseDetail(<span class="keyword">this</span>.courseId)</span><br><span class="line">        .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">this</span>.courseWebVo=response.data.data.courseDetailVo,</span><br><span class="line">          <span class="keyword">this</span>.chapterVideoList=response.data.data.chapterVoList,</span><br><span class="line">          <span class="keyword">this</span>.isBuy = response.data.data.isBuy</span><br><span class="line">        &#125;)</span><br><span class="line">     &#125;,</span><br><span class="line">     <span class="comment">//生成订单</span></span><br><span class="line">     createOrders() &#123;</span><br><span class="line">       orderApi.createOrder(<span class="keyword">this</span>.courseId)</span><br><span class="line">        .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">//获取返回订单号</span></span><br><span class="line">          <span class="comment">//生成订单之后，跳转订单显示页面</span></span><br><span class="line">          <span class="keyword">this</span>.$router.push(&#123;<span class="attr">path</span>:<span class="string">'/order/'</span>+response.data.data.orderId&#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>按钮显示判断</p><p>提示：记得去掉点击立即观看的生成订单事件</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;section <span class="class"><span class="keyword">class</span></span>=<span class="string">"c-attr-mt"</span> v-<span class="keyword">if</span>=<span class="string">"isBuy || Number(courseWebVo.price == 0)"</span>&gt;</span><br><span class="line">  &lt;a href="#" title="立即观看" class="comm-btn c-btn-3"&gt;立即观看&lt;/a&gt;</span><br><span class="line">&lt;/section&gt;</span><br><span class="line">&lt;section <span class="class"><span class="keyword">class</span></span>=<span class="string">"c-attr-mt"</span> v-<span class="keyword">else</span>&gt;</span><br><span class="line">  &lt;a @click="createOrders()" href="#" title="立即购买" class="comm-btn c-btn-3"&gt;立即购买&lt;/a&gt;</span><br><span class="line">&lt;/section&gt;</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>支付前</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200715113041.png" alt="image-20200715113041498"></p><p>支付后</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200715113057.png" alt="image-20200715113057032"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1、课程评论功能&quot;&gt;&lt;a href=&quot;#1、课程评论功能&quot; class=&quot;headerlink&quot; title=&quot;1、课程评论功能&quot;&gt;&lt;/a&gt;1、课程评论功能&lt;/h2&gt;&lt;h3 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
      <category term="前后端分离" scheme="http://yoursite.com/categories/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="springboot" scheme="http://yoursite.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>谷粒学院实战day08—客户前台讲师+课程页面开发</title>
    <link href="http://yoursite.com/2020/07/14/%E8%B0%B7%E7%B2%92%E5%AD%A6%E9%99%A2%E5%AE%9E%E6%88%98day08%E2%80%94%E5%AE%A2%E6%88%B7%E5%89%8D%E5%8F%B0%E8%AE%B2%E5%B8%88-%E8%AF%BE%E7%A8%8B%E9%A1%B5%E9%9D%A2%E5%BC%80%E5%8F%91/"/>
    <id>http://yoursite.com/2020/07/14/%E8%B0%B7%E7%B2%92%E5%AD%A6%E9%99%A2%E5%AE%9E%E6%88%98day08%E2%80%94%E5%AE%A2%E6%88%B7%E5%89%8D%E5%8F%B0%E8%AE%B2%E5%B8%88-%E8%AF%BE%E7%A8%8B%E9%A1%B5%E9%9D%A2%E5%BC%80%E5%8F%91/</id>
    <published>2020-07-14T02:16:00.000Z</published>
    <updated>2020-07-14T17:46:29.834Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、前台讲师列表"><a href="#1、前台讲师列表" class="headerlink" title="1、前台讲师列表"></a>1、前台讲师列表</h2><p>首先看看想要的效果</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200713214823.png" alt="image-20200713214823494"></p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200713214839.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200713214938.png" alt="image-20200713214938224"></p><p>分析：讲师列表主要是分页查询，然后点击某个讲师进入讲师详情页面（动态路由）</p><h3 id="1-1、后端接口"><a href="#1-1、后端接口" class="headerlink" title="1.1、后端接口"></a>1.1、后端接口</h3><h4 id="controller层"><a href="#controller层" class="headerlink" title="controller层"></a>controller层</h4><p>clientTeacherController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/eduservice/clientteacher"</span>)</span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClientTeacherController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> EduTeacherService eduTeacherService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> EduCourseService eduCourseService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//分页查询教师，这次前台分页操作跟之前的后台不太一样，这里会将所有的数据返回</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/getPageTeacher/&#123;current&#125;/&#123;pageSize&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">getPageTeacher</span><span class="params">(@PathVariable <span class="keyword">long</span> current, @PathVariable <span class="keyword">long</span> pageSize)</span></span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; map = eduTeacherService.getPageTeacher(current, pageSize);</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//讲师详情</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/getTeacherInfo/&#123;teacherId&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">getTeacherInfo</span><span class="params">(@PathVariable String teacherId)</span></span>&#123;</span><br><span class="line">        <span class="comment">//1 获取详情</span></span><br><span class="line">        EduTeacher teacher = eduTeacherService.getById(teacherId);</span><br><span class="line">        <span class="comment">//2 获取课程</span></span><br><span class="line">        QueryWrapper&lt;EduCourse&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        wrapper.eq(<span class="string">"teacher_id"</span>, teacherId);</span><br><span class="line">        List&lt;EduCourse&gt; courseList = eduCourseService.list(wrapper);</span><br><span class="line">        <span class="comment">//3 返回数据</span></span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">"teacher"</span>,teacher).data(<span class="string">"courseList"</span>, courseList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="service层"><a href="#service层" class="headerlink" title="service层"></a>service层</h4><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Map&lt;String, Object&gt; <span class="title">getPageTeacher</span><span class="params">(<span class="keyword">long</span> current, <span class="keyword">long</span> pageSize)</span></span>;</span><br></pre></td></tr></table></figure><p>实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//前台分页查询讲师</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getPageTeacher</span><span class="params">(<span class="keyword">long</span> current, <span class="keyword">long</span> pageSize)</span> </span>&#123;</span><br><span class="line">    Page&lt;EduTeacher&gt; teacherPage = <span class="keyword">new</span> Page&lt;&gt;(current, pageSize);</span><br><span class="line">    QueryWrapper&lt;EduTeacher&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.orderByDesc(<span class="string">"id"</span>);</span><br><span class="line">    baseMapper.selectPage(teacherPage, wrapper);</span><br><span class="line">    <span class="comment">//这里不再只返回total和rows了，而是将所有数据放到map集合中返回</span></span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    List&lt;EduTeacher&gt; rows = teacherPage.getRecords();</span><br><span class="line">    <span class="keyword">long</span> pages = teacherPage.getPages();</span><br><span class="line">    <span class="keyword">long</span> current1 = teacherPage.getCurrent();</span><br><span class="line">    <span class="keyword">long</span> total = teacherPage.getTotal();</span><br><span class="line">    <span class="keyword">long</span> size = teacherPage.getSize();</span><br><span class="line">    <span class="keyword">boolean</span> hasNext = teacherPage.hasNext();</span><br><span class="line">    <span class="keyword">boolean</span> hasPrevious = teacherPage.hasPrevious();</span><br><span class="line"></span><br><span class="line">    map.put(<span class="string">"items"</span>, rows);</span><br><span class="line">    map.put(<span class="string">"pages"</span>, pages);</span><br><span class="line">    map.put(<span class="string">"current"</span>, current1);</span><br><span class="line">    map.put(<span class="string">"total"</span>, total);</span><br><span class="line">    map.put(<span class="string">"size"</span>, size);</span><br><span class="line">    map.put(<span class="string">"hasNext"</span>, hasNext);</span><br><span class="line">    map.put(<span class="string">"hasPrevious"</span>, hasPrevious);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>swagger测试</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200713100538.png" alt="image-20200713100531498"></p><p>测试成功</p><h3 id="1-2、前台现实"><a href="#1-2、前台现实" class="headerlink" title="1.2、前台现实"></a>1.2、前台现实</h3><h4 id="api"><a href="#api" class="headerlink" title="api"></a>api</h4><p>teacher.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">"@/utils/request.js"</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">//分页查询讲师</span></span><br><span class="line">    getPageTeacher(current, pageSize)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">`/eduservice/clientteacher/getPageTeacher/<span class="subst">$&#123;current&#125;</span>/<span class="subst">$&#123;pageSize&#125;</span>`</span>,</span><br><span class="line">            method: <span class="string">'get'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//讲师详情</span></span><br><span class="line">    getTeacherInfo(teacherId)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">`/eduservice/clientteacher/getTeacherInfo/<span class="subst">$&#123;teacherId&#125;</span>`</span>,</span><br><span class="line">            method: <span class="string">'get'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="pages"><a href="#pages" class="headerlink" title="pages"></a>pages</h4><p>teacher目录下的index.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;aCoursesList&quot; class&#x3D;&quot;bg-fa of&quot;&gt;</span><br><span class="line">    &lt;!-- 讲师列表 开始 --&gt;</span><br><span class="line">    &lt;section class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">      &lt;header class&#x3D;&quot;comm-title all-teacher-title&quot;&gt;</span><br><span class="line">        &lt;h2 class&#x3D;&quot;fl tac&quot;&gt;</span><br><span class="line">          &lt;span class&#x3D;&quot;c-333&quot;&gt;全部讲师&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;h2&gt;</span><br><span class="line">        &lt;section class&#x3D;&quot;c-tab-title&quot;&gt;</span><br><span class="line">          &lt;a id&#x3D;&quot;subjectAll&quot; title&#x3D;&quot;全部&quot; href&#x3D;&quot;#&quot;&gt;全部&lt;&#x2F;a&gt;</span><br><span class="line">          &lt;!-- &lt;c:forEach var&#x3D;&quot;subject&quot; items&#x3D;&quot;$&#123;subjectList &#125;&quot;&gt;</span><br><span class="line">                            &lt;a id&#x3D;&quot;$&#123;subject.subjectId&#125;&quot; title&#x3D;&quot;$&#123;subject.subjectName &#125;&quot; href&#x3D;&quot;javascript:void(0)&quot; onclick&#x3D;&quot;submitForm($&#123;subject.subjectId&#125;)&quot;&gt;$&#123;subject.subjectName &#125;&lt;&#x2F;a&gt;</span><br><span class="line">          &lt;&#x2F;c:forEach&gt;--&gt;</span><br><span class="line">        &lt;&#x2F;section&gt;</span><br><span class="line">      &lt;&#x2F;header&gt;</span><br><span class="line">      &lt;section class&#x3D;&quot;c-sort-box unBr&quot;&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">          &lt;!-- &#x2F;无数据提示 开始--&gt;</span><br><span class="line">          &lt;section class&#x3D;&quot;no-data-wrap&quot; v-if&#x3D;&quot;data.total&#x3D;&#x3D;0&quot;&gt;</span><br><span class="line">            &lt;em class&#x3D;&quot;icon30 no-data-ico&quot;&gt;&amp;nbsp;&lt;&#x2F;em&gt;</span><br><span class="line">            &lt;span class&#x3D;&quot;c-666 fsize14 ml10 vam&quot;&gt;没有相关数据，小编正在努力整理中...&lt;&#x2F;span&gt;</span><br><span class="line">          &lt;&#x2F;section&gt;</span><br><span class="line">          &lt;!-- &#x2F;无数据提示 结束--&gt;</span><br><span class="line">          &lt;article v-if&#x3D;&quot;data.total&gt;0&quot; class&#x3D;&quot;i-teacher-list&quot;&gt;</span><br><span class="line">            &lt;ul class&#x3D;&quot;of&quot;&gt;</span><br><span class="line">              &lt;li v-for&#x3D;&quot;teacher in data.items&quot; :key&#x3D;&quot;teacher.id&quot;&gt;</span><br><span class="line">                &lt;section class&#x3D;&quot;i-teach-wrap&quot;&gt;</span><br><span class="line">                  &lt;div class&#x3D;&quot;i-teach-pic&quot;&gt;</span><br><span class="line">                    &lt;a :href&#x3D;&quot;&#39;&#x2F;teacher&#x2F;&#39;+teacher.id&quot; :title&#x3D;&quot;teacher.name&quot; target&#x3D;&quot;_blank&quot;&gt;</span><br><span class="line">                      &lt;img :src&#x3D;&quot;teacher.avatar&quot; :alt&#x3D;&quot;teacher.name&quot;&gt;</span><br><span class="line">                    &lt;&#x2F;a&gt;</span><br><span class="line">                  &lt;&#x2F;div&gt;</span><br><span class="line">                  &lt;div class&#x3D;&quot;mt10 hLh30 txtOf tac&quot;&gt;</span><br><span class="line">                    &lt;a :href&#x3D;&quot;&#39;&#x2F;teacher&#x2F;&#39;+teacher.id&quot; :title&#x3D;&quot;teacher.name&quot; target&#x3D;&quot;_blank&quot; class&#x3D;&quot;fsize18 c-666&quot;&gt;&#123;&#123;teacher.name&#125;&#125;&lt;&#x2F;a&gt;</span><br><span class="line">                  &lt;&#x2F;div&gt;</span><br><span class="line">                  &lt;div class&#x3D;&quot;hLh30 txtOf tac&quot;&gt;</span><br><span class="line">                    &lt;span class&#x3D;&quot;fsize14 c-999&quot;&gt;&#123;&#123;teacher.intro&#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">                  &lt;&#x2F;div&gt;</span><br><span class="line">                  &lt;div class&#x3D;&quot;mt15 i-q-txt&quot;&gt;</span><br><span class="line">                    &lt;p class&#x3D;&quot;c-999 f-fA&quot;&gt;&#123;&#123;teacher.career&#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">                  &lt;&#x2F;div&gt;</span><br><span class="line">                &lt;&#x2F;section&gt;</span><br><span class="line">              &lt;&#x2F;li&gt;</span><br><span class="line">              </span><br><span class="line">            &lt;&#x2F;ul&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;clear&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">          &lt;&#x2F;article&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;!-- 公共分页 开始 --&gt;</span><br><span class="line">        &lt;!-- 公共分页 开始 --&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;paging&quot;&gt;</span><br><span class="line">          &lt;!-- undisable这个class是否存在，取决于数据属性hasPrevious --&gt;</span><br><span class="line">          &lt;a</span><br><span class="line">            :class&#x3D;&quot;&#123;undisable: !data.hasPrevious&#125;&quot;</span><br><span class="line">            href&#x3D;&quot;#&quot;</span><br><span class="line">            title&#x3D;&quot;首页&quot;</span><br><span class="line">            @click.prevent&#x3D;&quot;gotoPage(1)&quot;&gt;首页&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line">          &lt;a</span><br><span class="line">            :class&#x3D;&quot;&#123;undisable: !data.hasPrevious&#125;&quot;</span><br><span class="line">            href&#x3D;&quot;#&quot;</span><br><span class="line">            title&#x3D;&quot;前一页&quot;</span><br><span class="line">            @click.prevent&#x3D;&quot;gotoPage(data.current-1)&quot;&gt;&lt;&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line">          &lt;a</span><br><span class="line">            v-for&#x3D;&quot;page in data.pages&quot;</span><br><span class="line">            :key&#x3D;&quot;page&quot;</span><br><span class="line">            :class&#x3D;&quot;&#123;current: data.current &#x3D;&#x3D; page, undisable: data.current &#x3D;&#x3D; page&#125;&quot;</span><br><span class="line">            :title&#x3D;&quot;&#39;第&#39;+page+&#39;页&#39;&quot;</span><br><span class="line">            href&#x3D;&quot;#&quot;</span><br><span class="line">            @click.prevent&#x3D;&quot;gotoPage(page)&quot;&gt;&#123;&#123; page &#125;&#125;&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line">          &lt;a</span><br><span class="line">            :class&#x3D;&quot;&#123;undisable: !data.hasNext&#125;&quot;</span><br><span class="line">            href&#x3D;&quot;#&quot;</span><br><span class="line">            title&#x3D;&quot;后一页&quot;</span><br><span class="line">            @click.prevent&#x3D;&quot;gotoPage(data.current+1)&quot;&gt;&gt;&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line">          &lt;a</span><br><span class="line">            :class&#x3D;&quot;&#123;undisable: !data.hasNext&#125;&quot;</span><br><span class="line">            href&#x3D;&quot;#&quot;</span><br><span class="line">            title&#x3D;&quot;末页&quot;</span><br><span class="line">            @click.prevent&#x3D;&quot;gotoPage(data.pages)&quot;&gt;末页&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line">          &lt;div class&#x3D;&quot;clear&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;!-- 公共分页 结束 --&gt;</span><br><span class="line">        &lt;!-- 公共分页 结束 --&gt;</span><br><span class="line">      &lt;&#x2F;section&gt;</span><br><span class="line">    &lt;&#x2F;section&gt;</span><br><span class="line">    &lt;!-- &#x2F;讲师列表 结束 --&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import teacherApi from &quot;@&#x2F;api&#x2F;teacher&quot;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  &#x2F;&#x2F;这里写点不一样的，以往都是data..return什么的结构，这里使用异步调用</span><br><span class="line">  &#x2F;&#x2F;但是异步调用，只能调一次，并且不是加载时马上有数据，需要调用一次才会有数据</span><br><span class="line">  &#x2F;&#x2F;这里的params就相当于之前的this.$route.params.id 等价params.id</span><br><span class="line">  asyncData(&#123;params, error&#125;)&#123;</span><br><span class="line">    return teacherApi.getPageTeacher(1,8)</span><br><span class="line">      .then(response &#x3D;&gt; &#123;</span><br><span class="line">        &#x2F;&#x2F;this.data &#x3D; response.data.data</span><br><span class="line">        &#x2F;&#x2F;这里的data会自动定义并返回数据</span><br><span class="line">        return &#123;data: response.data.data&#125;</span><br><span class="line">      &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    &#x2F;&#x2F;分页方法</span><br><span class="line">    gotoPage(page)&#123;</span><br><span class="line">      teacherApi.getPageTeacher(page, 8)</span><br><span class="line">        .then(response &#x3D;&gt; &#123;</span><br><span class="line">          this.data &#x3D; response.data.data</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>teacher目录下的_id.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;aCoursesList&quot; class&#x3D;&quot;bg-fa of&quot;&gt;</span><br><span class="line">    &lt;!-- 讲师介绍 开始 --&gt;</span><br><span class="line">    &lt;section class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">      &lt;header class&#x3D;&quot;comm-title&quot;&gt;</span><br><span class="line">        &lt;h2 class&#x3D;&quot;fl tac&quot;&gt;</span><br><span class="line">          &lt;span class&#x3D;&quot;c-333&quot;&gt;讲师介绍&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;h2&gt;</span><br><span class="line">      &lt;&#x2F;header&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;t-infor-wrap&quot;&gt;</span><br><span class="line">        &lt;!-- 讲师基本信息 --&gt;</span><br><span class="line">        &lt;section class&#x3D;&quot;fl t-infor-box c-desc-content&quot;&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;mt20 ml20&quot;&gt;</span><br><span class="line">            &lt;section class&#x3D;&quot;t-infor-pic&quot;&gt;</span><br><span class="line">              &lt;img :src&#x3D;&quot;teacher.avatar&quot;&gt;</span><br><span class="line">            &lt;&#x2F;section&gt;</span><br><span class="line">            &lt;h3 class&#x3D;&quot;hLh30&quot;&gt;</span><br><span class="line">              &lt;span class&#x3D;&quot;fsize24 c-333&quot;&gt;&#123;&#123;teacher.name&#125;&#125;&amp;nbsp;&#123;&#123; teacher.level&#x3D;&#x3D;&#x3D;1?&#39;高级讲师&#39;:&#39;首席讲师&#39; &#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;h3&gt;</span><br><span class="line">            &lt;section class&#x3D;&quot;mt10&quot;&gt;</span><br><span class="line">              &lt;span class&#x3D;&quot;t-tag-bg&quot;&gt;&#123;&#123;teacher.intro&#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;section&gt;</span><br><span class="line">            &lt;section class&#x3D;&quot;t-infor-txt&quot;&gt;</span><br><span class="line">              &lt;p</span><br><span class="line">                class&#x3D;&quot;mt20&quot;</span><br><span class="line">              &gt;&#123;&#123;teacher.career&#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">            &lt;&#x2F;section&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;clear&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;section&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;clear&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;section class&#x3D;&quot;mt30&quot;&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">          &lt;header class&#x3D;&quot;comm-title all-teacher-title c-course-content&quot;&gt;</span><br><span class="line">            &lt;h2 class&#x3D;&quot;fl tac&quot;&gt;</span><br><span class="line">              &lt;span class&#x3D;&quot;c-333&quot;&gt;主讲课程&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;h2&gt;</span><br><span class="line">            &lt;section class&#x3D;&quot;c-tab-title&quot;&gt;</span><br><span class="line">              &lt;a href&#x3D;&quot;javascript: void(0)&quot;&gt;&amp;nbsp;&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;section&gt;</span><br><span class="line">          &lt;&#x2F;header&gt;</span><br><span class="line">          &lt;!-- &#x2F;无数据提示 开始--&gt;</span><br><span class="line">          &lt;section class&#x3D;&quot;no-data-wrap&quot; v-if&#x3D;&quot;courseList.length&#x3D;&#x3D;0&quot;&gt;</span><br><span class="line">            &lt;em class&#x3D;&quot;icon30 no-data-ico&quot;&gt;&amp;nbsp;&lt;&#x2F;em&gt;</span><br><span class="line">            &lt;span class&#x3D;&quot;c-666 fsize14 ml10 vam&quot;&gt;没有相关数据，小编正在努力整理中...&lt;&#x2F;span&gt;</span><br><span class="line">          &lt;&#x2F;section&gt;</span><br><span class="line">          &lt;!-- &#x2F;无数据提示 结束--&gt;</span><br><span class="line">          &lt;article class&#x3D;&quot;comm-course-list&quot;&gt;</span><br><span class="line">            &lt;ul class&#x3D;&quot;of&quot;&gt;</span><br><span class="line">              &lt;li v-for&#x3D;&quot;course in courseList&quot; :key&#x3D;&quot;course.id&quot;&gt;</span><br><span class="line">                &lt;div class&#x3D;&quot;cc-l-wrap&quot;&gt;</span><br><span class="line">                  &lt;section class&#x3D;&quot;course-img&quot;&gt;</span><br><span class="line">                    &lt;img :src&#x3D;&quot;course.cover&quot; class&#x3D;&quot;img-responsive&quot; &gt;</span><br><span class="line">                    &lt;div class&#x3D;&quot;cc-mask&quot;&gt;</span><br><span class="line">                      &lt;a href&#x3D;&quot;#&quot; :title&#x3D;&quot;course.title&quot; target&#x3D;&quot;_blank&quot; class&#x3D;&quot;comm-btn c-btn-1&quot;&gt;开始学习&lt;&#x2F;a&gt;</span><br><span class="line">                    &lt;&#x2F;div&gt;</span><br><span class="line">                  &lt;&#x2F;section&gt;</span><br><span class="line">                  &lt;h3 class&#x3D;&quot;hLh30 txtOf mt10&quot;&gt;</span><br><span class="line">                    &lt;a href&#x3D;&quot;#&quot; :title&#x3D;&quot;course.title&quot; target&#x3D;&quot;_blank&quot; class&#x3D;&quot;course-title fsize18 c-333&quot;&gt;&#123;&#123;course.title&#125;&#125;&lt;&#x2F;a&gt;</span><br><span class="line">                  &lt;&#x2F;h3&gt;</span><br><span class="line">                &lt;&#x2F;div&gt;</span><br><span class="line">              &lt;&#x2F;li&gt;</span><br><span class="line">            &lt;&#x2F;ul&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;clear&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">          &lt;&#x2F;article&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;section&gt;</span><br><span class="line">    &lt;&#x2F;section&gt;</span><br><span class="line">    &lt;!-- &#x2F;讲师介绍 结束 --&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import teacherApi from &quot;@&#x2F;api&#x2F;teacher&quot;</span><br><span class="line">export default &#123;</span><br><span class="line">  &#x2F;&#x2F;params.id等价于之前的this.$route.params.id</span><br><span class="line">  asyncData(&#123;params, error&#125;)&#123;</span><br><span class="line">    return teacherApi.getTeacherInfo(params.id)&#x2F;&#x2F;注意这个id名是根据文件名来的，如果文件是_tid，这里就是params.tid</span><br><span class="line">      .then(response &#x3D;&gt; &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">          teacher: response.data.data.teacher,</span><br><span class="line">          courseList: response.data.data.courseList</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h4 id="效果测试"><a href="#效果测试" class="headerlink" title="效果测试"></a>效果测试</h4><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200713100828.png" alt="image-20200713100828818"></p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200713100844.png" alt="image-20200713100844745"></p><h2 id="2、前台课程列表"><a href="#2、前台课程列表" class="headerlink" title="2、前台课程列表"></a>2、前台课程列表</h2><p>首先看下想要的效果</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200713214751.png" alt="image-20200713214751009"></p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200713214713.png" alt="image-20200713214712939"></p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200713214727.png" alt="image-20200713214727560"></p><p>分析：</p><ul><li>首先课程列表主要就是课程的分页+条件查询，而条件查询的话就需要查询条件的实体类封装，另外需要做到一二级分类的二级联动效果，具体可在前端实现，然后剩下的是排序查询；</li><li>点击某个讲师，进入讲师详情页面，里面涉及到的内容有课程基本信息、课程描述、讲师信息、章节信息，这样就涉及到多张表的信息了，不太适合封装实体类数据，建议可以写一个sql语句多表联查，像之前的发布课程那样</li></ul><h3 id="2-1、后端接口"><a href="#2-1、后端接口" class="headerlink" title="2.1、后端接口"></a>2.1、后端接口</h3><h4 id="封装课程详情实体类"><a href="#封装课程详情实体类" class="headerlink" title="封装课程详情实体类"></a>封装课程详情实体类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClientCourseDetailVo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程标题"</span>)</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程销售价格，设置为0则可免费观看"</span>)</span><br><span class="line">    <span class="keyword">private</span> BigDecimal price;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"总课时"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer lessonNum;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程封面图片路径"</span>)</span><br><span class="line">    <span class="keyword">private</span> String cover;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"销售数量"</span>)</span><br><span class="line">    <span class="keyword">private</span> Long buyCount;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"浏览数量"</span>)</span><br><span class="line">    <span class="keyword">private</span> Long viewCount;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程简介"</span>)</span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"讲师ID"</span>)</span><br><span class="line">    <span class="keyword">private</span> String teacherId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"讲师姓名"</span>)</span><br><span class="line">    <span class="keyword">private</span> String teacherName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"讲师资历,一句话说明讲师"</span>)</span><br><span class="line">    <span class="keyword">private</span> String intro;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"讲师头像"</span>)</span><br><span class="line">    <span class="keyword">private</span> String avatar;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程一级类别ID"</span>)</span><br><span class="line">    <span class="keyword">private</span> String subjectLevelOneId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"类别一级名称"</span>)</span><br><span class="line">    <span class="keyword">private</span> String subjectLevelOne;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程二级类别ID"</span>)</span><br><span class="line">    <span class="keyword">private</span> String subjectLevelTwoId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"类别二级名称"</span>)</span><br><span class="line">    <span class="keyword">private</span> String subjectLevelTwo;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="controller层-1"><a href="#controller层-1" class="headerlink" title="controller层"></a>controller层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/eduservice/clientcourse"</span>)</span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClientCourseController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> EduCourseService eduCourseService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> EduChapterService chapterService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//条件+分页查询课程列表，查询条件需要我们继续封装实体类</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/getCourseList/&#123;current&#125;/&#123;pageSize&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">getCourseList</span><span class="params">(@PathVariable <span class="keyword">long</span> current,</span></span></span><br><span class="line"><span class="function"><span class="params">                           @PathVariable <span class="keyword">long</span> pageSize,</span></span></span><br><span class="line"><span class="function"><span class="params">                           @RequestBody(required = <span class="keyword">false</span>)</span> ClientCourseVo clientCourseVo)</span>&#123;</span><br><span class="line">        <span class="comment">//跟讲师列表一样，最后是返回map集合</span></span><br><span class="line">        Map&lt;String, Object&gt; map = eduCourseService.getCourseList(current, pageSize, clientCourseVo);</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据课程id查询课程详情、章节和小节信息</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/getCourseDetail/&#123;courseId&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">getCourseDetail</span><span class="params">(@PathVariable String courseId)</span></span>&#123;</span><br><span class="line">        <span class="comment">//课程详情</span></span><br><span class="line">        ClientCourseDetailVo courseDetailVo = eduCourseService.getCourseDetail(courseId);</span><br><span class="line">        <span class="comment">//章节信息，直接调用之前的api</span></span><br><span class="line">        List&lt;ChapterVo&gt; chapterVoList = chapterService.getCourseChapters(courseId);</span><br><span class="line">        <span class="comment">//返回数据</span></span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">"courseDetailVo"</span>,courseDetailVo).data(<span class="string">"chapterVoList"</span>,chapterVoList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="service层-1"><a href="#service层-1" class="headerlink" title="service层"></a>service层</h4><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Map&lt;String, Object&gt; <span class="title">getCourseList</span><span class="params">(<span class="keyword">long</span> current, <span class="keyword">long</span> pageSize, ClientCourseVo clientCourseVo)</span></span>;</span><br><span class="line"><span class="function">ClientCourseDetailVo <span class="title">getCourseDetail</span><span class="params">(String courseId)</span></span>;</span><br></pre></td></tr></table></figure><p>实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//前台页面条件+分页查询课程列表</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getCourseList</span><span class="params">(<span class="keyword">long</span> current, <span class="keyword">long</span> pageSize, ClientCourseVo clientCourseVo)</span> </span>&#123;</span><br><span class="line">    Page&lt;EduCourse&gt; coursePage = <span class="keyword">new</span> Page&lt;&gt;(current, pageSize);</span><br><span class="line">    QueryWrapper&lt;EduCourse&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.orderByDesc(<span class="string">"id"</span>);</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(clientCourseVo.getSubjectParentId()))&#123;<span class="comment">//一级分类</span></span><br><span class="line">        wrapper.eq(<span class="string">"subject_parent_id"</span>,clientCourseVo.getSubjectParentId());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(clientCourseVo.getSubjectId()))&#123;<span class="comment">//二级分类</span></span><br><span class="line">        wrapper.eq(<span class="string">"subject_id"</span>, clientCourseVo.getSubjectId());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(clientCourseVo.getBuyCountSort()))&#123;<span class="comment">//根据购买数量排序</span></span><br><span class="line">        wrapper.orderByDesc(<span class="string">"buy_count"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(clientCourseVo.getGmtCreateSort()))&#123;<span class="comment">//根据创建时间排序</span></span><br><span class="line">        wrapper.orderByDesc(<span class="string">"gmt_create"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(clientCourseVo.getPriceSort()))&#123;<span class="comment">//根据价格排序</span></span><br><span class="line">        wrapper.orderByDesc(<span class="string">"price"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    baseMapper.selectPage(coursePage, wrapper);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">long</span> current1 = coursePage.getCurrent();</span><br><span class="line">    <span class="keyword">long</span> pages = coursePage.getPages();</span><br><span class="line">    <span class="keyword">long</span> size = coursePage.getSize();</span><br><span class="line">    <span class="keyword">long</span> total = coursePage.getTotal();</span><br><span class="line">    List&lt;EduCourse&gt; records = coursePage.getRecords();</span><br><span class="line">    <span class="keyword">boolean</span> hasPrevious = coursePage.hasPrevious();</span><br><span class="line">    <span class="keyword">boolean</span> hasNext = coursePage.hasNext();</span><br><span class="line"></span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">"current"</span>, current1);</span><br><span class="line">    map.put(<span class="string">"pages"</span>, pages);</span><br><span class="line">    map.put(<span class="string">"size"</span>, size);</span><br><span class="line">    map.put(<span class="string">"total"</span>, total);</span><br><span class="line">    map.put(<span class="string">"items"</span>, records);</span><br><span class="line">    map.put(<span class="string">"hasPrevious"</span>, hasPrevious);</span><br><span class="line">    map.put(<span class="string">"hasNext"</span>, hasNext);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//点击课程查询课程详情页</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ClientCourseDetailVo <span class="title">getCourseDetail</span><span class="params">(String courseId)</span> </span>&#123;</span><br><span class="line">    ClientCourseDetailVo courseDetailVo = baseMapper.getCourseDetail(courseId);</span><br><span class="line">    <span class="keyword">return</span> courseDetailVo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="mapper"><a href="#mapper" class="headerlink" title="mapper"></a>mapper</h4><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ClientCourseDetailVo <span class="title">getCourseDetail</span><span class="params">(String courseId)</span></span>;</span><br></pre></td></tr></table></figure><p>xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getCourseDetail"</span> <span class="attr">resultType</span>=<span class="string">"com.ryan.eduservice.entity.clientvo.ClientCourseDetailVo"</span>&gt;</span></span><br><span class="line">    SELECT</span><br><span class="line">        ec.id,ec.title,ec.price,ec.lesson_num as lessonNum,ec.cover,</span><br><span class="line">        ec.buy_count as buyCount,ec.view_count as viewCount,</span><br><span class="line">        ecd.description,et.id,et.name as teacherName,et.intro,et.avatar,</span><br><span class="line">        es1.id as subjectLevelOneId,es1.title as subjectLevelOne,</span><br><span class="line">        es2.id as subjectLevelTwoId,es2.title as subjectLevelTwo</span><br><span class="line"></span><br><span class="line">    FROM edu_course ec</span><br><span class="line">        LEFT JOIN edu_course_description ecd ON ec.id = ecd.id</span><br><span class="line">        LEFT JOIN edu_teacher et ON ec.teacher_id = et.id</span><br><span class="line">        LEFT JOIN edu_subject es1 ON ec.subject_parent_id = es1.id</span><br><span class="line">        LEFT JOIN edu_subject es2 ON ec.subject_id = es2.id</span><br><span class="line">    WHERE ec.id = #&#123;courseId&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="swagger测试"><a href="#swagger测试" class="headerlink" title="swagger测试"></a>swagger测试</h4><p>课程列表</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200713223053.png" alt="image-20200713223053380"></p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200713223127.png" alt="image-20200713223127055"></p><p>课程详情</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200713222922.png" alt="image-20200713222922683"></p><p>测试成功</p><h3 id="2-2、前端接口"><a href="#2-2、前端接口" class="headerlink" title="2.2、前端接口"></a>2.2、前端接口</h3><h4 id="api-1"><a href="#api-1" class="headerlink" title="api"></a>api</h4><p>course.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">"@/utils/request.js"</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">//条件+分页查询课程</span></span><br><span class="line">    getCourseList(current, pageSize, clientCourseVo)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">`/eduservice/clientcourse/getCourseList/<span class="subst">$&#123;current&#125;</span>/<span class="subst">$&#123;pageSize&#125;</span>`</span>,</span><br><span class="line">            method: <span class="string">'post'</span>,</span><br><span class="line">            data: clientCourseVo</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//获取课程分类</span></span><br><span class="line">    getOneSubject()&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">`/eduservice/edu-subject/subjectList`</span>,</span><br><span class="line">            method: <span class="string">'get'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="pages-1"><a href="#pages-1" class="headerlink" title="pages"></a>pages</h4><p>course目录下的index.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;aCoursesList&quot; class&#x3D;&quot;bg-fa of&quot;&gt;</span><br><span class="line">    &lt;!-- &#x2F;课程列表 开始 --&gt;</span><br><span class="line">    &lt;section class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">      &lt;header class&#x3D;&quot;comm-title&quot;&gt;</span><br><span class="line">        &lt;h2 class&#x3D;&quot;fl tac&quot;&gt;</span><br><span class="line">          &lt;span class&#x3D;&quot;c-333&quot;&gt;全部课程&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;h2&gt;</span><br><span class="line">      &lt;&#x2F;header&gt;</span><br><span class="line">      &lt;section class&#x3D;&quot;c-sort-box&quot;&gt;</span><br><span class="line">        &lt;section class&#x3D;&quot;c-s-dl&quot;&gt;</span><br><span class="line">          &lt;dl&gt;</span><br><span class="line">            &lt;dt&gt;</span><br><span class="line">              &lt;span class&#x3D;&quot;c-999 fsize14&quot;&gt;课程类别&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;dt&gt;</span><br><span class="line">            &lt;dd class&#x3D;&quot;c-s-dl-li&quot;&gt;</span><br><span class="line">              &lt;ul class&#x3D;&quot;clearfix&quot;&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                  &lt;a title&#x3D;&quot;全部&quot; href&#x3D;&quot;#&quot;&gt;全部&lt;&#x2F;a&gt;</span><br><span class="line">                &lt;&#x2F;li&gt;</span><br><span class="line">                &lt;li v-for&#x3D;&quot;(item,index) in subjectNestedList&quot; :key&#x3D;&quot;index&quot; :class&#x3D;&quot;&#123;active:oneIndex&#x3D;&#x3D;index&#125;&quot;&gt;</span><br><span class="line">                  &lt;a :title&#x3D;&quot;item.title&quot; href&#x3D;&quot;#&quot; @click&#x3D;&quot;searchOne(item.id,index)&quot;&gt;&#123;&#123;item.title&#125;&#125;&lt;&#x2F;a&gt;</span><br><span class="line">                &lt;&#x2F;li&gt;</span><br><span class="line">              &lt;&#x2F;ul&gt;</span><br><span class="line">            &lt;&#x2F;dd&gt;</span><br><span class="line">          &lt;&#x2F;dl&gt;</span><br><span class="line">          &lt;dl&gt;</span><br><span class="line">            &lt;dt&gt;</span><br><span class="line">              &lt;span class&#x3D;&quot;c-999 fsize14&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;dt&gt;</span><br><span class="line">            &lt;dd class&#x3D;&quot;c-s-dl-li&quot;&gt;</span><br><span class="line">              &lt;ul class&#x3D;&quot;clearfix&quot;&gt;</span><br><span class="line">                &lt;li v-for&#x3D;&quot;(item,index) in subSubjectList&quot; :key&#x3D;&quot;index&quot; :class&#x3D;&quot;&#123;active:twoIndex&#x3D;&#x3D;index&#125;&quot;&gt;</span><br><span class="line">                  &lt;a :title&#x3D;&quot;item.title&quot; href&#x3D;&quot;#&quot; @click&#x3D;&quot;searchTwo(item.id, index)&quot;&gt;&#123;&#123;item.title&#125;&#125;&lt;&#x2F;a&gt;</span><br><span class="line">                &lt;&#x2F;li&gt;</span><br><span class="line">              &lt;&#x2F;ul&gt;</span><br><span class="line">            &lt;&#x2F;dd&gt;</span><br><span class="line">          &lt;&#x2F;dl&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;clear&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;section&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;js-wrap&quot;&gt;</span><br><span class="line">          &lt;section class&#x3D;&quot;fr&quot;&gt;</span><br><span class="line">            &lt;span class&#x3D;&quot;c-ccc&quot;&gt;</span><br><span class="line">              &lt;i class&#x3D;&quot;c-master f-fM&quot;&gt;1&lt;&#x2F;i&gt;&#x2F;</span><br><span class="line">              &lt;i class&#x3D;&quot;c-666 f-fM&quot;&gt;1&lt;&#x2F;i&gt;</span><br><span class="line">            &lt;&#x2F;span&gt;</span><br><span class="line">          &lt;&#x2F;section&gt;</span><br><span class="line">          &lt;section class&#x3D;&quot;fl&quot;&gt;</span><br><span class="line">            &lt;ol class&#x3D;&quot;js-tap clearfix&quot;&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;a title&#x3D;&quot;关注度&quot; href&#x3D;&quot;#&quot;&gt;关注度&lt;&#x2F;a&gt;</span><br><span class="line">              &lt;&#x2F;li&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;a title&#x3D;&quot;最新&quot; href&#x3D;&quot;#&quot;&gt;最新&lt;&#x2F;a&gt;</span><br><span class="line">              &lt;&#x2F;li&gt;</span><br><span class="line">              &lt;li class&#x3D;&quot;current bg-orange&quot;&gt;</span><br><span class="line">                &lt;a title&#x3D;&quot;价格&quot; href&#x3D;&quot;#&quot;&gt;价格&amp;nbsp;</span><br><span class="line">                  &lt;span&gt;↓&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;&#x2F;a&gt;</span><br><span class="line">              &lt;&#x2F;li&gt;</span><br><span class="line">            &lt;&#x2F;ol&gt;</span><br><span class="line">          &lt;&#x2F;section&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;mt40&quot;&gt;</span><br><span class="line">          &lt;!-- &#x2F;无数据提示 开始--&gt;</span><br><span class="line">          &lt;section class&#x3D;&quot;no-data-wrap&quot; v-if&#x3D;&quot;data.total&#x3D;&#x3D;0&quot;&gt;</span><br><span class="line">            &lt;em class&#x3D;&quot;icon30 no-data-ico&quot;&gt;&amp;nbsp;&lt;&#x2F;em&gt;</span><br><span class="line">            &lt;span class&#x3D;&quot;c-666 fsize14 ml10 vam&quot;&gt;没有相关数据，小编正在努力整理中...&lt;&#x2F;span&gt;</span><br><span class="line">          &lt;&#x2F;section&gt;</span><br><span class="line">          &lt;!-- &#x2F;无数据提示 结束--&gt;</span><br><span class="line">          &lt;article class&#x3D;&quot;comm-course-list&quot;&gt;</span><br><span class="line">            &lt;ul class&#x3D;&quot;of&quot; id&#x3D;&quot;bna&quot;&gt;</span><br><span class="line">              &lt;li v-for&#x3D;&quot;(course,index) in data.items&quot; :key&#x3D;&quot;index&quot;&gt;</span><br><span class="line">                &lt;div class&#x3D;&quot;cc-l-wrap&quot;&gt;</span><br><span class="line">                  &lt;section class&#x3D;&quot;course-img&quot;&gt;</span><br><span class="line">                    &lt;img :src&#x3D;&quot;course.cover&quot; class&#x3D;&quot;img-responsive&quot; :alt&#x3D;&quot;course.title&quot;&gt;</span><br><span class="line">                    &lt;div class&#x3D;&quot;cc-mask&quot;&gt;</span><br><span class="line">                      &lt;a :href&#x3D;&quot;&#39;&#x2F;course&#x2F;&#39; + course.id&quot; :title&#x3D;&quot;course.title&quot; class&#x3D;&quot;comm-btn c-btn-1&quot;&gt;开始学习&lt;&#x2F;a&gt;</span><br><span class="line">                    &lt;&#x2F;div&gt;</span><br><span class="line">                  &lt;&#x2F;section&gt;</span><br><span class="line">                  &lt;h3 class&#x3D;&quot;hLh30 txtOf mt10&quot;&gt;</span><br><span class="line">                    &lt;a :href&#x3D;&quot;&#39;&#x2F;course&#x2F;&#39; + course.id&quot; :title&#x3D;&quot;course.title&quot; class&#x3D;&quot;course-title fsize18 c-333&quot;&gt;&#123;&#123;course.title&#125;&#125;&lt;&#x2F;a&gt;</span><br><span class="line">                  &lt;&#x2F;h3&gt;</span><br><span class="line">                  &lt;section class&#x3D;&quot;mt10 hLh20 of&quot;&gt;</span><br><span class="line">                    &lt;span class&#x3D;&quot;fr jgTag bg-green&quot; v-if&#x3D;&quot;Number(course.price&#x3D;&#x3D;&#x3D;0)&quot;&gt;</span><br><span class="line">                      &lt;i class&#x3D;&quot;c-fff fsize12 f-fA&quot;&gt;免费&lt;&#x2F;i&gt;</span><br><span class="line">                    &lt;&#x2F;span&gt;</span><br><span class="line">                    &lt;span class&#x3D;&quot;fl jgAttr c-ccc f-fA&quot;&gt;</span><br><span class="line">                      &lt;i class&#x3D;&quot;c-999 f-fA&quot;&gt;&#123;&#123;course.buyCount&#125;&#125;人已学习&lt;&#x2F;i&gt;</span><br><span class="line">                      |</span><br><span class="line">                      &lt;i class&#x3D;&quot;c-999 f-fA&quot;&gt;&#123;&#123;course.viewCount&#125;&#125;人浏览过&lt;&#x2F;i&gt;</span><br><span class="line">                    &lt;&#x2F;span&gt;</span><br><span class="line">                  &lt;&#x2F;section&gt;</span><br><span class="line">                &lt;&#x2F;div&gt;</span><br><span class="line">              &lt;&#x2F;li&gt;</span><br><span class="line">            &lt;&#x2F;ul&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;clear&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">          &lt;&#x2F;article&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;!-- 公共分页 开始 --&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;paging&quot;&gt;</span><br><span class="line">            &lt;!-- undisable这个class是否存在，取决于数据属性hasPrevious --&gt;</span><br><span class="line">            &lt;a</span><br><span class="line">              :class&#x3D;&quot;&#123;undisable: !data.hasPrevious&#125;&quot;</span><br><span class="line">              href&#x3D;&quot;#&quot;</span><br><span class="line">              title&#x3D;&quot;首页&quot;</span><br><span class="line">              @click.prevent&#x3D;&quot;gotoPage(1)&quot;&gt;首&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;a</span><br><span class="line">              :class&#x3D;&quot;&#123;undisable: !data.hasPrevious&#125;&quot;</span><br><span class="line">              href&#x3D;&quot;#&quot;</span><br><span class="line">              title&#x3D;&quot;前一页&quot;</span><br><span class="line">              @click.prevent&#x3D;&quot;gotoPage(data.current-1)&quot;&gt;&lt;&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;a</span><br><span class="line">              v-for&#x3D;&quot;page in data.pages&quot;</span><br><span class="line">              :key&#x3D;&quot;page&quot;</span><br><span class="line">              :class&#x3D;&quot;&#123;current: data.current &#x3D;&#x3D; page, undisable: data.current &#x3D;&#x3D; page&#125;&quot;</span><br><span class="line">              :title&#x3D;&quot;&#39;第&#39;+page+&#39;页&#39;&quot;</span><br><span class="line">              href&#x3D;&quot;#&quot;</span><br><span class="line">              @click.prevent&#x3D;&quot;gotoPage(page)&quot;&gt;&#123;&#123; page &#125;&#125;&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;a</span><br><span class="line">              :class&#x3D;&quot;&#123;undisable: !data.hasNext&#125;&quot;</span><br><span class="line">              href&#x3D;&quot;#&quot;</span><br><span class="line">              title&#x3D;&quot;后一页&quot;</span><br><span class="line">              @click.prevent&#x3D;&quot;gotoPage(data.current+1)&quot;&gt;&gt;&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;a</span><br><span class="line">              :class&#x3D;&quot;&#123;undisable: !data.hasNext&#125;&quot;</span><br><span class="line">              href&#x3D;&quot;#&quot;</span><br><span class="line">              title&#x3D;&quot;末页&quot;</span><br><span class="line">              @click.prevent&#x3D;&quot;gotoPage(data.pages)&quot;&gt;末&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;clear&quot;&#x2F;&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;!-- 公共分页 结束 --&gt;</span><br><span class="line">      &lt;&#x2F;section&gt;</span><br><span class="line">    &lt;&#x2F;section&gt;</span><br><span class="line">    &lt;!-- &#x2F;课程列表 结束 --&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import courseApi from &quot;@&#x2F;api&#x2F;course&quot;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">  data()&#123;</span><br><span class="line">    return&#123;</span><br><span class="line">      page:1, &#x2F;&#x2F;当前页</span><br><span class="line">      data:&#123;&#125;,  &#x2F;&#x2F;课程列表</span><br><span class="line">      subjectNestedList: [], &#x2F;&#x2F; 一级分类列表</span><br><span class="line">      subSubjectList: [], &#x2F;&#x2F; 二级分类列表</span><br><span class="line"></span><br><span class="line">      searchObj: &#123;&#125;, &#x2F;&#x2F; 查询表单对象</span><br><span class="line"></span><br><span class="line">      oneIndex:-1,</span><br><span class="line">      twoIndex:-1,</span><br><span class="line">      buyCountSort:&quot;&quot;,</span><br><span class="line">      gmtCreateSort:&quot;&quot;,</span><br><span class="line">      priceSort:&quot;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created()&#123;</span><br><span class="line">    this.initCourse()</span><br><span class="line">    this.initOneSubject()</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    &#x2F;&#x2F;1 初始化页面，包括一级分类、课程列表第一页</span><br><span class="line">    initCourse()&#123;</span><br><span class="line">      courseApi.getCourseList(1,8,this.searchObj)</span><br><span class="line">        .then(response &#x3D;&gt; &#123;</span><br><span class="line">          this.data &#x3D; response.data.data</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x2F;&#x2F;2 初始化一级分类</span><br><span class="line">    initOneSubject()&#123;</span><br><span class="line">      courseApi.getOneSubject()</span><br><span class="line">        .then(response &#x3D;&gt; &#123;</span><br><span class="line">          this.subjectNestedList &#x3D; response.data.data.list</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x2F;&#x2F;3 分页切换的方法</span><br><span class="line">    gotoPage(page) &#123;</span><br><span class="line">      courseApi.getCourseList(page,8,this.searchObj).then(response &#x3D;&gt; &#123;</span><br><span class="line">        this.data &#x3D; response.data.data</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x2F;&#x2F;4 点击一级分类，查询二级分类，跟之前的一样，将传过来的id跟所有的一级分类id做比较</span><br><span class="line">    searchOne(subjectParentId, index)&#123;</span><br><span class="line">      &#x2F;&#x2F;将传过来的index赋值给oneIndex，是为了让样式生效</span><br><span class="line">      this.oneIndex &#x3D; index</span><br><span class="line">      &#x2F;&#x2F;其他值还是原始值</span><br><span class="line">      this.twoIndex &#x3D; -1</span><br><span class="line">      this.searchObj.subjectId &#x3D; &quot;&quot;</span><br><span class="line">      this.subSubjectList &#x3D; []</span><br><span class="line"></span><br><span class="line">      &#x2F;&#x2F;把一级分类点击id值，赋值给searchObj</span><br><span class="line">      this.searchObj.subjectParentId &#x3D; subjectParentId</span><br><span class="line">      &#x2F;&#x2F;点击某个一级分类进行条件查询</span><br><span class="line">      this.gotoPage(1)</span><br><span class="line"></span><br><span class="line">      for(var i &#x3D; 0; i &lt; this.subjectNestedList.length; i++)&#123;</span><br><span class="line">        &#x2F;&#x2F;如果相等则查询对应的二级分类</span><br><span class="line">        var oneSubject &#x3D; this.subjectNestedList[i]</span><br><span class="line">        if(subjectParentId &#x3D;&#x3D; oneSubject.id)&#123;</span><br><span class="line">          this.subSubjectList &#x3D; oneSubject.children</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x2F;&#x2F;5 点击二级分类</span><br><span class="line">    searchTwo(subjectId, index)&#123;</span><br><span class="line">      &#x2F;&#x2F;赋值index，为了样式生效</span><br><span class="line">      this.twoIndex &#x3D; index</span><br><span class="line">      &#x2F;&#x2F;把二级分类的id传给searchObj</span><br><span class="line">      this.searchObj.subjectId &#x3D; subjectId</span><br><span class="line">      this.gotoPage(1)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">  .active &#123;</span><br><span class="line">    background: #bdbdbd;</span><br><span class="line">  &#125;</span><br><span class="line">  .hide &#123;</span><br><span class="line">    display: none;</span><br><span class="line">  &#125;</span><br><span class="line">  .show &#123;</span><br><span class="line">    display: block;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><p>course目录下的_id.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;aCoursesList&quot; class&#x3D;&quot;bg-fa of&quot;&gt;</span><br><span class="line">    &lt;!-- &#x2F;课程详情 开始 --&gt;</span><br><span class="line">    &lt;section class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">      &lt;section class&#x3D;&quot;path-wrap txtOf hLh30&quot;&gt;</span><br><span class="line">        &lt;a href&#x3D;&quot;#&quot; title class&#x3D;&quot;c-999 fsize14&quot;&gt;首页&lt;&#x2F;a&gt;</span><br><span class="line">        \</span><br><span class="line">        &lt;a href&#x3D;&quot;#&quot; title class&#x3D;&quot;c-999 fsize14&quot;&gt;&#123;&#123;courseWebVo.subjectLevelOne&#125;&#125;&lt;&#x2F;a&gt;</span><br><span class="line">        \</span><br><span class="line">        &lt;span class&#x3D;&quot;c-333 fsize14&quot;&gt;&#123;&#123;courseWebVo.subjectLevelTwo&#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">      &lt;&#x2F;section&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;article class&#x3D;&quot;c-v-pic-wrap&quot; style&#x3D;&quot;height: 357px;&quot;&gt;</span><br><span class="line">          &lt;section class&#x3D;&quot;p-h-video-box&quot; id&#x3D;&quot;videoPlay&quot;&gt;</span><br><span class="line">            &lt;img height&#x3D;&quot;357px&quot; :src&#x3D;&quot;courseWebVo.cover&quot; :alt&#x3D;&quot;courseWebVo.title&quot; class&#x3D;&quot;dis c-v-pic&quot;&gt;</span><br><span class="line">          &lt;&#x2F;section&gt;</span><br><span class="line">        &lt;&#x2F;article&gt;</span><br><span class="line">        &lt;aside class&#x3D;&quot;c-attr-wrap&quot;&gt;</span><br><span class="line">          &lt;section class&#x3D;&quot;ml20 mr15&quot;&gt;</span><br><span class="line">            &lt;h2 class&#x3D;&quot;hLh30 txtOf mt15&quot;&gt;</span><br><span class="line">              &lt;span class&#x3D;&quot;c-fff fsize24&quot;&gt;&#123;&#123;courseWebVo.title&#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;h2&gt;</span><br><span class="line">            &lt;section class&#x3D;&quot;c-attr-jg&quot;&gt;</span><br><span class="line">              &lt;span class&#x3D;&quot;c-fff&quot;&gt;价格：&lt;&#x2F;span&gt;</span><br><span class="line">              &lt;b class&#x3D;&quot;c-yellow&quot; style&#x3D;&quot;font-size:24px;&quot;&gt;￥&#123;&#123;courseWebVo.price&#125;&#125;&lt;&#x2F;b&gt;</span><br><span class="line">            &lt;&#x2F;section&gt;</span><br><span class="line">            &lt;section class&#x3D;&quot;c-attr-mt c-attr-undis&quot;&gt;</span><br><span class="line">              &lt;span class&#x3D;&quot;c-fff fsize14&quot;&gt;主讲： &#123;&#123;courseWebVo.teacherName&#125;&#125;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;section&gt;</span><br><span class="line">            &lt;section class&#x3D;&quot;c-attr-mt of&quot;&gt;</span><br><span class="line">              &lt;span class&#x3D;&quot;ml10 vam&quot;&gt;</span><br><span class="line">                &lt;em class&#x3D;&quot;icon18 scIcon&quot;&gt;&lt;&#x2F;em&gt;</span><br><span class="line">                &lt;a class&#x3D;&quot;c-fff vam&quot; title&#x3D;&quot;收藏&quot; href&#x3D;&quot;#&quot; &gt;收藏&lt;&#x2F;a&gt;</span><br><span class="line">              &lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;section&gt;</span><br><span class="line">            &lt;section class&#x3D;&quot;c-attr-mt&quot;&gt;</span><br><span class="line">              &lt;a @click&#x3D;&quot;createOrders()&quot; href&#x3D;&quot;#&quot; title&#x3D;&quot;立即购买&quot; class&#x3D;&quot;comm-btn c-btn-3&quot;&gt;立即购买&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;section&gt;</span><br><span class="line">          &lt;&#x2F;section&gt;</span><br><span class="line">        &lt;&#x2F;aside&gt;</span><br><span class="line">        &lt;aside class&#x3D;&quot;thr-attr-box&quot;&gt;</span><br><span class="line">          &lt;ol class&#x3D;&quot;thr-attr-ol&quot;&gt;</span><br><span class="line">            &lt;li&gt;</span><br><span class="line">              &lt;p&gt;&amp;nbsp;&lt;&#x2F;p&gt;</span><br><span class="line">              &lt;aside&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;c-fff f-fM&quot;&gt;购买数&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;br&gt;</span><br><span class="line">                &lt;h6 class&#x3D;&quot;c-fff f-fM mt10&quot;&gt;&#123;&#123;courseWebVo.buyCount&#125;&#125;&lt;&#x2F;h6&gt;</span><br><span class="line">              &lt;&#x2F;aside&gt;</span><br><span class="line">            &lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li&gt;</span><br><span class="line">              &lt;p&gt;&amp;nbsp;&lt;&#x2F;p&gt;</span><br><span class="line">              &lt;aside&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;c-fff f-fM&quot;&gt;课时数&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;br&gt;</span><br><span class="line">                &lt;h6 class&#x3D;&quot;c-fff f-fM mt10&quot;&gt;20&lt;&#x2F;h6&gt;</span><br><span class="line">              &lt;&#x2F;aside&gt;</span><br><span class="line">            &lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li&gt;</span><br><span class="line">              &lt;p&gt;&amp;nbsp;&lt;&#x2F;p&gt;</span><br><span class="line">              &lt;aside&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;c-fff f-fM&quot;&gt;浏览数&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;br&gt;</span><br><span class="line">                &lt;h6 class&#x3D;&quot;c-fff f-fM mt10&quot;&gt;501&lt;&#x2F;h6&gt;</span><br><span class="line">              &lt;&#x2F;aside&gt;</span><br><span class="line">            &lt;&#x2F;li&gt;</span><br><span class="line">          &lt;&#x2F;ol&gt;</span><br><span class="line">        &lt;&#x2F;aside&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;clear&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;!-- &#x2F;课程封面介绍 --&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;mt20 c-infor-box&quot;&gt;</span><br><span class="line">        &lt;article class&#x3D;&quot;fl col-7&quot;&gt;</span><br><span class="line">          &lt;section class&#x3D;&quot;mr30&quot;&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;i-box&quot;&gt;</span><br><span class="line">              &lt;div&gt;</span><br><span class="line">                &lt;section id&#x3D;&quot;c-i-tabTitle&quot; class&#x3D;&quot;c-infor-tabTitle c-tab-title&quot;&gt;</span><br><span class="line">                  &lt;a name&#x3D;&quot;c-i&quot; class&#x3D;&quot;current&quot; title&#x3D;&quot;课程详情&quot;&gt;课程详情&lt;&#x2F;a&gt;</span><br><span class="line">                &lt;&#x2F;section&gt;</span><br><span class="line">              &lt;&#x2F;div&gt;</span><br><span class="line">              &lt;article class&#x3D;&quot;ml10 mr10 pt20&quot;&gt;</span><br><span class="line">                &lt;div&gt;</span><br><span class="line">                  &lt;h6 class&#x3D;&quot;c-i-content c-infor-title&quot;&gt;</span><br><span class="line">                    &lt;span&gt;课程介绍&lt;&#x2F;span&gt;</span><br><span class="line">                  &lt;&#x2F;h6&gt;</span><br><span class="line">                  &lt;div class&#x3D;&quot;course-txt-body-wrap&quot;&gt;</span><br><span class="line">                    &lt;section class&#x3D;&quot;course-txt-body&quot;&gt;</span><br><span class="line">                      &lt;p v-html&#x3D;&quot;courseWebVo.description&quot;&gt;&#123;&#123;courseWebVo.description&#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">                    &lt;&#x2F;section&gt;</span><br><span class="line">                  &lt;&#x2F;div&gt;</span><br><span class="line">                &lt;&#x2F;div&gt;</span><br><span class="line">                &lt;!-- &#x2F;课程介绍 --&gt;</span><br><span class="line">                &lt;div class&#x3D;&quot;mt50&quot;&gt;</span><br><span class="line">                  &lt;h6 class&#x3D;&quot;c-g-content c-infor-title&quot;&gt;</span><br><span class="line">                    &lt;span&gt;课程大纲&lt;&#x2F;span&gt;</span><br><span class="line">                  &lt;&#x2F;h6&gt;</span><br><span class="line">                  &lt;section class&#x3D;&quot;mt20&quot;&gt;</span><br><span class="line">                    &lt;div class&#x3D;&quot;lh-menu-wrap&quot;&gt;</span><br><span class="line">                      &lt;menu id&#x3D;&quot;lh-menu&quot; class&#x3D;&quot;lh-menu mt10 mr10&quot;&gt;</span><br><span class="line">                        &lt;ul&gt;</span><br><span class="line">                          &lt;!-- 文件目录 --&gt;</span><br><span class="line">                          &lt;li class&#x3D;&quot;lh-menu-stair&quot; v-for&#x3D;&quot;chapter in chapterVideoList&quot; :key&#x3D;&quot;chapter.id&quot;&gt;</span><br><span class="line">                            &lt;a href&#x3D;&quot;javascript: void(0)&quot; :title&#x3D;&quot;chapter.title&quot; class&#x3D;&quot;current-1&quot;&gt;</span><br><span class="line">                              &lt;em class&#x3D;&quot;lh-menu-i-1 icon18 mr10&quot;&gt;&lt;&#x2F;em&gt;&#123;&#123;chapter.title&#125;&#125;</span><br><span class="line">                            &lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line">                            &lt;ol class&#x3D;&quot;lh-menu-ol&quot; style&#x3D;&quot;display: block;&quot;&gt;</span><br><span class="line">                              &lt;li class&#x3D;&quot;lh-menu-second ml30&quot; v-for&#x3D;&quot;video in chapter.children&quot; :key&#x3D;&quot;video.id&quot;&gt;</span><br><span class="line">                                &lt;a :href&#x3D;&quot;&#39;&#x2F;player&#x2F;&#39;+video.videoSourceId&quot; target&#x3D;&quot;_blank&quot;&gt;</span><br><span class="line">                                  &lt;span class&#x3D;&quot;fr&quot;&gt;</span><br><span class="line">                                    &lt;i class&#x3D;&quot;free-icon vam mr10&quot;&gt;免费试听&lt;&#x2F;i&gt;</span><br><span class="line">                                  &lt;&#x2F;span&gt;</span><br><span class="line">                                  &lt;em class&#x3D;&quot;lh-menu-i-2 icon16 mr5&quot;&gt;&amp;nbsp;&lt;&#x2F;em&gt;&#123;&#123;video.title&#125;&#125;</span><br><span class="line">                                &lt;&#x2F;a&gt;</span><br><span class="line">                              &lt;&#x2F;li&gt;</span><br><span class="line">                              </span><br><span class="line">                            &lt;&#x2F;ol&gt;</span><br><span class="line"></span><br><span class="line">                          &lt;&#x2F;li&gt;</span><br><span class="line">                        &lt;&#x2F;ul&gt;</span><br><span class="line">                      &lt;&#x2F;menu&gt;</span><br><span class="line">                    &lt;&#x2F;div&gt;</span><br><span class="line">                  &lt;&#x2F;section&gt;</span><br><span class="line">                &lt;&#x2F;div&gt;</span><br><span class="line">                &lt;!-- &#x2F;课程大纲 --&gt;</span><br><span class="line">              &lt;&#x2F;article&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">          &lt;&#x2F;section&gt;</span><br><span class="line">        &lt;&#x2F;article&gt;</span><br><span class="line">        &lt;aside class&#x3D;&quot;fl col-3&quot;&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;i-box&quot;&gt;</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">              &lt;section class&#x3D;&quot;c-infor-tabTitle c-tab-title&quot;&gt;</span><br><span class="line">                &lt;a title href&#x3D;&quot;javascript:void(0)&quot;&gt;主讲讲师&lt;&#x2F;a&gt;</span><br><span class="line">              &lt;&#x2F;section&gt;</span><br><span class="line">              &lt;section class&#x3D;&quot;stud-act-list&quot;&gt;</span><br><span class="line">                &lt;ul style&#x3D;&quot;height: auto;&quot;&gt;</span><br><span class="line">                  &lt;li&gt;</span><br><span class="line">                    &lt;div class&#x3D;&quot;u-face&quot;&gt;</span><br><span class="line">                      &lt;a href&#x3D;&quot;#&quot;&gt;</span><br><span class="line">                        &lt;img :src&#x3D;&quot;courseWebVo.avatar&quot; width&#x3D;&quot;50&quot; height&#x3D;&quot;50&quot; alt&gt;</span><br><span class="line">                      &lt;&#x2F;a&gt;</span><br><span class="line">                    &lt;&#x2F;div&gt;</span><br><span class="line">                    &lt;section class&#x3D;&quot;hLh30 txtOf&quot;&gt;</span><br><span class="line">                      &lt;a class&#x3D;&quot;c-333 fsize16 fl&quot; href&#x3D;&quot;#&quot;&gt;&#123;&#123;courseWebVo.teacherName&#125;&#125;&lt;&#x2F;a&gt;</span><br><span class="line">                    &lt;&#x2F;section&gt;</span><br><span class="line">                    &lt;section class&#x3D;&quot;hLh20 txtOf&quot;&gt;</span><br><span class="line">                      &lt;span class&#x3D;&quot;c-999&quot;&gt;&#123;&#123;courseWebVo.intro&#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">                    &lt;&#x2F;section&gt;</span><br><span class="line">                  &lt;&#x2F;li&gt;</span><br><span class="line">                &lt;&#x2F;ul&gt;</span><br><span class="line">              &lt;&#x2F;section&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;aside&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;clear&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;section&gt;</span><br><span class="line">    &lt;!-- &#x2F;课程详情 结束 --&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import courseApi from &#39;@&#x2F;api&#x2F;course&#39;</span><br><span class="line">import orderApi from &#39;@&#x2F;api&#x2F;order&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">   asyncData(&#123; params, error &#125;) &#123;</span><br><span class="line">     return courseApi.getCourseDetail(params.id)</span><br><span class="line">        .then(response &#x3D;&gt; &#123;</span><br><span class="line">          return &#123;</span><br><span class="line">            courseWebVo: response.data.data.courseDetailVo,</span><br><span class="line">            chapterVideoList: response.data.data.chapterVoList,</span><br><span class="line">            courseId:params.id</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">   &#125;,</span><br><span class="line">   methods:&#123;</span><br><span class="line">     &#x2F;&#x2F;生成订单</span><br><span class="line">     createOrders() &#123;</span><br><span class="line">       orderApi.createOrder(this.courseId)</span><br><span class="line">        .then(response &#x3D;&gt; &#123;</span><br><span class="line">          &#x2F;&#x2F;获取返回订单号</span><br><span class="line">          &#x2F;&#x2F;生成订单之后，跳转订单显示页面</span><br><span class="line">          this.$router.push(&#123;path:&#39;&#x2F;order&#x2F;&#39;+response.data.data.orderId&#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h4 id="效果测试-1"><a href="#效果测试-1" class="headerlink" title="效果测试"></a>效果测试</h4><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200713230245.png" alt="image-20200713230245017"></p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200713230255.png" alt="image-20200713230255470"></p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200713230307.png" alt="image-20200713230306922"></p><h2 id="3、章节整合阿里云播放器"><a href="#3、章节整合阿里云播放器" class="headerlink" title="3、章节整合阿里云播放器"></a>3、章节整合阿里云播放器</h2><h3 id="3-1、简介与测试"><a href="#3-1、简介与测试" class="headerlink" title="3.1、简介与测试"></a>3.1、简介与测试</h3><p>从上面的开发中可以看到最后章节列表都出来了，那么当我们点击某一小节的时候，应该跳转到播放视频的页面，这个具体怎么做到的呢？</p><p>这里就需要整合阿里云提供的播放器服务了，之前都学过，播放阿里云的视频有两种方式，一种是根据视频地址来播放，一种是根据视频凭证来播放，因为有些视频是加密过的，而加密的视频无法直接通过视频地址来播放，所以我们都统一采用播放凭证来播放，那么又怎么获取播放凭证呢？我们之前在vod模块中写过接口</p><p>先来看看阿里云播放视频的两种方式</p><p>引入脚本文件和css文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://g.alicdn.com/de/prismplayer/2.8.1/skins/default/aliplayer-min.css"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"https://g.alicdn.com/de/prismplayer/2.8.1/aliplayer-min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>初始化视频播放器</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>  <span class="attr">class</span>=<span class="string">"prism-player"</span> <span class="attr">id</span>=<span class="string">"J_prismPlayer"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> player = <span class="keyword">new</span> Aliplayer(&#123;</span></span><br><span class="line"><span class="actionscript">            id: <span class="string">'J_prismPlayer'</span>,</span></span><br><span class="line"><span class="actionscript">            width: <span class="string">'100%'</span>,</span></span><br><span class="line"><span class="actionscript">            autoplay: <span class="literal">false</span>,<span class="comment">//是否自动播放</span></span></span><br><span class="line"><span class="actionscript">            cover: <span class="string">'http://liveroom-img.oss-cn-qingdao.aliyuncs.com/logo.png'</span>,  <span class="comment">//视频封面</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//播放配置</span></span></span><br><span class="line"><span class="actionscript">        &#125;,<span class="function"><span class="keyword">function</span><span class="params">(player)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'播放器创建好了。'</span>)</span></span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>播放地址播放</p><p>如果是通过视频地址播放，则在Aliplayer的配置参数中添加如下属性</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//播放方式一：支持播放地址播放,此播放优先级最高，此种方式不能播放加密视频</span></span><br><span class="line">source : <span class="string">'你的视频播放地址'</span>,</span><br></pre></td></tr></table></figure><p>播放凭证播放（推荐）</p><p>阿里云播放器支持通过播放凭证自动换取播放地址进行播放，接入方式更为简单，且安全性更高。播放凭证默认时效为100秒（最大为3000秒），只能用于获取指定视频的播放地址，不能混用或重复使用。如果凭证过期则无法获取播放地址，需要重新获取凭证。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">encryptType:<span class="string">'1'</span>,<span class="comment">//如果播放加密视频，则需设置encryptType=1，非加密视频无需设置此项</span></span><br><span class="line">vid : <span class="string">'视频id'</span>,<span class="comment">//也就是sourceId</span></span><br><span class="line">playauth : <span class="string">'视频授权码'</span>,</span><br></pre></td></tr></table></figure><p>注意：播放凭证有过期时间，默认值：100秒 。取值范围：<strong>100~3000</strong>。</p><p>设置播放凭证的有效期</p><p>在获取播放凭证的测试用例中添加如下代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.setAuthInfoTimeout(<span class="number">200L</span>);</span><br></pre></td></tr></table></figure><p>测试播放地址：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://g.alicdn.com/de/prismplayer/2.8.1/skins/default/aliplayer-min.css"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"https://g.alicdn.com/de/prismplayer/2.8.1/aliplayer-min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>  <span class="attr">class</span>=<span class="string">"prism-player"</span> <span class="attr">id</span>=<span class="string">"J_prismPlayer"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> player = <span class="keyword">new</span> Aliplayer(&#123;</span></span><br><span class="line"><span class="actionscript">            id: <span class="string">'J_prismPlayer'</span>,</span></span><br><span class="line"><span class="actionscript">            width: <span class="string">'100%'</span>,</span></span><br><span class="line"><span class="actionscript">            autoplay: <span class="literal">false</span>,<span class="comment">//是否自动播放</span></span></span><br><span class="line"><span class="actionscript">            cover: <span class="string">'http://liveroom-img.oss-cn-qingdao.aliyuncs.com/logo.png'</span>,  <span class="comment">//视频封面</span></span></span><br><span class="line"><span class="actionscript">            source: <span class="string">'your video url'</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//播放配置</span></span></span><br><span class="line"><span class="actionscript">        &#125;,<span class="function"><span class="keyword">function</span><span class="params">(player)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'播放器创建好了。'</span>)</span></span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200714004033.png" alt="image-20200714004032966"></p><p>测试播放凭证</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"x-ua-compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span>   <span class="attr">content</span>=<span class="string">"width=device-width, height=device-height, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Vod<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"//g.alicdn.com/de/prismplayer/2.6.0/skins/default/aliplayer-min.css"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"//g.alicdn.com/de/prismplayer/2.6.0/aliplayer-min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>  <span class="attr">class</span>=<span class="string">"prism-player"</span> <span class="attr">id</span>=<span class="string">"J_prismPlayer"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> player = <span class="keyword">new</span> Aliplayer(&#123;</span></span><br><span class="line"><span class="actionscript">    id: <span class="string">"J_prismPlayer"</span>,</span></span><br><span class="line"><span class="actionscript">    autoplay: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">    width:<span class="string">"100%"</span>,</span></span><br><span class="line"><span class="actionscript">    vid:<span class="string">"your video id"</span>,</span></span><br><span class="line"><span class="actionscript">    playauth:<span class="string">'your video palyAuth'</span>,</span></span><br><span class="line"><span class="actionscript">    cover:<span class="string">''</span></span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200714092608.png" alt="image-20200714092600825"></p><h3 id="3-2、后端接口"><a href="#3-2、后端接口" class="headerlink" title="3.2、后端接口"></a>3.2、后端接口</h3><p>分析：从上面的测试可以看到，后端只需要获取播放凭证，并返回前端即可</p><p>补充：因为需要根据videoSourceId获取播放凭证，需要在封装类videoVo.java补充该字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VideoVo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> String videoSourceId;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="controller层-2"><a href="#controller层-2" class="headerlink" title="controller层"></a>controller层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取阿里云视频播放凭证</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/getPlayAuth/&#123;videoId&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">getPlayAuth</span><span class="params">(@PathVariable String videoId)</span></span>&#123;</span><br><span class="line">    String playAuth = vodService.getPlayAuth(videoId);</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(playAuth))&#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">"playAuth"</span>,playAuth);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error().message(<span class="string">"获取视频播放凭证失败"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="service层-2"><a href="#service层-2" class="headerlink" title="service层"></a>service层</h4><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">String <span class="title">getPlayAuth</span><span class="params">(String videoId)</span></span>;</span><br></pre></td></tr></table></figure><p>实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取播放凭证</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPlayAuth</span><span class="params">(String videoId)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//初始化对象</span></span><br><span class="line">        DefaultAcsClient client = InitVod.initVodClient(ConstantVodUtils.KEY_ID, ConstantVodUtils.KEY_SECRET);</span><br><span class="line">        <span class="comment">//创建请求对象</span></span><br><span class="line">        GetVideoPlayAuthRequest request = <span class="keyword">new</span> GetVideoPlayAuthRequest();</span><br><span class="line">        <span class="comment">//设置id</span></span><br><span class="line">        request.setVideoId(videoId);</span><br><span class="line">        <span class="comment">//执行请求并获取响应数据</span></span><br><span class="line">        GetVideoPlayAuthResponse response = client.getAcsResponse(request);</span><br><span class="line">        String playAuth = response.getPlayAuth();</span><br><span class="line">        <span class="keyword">return</span> playAuth;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ClientException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3、前端接口"><a href="#3-3、前端接口" class="headerlink" title="3.3、前端接口"></a>3.3、前端接口</h3><h4 id="api-2"><a href="#api-2" class="headerlink" title="api"></a>api</h4><p>提示：在api目录下新建一个接口video.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">"@/utils/request.js"</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">//获取播放凭证</span></span><br><span class="line">    getPlayAuth(videoId)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">`/eduvod/video/getPlayAuth/<span class="subst">$&#123;videoId&#125;</span>`</span>,</span><br><span class="line">            method: <span class="string">'get'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="播放布局："><a href="#播放布局：" class="headerlink" title="播放布局："></a>播放布局：</h4><p>分析：想要的效果：点击某小节后，在新的浏览器窗口进行播放，而此时播放页面的布局不一样了，所以我们需要在layouts新建一个播放布局video.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;guli-player&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;head&quot;&gt;</span><br><span class="line">      &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;谷粒学院&quot;&gt;</span><br><span class="line">        &lt;img class&#x3D;&quot;logo&quot; src&#x3D;&quot;~&#x2F;assets&#x2F;img&#x2F;logo.png&quot; lt&#x3D;&quot;谷粒学院&quot;&gt;</span><br><span class="line">    &lt;&#x2F;a&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;body&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;content&quot;&gt;&lt;nuxt&#x2F;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">html,body&#123;</span><br><span class="line">  height:100%;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.head &#123;</span><br><span class="line">  height: 50px;</span><br><span class="line">  position: absolute;</span><br><span class="line">  top: 0;</span><br><span class="line">  left: 0;</span><br><span class="line">  width: 100%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.head .logo&#123;</span><br><span class="line">  height: 50px;</span><br><span class="line">  margin-left: 10px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.body &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  top: 50px;</span><br><span class="line">  left: 0;</span><br><span class="line">  right: 0;</span><br><span class="line">  bottom: 0;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><h4 id="播放页面"><a href="#播放页面" class="headerlink" title="播放页面"></a>播放页面</h4><p>准备工作：因为点击不同小节，会跳转到不同的视频播放页面，这是一种动态路由，所以需要在course的_id.vue中配置跳转地址</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a :href=<span class="string">"'/player/' + video.videoSourceId"</span> :title=<span class="string">"video.title"</span> target=<span class="string">"_blank"</span>&gt;</span><br></pre></td></tr></table></figure><p>其中video.videoSourceId就是添加新字段的作用，target=”_blank”表示在新窗口中打开</p><p>播放页面：因为是在新的窗口中打开播放，需要在pages新建一个player目录，并新建_vid.vue</p><p>_vid.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 阿里云视频播放器样式 --&gt;</span><br><span class="line">    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&#x2F;&#x2F;g.alicdn.com&#x2F;de&#x2F;prismplayer&#x2F;2.6.0&#x2F;skins&#x2F;default&#x2F;aliplayer-min.css&quot; &#x2F;&gt;</span><br><span class="line">    &lt;!-- 阿里云视频播放器脚本 --&gt;</span><br><span class="line">    &lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;&#x2F;g.alicdn.com&#x2F;de&#x2F;prismplayer&#x2F;2.6.0&#x2F;aliplayer-min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 定义播放器dom --&gt;</span><br><span class="line">    &lt;div  class&#x3D;&quot;prism-player&quot; id&#x3D;&quot;J_prismPlayer&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import video from &#39;@&#x2F;api&#x2F;video&#39;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    layout: &#39;video&#39;,&#x2F;&#x2F;应用video布局</span><br><span class="line">    asyncData(&#123; params, error &#125;) &#123;</span><br><span class="line">       return video.getPlayAuth(params.vid)</span><br><span class="line">        .then(response &#x3D;&gt; &#123;</span><br><span class="line">            return &#123; </span><br><span class="line">                playAuth: response.data.data.playAuth,</span><br><span class="line">                vid: params.vid</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    mounted() &#123; &#x2F;&#x2F;页面渲染之后  created</span><br><span class="line">        new Aliplayer(&#123;</span><br><span class="line">            id: &#39;J_prismPlayer&#39;,</span><br><span class="line">            vid: this.vid, &#x2F;&#x2F; 视频id</span><br><span class="line">            playauth: this.playAuth, &#x2F;&#x2F; 播放凭证</span><br><span class="line">            encryptType: &#39;1&#39;, &#x2F;&#x2F; 如果播放加密视频，则需设置encryptType&#x3D;1，非加密视频无需设置此项</span><br><span class="line">            width: &#39;100%&#39;,</span><br><span class="line">            height: &#39;500px&#39;,</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F; 以下可选设置</span><br><span class="line">            cover: &#39;http:&#x2F;&#x2F;guli.shop&#x2F;photo&#x2F;banner&#x2F;1525939573202.jpg&#39;, &#x2F;&#x2F; 封面</span><br><span class="line">            qualitySort: &#39;asc&#39;, &#x2F;&#x2F; 清晰度排序</span><br><span class="line"></span><br><span class="line">            mediaType: &#39;video&#39;, &#x2F;&#x2F; 返回音频还是视频</span><br><span class="line">            autoplay: false, &#x2F;&#x2F; 自动播放</span><br><span class="line">            isLive: false, &#x2F;&#x2F; 直播</span><br><span class="line">            rePlay: false, &#x2F;&#x2F; 循环播放</span><br><span class="line">            preload: true,</span><br><span class="line">            controlBarVisibility: &#39;hover&#39;, &#x2F;&#x2F; 控制条的显示方式：鼠标悬停</span><br><span class="line">            useH5Prism: true, &#x2F;&#x2F; 播放器类型：html5</span><br><span class="line">        &#125;, function(player) &#123;</span><br><span class="line">            console.log(&#39;播放器创建成功&#39;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h4 id="效果测试-2"><a href="#效果测试-2" class="headerlink" title="效果测试"></a>效果测试</h4><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200714101448.png" alt="image-20200714101447854"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1、前台讲师列表&quot;&gt;&lt;a href=&quot;#1、前台讲师列表&quot; class=&quot;headerlink&quot; title=&quot;1、前台讲师列表&quot;&gt;&lt;/a&gt;1、前台讲师列表&lt;/h2&gt;&lt;p&gt;首先看看想要的效果&lt;/p&gt;
&lt;p&gt;&lt;img src= &quot;/img/loading.gif&quot; 
      
    
    </summary>
    
    
      <category term="前后端分离" scheme="http://yoursite.com/categories/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="springboot" scheme="http://yoursite.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>谷粒学院实战day07—客户前台登陆功能开发(jwt)）</title>
    <link href="http://yoursite.com/2020/07/11/%E5%AD%A6%E9%99%A2%E5%AE%9E%E6%88%98day07%E2%80%94%E5%AE%A2%E6%88%B7%E5%89%8D%E5%8F%B0%E7%99%BB%E9%99%86%E5%8A%9F%E8%83%BD%E5%BC%80%E5%8F%91-jwt-%EF%BC%89/"/>
    <id>http://yoursite.com/2020/07/11/%E5%AD%A6%E9%99%A2%E5%AE%9E%E6%88%98day07%E2%80%94%E5%AE%A2%E6%88%B7%E5%89%8D%E5%8F%B0%E7%99%BB%E9%99%86%E5%8A%9F%E8%83%BD%E5%BC%80%E5%8F%91-jwt-%EF%BC%89/</id>
    <published>2020-07-11T13:35:00.000Z</published>
    <updated>2020-07-12T03:33:11.222Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、登陆实现方式"><a href="#1、登陆实现方式" class="headerlink" title="1、登陆实现方式"></a>1、登陆实现方式</h2><h3 id="1-1、传统的单机模式登陆"><a href="#1-1、传统的单机模式登陆" class="headerlink" title="1.1、传统的单机模式登陆"></a>1.1、传统的单机模式登陆</h3><h3 id="1-2、单点登陆"><a href="#1-2、单点登陆" class="headerlink" title="1.2、单点登陆"></a>1.2、单点登陆</h3><p>首先理解一下什么叫单点登陆，英文为single sign on，简称SSO，是指在多系统应用群中登录一个系统，便可在其他所有系统中得到授权而无需再次登录，包括单点登录与单点注销两部分。</p><p><img src= "/img/loading.gif" data-src="C:/Users/86131/Documents/My%20Knowledge/temp/78704046_files/clip_image0041ce28b5a-5e6d-4943-a794-3f3a93e82737.gif" alt="img"></p><p>实现单点登陆主要有三种方式</p><ul><li><p>session广播</p><p>也就是当一个服务登陆后，将用户信息存放到session中，并复制到其他服务器中，这种方式比较浪费资源和内存，现在很少用了</p></li><li><p>cookie+redis</p><p>在项目中任何一个模块进行登陆之后，把数据放到两个地方</p><ul><li>redis，将生成的唯一随机值作为key，value存放用户数据</li><li>cookie，把redis里面生成的key放到cookie里面</li></ul><p>访问项目中其他模块，发送请求带着cookie进行发送，获取cookie值，拿着cookie做事情</p><ul><li>从cookie获取值，到redis进行查询，根据key进行查询，如果查询到数据就是登陆状态</li></ul></li><li><p>token</p><p>token(令牌)是按照一定规则生成字符串，字符串可以包含用户信息</p><p>在项目某个模块进行登陆之后，按照规则生成字符串，把登陆之后用户包含到生成字符串里面，把字符串返回，有两种返回方式</p><ul><li>通过cookie返回</li><li>把字符串通过地址栏返回</li></ul><p>再去访问项目其他模块，每次访问在地址栏带着生成字符串，在访问模块里面获取地址栏字符串，根据字符串获取用户信息，如果可以获取到，就是登陆状态</p></li></ul><p>目前使用token来单点登陆的情况是比较广泛应用的，其大概的原理可以参考下图</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200710091744.gif" alt="img"></p><h3 id="1-3、JWT"><a href="#1-3、JWT" class="headerlink" title="1.3、JWT"></a>1.3、JWT</h3><p>我们都知道token是通过生成令牌的方式来请求访问的，而这个令牌是通过什么规则来生成的呢？主要有两种：</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200710095455.jpg" alt="img"></p><p>jwt就是官方提供的，也是目前用的较为广泛的一种方式，所以这里我们就采用jwt的形式来实现单点登陆</p><p><strong>jwt的组成</strong></p><p>来看一个jwt的例子</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200710095653.png" alt="img"></p><p>该对象为一个很长的字符串，字符之间通过”.”分隔符分为三个部分。</p><p>每一个部分表示了一个功能块：</p><p><strong>JWT头</strong></p><p>JWT头部分是一个描述JWT元数据的JSON对象，通常如下所示。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"alg"</span>: <span class="string">"HS256"</span>,</span><br><span class="line">  <span class="attr">"typ"</span>: <span class="string">"JWT"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上面的代码中，alg属性表示签名使用的算法，默认为HMAC SHA256（写为HS256）；typ属性表示令牌的类型，JWT令牌统一写为JWT。最后，使用Base64 URL算法将上述JSON对象转换为字符串保存。</p><p><strong>有效载荷</strong></p><p>有效载荷部分，是JWT的主体内容部分，也是一个JSON对象，包含需要传递的数据。 JWT指定七个默认字段供选择。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">iss：发行人</span><br><span class="line">exp：到期时间</span><br><span class="line">sub：主题</span><br><span class="line">aud：用户</span><br><span class="line">nbf：在此之前不可用</span><br><span class="line">iat：发布时间</span><br><span class="line">jti：JWT ID用于标识该JWT</span><br></pre></td></tr></table></figure><p>除以上默认字段外，我们还可以自定义私有字段，如下例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"sub"</span>: <span class="string">"1234567890"</span>,</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"Helen"</span>,</span><br><span class="line">  <span class="attr">"admin"</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请注意，默认情况下JWT是未加密的，任何人都可以解读其内容，因此不要构建隐私信息字段，存放保密信息，以防止信息泄露。</p><p>JSON对象也使用Base64 URL算法转换为字符串保存。</p><p><strong>签名哈希</strong></p><p>签名哈希部分是对上面两部分数据签名，通过指定的算法生成哈希，以确保数据不会被篡改。</p><p>首先，需要指定一个密码（secret）。该密码仅仅为保存在服务器中，并且不能向用户公开。然后，使用标头中指定的签名算法（默认情况下为HMAC SHA256）根据以下公式生成签名。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HMACSHA256(base64UrlEncode(header) + <span class="string">"."</span> + base64UrlEncode(claims), secret)</span><br></pre></td></tr></table></figure><p>在计算出签名哈希后，JWT头，有效载荷和签名哈希的三个部分组合成一个字符串，每个部分用”.”分隔，就构成整个JWT对象。</p><p><strong>JWT的原理</strong></p><p>JWT的原则是在服务器身份验证之后，将生成一个JSON对象并将其发送回用户，如下所示。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"sub"</span>: <span class="string">"1234567890"</span>,</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"Helen"</span>,</span><br><span class="line">  <span class="attr">"admin"</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后，当用户与服务器通信时，客户在请求中发回JSON对象。服务器仅依赖于这个JSON对象来标识用户。为了防止用户篡改数据，服务器将在生成对象时添加签名。</p><p>服务器不保存任何会话数据，即服务器变为无状态，使其更容易扩展。</p><p><strong>JWT的用法</strong></p><p>客户端接收服务器返回的JWT，将其存储在Cookie或localStorage中。</p><p>此后，客户端将在与服务器交互中都会带JWT。如果将它存储在Cookie中，就可以自动发送，但是不会跨域，因此一般是将它放入HTTP请求的<code>Header Authorization</code>字段中。当跨域时，也可以将JWT被放置于POST请求的数据主体中。</p><p><strong>JWT的问题和趋势</strong></p><ul><li><p>JWT不仅可用于认证，还可用于信息交换。善用JWT有助于减少服务器请求数据库的次数。</p></li><li><p>生产的token可以包含基本信息，比如id、用户昵称、头像等信息，避免再次查库</p></li><li><p>存储在客户端，不占用服务端的内存资源</p></li><li><p>JWT默认不加密，但可以加密。生成原始令牌后，可以再次对其进行加密。</p></li><li><p>当JWT未加密时，一些私密数据无法通过JWT传输。</p></li><li><p>JWT的最大缺点是服务器不保存会话状态，所以在使用期间不可能取消令牌或更改令牌的权限。也就是说，一旦JWT签发，在有效期内将会一直有效。</p></li><li><p>JWT本身包含认证信息，token是经过base64编码，所以可以解码，因此token加密前的对象不应该包含敏感信息，一旦信息泄露，任何人都可以获得令牌的所有权限。为了减少盗用，JWT的有效期不宜设置太长。对于某些重要操作，用户在使用时应该每次都进行进行身份验证。</p></li><li><p>为了减少盗用和窃取，JWT不建议使用HTTP协议来传输代码，而是使用加密的HTTPS协议进行传输。</p></li></ul><h2 id="2、JWT环境准备"><a href="#2、JWT环境准备" class="headerlink" title="2、JWT环境准备"></a>2、JWT环境准备</h2><h3 id="2-1、导入依赖"><a href="#2-1、导入依赖" class="headerlink" title="2.1、导入依赖"></a>2.1、导入依赖</h3><p>因为可能在多个模块中都会用到，所以我们会在common模块中导入jwt的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--jwt依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-2、创建JWT工具类"><a href="#2-2、创建JWT工具类" class="headerlink" title="2.2、创建JWT工具类"></a>2.2、创建JWT工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JwtUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置两个常量，一个是过期时间，一个秘钥（规则），这里是随便写的，不同公司规定的可能不一样</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> EXPIRE = <span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String APP_SECRET = <span class="string">"ukc8BDbRigUDaY6pZFfWus2jZWLPHO"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取jwttoken的方法，主要是设置三个部分信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getJwtToken</span><span class="params">(String id, String nickname)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        String JwtToken = Jwts.builder()</span><br><span class="line">                <span class="comment">//头信息</span></span><br><span class="line">                .setHeaderParam(<span class="string">"typ"</span>, <span class="string">"JWT"</span>)</span><br><span class="line">                .setHeaderParam(<span class="string">"alg"</span>, <span class="string">"HS256"</span>)</span><br><span class="line">                <span class="comment">//设置过期时间</span></span><br><span class="line">                .setSubject(<span class="string">"guli-user"</span>)</span><br><span class="line">                .setIssuedAt(<span class="keyword">new</span> Date())</span><br><span class="line">                .setExpiration(<span class="keyword">new</span> Date(System.currentTimeMillis() + EXPIRE))</span><br><span class="line">                <span class="comment">//设置主题信息</span></span><br><span class="line">                .claim(<span class="string">"id"</span>, id)</span><br><span class="line">                .claim(<span class="string">"nickname"</span>,nickname)</span><br><span class="line">                <span class="comment">//设置哈希签名</span></span><br><span class="line">                .signWith(SignatureAlgorithm.HS256, APP_SECRET)</span><br><span class="line">                .compact();</span><br><span class="line">        <span class="keyword">return</span> JwtToken;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断token是否存在与有效</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">checkToken</span><span class="params">(String jwtToken)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isEmpty(jwtToken)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Jwts.parser().setSigningKey(APP_SECRET).parseClaimsJws(jwtToken);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断token是否存在与有效</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">checkToken</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String jwtToken = request.getHeader(<span class="string">"token"</span>);</span><br><span class="line">            <span class="keyword">if</span>(StringUtils.isEmpty(jwtToken)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            Jwts.parser().setSigningKey(APP_SECRET).parseClaimsJws(jwtToken);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据token获取会员id</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getMemberIdByJwtToken</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        String jwtToken = request.getHeader(<span class="string">"token"</span>);</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isEmpty(jwtToken)) <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">        Jws&lt;Claims&gt; claimsJws = Jwts.parser().setSigningKey(APP_SECRET).parseClaimsJws(jwtToken);</span><br><span class="line">        Claims claims = claimsJws.getBody();</span><br><span class="line">        <span class="keyword">return</span> (String)claims.get(<span class="string">"id"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、阿里云短信"><a href="#3、阿里云短信" class="headerlink" title="3、阿里云短信"></a>3、阿里云短信</h2><h3 id="3-1、简介"><a href="#3-1、简介" class="headerlink" title="3.1、简介"></a>3.1、简介</h3><p>短信服务（Short Message Service）是广大企业客户快速触达手机用户所优选使用的通信能力。</p><p>调用API或用群发助手，即可发送验证码、通知类和营销短信；</p><p>国内验证短信秒级触达，到达率99%；</p><p>点击下图管理控制台进入控制台界面，点击国内消息</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200711094956.png" alt="image-20200711094948078"></p><p>申请签名模板和和模板管理，名称什么的自定义即可，注意因为要审核，所以名称和申请理由都尽量写得有实际意义一点，才会快速审核通过</p><p>涉及到隐私问题，具体内容我就不放上来了</p><h3 id="3-2、整合java代码"><a href="#3-2、整合java代码" class="headerlink" title="3.2、整合java代码"></a>3.2、整合java代码</h3><h4 id="controller层"><a href="#controller层" class="headerlink" title="controller层"></a>controller层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"edumsm/msm"</span>)</span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MsmController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    MsmService msmService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/sendMsm/&#123;phone&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">sendMsm</span><span class="params">(@PathVariable String phone)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//注意验证码内容是我们使用代码生成的，而不是阿里云生成的，所以需要使用工具类生成验证码</span></span><br><span class="line">        String code = RandomUtil.getFourBitRandom();</span><br><span class="line">        <span class="comment">//将code放到map集合中，方便后台转换为json格式</span></span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">"code"</span>, code);</span><br><span class="line">        Boolean isSend = msmService.sendMsm(map, phone);</span><br><span class="line">        <span class="keyword">if</span>(isSend)&#123;</span><br><span class="line">            <span class="keyword">return</span> R.ok().message(<span class="string">"发送短信成功"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> R.error().message(<span class="string">"发送短信失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="service层接口"><a href="#service层接口" class="headerlink" title="service层接口"></a>service层接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MsmService</span> </span>&#123;</span><br><span class="line">    <span class="function">Boolean <span class="title">sendMsm</span><span class="params">(Map&lt;String, Object&gt; map, String phone)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="service层实现类"><a href="#service层实现类" class="headerlink" title="service层实现类"></a>service层实现类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MsmServiceImpl</span> <span class="keyword">implements</span> <span class="title">MsmService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">sendMsm</span><span class="params">(Map&lt;String, Object&gt; map, String phone)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isEmpty(phone)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        DefaultProfile profile = DefaultProfile.getProfile(<span class="string">"default"</span>, <span class="string">"your keyid"</span>, <span class="string">"your secret"</span>);</span><br><span class="line">        DefaultAcsClient client = <span class="keyword">new</span> DefaultAcsClient(profile);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置相关固定的参数</span></span><br><span class="line">        CommonRequest request = <span class="keyword">new</span> CommonRequest();</span><br><span class="line">        <span class="comment">//request.setProtocol(ProtocolType.HTTPS);</span></span><br><span class="line">        request.setMethod(MethodType.POST);</span><br><span class="line">        request.setDomain(<span class="string">"dysmsapi.aliyuncs.com"</span>);</span><br><span class="line">        request.setVersion(<span class="string">"2017-05-25"</span>);</span><br><span class="line">        request.setAction(<span class="string">"SendSms"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置发送相关参数</span></span><br><span class="line">        request.putQueryParameter(<span class="string">"PhoneNumbers"</span>, phone);<span class="comment">//手机号码</span></span><br><span class="line">        request.putQueryParameter(<span class="string">"SignName"</span>, <span class="string">"ryan的谷粒在线教育网"</span>);</span><br><span class="line">        request.putQueryParameter(<span class="string">"TemplateCode"</span>, <span class="string">"SMS_195722145"</span>);<span class="comment">//模板code</span></span><br><span class="line">        request.putQueryParameter(<span class="string">"TemplateParam"</span>, JSON.toJSONString(map));<span class="comment">//验证码数据，转为json字符串传递</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//最终发送</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            CommonResponse response = client.getCommonResponse(request);</span><br><span class="line">            <span class="keyword">boolean</span> success = response.getHttpResponse().isSuccess();</span><br><span class="line">            <span class="keyword">return</span> success;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClientException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="swagger测试"><a href="#swagger测试" class="headerlink" title="swagger测试"></a>swagger测试</h4><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200711095400.png" alt="image-20200711095400734"></p><p>测试成功，并收到了短信</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">【ryan的谷粒在线教育网】您正在申请手机注册，验证码为：8295，5分钟内有效！</span><br></pre></td></tr></table></figure><p>但是短信里面说的5分钟内有效只是我的模板内容，具体要怎么实现这个5分钟内有效呢？阿里云只负责帮我们发送短信，具体实现还是需要我们使用代码去实现，说到过期时间，我们可以先到redis，第一次获取code直接到redis获取，如果获取到返回成功，如果没有获取到则使用阿里云发送短信，发送成功后还要将code放到redis中，并设置过期时间，具体代码实现如下：</p><h4 id="controller层完善"><a href="#controller层完善" class="headerlink" title="controller层完善"></a>controller层完善</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"edumsm/msm"</span>)</span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MsmController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    MsmService msmService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    RedisTemplate&lt;String, String&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/sendMsm/&#123;phone&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">sendMsm</span><span class="params">(@PathVariable String phone)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通过手机号码获取code</span></span><br><span class="line">        String code = redisTemplate.opsForValue().get(phone);</span><br><span class="line">        <span class="comment">//如果不为空，表明redis中已经存有验证码而且还没过期，则返回ok</span></span><br><span class="line">        <span class="keyword">if</span>(!StringUtils.isEmpty(code))&#123;</span><br><span class="line">            <span class="keyword">return</span> R.ok();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果为空则说明还没有验证码或者已经过期了，需使用阿里云</span></span><br><span class="line">        <span class="comment">//注意验证码内容是我们使用代码生成的，而不是阿里云生成的，所以需要使用工具类生成验证码</span></span><br><span class="line">        code = RandomUtil.getFourBitRandom();</span><br><span class="line">        <span class="comment">//将code放到map集合中，方便后台转换为json格式</span></span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">"code"</span>, code);</span><br><span class="line">        Boolean isSend = msmService.sendMsm(map, phone);</span><br><span class="line">        <span class="keyword">if</span>(isSend)&#123;</span><br><span class="line">            <span class="comment">//将code放到redis中并设置过期时间，为5分钟</span></span><br><span class="line">            redisTemplate.opsForValue().set(phone, code, <span class="number">5</span>, TimeUnit.MINUTES);</span><br><span class="line">            <span class="keyword">return</span> R.ok().message(<span class="string">"发送短信成功"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> R.error().message(<span class="string">"发送短信失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、登陆功能"><a href="#4、登陆功能" class="headerlink" title="4、登陆功能"></a>4、登陆功能</h2><h3 id="4-1、准备数据库"><a href="#4-1、准备数据库" class="headerlink" title="4.1、准备数据库"></a>4.1、准备数据库</h3><p>数据库脚本</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`ucenter_member`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'会员id'</span>,</span><br><span class="line">  <span class="string">`openid`</span> <span class="built_in">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'微信openid'</span>,</span><br><span class="line">  <span class="string">`mobile`</span> <span class="built_in">varchar</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'手机号'</span>,</span><br><span class="line">  <span class="string">`password`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'密码'</span>,</span><br><span class="line">  <span class="string">`nickname`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'昵称'</span>,</span><br><span class="line">  <span class="string">`sex`</span> <span class="built_in">tinyint</span>(<span class="number">2</span>) <span class="keyword">unsigned</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'性别 1 女，2 男'</span>,</span><br><span class="line">  <span class="string">`age`</span> <span class="built_in">tinyint</span>(<span class="number">3</span>) <span class="keyword">unsigned</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'年龄'</span>,</span><br><span class="line">  <span class="string">`avatar`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户头像'</span>,</span><br><span class="line">  <span class="string">`sign`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户签名'</span>,</span><br><span class="line">  <span class="string">`is_disabled`</span> <span class="built_in">tinyint</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'是否禁用 1（true）已禁用，  0（false）未禁用'</span>,</span><br><span class="line">  <span class="string">`is_deleted`</span> <span class="built_in">tinyint</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'逻辑删除 1（true）已删除， 0（false）未删除'</span>,</span><br><span class="line">  <span class="string">`gmt_create`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  <span class="string">`gmt_modified`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4 <span class="keyword">COMMENT</span>=<span class="string">'会员表'</span>;</span><br></pre></td></tr></table></figure><p>同时随便准备了两条记录，各位可以自己准备下，方便测试，密码可以线上md5加密下再存入</p><h3 id="4-2、创建service-ucenter模块"><a href="#4-2、创建service-ucenter模块" class="headerlink" title="4.2、创建service_ucenter模块"></a>4.2、创建service_ucenter模块</h3><h4 id="mp代码生成"><a href="#mp代码生成" class="headerlink" title="mp代码生成"></a>mp代码生成</h4><h4 id="完善实体类"><a href="#完善实体类" class="headerlink" title="完善实体类"></a>完善实体类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@EqualsAndHashCode</span>(callSuper = <span class="keyword">false</span>)</span><br><span class="line"><span class="meta">@Accessors</span>(chain = <span class="keyword">true</span>)</span><br><span class="line"><span class="meta">@TableName</span>(<span class="string">"ucenter_member"</span>)</span><br><span class="line"><span class="meta">@ApiModel</span>(value=<span class="string">"Member对象"</span>, description=<span class="string">"会员表"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Member</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"会员id"</span>)</span><br><span class="line">    <span class="meta">@TableId</span>(value = <span class="string">"id"</span>, type = IdType.ID_WORKER_STR)</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"微信openid"</span>)</span><br><span class="line">    <span class="keyword">private</span> String openid;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"手机号"</span>)</span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"密码"</span>)</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"昵称"</span>)</span><br><span class="line">    <span class="keyword">private</span> String nickname;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"性别 1 女，2 男"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer sex;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"年龄"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"用户头像"</span>)</span><br><span class="line">    <span class="keyword">private</span> String avatar;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"用户签名"</span>)</span><br><span class="line">    <span class="keyword">private</span> String sign;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"是否禁用 1（true）已禁用，  0（false）未禁用"</span>)</span><br><span class="line">    <span class="keyword">private</span> Boolean isDisabled;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"逻辑删除 1（true）已删除， 0（false）未删除"</span>)</span><br><span class="line">    <span class="meta">@TableLogic</span></span><br><span class="line">    <span class="keyword">private</span> Boolean isDeleted;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"创建时间"</span>)</span><br><span class="line">    <span class="meta">@TableField</span>(fill = FieldFill.INSERT)</span><br><span class="line">    <span class="keyword">private</span> Date gmtCreate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"更新时间"</span>)</span><br><span class="line">    <span class="meta">@TableField</span>(fill = FieldFill.INSERT_UPDATE)</span><br><span class="line">    <span class="keyword">private</span> Date gmtModified;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="相关配置类"><a href="#相关配置类" class="headerlink" title="相关配置类"></a>相关配置类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan</span>(<span class="string">"com.ryan.ucenter.mapper"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UcenterConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 逻辑删除插件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ISqlInjector <span class="title">sqlInjector</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> LogicSqlInjector();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分页插件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PaginationInterceptor <span class="title">paginationInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> PaginationInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="引入MD5加密工具类"><a href="#引入MD5加密工具类" class="headerlink" title="引入MD5加密工具类"></a>引入MD5加密工具类</h4><p>提示：工具类在其他地方也可能会用到，所以放到common模块即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">MD5</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encrypt</span><span class="params">(String strSrc)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">char</span> hexChars[] = &#123; <span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>,</span><br><span class="line">                    <span class="string">'9'</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span> &#125;;</span><br><span class="line">            <span class="keyword">byte</span>[] bytes = strSrc.getBytes();</span><br><span class="line">            MessageDigest md = MessageDigest.getInstance(<span class="string">"MD5"</span>);</span><br><span class="line">            md.update(bytes);</span><br><span class="line">            bytes = md.digest();</span><br><span class="line">            <span class="keyword">int</span> j = bytes.length;</span><br><span class="line">            <span class="keyword">char</span>[] chars = <span class="keyword">new</span> <span class="keyword">char</span>[j * <span class="number">2</span>];</span><br><span class="line">            <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; bytes.length; i++) &#123;</span><br><span class="line">                <span class="keyword">byte</span> b = bytes[i];</span><br><span class="line">                chars[k++] = hexChars[b &gt;&gt;&gt; <span class="number">4</span> &amp; <span class="number">0xf</span>];</span><br><span class="line">                chars[k++] = hexChars[b &amp; <span class="number">0xf</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> String(chars);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"MD5加密出错！！+"</span> + e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(MD5.encrypt(<span class="string">"111111"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一般登陆只需要手机号和密码，所以我们可以新建一个登陆的实体类封装</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginVo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"手机号"</span>)</span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"密码"</span>)</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="controller层-1"><a href="#controller层-1" class="headerlink" title="controller层"></a>controller层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/eduucenter/member"</span>)</span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MemberController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MemberService memberService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//登陆,注意是post提交</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/login"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">login</span><span class="params">(@RequestBody LoginVo loginVo)</span></span>&#123;</span><br><span class="line">        <span class="comment">//按照登陆逻辑，登陆成功后应该返回一个token</span></span><br><span class="line">        String token = memberService.login(loginVo);</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">"token"</span>, token);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="service层"><a href="#service层" class="headerlink" title="service层"></a>service层</h4><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MemberService</span> <span class="keyword">extends</span> <span class="title">IService</span>&lt;<span class="title">Member</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">login</span><span class="params">(LoginVo loginVo)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MemberServiceImpl</span> <span class="keyword">extends</span> <span class="title">ServiceImpl</span>&lt;<span class="title">MemberMapper</span>, <span class="title">Member</span>&gt; <span class="keyword">implements</span> <span class="title">MemberService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(LoginVo loginVo)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//先判断手机号、密码是否为空</span></span><br><span class="line">        String mobile = loginVo.getMobile();</span><br><span class="line">        String password = loginVo.getPassword();</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isEmpty(mobile) || StringUtils.isEmpty(password))&#123;</span><br><span class="line">            <span class="comment">//如果为空则抛出异常</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> GuliException(<span class="number">20001</span>, <span class="string">"手机号或者密码不能为空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果不为空，则判断是否与数据库中的数据相符</span></span><br><span class="line">        <span class="comment">//先根据手机号查询数据库</span></span><br><span class="line">        QueryWrapper&lt;Member&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        wrapper.eq(<span class="string">"mobile"</span>, mobile);</span><br><span class="line">        Member mobileMember = baseMapper.selectOne(wrapper);</span><br><span class="line">        <span class="comment">//再判断</span></span><br><span class="line">        <span class="keyword">if</span>(mobileMember == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> GuliException(<span class="number">20001</span>,<span class="string">"该用户不存在，请重新输入或者注册用户"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//注意明文密码都是通过md5加密过的</span></span><br><span class="line">        <span class="keyword">if</span>(!MD5.encrypt(password).equals(mobileMember.getPassword()))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> GuliException(<span class="number">20001</span>,<span class="string">"密码错误，请重新输入"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//手机号和密码都没问题的话还要看用户是否被禁用状态</span></span><br><span class="line">        <span class="keyword">if</span>(mobileMember.getIsDisabled())&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> GuliException(<span class="number">20001</span>,<span class="string">"该用户已经被禁用"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//都没问题的话，则返回token，注意是通过id和昵称生成token</span></span><br><span class="line">        String jwtToken = JwtUtils.getJwtToken(mobileMember.getId(), mobileMember.getNickname());</span><br><span class="line">        <span class="keyword">return</span> jwtToken;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="swagger测试-1"><a href="#swagger测试-1" class="headerlink" title="swagger测试"></a>swagger测试</h4><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200711121551.png" alt="image-20200711121551235"></p><p>测试成功</p><h2 id="5、注册功能"><a href="#5、注册功能" class="headerlink" title="5、注册功能"></a>5、注册功能</h2><p>因为注册主要时通过昵称、手机号、密码、验证码（阿里云短信服务）注册，Member实体类没有验证码不适合作为注册实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegisterVo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"昵称"</span>)</span><br><span class="line">    <span class="keyword">private</span> String nickname;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"手机号"</span>)</span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"密码"</span>)</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"验证码"</span>)</span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="controller层-2"><a href="#controller层-2" class="headerlink" title="controller层"></a>controller层</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注册功能</span></span><br><span class="line"><span class="comment">//因为注册主要时通过昵称、手机号、密码、验证码（阿里云短信服务）注册，Member实体类没有验证码不适合作为注册实体类</span></span><br><span class="line"><span class="comment">//所以需要新建一个实体类封装</span></span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/register"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">register</span><span class="params">(@RequestBody RegisterVo registerVo)</span></span>&#123;</span><br><span class="line">    memberService.register(registerVo);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="service层-1"><a href="#service层-1" class="headerlink" title="service层"></a>service层</h3><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">register</span><span class="params">(RegisterVo registerVo)</span></span>;</span><br></pre></td></tr></table></figure><p>实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注册</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">(RegisterVo registerVo)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//首先获取用户提交的数据</span></span><br><span class="line">    String nickname = registerVo.getNickname();</span><br><span class="line">    String mobile = registerVo.getMobile();</span><br><span class="line">    String password = registerVo.getPassword();</span><br><span class="line">    String code = registerVo.getCode();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断非空</span></span><br><span class="line">    <span class="keyword">if</span>(StringUtils.isEmpty(nickname) || StringUtils.isEmpty(mobile) || StringUtils.isEmpty(password) || StringUtils.isEmpty(code) )&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> GuliException(<span class="number">20001</span>, <span class="string">"用户名/手机号码/密码/验证码不能为空"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断验证码</span></span><br><span class="line">    <span class="keyword">if</span>(!code.equals(redisTemplate.opsForValue().get(mobile)))&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> GuliException(<span class="number">20001</span>, <span class="string">"验证码不正确"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//还要判断手机号是否重复</span></span><br><span class="line">    QueryWrapper&lt;Member&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.eq(<span class="string">"mobile"</span>, mobile);</span><br><span class="line">    Integer count = baseMapper.selectCount(wrapper);</span><br><span class="line">    <span class="keyword">if</span>(count &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> GuliException(<span class="number">20001</span>, <span class="string">"该手机号已被注册，请登陆或者重新注册"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//将用户信息存入数据库,注意密码需要先加密</span></span><br><span class="line">    Member member = <span class="keyword">new</span> Member();</span><br><span class="line">    member.setNickname(nickname);</span><br><span class="line">    member.setMobile(mobile);</span><br><span class="line">    member.setIsDisabled(<span class="keyword">false</span>);<span class="comment">//不被禁用</span></span><br><span class="line">    member.setAvatar(<span class="string">"https://ryan-guli-01.oss-cn-shenzhen.aliyuncs.com/2020/07/03/1c79228eee714773a65025d60e597321yiquan.jpg"</span>);<span class="comment">//默认头像</span></span><br><span class="line">    member.setPassword(MD5.encrypt(password));</span><br><span class="line">    baseMapper.insert(member);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="swagger测试-2"><a href="#swagger测试-2" class="headerlink" title="swagger测试"></a>swagger测试</h3><p>提示：因为注册需要使用验证码，所以测试注册功能前，应该先获取验证码，也就是先打开8005模块的swagger获取验证码，而获取验证码前别忘了打开远程的redis服务，打开redis服务又别忘了是通过自己的配置文件打开</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200711130616.png" alt="image-20200711130616674"></p><p>查看数据库</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200711130644.png" alt="image-20200711130644377"></p><p>测试成功</p><h2 id="6、根据token获取用户信息"><a href="#6、根据token获取用户信息" class="headerlink" title="6、根据token获取用户信息"></a>6、根据token获取用户信息</h2><p>提示：用户登陆成功后，前台页面一般是显示用户的头像，昵称，这样我们就要获取到用户的信息，怎么获取呢，可以通过token去获取</p><h3 id="controller层-3"><a href="#controller层-3" class="headerlink" title="controller层"></a>controller层</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过token获取用户信息</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/getMemberInfo"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">getMemberInfo</span><span class="params">(HttpServletRequest request)</span></span>&#123;</span><br><span class="line">    <span class="comment">//获取用户id</span></span><br><span class="line">    String memberId = JwtUtils.getMemberIdByJwtToken(request);</span><br><span class="line">    <span class="comment">//通过id查询用户信息</span></span><br><span class="line">    Member memberInfo = memberService.getById(memberId);</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">"memberInfo"</span>,memberInfo);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7、整合前台注册页面"><a href="#7、整合前台注册页面" class="headerlink" title="7、整合前台注册页面"></a>7、整合前台注册页面</h2><p>开发接口前记得先安装好element-ui，以及提前准备好后面需要使用的qriously</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install element-ui</span><br><span class="line">npm install vue-qriously</span><br></pre></td></tr></table></figure><p>安装好之后在插件中引入</p><p>nuxt-swiper-plugins.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> VueAwesomeSwiper <span class="keyword">from</span> <span class="string">'vue-awesome-swiper/dist/ssr'</span></span><br><span class="line"><span class="keyword">import</span> VueQriously <span class="keyword">from</span> <span class="string">'vue-qriously'</span></span><br><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'element-ui'</span> <span class="comment">//element-ui的全部组件</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'element-ui/lib/theme-chalk/index.css'</span><span class="comment">//element-ui的css</span></span><br><span class="line">Vue.use(ElementUI) <span class="comment">//使用elementUI</span></span><br><span class="line">Vue.use(VueQriously)</span><br><span class="line">Vue.use(VueAwesomeSwiper)</span><br></pre></td></tr></table></figure><h3 id="layouts"><a href="#layouts" class="headerlink" title="layouts"></a>layouts</h3><p>登陆的布局sign.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;sign&quot;&gt;</span><br><span class="line">    &lt;!--标题--&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;logo&quot;&gt;</span><br><span class="line">      &lt;img src&#x3D;&quot;~&#x2F;assets&#x2F;img&#x2F;logo.png&quot; alt&#x3D;&quot;logo&quot;&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!--表单--&gt;</span><br><span class="line">    &lt;nuxt&#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br></pre></td></tr></table></figure><p>登陆注册的按钮在default页面中的，找到按钮响应跳转页面</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200711161156.png" alt="image-20200711161156688"></p><p>在pages目录下新建login.vue和register.vue两个静态页面先，效果如下，具体功能个代码等会在补充完善</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200711164032.png" alt="image-20200711164032164"></p><h3 id="Api"><a href="#Api" class="headerlink" title="Api"></a>Api</h3><p>registerApi.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">"@/utils/request.js"</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">//获取验证码</span></span><br><span class="line">    getCode(phone)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">`/edumsm/msm/sendMsm/<span class="subst">$&#123;phone&#125;</span>`</span>,</span><br><span class="line">            method: <span class="string">'post'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//注册</span></span><br><span class="line">    register(registerVo)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">`/eduucenter/member/register`</span>,</span><br><span class="line">            method: <span class="string">'post'</span>,</span><br><span class="line">            data: registerVo</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="pages"><a href="#pages" class="headerlink" title="pages"></a>pages</h3><p>register.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;main&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;title&quot;&gt;</span><br><span class="line">      &lt;a href&#x3D;&quot;&#x2F;login&quot;&gt;登录&lt;&#x2F;a&gt;</span><br><span class="line">      &lt;span&gt;·&lt;&#x2F;span&gt;</span><br><span class="line">      &lt;a class&#x3D;&quot;active&quot; href&#x3D;&quot;&#x2F;register&quot;&gt;注册&lt;&#x2F;a&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class&#x3D;&quot;sign-up-container&quot;&gt;</span><br><span class="line">      &lt;el-form ref&#x3D;&quot;userForm&quot; :model&#x3D;&quot;params&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;el-form-item class&#x3D;&quot;input-prepend restyle&quot; prop&#x3D;&quot;nickname&quot; :rules&#x3D;&quot;[&#123; required: true, message: &#39;请输入你的昵称&#39;, trigger: &#39;blur&#39; &#125;]&quot;&gt;</span><br><span class="line">          &lt;div&gt;</span><br><span class="line">            &lt;el-input type&#x3D;&quot;text&quot; placeholder&#x3D;&quot;你的昵称&quot; v-model&#x3D;&quot;params.nickname&quot;&#x2F;&gt;</span><br><span class="line">            &lt;i class&#x3D;&quot;iconfont icon-user&quot;&#x2F;&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">        &lt;el-form-item class&#x3D;&quot;input-prepend restyle no-radius&quot; prop&#x3D;&quot;mobile&quot; :rules&#x3D;&quot;[&#123; required: true, message: &#39;请输入手机号码&#39;, trigger: &#39;blur&#39; &#125;,&#123;validator: checkPhone, trigger: &#39;blur&#39;&#125;]&quot;&gt;</span><br><span class="line">          &lt;div&gt;</span><br><span class="line">            &lt;el-input type&#x3D;&quot;text&quot; placeholder&#x3D;&quot;手机号&quot; v-model&#x3D;&quot;params.mobile&quot;&#x2F;&gt;</span><br><span class="line">            &lt;i class&#x3D;&quot;iconfont icon-phone&quot;&#x2F;&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">        &lt;el-form-item class&#x3D;&quot;input-prepend restyle no-radius&quot; prop&#x3D;&quot;code&quot; :rules&#x3D;&quot;[&#123; required: true, message: &#39;请输入验证码&#39;, trigger: &#39;blur&#39; &#125;]&quot;&gt;</span><br><span class="line">          &lt;div style&#x3D;&quot;width: 100%;display: block;float: left;position: relative&quot;&gt;</span><br><span class="line">            &lt;el-input type&#x3D;&quot;text&quot; placeholder&#x3D;&quot;验证码&quot; v-model&#x3D;&quot;params.code&quot;&#x2F;&gt;</span><br><span class="line">            &lt;i class&#x3D;&quot;iconfont icon-phone&quot;&#x2F;&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;btn&quot; style&#x3D;&quot;position:absolute;right: 0;top: 6px;width: 40%;&quot;&gt;</span><br><span class="line">            &lt;a href&#x3D;&quot;javascript:&quot; type&#x3D;&quot;button&quot; @click&#x3D;&quot;getCodeFun()&quot; :value&#x3D;&quot;codeTest&quot; style&#x3D;&quot;border: none;background-color: none&quot;&gt;&#123;&#123;codeTest&#125;&#125;&lt;&#x2F;a&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">        &lt;el-form-item class&#x3D;&quot;input-prepend&quot; prop&#x3D;&quot;password&quot; :rules&#x3D;&quot;[&#123; required: true, message: &#39;请输入密码&#39;, trigger: &#39;blur&#39; &#125;]&quot;&gt;</span><br><span class="line">          &lt;div&gt;</span><br><span class="line">            &lt;el-input type&#x3D;&quot;password&quot; placeholder&#x3D;&quot;设置密码&quot; v-model&#x3D;&quot;params.password&quot;&#x2F;&gt;</span><br><span class="line">            &lt;i class&#x3D;&quot;iconfont icon-password&quot;&#x2F;&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div class&#x3D;&quot;btn&quot;&gt;</span><br><span class="line">          &lt;input type&#x3D;&quot;button&quot; class&#x3D;&quot;sign-up-button&quot; value&#x3D;&quot;注册&quot; @click&#x3D;&quot;submitRegister()&quot;&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;p class&#x3D;&quot;sign-up-msg&quot;&gt;</span><br><span class="line">          点击 “注册” 即表示您同意并愿意遵守简书</span><br><span class="line">          &lt;br&gt;</span><br><span class="line">          &lt;a target&#x3D;&quot;_blank&quot; href&#x3D;&quot;http:&#x2F;&#x2F;www.jianshu.com&#x2F;p&#x2F;c44d171298ce&quot;&gt;用户协议&lt;&#x2F;a&gt;</span><br><span class="line">          和</span><br><span class="line">          &lt;a target&#x3D;&quot;_blank&quot; href&#x3D;&quot;http:&#x2F;&#x2F;www.jianshu.com&#x2F;p&#x2F;2ov8x3&quot;&gt;隐私政策&lt;&#x2F;a&gt; 。</span><br><span class="line">        &lt;&#x2F;p&gt;</span><br><span class="line">      &lt;&#x2F;el-form&gt;</span><br><span class="line">      &lt;!-- 更多注册方式 --&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;more-sign&quot;&gt;</span><br><span class="line">        &lt;h6&gt;社交帐号直接注册&lt;&#x2F;h6&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">          &lt;li&gt;&lt;a id&#x3D;&quot;weixin&quot; class&#x3D;&quot;weixin&quot; target&#x3D;&quot;_blank&quot; href&#x3D;&quot;http:&#x2F;&#x2F;huaan.free.idcfengye.com&#x2F;api&#x2F;ucenter&#x2F;wx&#x2F;login&quot;&gt;&lt;i</span><br><span class="line">            class&#x3D;&quot;iconfont icon-weixin&quot;&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">          &lt;li&gt;&lt;a id&#x3D;&quot;qq&quot; class&#x3D;&quot;qq&quot; target&#x3D;&quot;_blank&quot; href&#x3D;&quot;#&quot;&gt;&lt;i class&#x3D;&quot;iconfont icon-qq&quot;&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;&#x2F;ul&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import &#39;~&#x2F;assets&#x2F;css&#x2F;sign.css&#39;</span><br><span class="line">  import &#39;~&#x2F;assets&#x2F;css&#x2F;iconfont.css&#39;</span><br><span class="line">  import registerApi from &quot;@&#x2F;api&#x2F;registerApi&quot;</span><br><span class="line"></span><br><span class="line">  export default &#123;</span><br><span class="line">    layout: &#39;sign&#39;,</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        params: &#123; &#x2F;&#x2F;封装注册输入数据</span><br><span class="line">          mobile: &#39;&#39;,</span><br><span class="line">          code: &#39;&#39;,  &#x2F;&#x2F;验证码</span><br><span class="line">          nickname: &#39;&#39;,</span><br><span class="line">          password: &#39;&#39;</span><br><span class="line">        &#125;,</span><br><span class="line">        sending: true,      &#x2F;&#x2F;是否发送验证码</span><br><span class="line">        second: 60,        &#x2F;&#x2F;倒计时间</span><br><span class="line">        codeTest: &#39;获取验证码&#39;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      &#x2F;&#x2F;注册</span><br><span class="line">      submitRegister()&#123;</span><br><span class="line">        registerApi.register(this.params)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            &#x2F;&#x2F;提示注册成功</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">                type: &#39;success&#39;,</span><br><span class="line">                message: &#39;注册成功!&#39;</span><br><span class="line">            &#125;)</span><br><span class="line">            &#x2F;&#x2F;跳转到登陆页面</span><br><span class="line">            this.$router.push(&#123;path: &#39;&#x2F;login&#39;&#125;)</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;获取验证码</span><br><span class="line">      getCodeFun()&#123;</span><br><span class="line">        registerApi.getCode(this.params.mobile)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            this.sending &#x3D; false</span><br><span class="line">            &#x2F;&#x2F;获取验证码成功后，使用定时器，开始倒计时</span><br><span class="line">            this.timeDown()</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;发送验证码后倒计时</span><br><span class="line">      timeDown() &#123;</span><br><span class="line">        let result &#x3D; setInterval(() &#x3D;&gt; &#123;</span><br><span class="line">          --this.second;</span><br><span class="line">          this.codeTest &#x3D; this.second + &#39; 重新发送&#39;</span><br><span class="line">          if (this.second &lt; 1) &#123;</span><br><span class="line">            clearInterval(result);</span><br><span class="line">            this.sending &#x3D; true;</span><br><span class="line">            &#x2F;&#x2F;this.disabled &#x3D; false;</span><br><span class="line">            this.second &#x3D; 60;</span><br><span class="line">            this.codeTest &#x3D; &quot;获取验证码&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;, 1000);</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;验证手机号格式</span><br><span class="line">      checkPhone (rule, value, callback) &#123;</span><br><span class="line">        &#x2F;&#x2F;debugger</span><br><span class="line">        if (!(&#x2F;^1[34578]\d&#123;9&#125;$&#x2F;.test(value))) &#123;</span><br><span class="line">          return callback(new Error(&#39;手机号码格式不正确&#39;))</span><br><span class="line">        &#125;</span><br><span class="line">        return callback()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="8、前端整合登陆页面"><a href="#8、前端整合登陆页面" class="headerlink" title="8、前端整合登陆页面"></a>8、前端整合登陆页面</h2><p>相对于注册功能，登陆功能会复杂一些</p><p>第一：登陆成功后，获取到返回的token</p><p>第二：将返回的token放到cookie中去</p><p>第三：创建拦截器，在每一次请求中判断cookie中是否有token，有的话就将token放到header中去</p><p>第四：根据token获取用户信息，目的是为了后面的用户信息现实</p><p>第五：登陆成功后的用户信息显示</p><p>具体流程如下图：</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200711174518.png" alt="image-20200711174518038"></p><h3 id="安装cookie依赖"><a href="#安装cookie依赖" class="headerlink" title="安装cookie依赖"></a>安装cookie依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install js-cookie --save</span><br></pre></td></tr></table></figure><p>别忘了在需要使用使用cookie的页面导入一下这个依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import cookie from 'js-cookie'</span><br></pre></td></tr></table></figure><h3 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h3><p>request.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"><span class="keyword">import</span> cookie <span class="keyword">from</span> <span class="string">'js-cookie'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建axios实例</span></span><br><span class="line"><span class="keyword">const</span> service = axios.create(&#123;</span><br><span class="line">  baseURL: <span class="string">'http://localhost:9001'</span>, <span class="comment">// api的base_url</span></span><br><span class="line">  timeout: <span class="number">20000</span> <span class="comment">// 请求超时时间</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//拦截器</span></span><br><span class="line">service.interceptors.request.use(</span><br><span class="line">    config =&gt; &#123;</span><br><span class="line">    <span class="comment">//debugger</span></span><br><span class="line">    <span class="keyword">if</span> (cookie.get(<span class="string">'guli_token'</span>)) &#123;</span><br><span class="line">      config.headers[<span class="string">'token'</span>] = cookie.get(<span class="string">'guli_token'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">      <span class="keyword">return</span> config</span><br><span class="line">    &#125;,</span><br><span class="line">    err =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(err);</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service</span><br></pre></td></tr></table></figure><h3 id="api"><a href="#api" class="headerlink" title="api"></a>api</h3><p>loginApi.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">"@/utils/request.js"</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">//登陆</span></span><br><span class="line">    login(loginVo)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">`/eduucenter/member/login`</span>,</span><br><span class="line">            method: <span class="string">'post'</span>,</span><br><span class="line">            data: loginVo</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//通过token获取用户信息,request不需要传</span></span><br><span class="line">    getUserInfo()&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">`/eduucenter/member/getUserInfo`</span>,</span><br><span class="line">            method: <span class="string">'get'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="pages-1"><a href="#pages-1" class="headerlink" title="pages"></a>pages</h3><p>login.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;main&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;title&quot;&gt;</span><br><span class="line">      &lt;a class&#x3D;&quot;active&quot; href&#x3D;&quot;&#x2F;login&quot;&gt;登录&lt;&#x2F;a&gt;</span><br><span class="line">      &lt;span&gt;·&lt;&#x2F;span&gt;</span><br><span class="line">      &lt;a href&#x3D;&quot;&#x2F;register&quot;&gt;注册&lt;&#x2F;a&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class&#x3D;&quot;sign-up-container&quot;&gt;</span><br><span class="line">      &lt;el-form ref&#x3D;&quot;userForm&quot; :model&#x3D;&quot;user&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;el-form-item class&#x3D;&quot;input-prepend restyle&quot; prop&#x3D;&quot;mobile&quot; :rules&#x3D;&quot;[&#123; required: true, message: &#39;请输入手机号码&#39;, trigger: &#39;blur&#39; &#125;,&#123;validator: checkPhone, trigger: &#39;blur&#39;&#125;]&quot;&gt;</span><br><span class="line">          &lt;div &gt;</span><br><span class="line">            &lt;el-input type&#x3D;&quot;text&quot; placeholder&#x3D;&quot;手机号&quot; v-model&#x3D;&quot;user.mobile&quot;&#x2F;&gt;</span><br><span class="line">            &lt;i class&#x3D;&quot;iconfont icon-phone&quot; &#x2F;&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">        &lt;el-form-item class&#x3D;&quot;input-prepend&quot; prop&#x3D;&quot;password&quot; :rules&#x3D;&quot;[&#123; required: true, message: &#39;请输入密码&#39;, trigger: &#39;blur&#39; &#125;]&quot;&gt;</span><br><span class="line">          &lt;div&gt;</span><br><span class="line">            &lt;el-input type&#x3D;&quot;password&quot; placeholder&#x3D;&quot;密码&quot; v-model&#x3D;&quot;user.password&quot;&#x2F;&gt;</span><br><span class="line">            &lt;i class&#x3D;&quot;iconfont icon-password&quot;&#x2F;&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div class&#x3D;&quot;btn&quot;&gt;</span><br><span class="line">          &lt;input type&#x3D;&quot;button&quot; class&#x3D;&quot;sign-in-button&quot; value&#x3D;&quot;登录&quot; @click&#x3D;&quot;submitLogin()&quot;&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;el-form&gt;</span><br><span class="line">      &lt;!-- 更多登录方式 --&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;more-sign&quot;&gt;</span><br><span class="line">        &lt;h6&gt;社交帐号登录&lt;&#x2F;h6&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">          &lt;li&gt;&lt;a id&#x3D;&quot;weixin&quot; class&#x3D;&quot;weixin&quot; target&#x3D;&quot;_blank&quot; href&#x3D;&quot;http:&#x2F;&#x2F;qy.free.idcfengye.com&#x2F;api&#x2F;ucenter&#x2F;weixinLogin&#x2F;login&quot;&gt;&lt;i class&#x3D;&quot;iconfont icon-weixin&quot;&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">          &lt;li&gt;&lt;a id&#x3D;&quot;qq&quot; class&#x3D;&quot;qq&quot; target&#x3D;&quot;_blank&quot; href&#x3D;&quot;#&quot;&gt;&lt;i class&#x3D;&quot;iconfont icon-qq&quot;&#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;&#x2F;ul&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import &#39;~&#x2F;assets&#x2F;css&#x2F;sign.css&#39;</span><br><span class="line">  import &#39;~&#x2F;assets&#x2F;css&#x2F;iconfont.css&#39;</span><br><span class="line">  import loginApi from &quot;@&#x2F;api&#x2F;loginApi&quot;</span><br><span class="line">  import cookie from &#39;js-cookie&#39;</span><br><span class="line"></span><br><span class="line">  export default &#123;</span><br><span class="line">    layout: &#39;sign&#39;,</span><br><span class="line"></span><br><span class="line">    data () &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        user:&#123;</span><br><span class="line">          mobile:&#39;&#39;,</span><br><span class="line">          password:&#39;&#39;</span><br><span class="line">        &#125;,</span><br><span class="line">        loginInfo:&#123;&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    methods: &#123;</span><br><span class="line">      &#x2F;&#x2F;登陆</span><br><span class="line">      submitLogin()&#123;</span><br><span class="line">        &#x2F;&#x2F;第一步：调用登陆接口进行登陆</span><br><span class="line">        loginApi.login(this.user)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            &#x2F;&#x2F;第二步：获取token</span><br><span class="line">            &#x2F;&#x2F;第三步：将token放到cookie中</span><br><span class="line">            &#x2F;&#x2F;参数1：cookie名称，参数2：cookie值，参数3：作用域</span><br><span class="line">            cookie.set(&quot;guli_token&quot;, response.data.data.token, &#123;domain: &#39;localhost&#39;&#125;)</span><br><span class="line">            &#x2F;&#x2F;第四步：通过token获取用户信息</span><br><span class="line">            loginApi.getUserInfo()</span><br><span class="line">              .then(response &#x3D;&gt; &#123;</span><br><span class="line">                this.loginInfo &#x3D; response.data.data.userInfo</span><br><span class="line">                cookie.set(&quot;guli_ucenter&quot;, this.loginInfo, &#123;domain: &#39;localhost&#39;&#125;)</span><br><span class="line">                &#x2F;&#x2F;提示注册成功</span><br><span class="line">                this.$message(&#123;</span><br><span class="line">                    type: &#39;success&#39;,</span><br><span class="line">                    message: &#39;登陆成功!&#39;</span><br><span class="line">                &#125;)</span><br><span class="line">                &#x2F;&#x2F;跳转到登陆页面</span><br><span class="line">                this.$router.push(&#123;path: &#39;&#x2F;&#39;&#125;)</span><br><span class="line">              &#125;)</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      checkPhone (rule, value, callback) &#123;</span><br><span class="line">        &#x2F;&#x2F;debugger</span><br><span class="line">        if (!(&#x2F;^1[34578]\d&#123;9&#125;$&#x2F;.test(value))) &#123;</span><br><span class="line">          return callback(new Error(&#39;手机号码格式不正确&#39;))</span><br><span class="line">        &#125;</span><br><span class="line">        return callback()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">   .el-form-item__error&#123;</span><br><span class="line">    z-index: 9999999;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><h3 id="layouts-1"><a href="#layouts-1" class="headerlink" title="layouts"></a>layouts</h3><p>default.vue</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"in-wrap"</span>&gt;</span><br><span class="line">    &lt;!-- 公共头引入 --&gt;</span><br><span class="line">    &lt;header id=<span class="string">"header"</span>&gt;</span><br><span class="line">      &lt;section <span class="class"><span class="keyword">class</span></span>=<span class="string">"container"</span>&gt;</span><br><span class="line">        &lt;h1 id=<span class="string">"logo"</span>&gt;</span><br><span class="line">          &lt;a href=<span class="string">"#"</span> title=<span class="string">"谷粒学院"</span>&gt;</span><br><span class="line">            &lt;img src=<span class="string">"~/assets/img/logo.png"</span> width=<span class="string">"100%"</span> alt=<span class="string">"谷粒学院"</span>&gt;</span><br><span class="line">          &lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>h1&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"h-r-nsl"</span>&gt;</span><br><span class="line">          &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"nav"</span>&gt;</span><br><span class="line">            &lt;router-link to=<span class="string">"/"</span> tag=<span class="string">"li"</span> active-<span class="class"><span class="keyword">class</span></span>=<span class="string">"current"</span> exact&gt;</span><br><span class="line">              &lt;a&gt;首页&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>router-link&gt;</span><br><span class="line">            &lt;router-link to=<span class="string">"/course"</span> tag=<span class="string">"li"</span> active-<span class="class"><span class="keyword">class</span></span>=<span class="string">"current"</span>&gt;</span><br><span class="line">              &lt;a&gt;课程&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>router-link&gt;</span><br><span class="line">            &lt;router-link to=<span class="string">"/teacher"</span> tag=<span class="string">"li"</span> active-<span class="class"><span class="keyword">class</span></span>=<span class="string">"current"</span>&gt;</span><br><span class="line">              &lt;a&gt;名师&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>router-link&gt;</span><br><span class="line">            &lt;router-link to=<span class="string">"/article"</span> tag=<span class="string">"li"</span> active-<span class="class"><span class="keyword">class</span></span>=<span class="string">"current"</span>&gt;</span><br><span class="line">              &lt;a&gt;文章&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>router-link&gt;</span><br><span class="line">            &lt;router-link to=<span class="string">"/qa"</span> tag=<span class="string">"li"</span> active-<span class="class"><span class="keyword">class</span></span>=<span class="string">"current"</span>&gt;</span><br><span class="line">              &lt;a&gt;问答&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>router-link&gt;</span><br><span class="line">          &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">          &lt;!-- /</span> nav --&gt;</span><br><span class="line">          &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"h-r-login"</span>&gt;</span><br><span class="line">            &lt;li v-<span class="keyword">if</span>=<span class="string">"!loginInfo.id"</span> id=<span class="string">"no-login"</span>&gt;</span><br><span class="line">                &lt;a href=<span class="string">"/login"</span> title=<span class="string">"登录"</span>&gt;</span><br><span class="line">                    &lt;em <span class="class"><span class="keyword">class</span></span>=<span class="string">"icon18 login-icon"</span>&gt;&amp;nbsp;&lt;<span class="regexp">/em&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;span class="vam ml5"&gt;登录&lt;/</span>span&gt;</span><br><span class="line">                &lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">                |</span></span><br><span class="line"><span class="regexp">                &lt;a href="/</span>register<span class="string">" title="</span>注册<span class="string">"&gt;</span></span><br><span class="line"><span class="string">                    &lt;span class="</span>vam ml5<span class="string">"&gt;注册&lt;/span&gt;</span></span><br><span class="line"><span class="string">                &lt;/a&gt;</span></span><br><span class="line"><span class="string">            &lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li v-if="</span>loginInfo.id<span class="string">" id="</span>is-login-one<span class="string">" class="</span>mr10<span class="string">"&gt;</span></span><br><span class="line">                &lt;a id="headerMsgCountId" href="#" title="消息"&gt;</span><br><span class="line">                    &lt;em <span class="class"><span class="keyword">class</span></span>=<span class="string">"icon18 news-icon"</span>&gt;&amp;nbsp;&lt;<span class="regexp">/em&gt;</span></span><br><span class="line"><span class="regexp">                &lt;/</span>a&gt;</span><br><span class="line">                &lt;q <span class="class"><span class="keyword">class</span></span>=<span class="string">"red-point"</span> style=<span class="string">"display: none"</span>&gt;&amp;nbsp;&lt;<span class="regexp">/q&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>li&gt;</span><br><span class="line">            &lt;li v-<span class="keyword">if</span>=<span class="string">"loginInfo.id"</span> id=<span class="string">"is-login-two"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"h-r-user"</span>&gt;</span><br><span class="line">                &lt;a href=<span class="string">"/ucenter"</span> title&gt;</span><br><span class="line">                    &lt;img</span><br><span class="line">                        :src=<span class="string">"loginInfo.avatar"</span></span><br><span class="line">                        width=<span class="string">"30"</span></span><br><span class="line">                        height=<span class="string">"30"</span></span><br><span class="line">                        <span class="class"><span class="keyword">class</span></span>=<span class="string">"vam picImg"</span></span><br><span class="line">                        alt</span><br><span class="line">                        &gt;</span><br><span class="line">                    &lt;span id=<span class="string">"userName"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"vam disIb"</span>&gt;&#123;&#123; loginInfo.nickname &#125;&#125;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">                &lt;/</span>a&gt;</span><br><span class="line">                &lt;a href=<span class="string">"javascript:void(0);"</span> title=<span class="string">"退出"</span> @click=<span class="string">"logout()"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"ml5"</span>&gt;退出&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>li&gt;</span><br><span class="line">            &lt;!-- <span class="regexp">/未登录显示第1 li；登录后显示第2，3 li --&gt;</span></span><br><span class="line"><span class="regexp">          &lt;/u</span>l&gt;</span><br><span class="line">          &lt;aside <span class="class"><span class="keyword">class</span></span>=<span class="string">"h-r-search"</span>&gt;</span><br><span class="line">            &lt;form action=<span class="string">"#"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">              &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"h-r-s-box"</span>&gt;</span><br><span class="line">                &lt;input type=<span class="string">"text"</span> placeholder=<span class="string">"输入你想学的课程"</span> name=<span class="string">"queryCourse.courseName"</span> value&gt;</span><br><span class="line">                &lt;button type=<span class="string">"submit"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"s-btn"</span>&gt;</span><br><span class="line">                  &lt;em <span class="class"><span class="keyword">class</span></span>=<span class="string">"icon18"</span>&gt;&amp;nbsp;&lt;<span class="regexp">/em&gt;</span></span><br><span class="line"><span class="regexp">                &lt;/</span>button&gt;</span><br><span class="line">              &lt;<span class="regexp">/label&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>form&gt;</span><br><span class="line">          &lt;<span class="regexp">/aside&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>div&gt;</span><br><span class="line">        &lt;aside <span class="class"><span class="keyword">class</span></span>=<span class="string">"mw-nav-btn"</span>&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"mw-nav-icon"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>aside&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"clear"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>section&gt;</span><br><span class="line">    &lt;<span class="regexp">/header&gt;</span></span><br><span class="line"><span class="regexp">    &lt;!-- /</span>公共头引入 --&gt;</span><br><span class="line">      </span><br><span class="line">    &lt;nuxt/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 公共底引入 --&gt;</span><br><span class="line">    &lt;footer id=<span class="string">"footer"</span>&gt;</span><br><span class="line">      &lt;section <span class="class"><span class="keyword">class</span></span>=<span class="string">"container"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span>&gt;</span></span><br><span class="line"><span class="class">          &lt;<span class="title">h4</span> <span class="title">class</span></span>=<span class="string">"hLh30"</span>&gt;</span><br><span class="line">            &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"fsize18 f-fM c-999"</span>&gt;友情链接&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">          &lt;/</span>h4&gt;</span><br><span class="line">          &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"of flink-list"</span>&gt;</span><br><span class="line">            &lt;li&gt;</span><br><span class="line">              &lt;a href=<span class="string">"http://www.atguigu.com/"</span> title=<span class="string">"尚硅谷"</span> target=<span class="string">"_blank"</span>&gt;尚硅谷&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>li&gt;</span><br><span class="line">          &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">          &lt;div class="clear"&gt;&lt;/</span>div&gt;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div class="b-foot"&gt;</span></span><br><span class="line"><span class="regexp">          &lt;section class="fl col-7"&gt;</span></span><br><span class="line"><span class="regexp">            &lt;section class="mr20"&gt;</span></span><br><span class="line"><span class="regexp">              &lt;section class="b-f-link"&gt;</span></span><br><span class="line"><span class="regexp">                &lt;a href="#" title="关于我们" target="_blank"&gt;关于我们&lt;/</span>a&gt;|</span><br><span class="line">                &lt;a href=<span class="string">"#"</span> title=<span class="string">"联系我们"</span> target=<span class="string">"_blank"</span>&gt;联系我们&lt;<span class="regexp">/a&gt;|</span></span><br><span class="line"><span class="regexp">                &lt;a href="#" title="帮助中心" target="_blank"&gt;帮助中心&lt;/</span>a&gt;|</span><br><span class="line">                &lt;a href=<span class="string">"#"</span> title=<span class="string">"资源下载"</span> target=<span class="string">"_blank"</span>&gt;资源下载&lt;<span class="regexp">/a&gt;|</span></span><br><span class="line"><span class="regexp">                &lt;span&gt;服务热线：010-56253825(北京) 0755-85293825(深圳)&lt;/</span>span&gt;</span><br><span class="line">                &lt;span&gt;Email：info@atguigu.com&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">              &lt;/</span>section&gt;</span><br><span class="line">              &lt;section <span class="class"><span class="keyword">class</span></span>=<span class="string">"b-f-link mt10"</span>&gt;</span><br><span class="line">                &lt;span&gt;©<span class="number">2018</span>课程版权均归谷粒学院所有 京ICP备<span class="number">17055252</span>号&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">              &lt;/</span>section&gt;</span><br><span class="line">            &lt;<span class="regexp">/section&gt;</span></span><br><span class="line"><span class="regexp">          &lt;/</span>section&gt;</span><br><span class="line">          &lt;aside <span class="class"><span class="keyword">class</span></span>=<span class="string">"fl col-3 tac mt15"</span>&gt;</span><br><span class="line">            &lt;section <span class="class"><span class="keyword">class</span></span>=<span class="string">"gf-tx"</span>&gt;</span><br><span class="line">              &lt;span&gt;</span><br><span class="line">                &lt;img src=<span class="string">"~/assets/img/wx-icon.png"</span> alt&gt;</span><br><span class="line">              &lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>section&gt;</span><br><span class="line">            &lt;section <span class="class"><span class="keyword">class</span></span>=<span class="string">"gf-tx"</span>&gt;</span><br><span class="line">              &lt;span&gt;</span><br><span class="line">                &lt;img src=<span class="string">"~/assets/img/wb-icon.png"</span> alt&gt;</span><br><span class="line">              &lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>section&gt;</span><br><span class="line">          &lt;<span class="regexp">/aside&gt;</span></span><br><span class="line"><span class="regexp">          &lt;div class="clear"&gt;&lt;/</span>div&gt;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>section&gt;</span><br><span class="line">    &lt;<span class="regexp">/footer&gt;</span></span><br><span class="line"><span class="regexp">    &lt;!-- /</span>公共底引入 --&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> <span class="string">"~/assets/css/reset.css"</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">"~/assets/css/theme.css"</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">"~/assets/css/global.css"</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">"~/assets/css/web.css"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cookie <span class="keyword">from</span> <span class="string">'js-cookie'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line"></span><br><span class="line">  data()&#123;</span><br><span class="line">    <span class="keyword">return</span>&#123;</span><br><span class="line">      token: <span class="string">''</span>,</span><br><span class="line">      loginInfo: &#123;</span><br><span class="line">        id: <span class="string">''</span>,</span><br><span class="line">        age: <span class="string">''</span>,</span><br><span class="line">        avatar: <span class="string">''</span>,</span><br><span class="line">        mobile: <span class="string">''</span>,</span><br><span class="line">        nickname: <span class="string">''</span>,</span><br><span class="line">        sex: <span class="string">''</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created()&#123;</span><br><span class="line">    <span class="keyword">this</span>.showInfo()</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    <span class="comment">//从cookie中获取用户信息，并赋值</span></span><br><span class="line">    showInfo()&#123;</span><br><span class="line">      <span class="keyword">var</span> userStr = cookie.get(<span class="string">'guli_ucenter'</span>)</span><br><span class="line">      <span class="comment">//注意这里获取到的是字符串形式的json数据，我们需要将其转换为json数据</span></span><br><span class="line">      <span class="keyword">if</span>(userStr)&#123;</span><br><span class="line">        <span class="keyword">this</span>.loginInfo = <span class="built_in">JSON</span>.parse(userStr)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="效果测试"><a href="#效果测试" class="headerlink" title="效果测试"></a>效果测试</h3><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200711213121.png" alt="image-20200711213121318"></p><h3 id="退出账号"><a href="#退出账号" class="headerlink" title="退出账号"></a>退出账号</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//点击退出登录</span></span><br><span class="line">logout()&#123;</span><br><span class="line">    <span class="comment">//将cookie中的相关信息清除即可，注意cookie没有直接清楚的方法，可重设为空</span></span><br><span class="line">    cookie.set(<span class="string">'guli_token'</span>, <span class="string">''</span>,&#123;<span class="attr">domain</span>:<span class="string">"localhost"</span>&#125;)</span><br><span class="line">        cookie.set(<span class="string">'guli_ucenter'</span>, <span class="string">''</span>,&#123;<span class="attr">domain</span>:<span class="string">"localhost"</span>&#125;)</span><br><span class="line">        <span class="comment">//然后回到首页</span></span><br><span class="line">        <span class="comment">//this.$router.push(&#123;path: '/'&#125;)</span></span><br><span class="line">        <span class="comment">//跳转页面其实也可以这样写，使用js代码，这里建议使用，具体你可以看看a连接的href</span></span><br><span class="line">        <span class="built_in">window</span>.location.href = <span class="string">"/"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9、OAuth2"><a href="#9、OAuth2" class="headerlink" title="9、OAuth2"></a>9、OAuth2</h2><p>背景：</p><p>照片拥有者想要在云冲印服务上打印照片，云冲印服务需要访问云存储服务上的资源</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200711222004.jpg" alt="img"></p><p>针对这个问题，大家主要提供了以下几种方案：</p><p>方式一：用户名密码复制</p><p>适用于同一公司内部的多个系统，不适用于不受信的第三方应用</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200711222119.jpg" alt="img"></p><p>方式二：通用开发者key</p><p>适用于合作商或者授信的不同业务部门之间</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200711222139.jpg" alt="img"></p><p>方式三：办法令牌</p><p>接近OAuth2方式，需要考虑如何管理令牌、颁发令牌、吊销令牌，需要统一的协议，因此就有了OAuth2协议</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200711222209.jpg" alt="img"></p><p>针对此类问题，于是产生了OAuth2</p><p>正式定义</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200711222427.jpg" alt="img"></p><p>OAuth2的核心</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200711222526.jpg" alt="img"></p><p>OAuth2涉及的角色</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200711222612.jpg" alt="img"></p><p>OAuth2术语</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200711222635.png" alt="img"></p><p>OAuth2的令牌类型</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200711222659.jpg" alt="img"></p><p>OAuth2的误解</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200711222713.jpg" alt="img"></p><p>总结</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200711222829.jpg" alt="img"></p><h2 id="10、后端微信扫码登陆"><a href="#10、后端微信扫码登陆" class="headerlink" title="10、后端微信扫码登陆"></a>10、后端微信扫码登陆</h2><p>首先使用该功能需要到微信开放平台注册和认证开发者资质，但是目前只对企业开放，暂时没有对个人开放</p><p>开发文档参考：<a href="https://developers.weixin.qq.com/doc/oplatform/Website_App/WeChat_Login/Wechat_Login.html" target="_blank" rel="noopener">https://developers.weixin.qq.com/doc/oplatform/Website_App/WeChat_Login/Wechat_Login.html</a></p><p>这里使用尚硅谷老师提供的相关资料（请往下看）</p><p>熟悉微信登陆的流程</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200711223418.png" alt="img"></p><p>因为还是登陆模块，所以还是在ucenter这个模块中开发</p><h3 id="配置yml文件"><a href="#配置yml文件" class="headerlink" title="配置yml文件"></a>配置yml文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">wx:</span></span><br><span class="line">  <span class="attr">open:</span></span><br><span class="line">    <span class="comment"># 微信开放平台 appid</span></span><br><span class="line">    <span class="attr">appid:</span> <span class="string">wxed9954c01bb89b47</span></span><br><span class="line">    <span class="comment"># 微信开放平台 appsecret</span></span><br><span class="line">    <span class="attr">appsecret:</span> <span class="string">a7482517235173ddb4083788de60b90e</span></span><br><span class="line">    <span class="comment"># 微信开放平台 重定向url（guli.shop需要在微信开放平台配置）</span></span><br><span class="line">    <span class="attr">redirecturl:</span> <span class="string">http://guli.shop/api/ucenter/wx/callback</span></span><br></pre></td></tr></table></figure><h3 id="创建常量类工具"><a href="#创建常量类工具" class="headerlink" title="创建常量类工具"></a>创建常量类工具</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConstantWxUtil</span> <span class="keyword">implements</span> <span class="title">InitializingBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;wx.open.appid&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String appid;</span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;wx.open.appsecret&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String appsecret;</span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;wx.open.redirecturl&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String redirecturl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String APP_ID;</span><br><span class="line">    <span class="keyword">private</span> String APP_SECRET;</span><br><span class="line">    <span class="keyword">private</span> String REDIRECT_URL;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterPropertiesSet</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        APP_ID = appid;</span><br><span class="line">        APP_SECRET = appsecret;</span><br><span class="line">        REDIRECT_URL = redirecturl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="controller层-4"><a href="#controller层-4" class="headerlink" title="controller层"></a>controller层</h3><p>提示：新建一个WxApiController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span><span class="comment">//注意这里是为了请求地址，不需要返回数据，所以需要使用@Controller注解，而不是ResController</span></span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/eduucenter/wx"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WxApiController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注意这里是为了请求地址，生成微信扫描登陆的二维码，所以返回值应该是String</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/login"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getQrCode</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//微信开放平台授权bashUrl,连接是固定的，%s相当于sql语句中？占位符，其他的都是固定值，详细可以参考开发文档</span></span><br><span class="line">        <span class="comment">//注意下面拼接的redirect_uri二部是url</span></span><br><span class="line">        String baseUrl = <span class="string">"https://open.weixin.qq.com/connect/qrconnect"</span> +</span><br><span class="line">                <span class="string">"?appid=%s"</span> +</span><br><span class="line">                <span class="string">"&amp;redirect_uri=%s"</span> +</span><br><span class="line">                <span class="string">"&amp;response_type=code"</span> +</span><br><span class="line">                <span class="string">"&amp;scope=snsapi_login"</span> +</span><br><span class="line">                <span class="string">"&amp;state=%s"</span> +</span><br><span class="line">                <span class="string">"#wechat_redirect"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取redirectUrl</span></span><br><span class="line">        String redirectUrl = ConstantWxUtil.REDIRECT_URL;</span><br><span class="line">        <span class="comment">//对url进行utf-8编码</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redirectUrl = URLEncoder.encode(redirectUrl, <span class="string">"utf-8"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//对baseUrl中的参数赋值</span></span><br><span class="line">        String url = String.format(</span><br><span class="line">                baseUrl,</span><br><span class="line">                ConstantWxUtil.APP_ID,</span><br><span class="line">                redirectUrl,</span><br><span class="line">                <span class="string">"ryan"</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">//重定向到请求微信地址里面</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:"</span> + url;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试生成二维码"><a href="#测试生成二维码" class="headerlink" title="测试生成二维码"></a>测试生成二维码</h3><p>在浏览器中访问localhost:8006/eduucenter/wx/login</p><p>则会重定向到对应的页面，并得到二维码</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200711231300.png" alt="image-20200711231300433"></p><p>使用微信扫描以下二维码并点击确认，便会现实扫描成功，并接着跳转到以下页面：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8150/api/ucenter/wx/callback?code=071eWAOM1O4e291liaMM1uTxOM1eWAOV&amp;state=ryan</span><br></pre></td></tr></table></figure><p>这是尚硅谷的提供的那个信息，我们没法改，根据上面的请求地址，我们需要将端口号和相关地址改一下</p><p>提示：实际开发中，应该是用不到这一步的，按照实际的域名部署即可，这里没有开通企业服务，只能跟着尚硅谷的信息走了</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8150</span></span><br><span class="line"><span class="comment"># 改完这个端口之后，别忘了更新nginx的配置</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//WxApicontroller的请求地址，注意别忘了修改nginx和MemberController的关键字，对应的前端api也需要修改一下</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/api/ucenter/wx"</span>)</span><br><span class="line"><span class="comment">//nginx的配置</span></span><br><span class="line">location ~ /ucenter/ &#123;</span><br><span class="line">    proxy_pass http:<span class="comment">//localhost:8150;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//MemberController的请求地址，对应的前端api自己改一下</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/ucenter/member"</span>)</span><br></pre></td></tr></table></figure><p>从跳转的请求地址中还可以看到，调用的接口是callback，传递的参数是code和state</p><p>所以在controller中写一个地址callback接口，并且将以上两个参数传到此接口中，整体步骤图示如下</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200712011450.png" alt="image-20200712011450399"></p><h3 id="导入相关依赖"><a href="#导入相关依赖" class="headerlink" title="导入相关依赖"></a>导入相关依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--httpclient--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--commons-io--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--gson--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="HttpClient工具类"><a href="#HttpClient工具类" class="headerlink" title="HttpClient工具类"></a>HttpClient工具类</h3><p>提示：使用httpclient可模拟发送请求</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.wxloginservice.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.IOUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.Consts;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.NameValuePair;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.HttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.config.RequestConfig;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.config.RequestConfig.Builder;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.entity.UrlEncodedFormEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpGet;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpPost;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.ConnectTimeoutException;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.ssl.SSLConnectionSocketFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.ssl.SSLContextBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.ssl.TrustStrategy;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.ssl.X509HostnameVerifier;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.entity.ContentType;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.entity.StringEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.CloseableHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.HttpClients;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.conn.PoolingHttpClientConnectionManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.message.BasicNameValuePair;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLContext;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLException;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLSession;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLSocket;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.SocketTimeoutException;</span><br><span class="line"><span class="keyword">import</span> java.security.GeneralSecurityException;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.CertificateException;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.X509Certificate;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Map.Entry;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  依赖的jar包有：commons-lang-2.6.jar、httpclient-4.3.2.jar、httpcore-4.3.1.jar、commons-io-2.4.jar</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zhaoyb</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpClientUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> connTimeout=<span class="number">10000</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> readTimeout=<span class="number">10000</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String charset=<span class="string">"UTF-8"</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> HttpClient client = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">PoolingHttpClientConnectionManager cm = <span class="keyword">new</span> PoolingHttpClientConnectionManager();</span><br><span class="line">cm.setMaxTotal(<span class="number">128</span>);</span><br><span class="line">cm.setDefaultMaxPerRoute(<span class="number">128</span>);</span><br><span class="line">client = HttpClients.custom().setConnectionManager(cm).build();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postParameters</span><span class="params">(String url, String parameterStr)</span> <span class="keyword">throws</span> ConnectTimeoutException, SocketTimeoutException, Exception</span>&#123;</span><br><span class="line"><span class="keyword">return</span> post(url,parameterStr,<span class="string">"application/x-www-form-urlencoded"</span>,charset,connTimeout,readTimeout);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postParameters</span><span class="params">(String url, String parameterStr,String charset, Integer connTimeout, Integer readTimeout)</span> <span class="keyword">throws</span> ConnectTimeoutException, SocketTimeoutException, Exception</span>&#123;</span><br><span class="line"><span class="keyword">return</span> post(url,parameterStr,<span class="string">"application/x-www-form-urlencoded"</span>,charset,connTimeout,readTimeout);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postParameters</span><span class="params">(String url, Map&lt;String, String&gt; params)</span> <span class="keyword">throws</span> ConnectTimeoutException,</span></span><br><span class="line"><span class="function">SocketTimeoutException, Exception </span>&#123;</span><br><span class="line"><span class="keyword">return</span> postForm(url, params, <span class="keyword">null</span>, connTimeout, readTimeout);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postParameters</span><span class="params">(String url, Map&lt;String, String&gt; params, Integer connTimeout,Integer readTimeout)</span> <span class="keyword">throws</span> ConnectTimeoutException,</span></span><br><span class="line"><span class="function">SocketTimeoutException, Exception </span>&#123;</span><br><span class="line"><span class="keyword">return</span> postForm(url, params, <span class="keyword">null</span>, connTimeout, readTimeout);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">get</span><span class="params">(String url)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="keyword">return</span> get(url, charset, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">get</span><span class="params">(String url, String charset)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="keyword">return</span> get(url, charset, connTimeout, readTimeout);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发送一个 Post 请求, 使用指定的字符集编码.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> body RequestBody</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> mimeType 例如 application/xml "application/x-www-form-urlencoded" a=1&amp;b=2&amp;c=3</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> charset 编码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> connTimeout 建立链接超时时间,毫秒.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> readTimeout 响应超时时间,毫秒.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> ResponseBody, 使用指定的字符集编码.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> ConnectTimeoutException 建立链接超时异常</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> SocketTimeoutException  响应超时</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">post</span><span class="params">(String url, String body, String mimeType,String charset, Integer connTimeout, Integer readTimeout)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ConnectTimeoutException, SocketTimeoutException, Exception </span>&#123;</span><br><span class="line">HttpClient client = <span class="keyword">null</span>;</span><br><span class="line">HttpPost post = <span class="keyword">new</span> HttpPost(url);</span><br><span class="line">String result = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (StringUtils.isNotBlank(body)) &#123;</span><br><span class="line">HttpEntity entity = <span class="keyword">new</span> StringEntity(body, ContentType.create(mimeType, charset));</span><br><span class="line">post.setEntity(entity);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 设置参数</span></span><br><span class="line">Builder customReqConf = RequestConfig.custom();</span><br><span class="line"><span class="keyword">if</span> (connTimeout != <span class="keyword">null</span>) &#123;</span><br><span class="line">customReqConf.setConnectTimeout(connTimeout);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (readTimeout != <span class="keyword">null</span>) &#123;</span><br><span class="line">customReqConf.setSocketTimeout(readTimeout);</span><br><span class="line">&#125;</span><br><span class="line">post.setConfig(customReqConf.build());</span><br><span class="line"></span><br><span class="line">HttpResponse res;</span><br><span class="line"><span class="keyword">if</span> (url.startsWith(<span class="string">"https"</span>)) &#123;</span><br><span class="line"><span class="comment">// 执行 Https 请求.</span></span><br><span class="line">client = createSSLInsecureClient();</span><br><span class="line">res = client.execute(post);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 执行 Http 请求.</span></span><br><span class="line">client = HttpClientUtils.client;</span><br><span class="line">res = client.execute(post);</span><br><span class="line">&#125;</span><br><span class="line">result = IOUtils.toString(res.getEntity().getContent(), charset);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">post.releaseConnection();</span><br><span class="line"><span class="keyword">if</span> (url.startsWith(<span class="string">"https"</span>) &amp;&amp; client != <span class="keyword">null</span>&amp;&amp; client <span class="keyword">instanceof</span> CloseableHttpClient) &#123;</span><br><span class="line">((CloseableHttpClient) client).close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 提交form表单</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> connTimeout</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> readTimeout</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> ConnectTimeoutException</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> SocketTimeoutException</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postForm</span><span class="params">(String url, Map&lt;String, String&gt; params, Map&lt;String, String&gt; headers, Integer connTimeout,Integer readTimeout)</span> <span class="keyword">throws</span> ConnectTimeoutException,</span></span><br><span class="line"><span class="function">SocketTimeoutException, Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">HttpClient client = <span class="keyword">null</span>;</span><br><span class="line">HttpPost post = <span class="keyword">new</span> HttpPost(url);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (params != <span class="keyword">null</span> &amp;&amp; !params.isEmpty()) &#123;</span><br><span class="line">List&lt;NameValuePair&gt; formParams = <span class="keyword">new</span> ArrayList&lt;NameValuePair&gt;();</span><br><span class="line">Set&lt;Entry&lt;String, String&gt;&gt; entrySet = params.entrySet();</span><br><span class="line"><span class="keyword">for</span> (Entry&lt;String, String&gt; entry : entrySet) &#123;</span><br><span class="line">formParams.add(<span class="keyword">new</span> BasicNameValuePair(entry.getKey(), entry.getValue()));</span><br><span class="line">&#125;</span><br><span class="line">UrlEncodedFormEntity entity = <span class="keyword">new</span> UrlEncodedFormEntity(formParams, Consts.UTF_8);</span><br><span class="line">post.setEntity(entity);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (headers != <span class="keyword">null</span> &amp;&amp; !headers.isEmpty()) &#123;</span><br><span class="line"><span class="keyword">for</span> (Entry&lt;String, String&gt; entry : headers.entrySet()) &#123;</span><br><span class="line">post.addHeader(entry.getKey(), entry.getValue());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 设置参数</span></span><br><span class="line">Builder customReqConf = RequestConfig.custom();</span><br><span class="line"><span class="keyword">if</span> (connTimeout != <span class="keyword">null</span>) &#123;</span><br><span class="line">customReqConf.setConnectTimeout(connTimeout);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (readTimeout != <span class="keyword">null</span>) &#123;</span><br><span class="line">customReqConf.setSocketTimeout(readTimeout);</span><br><span class="line">&#125;</span><br><span class="line">post.setConfig(customReqConf.build());</span><br><span class="line">HttpResponse res = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (url.startsWith(<span class="string">"https"</span>)) &#123;</span><br><span class="line"><span class="comment">// 执行 Https 请求.</span></span><br><span class="line">client = createSSLInsecureClient();</span><br><span class="line">res = client.execute(post);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 执行 Http 请求.</span></span><br><span class="line">client = HttpClientUtils.client;</span><br><span class="line">res = client.execute(post);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> IOUtils.toString(res.getEntity().getContent(), <span class="string">"UTF-8"</span>);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">post.releaseConnection();</span><br><span class="line"><span class="keyword">if</span> (url.startsWith(<span class="string">"https"</span>) &amp;&amp; client != <span class="keyword">null</span></span><br><span class="line">&amp;&amp; client <span class="keyword">instanceof</span> CloseableHttpClient) &#123;</span><br><span class="line">((CloseableHttpClient) client).close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发送一个 GET 请求</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> charset</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> connTimeout  建立链接超时时间,毫秒.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> readTimeout  响应超时时间,毫秒.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> ConnectTimeoutException   建立链接超时</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> SocketTimeoutException   响应超时</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">get</span><span class="params">(String url, String charset, Integer connTimeout,Integer readTimeout)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ConnectTimeoutException,SocketTimeoutException, Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">HttpClient client = <span class="keyword">null</span>;</span><br><span class="line">HttpGet get = <span class="keyword">new</span> HttpGet(url);</span><br><span class="line">String result = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 设置参数</span></span><br><span class="line">Builder customReqConf = RequestConfig.custom();</span><br><span class="line"><span class="keyword">if</span> (connTimeout != <span class="keyword">null</span>) &#123;</span><br><span class="line">customReqConf.setConnectTimeout(connTimeout);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (readTimeout != <span class="keyword">null</span>) &#123;</span><br><span class="line">customReqConf.setSocketTimeout(readTimeout);</span><br><span class="line">&#125;</span><br><span class="line">get.setConfig(customReqConf.build());</span><br><span class="line"></span><br><span class="line">HttpResponse res = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (url.startsWith(<span class="string">"https"</span>)) &#123;</span><br><span class="line"><span class="comment">// 执行 Https 请求.</span></span><br><span class="line">client = createSSLInsecureClient();</span><br><span class="line">res = client.execute(get);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 执行 Http 请求.</span></span><br><span class="line">client = HttpClientUtils.client;</span><br><span class="line">res = client.execute(get);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">result = IOUtils.toString(res.getEntity().getContent(), charset);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">get.releaseConnection();</span><br><span class="line"><span class="keyword">if</span> (url.startsWith(<span class="string">"https"</span>) &amp;&amp; client != <span class="keyword">null</span> &amp;&amp; client <span class="keyword">instanceof</span> CloseableHttpClient) &#123;</span><br><span class="line">((CloseableHttpClient) client).close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从 response 里获取 charset</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> ressponse</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"unused"</span>)</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getCharsetFromResponse</span><span class="params">(HttpResponse ressponse)</span> </span>&#123;</span><br><span class="line"><span class="comment">// Content-Type:text/html; charset=GBK</span></span><br><span class="line"><span class="keyword">if</span> (ressponse.getEntity() != <span class="keyword">null</span>  &amp;&amp; ressponse.getEntity().getContentType() != <span class="keyword">null</span> &amp;&amp; ressponse.getEntity().getContentType().getValue() != <span class="keyword">null</span>) &#123;</span><br><span class="line">String contentType = ressponse.getEntity().getContentType().getValue();</span><br><span class="line"><span class="keyword">if</span> (contentType.contains(<span class="string">"charset="</span>)) &#123;</span><br><span class="line"><span class="keyword">return</span> contentType.substring(contentType.indexOf(<span class="string">"charset="</span>) + <span class="number">8</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建 SSL连接</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> GeneralSecurityException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> CloseableHttpClient <span class="title">createSSLInsecureClient</span><span class="params">()</span> <span class="keyword">throws</span> GeneralSecurityException </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">SSLContext sslContext = <span class="keyword">new</span> SSLContextBuilder().loadTrustMaterial(<span class="keyword">null</span>, <span class="keyword">new</span> TrustStrategy() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isTrusted</span><span class="params">(X509Certificate[] chain,String authType)</span> <span class="keyword">throws</span> CertificateException </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;).build();</span><br><span class="line"></span><br><span class="line">SSLConnectionSocketFactory sslsf = <span class="keyword">new</span> SSLConnectionSocketFactory(sslContext, <span class="keyword">new</span> X509HostnameVerifier() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">verify</span><span class="params">(String arg0, SSLSession arg1)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">verify</span><span class="params">(String host, SSLSocket ssl)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">verify</span><span class="params">(String host, X509Certificate cert)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> SSLException </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">verify</span><span class="params">(String host, String[] cns,</span></span></span><br><span class="line"><span class="function"><span class="params">   String[] subjectAlts)</span> <span class="keyword">throws</span> SSLException </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> HttpClients.custom().setSSLSocketFactory(sslsf).build();</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (GeneralSecurityException e) &#123;</span><br><span class="line"><span class="keyword">throw</span> e;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">String str= post(<span class="string">"https://localhost:443/ssl/test.shtml"</span>,<span class="string">"name=12&amp;page=34"</span>,<span class="string">"application/x-www-form-urlencoded"</span>, <span class="string">"UTF-8"</span>, <span class="number">10000</span>, <span class="number">10000</span>);</span><br><span class="line"><span class="comment">//String str= get("https://localhost:443/ssl/test.shtml?name=12&amp;page=34","GBK");</span></span><br><span class="line">            <span class="comment">/*Map&lt;String,String&gt; map = new HashMap&lt;String,String&gt;();</span></span><br><span class="line"><span class="comment">            map.put("name", "111");</span></span><br><span class="line"><span class="comment">            map.put("page", "222");</span></span><br><span class="line"><span class="comment">            String str= postForm("https://localhost:443/ssl/test.shtml",map,null, 10000, 10000);*/</span></span><br><span class="line">System.out.println(str);</span><br><span class="line">&#125; <span class="keyword">catch</span> (ConnectTimeoutException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SocketTimeoutException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span><span class="comment">//注意这里是为了请求地址，不需要返回数据，所以需要使用@Controller注解，而不是ResController</span></span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/api/ucenter/wx"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WxApiController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MemberService memberService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//微信扫码登陆后跳转的接口</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/callback"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">callback</span><span class="params">(String code, String state)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1 获取code值，临时票据，类似于验证码</span></span><br><span class="line">            <span class="comment">//2 拿着code请求 微信固定的地址，得到两个值 accsess_token 和 openid</span></span><br><span class="line">            String baseAccessTokenUrl = <span class="string">"https://api.weixin.qq.com/sns/oauth2/access_token"</span> +</span><br><span class="line">                    <span class="string">"?appid=%s"</span> +</span><br><span class="line">                    <span class="string">"&amp;secret=%s"</span> +</span><br><span class="line">                    <span class="string">"&amp;code=%s"</span> +</span><br><span class="line">                    <span class="string">"&amp;grant_type=authorization_code"</span>;</span><br><span class="line">            String accessTokenUrl = String.format(</span><br><span class="line">                    baseAccessTokenUrl,</span><br><span class="line">                    ConstantWxUtil.APP_ID,</span><br><span class="line">                    ConstantWxUtil.APP_SECRET,</span><br><span class="line">                    code</span><br><span class="line">            );</span><br><span class="line">            <span class="comment">//请求这个拼接好的地址，得到返回两个值 accsess_token 和 openid</span></span><br><span class="line">            <span class="comment">//使用httpclient发送请求，得到返回结果；</span></span><br><span class="line">            String accessTokenInfo = HttpClientUtils.get(accessTokenUrl);</span><br><span class="line">            <span class="comment">//先打印出来看看数据，再往下开发</span></span><br><span class="line">            <span class="comment">//System.out.println(accessTokenInfo);</span></span><br><span class="line">            <span class="comment">//主要得到了以下一些数据，其中最主要的是access_token和openid</span></span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            &#123;"access_token":"35_Mlim9my1JvMMlxEAjdXl_myzYMqK557-gDMT1xPFzkdbuZtCcZhDKYF76fMNm2x4jezwjtDskajHz4moqU3QkY-8-UchF9h97pFfaXXxWDc",</span></span><br><span class="line"><span class="comment">            "expires_in":7200,</span></span><br><span class="line"><span class="comment">            "refresh_token":"35_WrtoTiyByt-WCteQkOK8QfC0uKgASo1TCr9xsDA_McuRwFP16r78PgIl4wpD325Vj5LcI_kGsejd7p-Q1_YPSkKb2JAtbGCiWR5q2flr64E",</span></span><br><span class="line"><span class="comment">            "openid":"o3_SC5y2N2fYnSLhnUp7l2qZpekM",</span></span><br><span class="line"><span class="comment">            "scope":"snsapi_login",</span></span><br><span class="line"><span class="comment">            "unionid":"oWgGz1CNae7qIKCKMuk3esyotkw0"&#125;</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="comment">//拿着返回的数据，使用httpclient进一步请求微信提供的地址</span></span><br><span class="line">            <span class="comment">//因为返回的是字符串，类似于key-value的形式，我们要怎么去获取呢？</span></span><br><span class="line">            <span class="comment">//可以先将返回的数据转换为map集合，然后通过key获取,这里使用json的转换工具为gson，</span></span><br><span class="line">            Gson gson = <span class="keyword">new</span> Gson();</span><br><span class="line">            HashMap mapAccessToken = gson.fromJson(accessTokenInfo, HashMap<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            String access_token = (String) mapAccessToken.get(<span class="string">"access_token"</span>);</span><br><span class="line">            String openid = (String) mapAccessToken.get(<span class="string">"openid"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//在发送请求之前，我们先应该先通过openid判断该微信用户是否注册过</span></span><br><span class="line">            Member member = memberService.getByOpenId(openid);</span><br><span class="line">            <span class="keyword">if</span> (member == <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="comment">//如果为空表示该微信用户还没注册过，则拿着access_token和openid继续请求微信提供的固定地址</span></span><br><span class="line">                String baseUserInfoUrl = <span class="string">"https://api.weixin.qq.com/sns/userinfo"</span> +</span><br><span class="line">                        <span class="string">"?access_token=%s"</span> +</span><br><span class="line">                        <span class="string">"&amp;openid=%s"</span>;</span><br><span class="line">                <span class="comment">//拼接两个参数</span></span><br><span class="line">                String userInfoUrl = String.format(</span><br><span class="line">                        baseUserInfoUrl,</span><br><span class="line">                        access_token,</span><br><span class="line">                        openid</span><br><span class="line">                );</span><br><span class="line">                String userInfo = HttpClientUtils.get(userInfoUrl);</span><br><span class="line">                <span class="comment">//查看下userInfo里面包含的数据</span></span><br><span class="line">                <span class="comment">//System.out.println(userInfo);</span></span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                &#123;"openid":"o3_SC5y2N2fYnSLhnUp7l2qZpekM",</span></span><br><span class="line"><span class="comment">                "nickname":"牛排🍖",</span></span><br><span class="line"><span class="comment">                "sex":1,</span></span><br><span class="line"><span class="comment">                "language":"zh_CN",</span></span><br><span class="line"><span class="comment">                "city":"Guangzhou",</span></span><br><span class="line"><span class="comment">                "province":"Guangdong",</span></span><br><span class="line"><span class="comment">                "country":"CN",</span></span><br><span class="line"><span class="comment">                "headimgurl":"http:\/\/thirdwx.qlogo.cn\/mmopen\/vi_32\/3akBBSAb7wJNJ124Z0PNicuNibKlUvefsiaPLfcwPUTxxdG1iaAwzylC148j4Q8nSc6jicZoKbpDdia2ldKwicISCF98Q\/132",</span></span><br><span class="line"><span class="comment">                "privilege":["chinaunicom"],</span></span><br><span class="line"><span class="comment">                "unionid":"oWgGz1CNae7qIKCKMuk3esyotkw0"&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                <span class="comment">//获取到返回的用户信息之后，将其注册到数据库中，也就是member</span></span><br><span class="line">                <span class="comment">//注册前我们应该先将刚返回的userInfo转换为map集合</span></span><br><span class="line">                HashMap userInfoMap = gson.fromJson(userInfo, HashMap<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">                String nickname = (String) userInfoMap.get(<span class="string">"nickname"</span>);</span><br><span class="line">                String avatar = (String) userInfoMap.get(<span class="string">"headimgurl"</span>);</span><br><span class="line">                member = <span class="keyword">new</span> Member();</span><br><span class="line">                member.setOpenid(openid);</span><br><span class="line">                member.setNickname(nickname);</span><br><span class="line">                member.setAvatar(avatar);</span><br><span class="line">                memberService.save(member);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//获取到用户信息之后，我们怎么样才能在前端获取到这个用户信息呢？</span></span><br><span class="line">            <span class="comment">//有的人可能会想到将其存到cookie中，但是要主要cookie是没法跨域传递的，localhost倒是可以，但是在实际开发中肯定是不同的域名的</span></span><br><span class="line">            <span class="comment">//所以我们还是通过jwt生成token，并通过域名传递</span></span><br><span class="line">            System.out.println(<span class="string">"################获取token前"</span>);</span><br><span class="line">            String jwtToken = JwtUtils.getJwtToken(member.getId(), member.getNickname());</span><br><span class="line">            System.out.println(<span class="string">"############获取token后"</span> + jwtToken);</span><br><span class="line">            <span class="comment">//最后：返回首页面，通过路径传递token字符串</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">"redirect:http://localhost:8030?token="</span> + jwtToken;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> GuliException(<span class="number">20001</span>, <span class="string">"登陆失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注意这里是为了请求地址，生成微信扫描登陆的二维码，所以返回值应该是String</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/login"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getQrCode</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//微信开放平台授权bashUrl,连接是固定的，%s相当于sql语句中？占位符，其他的都是固定值，详细可以参考开发文档</span></span><br><span class="line">        <span class="comment">//注意下面拼接的redirect_uri二部是url</span></span><br><span class="line">        String baseUrl = <span class="string">"https://open.weixin.qq.com/connect/qrconnect"</span> +</span><br><span class="line">                <span class="string">"?appid=%s"</span> +</span><br><span class="line">                <span class="string">"&amp;redirect_uri=%s"</span> +</span><br><span class="line">                <span class="string">"&amp;response_type=code"</span> +</span><br><span class="line">                <span class="string">"&amp;scope=snsapi_login"</span> +</span><br><span class="line">                <span class="string">"&amp;state=%s"</span> +</span><br><span class="line">                <span class="string">"#wechat_redirect"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取redirectUrl</span></span><br><span class="line">        String redirectUrl = ConstantWxUtil.REDIRECT_URL;</span><br><span class="line">        <span class="comment">//对url进行utf-8编码</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redirectUrl = URLEncoder.encode(redirectUrl, <span class="string">"utf-8"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//对baseUrl中的参数赋值</span></span><br><span class="line">        String url = String.format(</span><br><span class="line">                baseUrl,</span><br><span class="line">                ConstantWxUtil.APP_ID,</span><br><span class="line">                redirectUrl,</span><br><span class="line">                <span class="string">"ryan"</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">//重定向到请求微信地址里面</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:"</span> + url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前台显示微信用户信息"><a href="#前台显示微信用户信息" class="headerlink" title="前台显示微信用户信息"></a>前台显示微信用户信息</h3><p>default.vue</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">created()&#123;</span><br><span class="line">    <span class="comment">//首先判断路径中的token</span></span><br><span class="line">    <span class="comment">//以前的restful风格我们都是通过this.$route.param.id取值的，现在因为是使用？传参的，所以不能这样获取</span></span><br><span class="line">    <span class="keyword">this</span>.token = <span class="keyword">this</span>.$route.query.token</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.token)&#123;</span><br><span class="line">      <span class="keyword">this</span>.wxLogin()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.showInfo()</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    <span class="comment">//微信登陆</span></span><br><span class="line">    wxLogin()&#123;</span><br><span class="line">      <span class="comment">//把token值放到cookie里面</span></span><br><span class="line">      cookie.set(<span class="string">'guli_token'</span>,<span class="keyword">this</span>.token,&#123;<span class="attr">domain</span>: <span class="string">'localhost'</span>&#125;)</span><br><span class="line">      cookie.set(<span class="string">'guli_ucenter'</span>,<span class="string">''</span>,&#123;<span class="attr">domain</span>: <span class="string">'localhost'</span>&#125;)</span><br><span class="line">      <span class="comment">//调用接口通过token获取用户信息</span></span><br><span class="line">      loginApi.getUserInfo()</span><br><span class="line">        .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">this</span>.loginInfo = response.data.data.userInfo</span><br><span class="line">          cookie.set(<span class="string">'guli_ucenter'</span>,<span class="keyword">this</span>.loginInfo,&#123;<span class="attr">domain</span>: <span class="string">'localhost'</span>&#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//从cookie中获取用户信息，并赋值</span></span><br><span class="line">    showInfo()&#123;</span><br><span class="line">      <span class="keyword">var</span> userStr = cookie.get(<span class="string">'guli_ucenter'</span>)</span><br><span class="line">      <span class="comment">//注意这里获取到的是字符串形式的json数据，我们需要将其转换为json数据</span></span><br><span class="line">      <span class="keyword">if</span>(userStr)&#123;</span><br><span class="line">        <span class="keyword">this</span>.loginInfo = <span class="built_in">JSON</span>.parse(userStr)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//点击退出登录</span></span><br><span class="line">    logout()&#123;</span><br><span class="line">      <span class="comment">//将cookie中的相关信息清除即可，注意cookie没有直接清楚的方法，可重设为空</span></span><br><span class="line">      cookie.set(<span class="string">'guli_token'</span>, <span class="string">''</span>,&#123;<span class="attr">domain</span>:<span class="string">"localhost"</span>&#125;)</span><br><span class="line">      cookie.set(<span class="string">'guli_ucenter'</span>, <span class="string">''</span>,&#123;<span class="attr">domain</span>:<span class="string">"localhost"</span>&#125;)</span><br><span class="line">      <span class="comment">//然后回到首页</span></span><br><span class="line">      <span class="comment">//this.$router.push(&#123;path: '/'&#125;)</span></span><br><span class="line">      <span class="comment">//跳转页面其实也可以这样写，使用js代码，这里建议使用，具体你可以看看a连接的href</span></span><br><span class="line">      <span class="built_in">window</span>.location.href = <span class="string">"/"</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200712112943.png" alt="image-20200712111528115"></p><h3 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><p>1、微信名包含表情的情况，在保存微信名到数据库的时候，会报错，原因：</p><p>数据库编码为UTF8，<strong>MYSQL的UTF8编码最多3个字节,EMOJI表情或者某些特殊字符的编码是4个字节</strong>，导致存入数据库时发生了异常。</p><p>解决方案：</p><p>打开mysql的配置文件my.ini，修改配置如下</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="comment"># default-character-set=utf8</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8mb4 </span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="comment"># character-set-server=utf8</span></span><br><span class="line"><span class="attr">character-set-server</span>=utf8mb4</span><br></pre></td></tr></table></figure><p>然后重启mysql服务即可</p><p>2、网络错误，无法访问</p><p>要么是nginx没启动或者配置文件出错，要么是前后端对应的访问地址出错，排查一遍即可</p><p>3、springboot整合linux的redis服务报错：java.io.IOException: 远程主机强迫关闭了一个现有的连接，可能的原因：</p><p>一是客户端的连接池满了，无法创建新的连接</p><p>二是redis服务端连接溢出，无法分配新的连接</p><p>解决方案：</p><p>修改我的redis配置文件，具体修改内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tcp keepalive 10</span><br><span class="line"><span class="comment"># 反正不是0或者300这些极端数据就行</span></span><br></pre></td></tr></table></figure><p>提示：redis这个可能只是暂时性解决问题， 可能还会出现，具体我还没完全弄懂</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1、登陆实现方式&quot;&gt;&lt;a href=&quot;#1、登陆实现方式&quot; class=&quot;headerlink&quot; title=&quot;1、登陆实现方式&quot;&gt;&lt;/a&gt;1、登陆实现方式&lt;/h2&gt;&lt;h3 id=&quot;1-1、传统的单机模式登陆&quot;&gt;&lt;a href=&quot;#1-1、传统的单机模式登陆&quot; c
      
    
    </summary>
    
    
      <category term="前后端分离" scheme="http://yoursite.com/categories/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="springboot" scheme="http://yoursite.com/tags/springboot/"/>
    
      <category term="jwt" scheme="http://yoursite.com/tags/jwt/"/>
    
  </entry>
  
  <entry>
    <title>谷粒学院实战day06—客户前台开发+整合redis</title>
    <link href="http://yoursite.com/2020/07/10/%E5%AD%A6%E9%99%A2%E5%AE%9E%E6%88%98day06%E2%80%94%E5%AE%A2%E6%88%B7%E5%89%8D%E5%8F%B0%E5%BC%80%E5%8F%91-%E6%95%B4%E5%90%88redis/"/>
    <id>http://yoursite.com/2020/07/10/%E5%AD%A6%E9%99%A2%E5%AE%9E%E6%88%98day06%E2%80%94%E5%AE%A2%E6%88%B7%E5%89%8D%E5%8F%B0%E5%BC%80%E5%8F%91-%E6%95%B4%E5%90%88redis/</id>
    <published>2020-07-09T16:00:00.000Z</published>
    <updated>2020-07-09T16:39:11.170Z</updated>
    
    <content type="html"><![CDATA[<hr><p>cover: <a href="https://ryan-guli-01.oss-cn-shenzhen.aliyuncs.com/2020/07/03/1c79228eee714773a65025d60e597321yiquan.jpg" target="_blank" rel="noopener">https://ryan-guli-01.oss-cn-shenzhen.aliyuncs.com/2020/07/03/1c79228eee714773a65025d60e597321yiquan.jpg</a></p><hr><h2 id="1、Nuxt-js框架"><a href="#1、Nuxt-js框架" class="headerlink" title="1、Nuxt.js框架"></a>1、Nuxt.js框架</h2><h3 id="什么是服务端渲染"><a href="#什么是服务端渲染" class="headerlink" title="什么是服务端渲染"></a>什么是服务端渲染</h3><p>服务端渲染又称SSR (Server Side Render)是在服务端完成页面的内容，而不是在客户端通过AJAX获取数据。</p><p>服务器端渲染(SSR)的优势主要在于：<strong>更好的 SEO</strong>，由于搜索引擎爬虫抓取工具可以直接查看完全渲染的页面。</p><p>如果你的应用程序初始展示 loading 菊花图，然后通过 Ajax 获取内容，抓取工具并不会等待异步完成后再进行页面内容的抓取。也就是说，如果 SEO 对你的站点至关重要，而你的页面又是异步获取内容，则你可能需要服务器端渲染(SSR)解决此问题。</p><p>另外，使用服务器端渲染，我们可以获得更快的内容到达时间(time-to-content)，无需等待所有的 JavaScript 都完成下载并执行，产生更好的用户体验，对于那些「内容到达时间(time-to-content)与转化率直接相关」的应用程序而言，服务器端渲染(SSR)至关重要。</p><h3 id="什么是NUXT"><a href="#什么是NUXT" class="headerlink" title="什么是NUXT"></a>什么是NUXT</h3><p>Nuxt.js 是一个基于 Vue.js 的轻量级应用框架,可用来创建服务端渲染 (SSR) 应用,也可充当静态站点引擎生成静态站点应用,具有优雅的代码结构分层和热加载等特性。</p><p>官网网站：</p><p><a href="https://zh.nuxtjs.org/" target="_blank" rel="noopener">https://zh.nuxtjs.org/</a></p><h3 id="NUXT环境初始化"><a href="#NUXT环境初始化" class="headerlink" title="NUXT环境初始化"></a>NUXT环境初始化</h3><p>下载压缩包</p><p><a href="https://github.com/nuxt-community/starter-template/archive/master.zip" target="_blank" rel="noopener">https://github.com/nuxt-community/starter-template/archive/master.zip</a></p><p>下载完成后解压到前端的工作区，使用vscode打开，安装依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>安装好依赖后运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200708201822.png" alt="image-20200708201822848"></p><p>nuxt默认端口号是3000，如果有端口冲突，可以在package.json自定义端口号，比如我就设置成8030</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">"config": &#123;</span><br><span class="line">    "nuxt": &#123;</span><br><span class="line">        "host": "127.0.0.1",</span><br><span class="line">        "port": "8030"</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="目录结构分析"><a href="#目录结构分析" class="headerlink" title="目录结构分析"></a>目录结构分析</h3><p>（1）资源目录 assets</p><p> 用于组织未编译的静态资源如 LESS、SASS 或 JavaScript。</p><p>（2）组件目录 components</p><p>用于组织应用的 Vue.js 组件。Nuxt.js 不会扩展增强该目录下 Vue.js 组件，即这些组件不会像页面组件那样有 asyncData 方法的特性。</p><p>（3）布局目录 layouts</p><p>用于组织应用的布局组件。</p><p>（4）页面目录 pages</p><p>用于组织应用的路由及视图。Nuxt.js 框架读取该目录下所有的 .vue 文件并自动生成对应的路由配置。</p><p>（5）插件目录 plugins</p><p>用于组织那些需要在 根vue.js应用 实例化之前需要运行的 Javascript 插件。</p><p>（6）nuxt.config.js 文件</p><p>nuxt.config.js 文件用于组织Nuxt.js 应用的个性化配置，以便覆盖默认配置。</p><blockquote><p>重点说一下layouts下的default.vue和pages下的index.vue</p></blockquote><p>default.vue就是定义页面的整体布局，一般是头信息和为尾信息</p><p>pages目录下存放各种内容页，一般是在default.vue中引入内容也显示</p><h2 id="2、快速搭建前台页面"><a href="#2、快速搭建前台页面" class="headerlink" title="2、快速搭建前台页面"></a>2、快速搭建前台页面</h2><p>这里没什么好说的，直接复制粘贴</p><h3 id="default-vue"><a href="#default-vue" class="headerlink" title="default.vue"></a>default.vue</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;in-wrap&quot;&gt;</span><br><span class="line">    &lt;!-- 公共头引入 --&gt;</span><br><span class="line">    &lt;header id&#x3D;&quot;header&quot;&gt;</span><br><span class="line">      &lt;section class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">        &lt;h1 id&#x3D;&quot;logo&quot;&gt;</span><br><span class="line">          &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;谷粒学院&quot;&gt;</span><br><span class="line">            &lt;img src&#x3D;&quot;~&#x2F;assets&#x2F;img&#x2F;logo.png&quot; width&#x3D;&quot;100%&quot; alt&#x3D;&quot;谷粒学院&quot;&gt;</span><br><span class="line">          &lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;h1&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;h-r-nsl&quot;&gt;</span><br><span class="line">          &lt;ul class&#x3D;&quot;nav&quot;&gt;</span><br><span class="line">            &lt;router-link to&#x3D;&quot;&#x2F;&quot; tag&#x3D;&quot;li&quot; active-class&#x3D;&quot;current&quot; exact&gt;</span><br><span class="line">              &lt;a&gt;首页&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;router-link&gt;</span><br><span class="line">            &lt;router-link to&#x3D;&quot;&#x2F;course&quot; tag&#x3D;&quot;li&quot; active-class&#x3D;&quot;current&quot;&gt;</span><br><span class="line">              &lt;a&gt;课程&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;router-link&gt;</span><br><span class="line">            &lt;router-link to&#x3D;&quot;&#x2F;teacher&quot; tag&#x3D;&quot;li&quot; active-class&#x3D;&quot;current&quot;&gt;</span><br><span class="line">              &lt;a&gt;名师&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;router-link&gt;</span><br><span class="line">            &lt;router-link to&#x3D;&quot;&#x2F;article&quot; tag&#x3D;&quot;li&quot; active-class&#x3D;&quot;current&quot;&gt;</span><br><span class="line">              &lt;a&gt;文章&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;router-link&gt;</span><br><span class="line">            &lt;router-link to&#x3D;&quot;&#x2F;qa&quot; tag&#x3D;&quot;li&quot; active-class&#x3D;&quot;current&quot;&gt;</span><br><span class="line">              &lt;a&gt;问答&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;router-link&gt;</span><br><span class="line">          &lt;&#x2F;ul&gt;</span><br><span class="line">          &lt;!-- &#x2F; nav --&gt;</span><br><span class="line">          &lt;ul class&#x3D;&quot;h-r-login&quot;&gt;</span><br><span class="line">            &lt;li id&#x3D;&quot;no-login&quot;&gt;</span><br><span class="line">              &lt;a href&#x3D;&quot;&#x2F;sing_in&quot; title&#x3D;&quot;登录&quot;&gt;</span><br><span class="line">                &lt;em class&#x3D;&quot;icon18 login-icon&quot;&gt;&amp;nbsp;&lt;&#x2F;em&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;vam ml5&quot;&gt;登录&lt;&#x2F;span&gt;</span><br><span class="line">              &lt;&#x2F;a&gt;</span><br><span class="line">              |</span><br><span class="line">              &lt;a href&#x3D;&quot;&#x2F;sign_up&quot; title&#x3D;&quot;注册&quot;&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;vam ml5&quot;&gt;注册&lt;&#x2F;span&gt;</span><br><span class="line">              &lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li class&#x3D;&quot;mr10 undis&quot; id&#x3D;&quot;is-login-one&quot;&gt;</span><br><span class="line">              &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;消息&quot; id&#x3D;&quot;headerMsgCountId&quot;&gt;</span><br><span class="line">                &lt;em class&#x3D;&quot;icon18 news-icon&quot;&gt;&amp;nbsp;&lt;&#x2F;em&gt;</span><br><span class="line">              &lt;&#x2F;a&gt;</span><br><span class="line">              &lt;q class&#x3D;&quot;red-point&quot; style&#x3D;&quot;display: none&quot;&gt;&amp;nbsp;&lt;&#x2F;q&gt;</span><br><span class="line">            &lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li class&#x3D;&quot;h-r-user undis&quot; id&#x3D;&quot;is-login-two&quot;&gt;</span><br><span class="line">              &lt;a href&#x3D;&quot;#&quot; title&gt;</span><br><span class="line">                &lt;img</span><br><span class="line">                  src&#x3D;&quot;~&#x2F;assets&#x2F;img&#x2F;avatar-boy.gif&quot;</span><br><span class="line">                  width&#x3D;&quot;30&quot;</span><br><span class="line">                  height&#x3D;&quot;30&quot;</span><br><span class="line">                  class&#x3D;&quot;vam picImg&quot;</span><br><span class="line">                  alt</span><br><span class="line">                &gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;vam disIb&quot; id&#x3D;&quot;userName&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">              &lt;&#x2F;a&gt;</span><br><span class="line">              &lt;a href&#x3D;&quot;javascript:void(0)&quot; title&#x3D;&quot;退出&quot; onclick&#x3D;&quot;exit();&quot; class&#x3D;&quot;ml5&quot;&gt;退出&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;li&gt;</span><br><span class="line">            &lt;!-- &#x2F;未登录显示第1 li；登录后显示第2，3 li --&gt;</span><br><span class="line">          &lt;&#x2F;ul&gt;</span><br><span class="line">          &lt;aside class&#x3D;&quot;h-r-search&quot;&gt;</span><br><span class="line">            &lt;form action&#x3D;&quot;#&quot; method&#x3D;&quot;post&quot;&gt;</span><br><span class="line">              &lt;label class&#x3D;&quot;h-r-s-box&quot;&gt;</span><br><span class="line">                &lt;input type&#x3D;&quot;text&quot; placeholder&#x3D;&quot;输入你想学的课程&quot; name&#x3D;&quot;queryCourse.courseName&quot; value&gt;</span><br><span class="line">                &lt;button type&#x3D;&quot;submit&quot; class&#x3D;&quot;s-btn&quot;&gt;</span><br><span class="line">                  &lt;em class&#x3D;&quot;icon18&quot;&gt;&amp;nbsp;&lt;&#x2F;em&gt;</span><br><span class="line">                &lt;&#x2F;button&gt;</span><br><span class="line">              &lt;&#x2F;label&gt;</span><br><span class="line">            &lt;&#x2F;form&gt;</span><br><span class="line">          &lt;&#x2F;aside&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;aside class&#x3D;&quot;mw-nav-btn&quot;&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;mw-nav-icon&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;aside&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;clear&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;section&gt;</span><br><span class="line">    &lt;&#x2F;header&gt;</span><br><span class="line">    &lt;!-- &#x2F;公共头引入 --&gt;</span><br><span class="line">      </span><br><span class="line">    &lt;nuxt&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 公共底引入 --&gt;</span><br><span class="line">    &lt;footer id&#x3D;&quot;footer&quot;&gt;</span><br><span class="line">      &lt;section class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">        &lt;div class&gt;</span><br><span class="line">          &lt;h4 class&#x3D;&quot;hLh30&quot;&gt;</span><br><span class="line">            &lt;span class&#x3D;&quot;fsize18 f-fM c-999&quot;&gt;友情链接&lt;&#x2F;span&gt;</span><br><span class="line">          &lt;&#x2F;h4&gt;</span><br><span class="line">          &lt;ul class&#x3D;&quot;of flink-list&quot;&gt;</span><br><span class="line">            &lt;li&gt;</span><br><span class="line">              &lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.atguigu.com&#x2F;&quot; title&#x3D;&quot;尚硅谷&quot; target&#x3D;&quot;_blank&quot;&gt;尚硅谷&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;li&gt;</span><br><span class="line">          &lt;&#x2F;ul&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;clear&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;b-foot&quot;&gt;</span><br><span class="line">          &lt;section class&#x3D;&quot;fl col-7&quot;&gt;</span><br><span class="line">            &lt;section class&#x3D;&quot;mr20&quot;&gt;</span><br><span class="line">              &lt;section class&#x3D;&quot;b-f-link&quot;&gt;</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;关于我们&quot; target&#x3D;&quot;_blank&quot;&gt;关于我们&lt;&#x2F;a&gt;|</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;联系我们&quot; target&#x3D;&quot;_blank&quot;&gt;联系我们&lt;&#x2F;a&gt;|</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;帮助中心&quot; target&#x3D;&quot;_blank&quot;&gt;帮助中心&lt;&#x2F;a&gt;|</span><br><span class="line">                &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;资源下载&quot; target&#x3D;&quot;_blank&quot;&gt;资源下载&lt;&#x2F;a&gt;|</span><br><span class="line">                &lt;span&gt;服务热线：010-56253825(北京) 0755-85293825(深圳)&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;span&gt;Email：info@atguigu.com&lt;&#x2F;span&gt;</span><br><span class="line">              &lt;&#x2F;section&gt;</span><br><span class="line">              &lt;section class&#x3D;&quot;b-f-link mt10&quot;&gt;</span><br><span class="line">                &lt;span&gt;©2018课程版权均归谷粒学院所有 京ICP备17055252号&lt;&#x2F;span&gt;</span><br><span class="line">              &lt;&#x2F;section&gt;</span><br><span class="line">            &lt;&#x2F;section&gt;</span><br><span class="line">          &lt;&#x2F;section&gt;</span><br><span class="line">          &lt;aside class&#x3D;&quot;fl col-3 tac mt15&quot;&gt;</span><br><span class="line">            &lt;section class&#x3D;&quot;gf-tx&quot;&gt;</span><br><span class="line">              &lt;span&gt;</span><br><span class="line">                &lt;img src&#x3D;&quot;~&#x2F;assets&#x2F;img&#x2F;wx-icon.png&quot; alt&gt;</span><br><span class="line">              &lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;section&gt;</span><br><span class="line">            &lt;section class&#x3D;&quot;gf-tx&quot;&gt;</span><br><span class="line">              &lt;span&gt;</span><br><span class="line">                &lt;img src&#x3D;&quot;~&#x2F;assets&#x2F;img&#x2F;wb-icon.png&quot; alt&gt;</span><br><span class="line">              &lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;section&gt;</span><br><span class="line">          &lt;&#x2F;aside&gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;clear&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;section&gt;</span><br><span class="line">    &lt;&#x2F;footer&gt;</span><br><span class="line">    &lt;!-- &#x2F;公共底引入 --&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &quot;~&#x2F;assets&#x2F;css&#x2F;reset.css&quot;;</span><br><span class="line">import &quot;~&#x2F;assets&#x2F;css&#x2F;theme.css&quot;;</span><br><span class="line">import &quot;~&#x2F;assets&#x2F;css&#x2F;global.css&quot;;</span><br><span class="line">import &quot;~&#x2F;assets&#x2F;css&#x2F;web.css&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="index-vue"><a href="#index-vue" class="headerlink" title="index.vue"></a>index.vue</h3><p>注意是pages目录下的index.vue，也就是页面的首页</p><p>静态代码略，后面会修改代码完善</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200708215843.png" alt="image-20200708215843580"></p><p>重点说明一下，default.vue就是页面布局的头信息和尾信息，从头信息的代码可以看到，导航栏都是通过路由跳转来实现的，比如课程（固定路由）的路由跳转 <code>to=&quot;/course&quot;</code>，具体是怎么实现的呢</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200708215230.png" alt="image-20200708215230253"></p><p>当你点击课程时，会到pages目录下找course目录下的index.vue，</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200708215329.png" alt="image-20200708215328967"></p><p>当你继续点击某个课程时，这时候会携带id进行路由跳转（动态路由），这时候会到course目录下找动态路由，一般是以”_”开头的vue页面</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200708215451.png" alt="image-20200708215451235"></p><h3 id="course"><a href="#course" class="headerlink" title="course"></a>course</h3><h4 id="index-vue-1"><a href="#index-vue-1" class="headerlink" title="index.vue"></a>index.vue</h4><p>静态代码略，后面会修改代码完善</p><h4 id="id-vue"><a href="#id-vue" class="headerlink" title="_id.vue"></a>_id.vue</h4><p>静态代码略，后面会修改代码完善</p><p>名师同理：</p><h3 id="teacher"><a href="#teacher" class="headerlink" title="teacher"></a>teacher</h3><h4 id="index-vue-2"><a href="#index-vue-2" class="headerlink" title="index.vue"></a>index.vue</h4><p>静态代码略，后面会修改代码完善</p><h4 id="id-vue-1"><a href="#id-vue-1" class="headerlink" title="_id.vue"></a>_id.vue</h4><p>静态代码略，后面会修改代码完善</p><p>至此，前台大概的页面就出来了，接下来再慢慢从后端到前台的一步一步开发</p><h2 id="3、cms模块开发"><a href="#3、cms模块开发" class="headerlink" title="3、cms模块开发"></a>3、cms模块开发</h2><h3 id="service-cms"><a href="#service-cms" class="headerlink" title="service_cms"></a>service_cms</h3><p>在service模块中新建一个service_cms模块</p><h3 id="导入数据库脚本"><a href="#导入数据库脚本" class="headerlink" title="导入数据库脚本"></a>导入数据库脚本</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`crm_banner`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'ID'</span>,</span><br><span class="line">  <span class="string">`title`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'标题'</span>,</span><br><span class="line">  <span class="string">`image_url`</span> <span class="built_in">varchar</span>(<span class="number">500</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'图片地址'</span>,</span><br><span class="line">  <span class="string">`link_url`</span> <span class="built_in">varchar</span>(<span class="number">500</span>) <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'链接地址'</span>,</span><br><span class="line">  <span class="string">`sort`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'排序'</span>,</span><br><span class="line">  <span class="string">`is_deleted`</span> <span class="built_in">tinyint</span>(<span class="number">1</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'逻辑删除 1（true）已删除， 0（false）未删除'</span>,</span><br><span class="line">  <span class="string">`gmt_create`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  <span class="string">`gmt_modified`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`uk_name`</span> (<span class="string">`title`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4 <span class="keyword">COMMENT</span>=<span class="string">'首页banner表'</span>;</span><br></pre></td></tr></table></figure><h3 id="mp生成代码"><a href="#mp生成代码" class="headerlink" title="mp生成代码"></a>mp生成代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.generator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.DbType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.IdType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.AutoGenerator;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.DataSourceConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.GlobalConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.PackageConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.StrategyConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.DateType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CodeGenerator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建代码生成器</span></span><br><span class="line">        AutoGenerator mpg = <span class="keyword">new</span> AutoGenerator();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、全局配置</span></span><br><span class="line">        GlobalConfig gc = <span class="keyword">new</span> GlobalConfig();</span><br><span class="line">        String projectPath = System.getProperty(<span class="string">"user.dir"</span>);</span><br><span class="line">        gc.setOutputDir(<span class="string">"E:\\Programming\\Project\\guli_parent\\service\\service_cms"</span> + <span class="string">"/src/main/java"</span>);</span><br><span class="line"></span><br><span class="line">        gc.setAuthor(<span class="string">"ryan"</span>);</span><br><span class="line">        gc.setOpen(<span class="keyword">false</span>); <span class="comment">//生成后是否打开资源管理器</span></span><br><span class="line">        gc.setFileOverride(<span class="keyword">false</span>); <span class="comment">//重新生成时文件是否覆盖</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//UserServie</span></span><br><span class="line">        gc.setServiceName(<span class="string">"%sService"</span>);    <span class="comment">//去掉Service接口的首字母I</span></span><br><span class="line"></span><br><span class="line">        gc.setIdType(IdType.ID_WORKER_STR); <span class="comment">//主键策略</span></span><br><span class="line">        gc.setDateType(DateType.ONLY_DATE);<span class="comment">//定义生成的实体类中日期类型</span></span><br><span class="line">        gc.setSwagger2(<span class="keyword">true</span>);<span class="comment">//开启Swagger2模式</span></span><br><span class="line"></span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、数据源配置</span></span><br><span class="line">        DataSourceConfig dsc = <span class="keyword">new</span> DataSourceConfig();</span><br><span class="line">        dsc.setUrl(<span class="string">"jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8"</span>);</span><br><span class="line">        dsc.setDriverName(<span class="string">"com.mysql.cj.jdbc.Driver"</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">"root"</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">"123456"</span>);</span><br><span class="line">        dsc.setDbType(DbType.MYSQL);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、包配置</span></span><br><span class="line">        PackageConfig pc = <span class="keyword">new</span> PackageConfig();</span><br><span class="line">        pc.setModuleName(<span class="string">"cms"</span>); <span class="comment">//模块名</span></span><br><span class="line">        <span class="comment">//包  com.ryan.eduservice</span></span><br><span class="line">        pc.setParent(<span class="string">"com.ryan"</span>);</span><br><span class="line">        <span class="comment">//包  com.ryan.eduservice.controller</span></span><br><span class="line">        pc.setController(<span class="string">"controller"</span>);</span><br><span class="line">        pc.setEntity(<span class="string">"entity"</span>);</span><br><span class="line">        pc.setService(<span class="string">"service"</span>);</span><br><span class="line">        pc.setMapper(<span class="string">"mapper"</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5、策略配置</span></span><br><span class="line">        StrategyConfig strategy = <span class="keyword">new</span> StrategyConfig();</span><br><span class="line"></span><br><span class="line">        strategy.setInclude(<span class="string">"crm_banner"</span>);</span><br><span class="line"></span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);<span class="comment">//数据库表映射到实体的命名策略</span></span><br><span class="line">        strategy.setTablePrefix(pc.getModuleName() + <span class="string">"_"</span>); <span class="comment">//生成实体时去掉表前缀</span></span><br><span class="line"></span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);<span class="comment">//数据库表字段映射到实体的命名策略</span></span><br><span class="line">        strategy.setEntityLombokModel(<span class="keyword">true</span>); <span class="comment">// lombok 模型 @Accessors(chain = true) setter链式操作</span></span><br><span class="line"></span><br><span class="line">        strategy.setRestControllerStyle(<span class="keyword">true</span>); <span class="comment">//restful api风格控制器</span></span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="keyword">true</span>); <span class="comment">//url中驼峰转连字符</span></span><br><span class="line"></span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6、执行</span></span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置yml文件"><a href="#配置yml文件" class="headerlink" title="配置yml文件"></a>配置yml文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8004</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-cms</span></span><br><span class="line">    <span class="comment"># 环境设置</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># mysql数据库连接</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">  <span class="comment"># 返回json的全局时间格式</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">date-format:</span> <span class="string">yyyy-MM-dd</span> <span class="string">HH:mm:ss</span></span><br><span class="line">    <span class="attr">time-zone:</span> <span class="string">GMT+8</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">  <span class="comment"># 配置mapper xml文件的路径</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:com/ryan/cms/mapper/xml/*.xml</span></span><br><span class="line">  <span class="comment"># mybatis日志</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure><h3 id="编写主启动类"><a href="#编写主启动类" class="headerlink" title="编写主启动类"></a>编写主启动类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(basePackages = <span class="string">"com.ryan"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CmsApplication</span> </span>&#123;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">           SpringApplication.run(CmsApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="完善实体类"><a href="#完善实体类" class="headerlink" title="完善实体类"></a>完善实体类</h3><p>自动填充的加上注解，逻辑删除的加上注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@EqualsAndHashCode</span>(callSuper = <span class="keyword">false</span>)</span><br><span class="line"><span class="meta">@Accessors</span>(chain = <span class="keyword">true</span>)</span><br><span class="line"><span class="meta">@ApiModel</span>(value=<span class="string">"CrmBanner对象"</span>, description=<span class="string">"首页banner表"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CrmBanner</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"ID"</span>)</span><br><span class="line">    <span class="meta">@TableId</span>(value = <span class="string">"id"</span>, type = IdType.ID_WORKER_STR)</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"标题"</span>)</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"图片地址"</span>)</span><br><span class="line">    <span class="keyword">private</span> String imageUrl;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"链接地址"</span>)</span><br><span class="line">    <span class="keyword">private</span> String linkUrl;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"排序"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer sort;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"逻辑删除 1（true）已删除， 0（false）未删除"</span>)</span><br><span class="line">    <span class="meta">@TableLogic</span></span><br><span class="line">    <span class="keyword">private</span> Boolean isDeleted;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"创建时间"</span>)</span><br><span class="line">    <span class="meta">@TableField</span>(fill = FieldFill.INSERT)</span><br><span class="line">    <span class="keyword">private</span> Date gmtCreate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"更新时间"</span>)</span><br><span class="line">    <span class="meta">@TableField</span>(fill = FieldFill.INSERT_UPDATE)</span><br><span class="line">    <span class="keyword">private</span> Date gmtModified;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="cms配置类"><a href="#cms配置类" class="headerlink" title="cms配置类"></a>cms配置类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootConfiguration</span></span><br><span class="line"><span class="meta">@MapperScan</span>(<span class="string">"com.ryan.cms.mapper"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CmsConfig</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 逻辑删除插件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ISqlInjector <span class="title">sqlInjector</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> LogicSqlInjector();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分页插件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PaginationInterceptor <span class="title">paginationInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> PaginationInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="首页Banner后端开发"><a href="#首页Banner后端开发" class="headerlink" title="首页Banner后端开发"></a>首页Banner后端开发</h3><p>对于banner管理，一个是针对后台管理系统的，一个是针对前台展示的，后台管理主要是crud操作，前台的主要是查询展示操作，所以这里新建两个banner控制器：</p><h4 id="BannerAdminController"><a href="#BannerAdminController" class="headerlink" title="BannerAdminController"></a>BannerAdminController</h4><p>service层接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CrmBannerService</span> <span class="keyword">extends</span> <span class="title">IService</span>&lt;<span class="title">CrmBanner</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">Page&lt;CrmBanner&gt; <span class="title">getBannerPage</span><span class="params">(<span class="keyword">long</span> current, <span class="keyword">long</span> pageSize)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>service实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CrmBannerServiceImpl</span> <span class="keyword">extends</span> <span class="title">ServiceImpl</span>&lt;<span class="title">CrmBannerMapper</span>, <span class="title">CrmBanner</span>&gt; <span class="keyword">implements</span> <span class="title">CrmBannerService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;CrmBanner&gt;  <span class="title">getBannerPage</span><span class="params">(<span class="keyword">long</span> current, <span class="keyword">long</span> pageSize)</span> </span>&#123;</span><br><span class="line">        Page&lt;CrmBanner&gt; pageBanner = <span class="keyword">new</span> Page&lt;&gt;(current, pageSize);</span><br><span class="line">        baseMapper.selectPage(pageBanner, <span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">return</span> pageBanner;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>controller层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/cmsadmin/banner"</span>)</span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BannerAdminController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    CrmBannerService crmBannerService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//分页查询</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/getBannerPage/&#123;current&#125;/&#123;pageSize&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">getBannerPage</span><span class="params">(@PathVariable <span class="keyword">long</span> current, @PathVariable <span class="keyword">long</span> pageSize)</span></span>&#123;</span><br><span class="line">        Page&lt;CrmBanner&gt; pageBanner = crmBannerService.getBannerPage(current, pageSize);</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">"total"</span>, pageBanner.getTotal()).data(<span class="string">"items"</span>, pageBanner.getRecords());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增加banner</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/addBanner"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">addBanner</span><span class="params">(@RequestBody CrmBanner crmBanner)</span></span>&#123;</span><br><span class="line">        crmBannerService.save(crmBanner);</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改Banner</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/updateBanner"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">updateBanner</span><span class="params">(@RequestBody CrmBanner crmBanner)</span></span>&#123;</span><br><span class="line">        crmBannerService.updateById(crmBanner);</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除banner</span></span><br><span class="line">    <span class="meta">@DeleteMapping</span>(<span class="string">"/deleteBanner"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">deleteBanner</span><span class="params">(@PathVariable String id)</span></span>&#123;</span><br><span class="line">        crmBannerService.removeById(id);</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>swagger测试成功</p><h4 id="BannerClientController"><a href="#BannerClientController" class="headerlink" title="BannerClientController"></a>BannerClientController</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/cmsclient/anner"</span>)</span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BannerClientController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    CrmBannerService crmBannerService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//针对前台的banner控制器，前台只需要做展示即可，即查询所有banner，没有其他操作</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/getAllBanner"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">getAllBanner</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;CrmBanner&gt; list = crmBannerService.list(<span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">"list"</span>, list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>swagger测试成功</p><h3 id="首页Banner前端开发"><a href="#首页Banner前端开发" class="headerlink" title="首页Banner前端开发"></a>首页Banner前端开发</h3><p>首先前台项目需要先安装好axios的依赖，并封装axios，方便api开发和调用，参照guli-admin-vue</p><p>项目新建文件夹utils，存放request.js</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装axios</span></span><br><span class="line">npm install axios</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//封装axios</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"><span class="comment">// 创建axios实例</span></span><br><span class="line"><span class="keyword">const</span> service = axios.create(&#123;</span><br><span class="line">  baseURL: <span class="string">'http://localhost:9001'</span>, <span class="comment">// api的base_url</span></span><br><span class="line">  timeout: <span class="number">20000</span> <span class="comment">// 请求超时时间</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service</span><br></pre></td></tr></table></figure><p>项目新建api文件夹，存放各种api接口</p><h4 id="banner-js"><a href="#banner-js" class="headerlink" title="banner.js"></a>banner.js</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">"@/utils/request.js"</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">//获取所有banner</span></span><br><span class="line">    getBannerList()&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">'/cmsclient/anner/getAllBanner'</span>,</span><br><span class="line">            method: <span class="string">'get'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>找到显示幻灯片的页面，也就是pages目录下的index.vue，要学会在之前的基础上快速改出来</p><h4 id="index-vue-3"><a href="#index-vue-3" class="headerlink" title="index.vue"></a>index.vue</h4><p>由于目前整个文件代码太长，这里就只复制相关的代码过来</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 幻灯片 开始 --&gt;</span><br><span class="line">&lt;div v-swiper:mySwiper=<span class="string">"swiperOption"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"swiper-wrapper"</span>&gt;</span><br><span class="line">       &lt;div v-<span class="keyword">for</span>=<span class="string">"banner in bannerList"</span> :key=<span class="string">"banner.id"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"swiper-slide"</span> style=<span class="string">"background: #040B1B;"</span>&gt;</span><br><span class="line">          &lt;a target=<span class="string">"_blank"</span> :href=<span class="string">"banner.linkUrl"</span>&gt;</span><br><span class="line">             &lt;img :src=<span class="string">"banner.imageUrl"</span> :alt=<span class="string">"banner.title"</span>&gt;</span><br><span class="line">          &lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">       &lt;/</span>div&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div class="swiper-pagination swiper-pagination-white"&gt;&lt;/</span>div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"swiper-button-prev swiper-button-white"</span> slot=<span class="string">"button-prev"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div class="swiper-button-next swiper-button-white" slot="button-next"&gt;&lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;!-- 幻灯片 结束 --&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">import banner from "@/</span>api/banner.js<span class="string">"</span></span><br><span class="line"><span class="string">export default &#123;</span></span><br><span class="line"><span class="string">  data () &#123;</span></span><br><span class="line"><span class="string">    return &#123;</span></span><br><span class="line"><span class="string">      swiperOption: &#123;</span></span><br><span class="line"><span class="string">        //配置分页</span></span><br><span class="line"><span class="string">        pagination: &#123;</span></span><br><span class="line"><span class="string">          el: '.swiper-pagination'//分页的dom节点</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        //配置导航</span></span><br><span class="line"><span class="string">        navigation: &#123;</span></span><br><span class="line"><span class="string">          nextEl: '.swiper-button-next',//下一页dom节点</span></span><br><span class="line"><span class="string">          prevEl: '.swiper-button-prev'//前一页dom节点</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      bannerList:[]</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  created()&#123;</span></span><br><span class="line"><span class="string">    this.getBannerList()</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  methods: &#123;</span></span><br><span class="line"><span class="string">    getBannerList()&#123;</span></span><br><span class="line"><span class="string">      banner.getBannerList()</span></span><br><span class="line"><span class="string">        .then(response =&gt; &#123;</span></span><br><span class="line"><span class="string">          //注意这里需要点两次data，具体可以尝试console数据出来看看</span></span><br><span class="line"><span class="string">          //在guli-admin里面只需要点一次是因为那个框架里面已经封装过了</span></span><br><span class="line"><span class="string">          this.bannerList = response.data.data.list</span></span><br><span class="line"><span class="string">        &#125;)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="测试成功"><a href="#测试成功" class="headerlink" title="测试成功"></a>测试成功</h4><p>提示：别忘了在nginx配置代理地址8004</p><h3 id="首页课程和名师后端"><a href="#首页课程和名师后端" class="headerlink" title="首页课程和名师后端"></a>首页课程和名师后端</h3><p>提示：首页主要内容，除了banner，下面就是热门课程和名师了，这里就主要针对热门课程和名师开发，跟banner一样，开发思路也主要是查询并展示出来，没什么其他操作</p><h4 id="service层"><a href="#service层" class="headerlink" title="service层"></a>service层</h4><p>course接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">List&lt;EduCourse&gt; <span class="title">getIndexCourseList</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>teacher接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">List&lt;EduTeacher&gt; <span class="title">getIndexTeacherList</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>course实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询热门课程（8个）</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;EduCourse&gt; <span class="title">getIndexCourseList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//查询前8条课程信息</span></span><br><span class="line">    QueryWrapper&lt;EduCourse&gt; courseWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    courseWrapper.orderByDesc(<span class="string">"id"</span>);</span><br><span class="line">    courseWrapper.last(<span class="string">"limit 8"</span>);</span><br><span class="line">    List&lt;EduCourse&gt; courseList = baseMapper.selectList(courseWrapper);</span><br><span class="line">    <span class="keyword">return</span> courseList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>teacher实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;EduTeacher&gt; <span class="title">getIndexTeacherList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//查询前4名讲师信息</span></span><br><span class="line">    QueryWrapper&lt;EduTeacher&gt; teacherWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    teacherWrapper.orderByDesc(<span class="string">"id"</span>);</span><br><span class="line">    teacherWrapper.last(<span class="string">"limit 4"</span>);</span><br><span class="line">    List&lt;EduTeacher&gt; teacherList = baseMapper.selectList(teacherWrapper);</span><br><span class="line">    <span class="keyword">return</span> teacherList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="controller层"><a href="#controller层" class="headerlink" title="controller层"></a>controller层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/eduservice/clientindex"</span>)</span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClientIndexController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    EduCourseService eduCourseService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    EduTeacherService eduTeacherService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询前8条课程</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/indexcourse"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">getIndexCourse</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;EduCourse&gt; courseList =eduCourseService.getIndexCourseList();</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">"courseList"</span>,courseList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取前4名讲师</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/indexteacher"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">getIndexTeacher</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;EduTeacher&gt; teacherList =eduTeacherService.getIndexTeacherList();</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">"teacherList"</span>,teacherList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="swagger测试"><a href="#swagger测试" class="headerlink" title="swagger测试"></a>swagger测试</h4><p>测试成功</p><h3 id="首页课程和名师前端"><a href="#首页课程和名师前端" class="headerlink" title="首页课程和名师前端"></a>首页课程和名师前端</h3><h4 id="index-vue-4"><a href="#index-vue-4" class="headerlink" title="index.vue"></a>index.vue</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">     &lt;!-- 幻灯片 开始 --&gt;</span><br><span class="line">    &lt;div v-swiper:mySwiper&#x3D;&quot;swiperOption&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;swiper-wrapper&quot;&gt;</span><br><span class="line">            &lt;div v-for&#x3D;&quot;banner in bannerList&quot; :key&#x3D;&quot;banner.id&quot; class&#x3D;&quot;swiper-slide&quot; style&#x3D;&quot;background: #040B1B;&quot;&gt;</span><br><span class="line">                &lt;a target&#x3D;&quot;_blank&quot; :href&#x3D;&quot;banner.linkUrl&quot;&gt;</span><br><span class="line">                    &lt;img :src&#x3D;&quot;banner.imageUrl&quot; :alt&#x3D;&quot;banner.title&quot;&gt;</span><br><span class="line">                &lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;swiper-pagination swiper-pagination-white&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;swiper-button-prev swiper-button-white&quot; slot&#x3D;&quot;button-prev&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;swiper-button-next swiper-button-white&quot; slot&#x3D;&quot;button-next&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!-- 幻灯片 结束 --&gt;</span><br><span class="line">      &lt;div id&#x3D;&quot;aCoursesList&quot;&gt;</span><br><span class="line">      &lt;!-- 网校课程 开始 --&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;section class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">          &lt;header class&#x3D;&quot;comm-title&quot;&gt;</span><br><span class="line">            &lt;h2 class&#x3D;&quot;tac&quot;&gt;</span><br><span class="line">              &lt;span class&#x3D;&quot;c-333&quot;&gt;热门课程&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;h2&gt;</span><br><span class="line">          &lt;&#x2F;header&gt;</span><br><span class="line">          &lt;div&gt;</span><br><span class="line">            &lt;article class&#x3D;&quot;comm-course-list&quot;&gt;</span><br><span class="line">              &lt;ul class&#x3D;&quot;of&quot; id&#x3D;&quot;bna&quot;&gt;</span><br><span class="line">                &lt;li v-for&#x3D;&quot;course in courseList&quot; :key&#x3D;&quot;course.id&quot;&gt;</span><br><span class="line">                  &lt;div class&#x3D;&quot;cc-l-wrap&quot;&gt;</span><br><span class="line">                    &lt;section class&#x3D;&quot;course-img&quot;&gt;</span><br><span class="line">                      &lt;img</span><br><span class="line">                        :src&#x3D;&quot;course.cover&quot;</span><br><span class="line">                        class&#x3D;&quot;img-responsive&quot;</span><br><span class="line">                        :alt&#x3D;&quot;course.title&quot;</span><br><span class="line">                      &gt;</span><br><span class="line">                      &lt;div class&#x3D;&quot;cc-mask&quot;&gt;</span><br><span class="line">                        &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;开始学习&quot; class&#x3D;&quot;comm-btn c-btn-1&quot;&gt;开始学习&lt;&#x2F;a&gt;</span><br><span class="line">                      &lt;&#x2F;div&gt;</span><br><span class="line">                    &lt;&#x2F;section&gt;</span><br><span class="line">                    &lt;h3 class&#x3D;&quot;hLh30 txtOf mt10&quot;&gt;</span><br><span class="line">                      &lt;a href&#x3D;&quot;#&quot; :title&#x3D;&quot;course.title&quot; class&#x3D;&quot;course-title fsize18 c-333&quot;&gt;&#123;&#123;course.title&#125;&#125;&lt;&#x2F;a&gt;</span><br><span class="line">                    &lt;&#x2F;h3&gt;</span><br><span class="line">                    &lt;section class&#x3D;&quot;mt10 hLh20 of&quot;&gt;</span><br><span class="line">                      &lt;span class&#x3D;&quot;fr jgTag bg-green&quot; v-if&#x3D;&quot;Number(course.price &#x3D;&#x3D;&#x3D; 0)&quot;&gt;</span><br><span class="line">                        &lt;i class&#x3D;&quot;c-fff fsize12 f-fA&quot;&gt;免费&lt;&#x2F;i&gt;</span><br><span class="line">                      &lt;&#x2F;span&gt;</span><br><span class="line">                      &lt;span class&#x3D;&quot;fl jgAttr c-ccc f-fA&quot;&gt;</span><br><span class="line">                        &lt;i class&#x3D;&quot;c-999 f-fA&quot;&gt;&#123;&#123;course.buyCount&#125;&#125;&lt;&#x2F;i&gt;</span><br><span class="line">                        |</span><br><span class="line">                        &lt;i class&#x3D;&quot;c-999 f-fA&quot;&gt;&#123;&#123;course.viewCount&#125;&#125;&lt;&#x2F;i&gt;</span><br><span class="line">                      &lt;&#x2F;span&gt;</span><br><span class="line">                    &lt;&#x2F;section&gt;</span><br><span class="line">                  &lt;&#x2F;div&gt;</span><br><span class="line">                &lt;&#x2F;li&gt;</span><br><span class="line">              &lt;&#x2F;ul&gt;</span><br><span class="line">              &lt;div class&#x3D;&quot;clear&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;&#x2F;article&gt;</span><br><span class="line">            &lt;section class&#x3D;&quot;tac pt20&quot;&gt;</span><br><span class="line">              &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;全部课程&quot; class&#x3D;&quot;comm-btn c-btn-2&quot;&gt;全部课程&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;section&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;section&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;!-- &#x2F;网校课程 结束 --&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!-- 网校名师 开始 --&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;section class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">          &lt;header class&#x3D;&quot;comm-title&quot;&gt;</span><br><span class="line">            &lt;h2 class&#x3D;&quot;tac&quot;&gt;</span><br><span class="line">              &lt;span class&#x3D;&quot;c-333&quot;&gt;名师大咖&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;h2&gt;</span><br><span class="line">          &lt;&#x2F;header&gt;</span><br><span class="line">          &lt;div&gt;</span><br><span class="line">            &lt;article class&#x3D;&quot;i-teacher-list&quot;&gt;</span><br><span class="line">              &lt;ul class&#x3D;&quot;of&quot;&gt;</span><br><span class="line">                &lt;li v-for&#x3D;&quot;teacher in teacherList&quot; :key&#x3D;&quot;teacher.id&quot;&gt;</span><br><span class="line">                  &lt;section class&#x3D;&quot;i-teach-wrap&quot;&gt;</span><br><span class="line">                    &lt;div class&#x3D;&quot;i-teach-pic&quot;&gt;</span><br><span class="line">                      &lt;a href&#x3D;&quot;&#x2F;teacher&#x2F;1&quot; :title&#x3D;&quot;teacher.name&quot;&gt;</span><br><span class="line">                        &lt;img :alt&#x3D;&quot;teacher.name&quot; :src&#x3D;&quot;teacher.avatar&quot;&gt;</span><br><span class="line">                      &lt;&#x2F;a&gt;</span><br><span class="line">                    &lt;&#x2F;div&gt;</span><br><span class="line">                    &lt;div class&#x3D;&quot;mt10 hLh30 txtOf tac&quot;&gt;</span><br><span class="line">                      &lt;a href&#x3D;&quot;&#x2F;teacher&#x2F;1&quot; :title&#x3D;&quot;teacher.name&quot; class&#x3D;&quot;fsize18 c-666&quot;&gt;&#123;&#123;teacher.name&#125;&#125;&lt;&#x2F;a&gt;</span><br><span class="line">                    &lt;&#x2F;div&gt;</span><br><span class="line">                    &lt;div class&#x3D;&quot;hLh30 txtOf tac&quot;&gt;</span><br><span class="line">                      &lt;span class&#x3D;&quot;fsize14 c-999&quot;&gt;&#123;&#123;teacher.career&#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">                    &lt;&#x2F;div&gt;</span><br><span class="line">                    &lt;div class&#x3D;&quot;mt15 i-q-txt&quot;&gt;</span><br><span class="line">                      &lt;p</span><br><span class="line">                        class&#x3D;&quot;c-999 f-fA&quot;</span><br><span class="line">                      &gt;&#123;&#123;teacher.intro&#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">                    &lt;&#x2F;div&gt;</span><br><span class="line">                  &lt;&#x2F;section&gt;</span><br><span class="line">                &lt;&#x2F;li&gt;</span><br><span class="line">              &lt;&#x2F;ul&gt;</span><br><span class="line">              &lt;div class&#x3D;&quot;clear&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;&#x2F;article&gt;</span><br><span class="line">            &lt;section class&#x3D;&quot;tac pt20&quot;&gt;</span><br><span class="line">              &lt;a href&#x3D;&quot;#&quot; title&#x3D;&quot;全部讲师&quot; class&#x3D;&quot;comm-btn c-btn-2&quot;&gt;全部讲师&lt;&#x2F;a&gt;</span><br><span class="line">            &lt;&#x2F;section&gt;</span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;section&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;!-- &#x2F;网校名师 结束 --&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import banner from &quot;@&#x2F;api&#x2F;banner.js&quot;</span><br><span class="line">import index from &quot;@&#x2F;api&#x2F;index.js&quot;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      swiperOption: &#123;</span><br><span class="line">        &#x2F;&#x2F;配置分页</span><br><span class="line">        pagination: &#123;</span><br><span class="line">          el: &#39;.swiper-pagination&#39;&#x2F;&#x2F;分页的dom节点</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F;配置导航</span><br><span class="line">        navigation: &#123;</span><br><span class="line">          nextEl: &#39;.swiper-button-next&#39;,&#x2F;&#x2F;下一页dom节点</span><br><span class="line">          prevEl: &#39;.swiper-button-prev&#39;&#x2F;&#x2F;前一页dom节点</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      bannerList:[],</span><br><span class="line">      teacherList:[],</span><br><span class="line">      courseList:[]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created()&#123;</span><br><span class="line">    this.getBannerList()</span><br><span class="line">    this.getIndexList()</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    &#x2F;&#x2F;获取首页热门课程和讲师列表</span><br><span class="line">    getIndexList()&#123;</span><br><span class="line">      index.getIndexCourseTeacherList()</span><br><span class="line">        .then(response &#x3D;&gt; &#123;</span><br><span class="line">          this.courseList &#x3D; response.data.data.courseList</span><br><span class="line">          this.teacherList &#x3D; response.data.data.teacherList</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;获取banner列表</span><br><span class="line">    getBannerList()&#123;</span><br><span class="line">      banner.getBannerList()</span><br><span class="line">        .then(response &#x3D;&gt; &#123;</span><br><span class="line">          &#x2F;&#x2F;注意这里需要点两次data，具体可以尝试console数据出来看看</span><br><span class="line">          &#x2F;&#x2F;在guli-admin里面只需要点一次是因为那个框架里面已经封装过了</span><br><span class="line">          this.bannerList &#x3D; response.data.data.list</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h4 id="效果测试"><a href="#效果测试" class="headerlink" title="效果测试"></a>效果测试</h4><p>最终从数据库获取到相关数据并显示出来了</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200709112311.png" alt="image-20200709112303897"></p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200709112315.png" alt="image-20200709112315373"></p><h3 id="回顾redis"><a href="#回顾redis" class="headerlink" title="回顾redis"></a>回顾redis</h3><ul><li>基于key-value进行存储的</li><li>支持多种数据结构：String , list, hash, set, zset</li><li>支持持久化，通过内存进行存储的，也可以存到硬盘里面</li><li>支持过期时间，支持事务</li><li>一般来讲，在开发的过程中，会把一些经常进行查询操作，而且不经常改动的，不是特别重要的数据放到redis作为缓存</li></ul><p>而我们谷粒学院的首页，就是访问量高，不经常改动，所以适合将首页数据放到redis缓存中，具体怎么操作呢，下面我们来实操一下</p><h3 id="项目整合redis"><a href="#项目整合redis" class="headerlink" title="项目整合redis"></a>项目整合redis</h3><h4 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h4><p>在common模块下的pom.xml导入redis相关依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- redis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- spring2.X集成redis所需common-pool2--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-pool2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>提示：因为是在common中导入，所以如果想要使用的话，别忘了在service模块的pom.xml中导入相关模块依赖，之前已经导入过了，有依赖传递的作用</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ryan<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>service_base<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="编写redis配置文件"><a href="#编写redis配置文件" class="headerlink" title="编写redis配置文件"></a>编写redis配置文件</h4><p>在service_bash模块中的config目录下新建redisConfig文件，继承CachingConfigurerSupport缓存支持类，并开启缓存支持</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableCaching</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisConfig</span> <span class="keyword">extends</span> <span class="title">CachingConfigurerSupport</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RedisTemplate&lt;String, Object&gt; <span class="title">redisTemplate</span><span class="params">(RedisConnectionFactory factory)</span> </span>&#123;</span><br><span class="line">        RedisTemplate&lt;String, Object&gt; template = <span class="keyword">new</span> RedisTemplate&lt;&gt;();</span><br><span class="line">        RedisSerializer&lt;String&gt; redisSerializer = <span class="keyword">new</span> StringRedisSerializer();</span><br><span class="line">        Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = <span class="keyword">new</span> Jackson2JsonRedisSerializer(Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span><br><span class="line">        jackson2JsonRedisSerializer.setObjectMapper(om);</span><br><span class="line">        template.setConnectionFactory(factory);</span><br><span class="line">        <span class="comment">//key序列化方式</span></span><br><span class="line">        template.setKeySerializer(redisSerializer);</span><br><span class="line">        <span class="comment">//value序列化</span></span><br><span class="line">        template.setValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line">        <span class="comment">//value hashmap序列化</span></span><br><span class="line">        template.setHashValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line">        <span class="keyword">return</span> template;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CacheManager <span class="title">cacheManager</span><span class="params">(RedisConnectionFactory factory)</span> </span>&#123;</span><br><span class="line">        RedisSerializer&lt;String&gt; redisSerializer = <span class="keyword">new</span> StringRedisSerializer();</span><br><span class="line">        Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = <span class="keyword">new</span> Jackson2JsonRedisSerializer(Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">//解决查询缓存转换异常的问题</span></span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span><br><span class="line">        jackson2JsonRedisSerializer.setObjectMapper(om);</span><br><span class="line">        <span class="comment">// 配置序列化（解决乱码的问题）,过期时间600秒</span></span><br><span class="line">        RedisCacheConfiguration config = RedisCacheConfiguration.defaultCacheConfig()</span><br><span class="line">                .entryTtl(Duration.ofSeconds(<span class="number">600</span>))</span><br><span class="line">                .serializeKeysWith(RedisSerializationContext.SerializationPair.fromSerializer(redisSerializer))</span><br><span class="line">                .serializeValuesWith(RedisSerializationContext.SerializationPair.fromSerializer(jackson2JsonRedisSerializer))</span><br><span class="line">                .disableCachingNullValues();</span><br><span class="line">        RedisCacheManager cacheManager = RedisCacheManager.builder(factory)</span><br><span class="line">                .cacheDefaults(config)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">return</span> cacheManager;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Linux开启redis服务"><a href="#Linux开启redis服务" class="headerlink" title="Linux开启redis服务"></a>Linux开启redis服务</h4><p>进入redis启动目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/redis/bin</span><br></pre></td></tr></table></figure><p>开启redis服务，指定配置文件，注意我的配置文件放到了这个目录下：/opt/redis-6.0.5/myconfig/redis.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-server /opt/redis-6.0.5/myconfig/redis.conf</span><br></pre></td></tr></table></figure><p>检查是否启动redis</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@ryan bin]# ./redis-cli</span><br><span class="line">127.0.0.1:6379&gt; ping</span><br><span class="line">PONG</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><p>可能遇到的问题：</p><ul><li><p>关闭linux防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看防火墙状态</span></span><br><span class="line">[root@ryan bin]# systemctl status firewalld</span><br><span class="line">● firewalld.service - firewalld - dynamic firewall daemon</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line">     Docs: man:firewalld(1)</span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果没关就执行下面命令，我这里已经是dead</span></span><br><span class="line">systemctl disable firewalld</span><br></pre></td></tr></table></figure></li><li><p>找到redis配置文件</p><ul><li>注释：bind 127.0.0.1</li><li>将protected-mode状态修改no</li></ul></li></ul><p>杀掉redis进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@ryan bin]# ps -ef | grep redis</span><br><span class="line">root      8163  2357  0 12:55 pts/0    00:00:00 grep --color=auto redis</span><br><span class="line">root     29087     1  0 Jun17 ?        00:19:00 redis-server 127.0.0.1:6379</span><br><span class="line">[root@ryan bin]# kill -9 29087</span><br></pre></td></tr></table></figure><p>重新启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-server /opt/redis-6.0.5/myconfig/redis.conf</span><br></pre></td></tr></table></figure><p>至此，redis配置和启动已经完成</p><h4 id="redis缓存注解简介"><a href="#redis缓存注解简介" class="headerlink" title="redis缓存注解简介"></a>redis缓存注解简介</h4><p>以banner为例，基于springboot缓存注解实现redis缓存效果</p><h5 id="Cacheable"><a href="#Cacheable" class="headerlink" title="@Cacheable"></a>@Cacheable</h5><p>根据方法对其返回结果进行缓存，下次请求时，如果缓存存在，则直接取消缓存数据返回，如果缓存不存在，则执行方法，并把返回的结果存入缓存中，一般用在查询方法</p><p>查看原码，属性值如下</p><table><thead><tr><th>属性/方法</th><th>解释</th></tr></thead><tbody><tr><td>value</td><td>缓存名，必填，它指定过了你的缓存存放在哪块命名空间</td></tr><tr><td>cacheNames</td><td>与value差不多，二选一即可</td></tr><tr><td>key</td><td>可选属性，可以使用SpEL标签缓存的key</td></tr></tbody></table><h5 id="CachePut"><a href="#CachePut" class="headerlink" title="@CachePut"></a>@CachePut</h5><p>使用该注解标志的方法，每次都会执行，并将结果存入指定的缓存中，其他方法可以直接从响应的缓存中读取缓存数据，而不需要再去查询数据库，一般用在新增方法上</p><p>查看源码，属性值如下：</p><table><thead><tr><th>属性/方法</th><th>解释</th></tr></thead><tbody><tr><td>value</td><td>缓存名，必填，它指定过了你的缓存存放在哪块命名空间</td></tr><tr><td>cacheNames</td><td>与value差不多，二选一即可</td></tr><tr><td>key</td><td>可选属性，可以使用SpEL标签缓存的key</td></tr></tbody></table><h5 id="CacheEvict"><a href="#CacheEvict" class="headerlink" title="@CacheEvict"></a>@CacheEvict</h5><p>使用该注解标志的方法，会清空指定的缓存，一般用在更新或者删除方法上</p><p>查看源码，属性值如下：</p><table><thead><tr><th>属性/方法</th><th>解释</th></tr></thead><tbody><tr><td>value</td><td>缓存名，必填，它指定过了你的缓存存放在哪块命名空间</td></tr><tr><td>cacheNames</td><td>与value差不多，二选一即可</td></tr><tr><td>key</td><td>可选属性，可以使用SpEL标签缓存的key</td></tr><tr><td>allEntries</td><td>是否清空所有缓存，默认为false，如果指定为true，则方法调用后将立即清空所有的缓存</td></tr><tr><td>beforeInvocation</td><td>是否在方法执行前就清空，默认为false，如果指定为true，则在方法执行前就会清空缓存</td></tr></tbody></table><h4 id="yml配置redis"><a href="#yml配置redis" class="headerlink" title="yml配置redis"></a>yml配置redis</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">203.195</span><span class="number">.160</span><span class="number">.231</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">    <span class="attr">database:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">timeout:</span> <span class="number">1800000</span></span><br><span class="line">    <span class="attr">lettuce:</span></span><br><span class="line">      <span class="attr">pool:</span></span><br><span class="line">        <span class="attr">max-active:</span> <span class="number">20</span></span><br><span class="line">        <span class="attr">max-wait:</span> <span class="number">1</span></span><br><span class="line">        <span class="comment"># 最大阻塞等待时间（负数表示没有限制）</span></span><br><span class="line">        <span class="attr">max-idle:</span> <span class="number">5</span></span><br><span class="line">        <span class="attr">min-idle:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h4 id="使用注解"><a href="#使用注解" class="headerlink" title="使用注解"></a>使用注解</h4><p>我在查询banner的方法上使用注解@Cacheable</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将查询结果放到缓存中</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Cacheable</span>(value = <span class="string">"bannerList"</span>, key = <span class="string">"'getIndexBanner'"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;CrmBanner&gt; <span class="title">getIndexBanner</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//首页只显示2张banner，所以我们只需要获取两个banner即可</span></span><br><span class="line">        QueryWrapper&lt;CrmBanner&gt; bannerWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        bannerWrapper.orderByDesc(<span class="string">"id"</span>);</span><br><span class="line">        bannerWrapper.last(<span class="string">"limit 2"</span>);</span><br><span class="line">        List&lt;CrmBanner&gt; bannerList = baseMapper.selectList(bannerWrapper);</span><br><span class="line">        <span class="keyword">return</span> bannerList;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>测试前我们看下redis目前存在的key</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@ryan bin]# ./redis-cli</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) "name"</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><p>重启后端服务，刷新前台页面</p><p>先看看后端的输出，是先去查询数据库</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200709132455.png" alt="image-20200709132455428"></p><p>再看看redis中key，发现已经成功将查询结果存入数据库中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) "bannerList::getIndexBanner"</span><br><span class="line">2) "name"</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><p>清空后端控制台信息，再次刷新前台页面，注意到后台没有数据了，会直接去缓存中查询并返回结果</p><p>同理热门课程和名师列表，配置好yml文件，加上注解后测试一下redis的key</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) "courseList::getIndexCourseList"</span><br><span class="line">2) "bannerList::getIndexBanner"</span><br><span class="line">3) "teacherList::getIndexTeacherList"</span><br><span class="line">4) "name"</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;cover: &lt;a href=&quot;https://ryan-guli-01.oss-cn-shenzhen.aliyuncs.com/2020/07/03/1c79228eee714773a65025d60e597321yiquan.jpg&quot; target=&quot;_bl
      
    
    </summary>
    
    
      <category term="前后端分离" scheme="http://yoursite.com/categories/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="springboot" scheme="http://yoursite.com/tags/springboot/"/>
    
      <category term="nuxt" scheme="http://yoursite.com/tags/nuxt/"/>
    
      <category term="redis" scheme="http://yoursite.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>谷粒学院实战day05—课程管理开发(2)+微服务springcloud</title>
    <link href="http://yoursite.com/2020/07/08/%E5%AD%A6%E9%99%A2%E5%AE%9E%E6%88%98day05%E2%80%94%E8%AF%BE%E7%A8%8B%E7%AE%A1%E7%90%86%E5%BC%80%E5%8F%91-2-%E5%BE%AE%E6%9C%8D%E5%8A%A1springcloud/"/>
    <id>http://yoursite.com/2020/07/08/%E5%AD%A6%E9%99%A2%E5%AE%9E%E6%88%98day05%E2%80%94%E8%AF%BE%E7%A8%8B%E7%AE%A1%E7%90%86%E5%BC%80%E5%8F%91-2-%E5%BE%AE%E6%9C%8D%E5%8A%A1springcloud/</id>
    <published>2020-07-08T10:03:00.000Z</published>
    <updated>2020-07-09T15:59:06.684Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、阿里云视频点播服务"><a href="#1、阿里云视频点播服务" class="headerlink" title="1、阿里云视频点播服务"></a>1、阿里云视频点播服务</h2><p>阿里云视频点播（ApsaraVideo for VoD）是集音视频采集、编辑、上传、自动化转码处理、媒体资源管理、高效云剪辑处理、分发加速、视频播放于一体的一站式音视频点播解决方案。</p><p>可以使用默认的不转码上传文件，也可以自定义一个加密上传模块，这里分别上传了一个不加密和加密的视频</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200707230900.png" alt="image-20200707230900528"></p><h3 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h3><h4 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;!--aliyun-vod-sdk相关的依赖--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.aliyun&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;aliyun-java-sdk-core&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.aliyun.oss&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;aliyun-sdk-oss&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.aliyun&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;aliyun-java-sdk-vod&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.aliyun&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;aliyun-sdk-vod-upload&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.json&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;json&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;gson&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;joda-time&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;joda-time&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><p>注意：因为aliyun-sdk-vod-upload这个依赖尚未正式开源，所以没法自动下载依赖，需要手动安装依赖</p><p>下载相关依赖</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200707230531.png" alt="image-20200707230531176"></p><p>进入依赖lib目录，打开命令窗口，安装依赖到本地仓库即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">E:\Programming\在线教育--谷粒学院\项目源码\day09\VODUploadDemo-java-1.4.11\lib&gt;mvn install:install-file -DgroupId=com.aliyun -DartifactId=aliyun-sdk-vod-upload -Dversion=1.4.11 -Dpackaging=jar -Dfile=aliyun-java-vod-upload-1.4.11.jar</span><br><span class="line">[INFO] Scanning for projects...</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] ------------------&lt; org.apache.maven:standalone-pom &gt;-------------------</span><br><span class="line">[INFO] Building Maven Stub Project (No POM) 1</span><br><span class="line">[INFO] --------------------------------[ pom ]---------------------------------</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- maven-install-plugin:2.4:install-file (default-cli) @ standalone-pom ---</span><br><span class="line">[INFO] Installing E:\Programming\在线教育--谷粒学院\项目源码\day09\VODUploadDemo-java-1.4.11\lib\aliyun-java-vod-upload-1.4.11.jar to E:\Programming\server\Maven\repository\com\aliyun\aliyun-sdk-vod-upload\1.4.11\aliyun-sdk-vod-upload-1.4.11.jar</span><br><span class="line">[INFO] Installing C:\Users\86131\AppData\Local\Temp\mvninstall2017576839837282793.pom to E:\Programming\server\Maven\repository\com\aliyun\aliyun-sdk-vod-upload\1.4.11\aliyun-sdk-vod-upload-1.4.11.pom</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time:  1.046 s</span><br><span class="line">[INFO] Finished at: 2020-07-07T22:16:06+08:00</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><h4 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h4><h5 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InitVod</span> </span>&#123;</span><br><span class="line">    <span class="comment">//使用账号AccessKey初始化</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DefaultAcsClient <span class="title">initVodClient</span><span class="params">(String accessKeyId, String accessKeySecret)</span> <span class="keyword">throws</span> ClientException </span>&#123;</span><br><span class="line">        String regionId = <span class="string">"cn-shanghai"</span>;  <span class="comment">// 点播服务接入区域</span></span><br><span class="line">        DefaultProfile profile = DefaultProfile.getProfile(regionId, accessKeyId, accessKeySecret);</span><br><span class="line">        DefaultAcsClient client = <span class="keyword">new</span> DefaultAcsClient(profile);</span><br><span class="line">        <span class="keyword">return</span> client;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="获取视频播放地址"><a href="#获取视频播放地址" class="headerlink" title="获取视频播放地址"></a>获取视频播放地址</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getPlayUrl</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//创建初始化对象，这里的两个id编写自己对应的两个id即可</span></span><br><span class="line">        DefaultAcsClient client = InitVod.initVodClient(<span class="string">"your keyid"</span>, <span class="string">"your secretid"</span>);</span><br><span class="line">        <span class="comment">//创建获取视频地址request和response</span></span><br><span class="line">        GetPlayInfoRequest request = <span class="keyword">new</span> GetPlayInfoRequest();</span><br><span class="line">        GetPlayInfoResponse response = <span class="keyword">new</span> GetPlayInfoResponse();</span><br><span class="line">        <span class="comment">//像request对象里面设置视频id</span></span><br><span class="line">        request.setVideoId(<span class="string">"5862fcc3b455413f8e2d4d0abbecac2f"</span>);</span><br><span class="line">        <span class="comment">//调用初始化对象里面的方法，传递request，获取数据</span></span><br><span class="line">        response = client.getAcsResponse(request);</span><br><span class="line">        List&lt;GetPlayInfoResponse.PlayInfo&gt; playInfoList = response.getPlayInfoList();</span><br><span class="line">        <span class="comment">//测试输出播放地址</span></span><br><span class="line">        <span class="keyword">for</span> (GetPlayInfoResponse.PlayInfo playInfo : playInfoList) &#123;</span><br><span class="line">            System.out.println(<span class="string">"PlayInfo.PlayURL = "</span> + playInfo.getPlayURL() + <span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//视频基本信息</span></span><br><span class="line">        System.out.println(<span class="string">"VideoBase.Title = "</span> + response.getVideoBase().getTitle() + <span class="string">"\n"</span>);</span><br></pre></td></tr></table></figure><p>运行结果</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200707231026.png" alt="image-20200707231025902"></p><p>注意：如果是获取加密视频的话，服务会报错：</p><p>com.aliyuncs.exceptions.ClientException: Forbidden.AliyunVoDEncryption</p><p>所以对于加密视频来说，是没法直接获取视频播放地址，需要获取视频播放凭证</p><h5 id="获取视频播放凭证"><a href="#获取视频播放凭证" class="headerlink" title="获取视频播放凭证"></a>获取视频播放凭证</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getPlayAuth</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    <span class="comment">//初始化</span></span><br><span class="line">    DefaultAcsClient client = InitVod.initVodClient(<span class="string">"your keyid"</span>, <span class="string">"your secretid"</span>);</span><br><span class="line">    <span class="comment">//创建request对象和response对象</span></span><br><span class="line">    GetVideoPlayAuthRequest request = <span class="keyword">new</span> GetVideoPlayAuthRequest();</span><br><span class="line">    GetVideoPlayAuthResponse response = <span class="keyword">new</span> GetVideoPlayAuthResponse();</span><br><span class="line">    <span class="comment">//设置视频id</span></span><br><span class="line">    request.setVideoId(<span class="string">"54b05b402d314a2b8ab2baf05274513d"</span>);</span><br><span class="line">    <span class="comment">//调用方法，传入request，获取数据</span></span><br><span class="line">    response = client.getAcsResponse(request);</span><br><span class="line">    <span class="comment">//输出数据</span></span><br><span class="line">    System.out.println(<span class="string">"PlayInfo.PlayAuth =&gt;"</span> + response.getPlayAuth());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200707232040.png" alt="image-20200707232039959"></p><p>可以看到，即使是加密的视频也可以获取到播放凭证</p><h5 id="上传视频"><a href="#上传视频" class="headerlink" title="上传视频"></a>上传视频</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//上传视频</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">uploadVideo</span><span class="params">()</span></span>&#123;</span><br><span class="line">    String accessKeyId = <span class="string">"your keyid"</span>;</span><br><span class="line">    String accessKeySecret = <span class="string">"your secretid"</span>;</span><br><span class="line">    String title = <span class="string">"Malaysia"</span>;</span><br><span class="line">    String fileName = <span class="string">"E:/Video/Malaysia.mp4"</span>;</span><br><span class="line">    <span class="comment">//上传视频的方法</span></span><br><span class="line">    UploadVideoRequest request = <span class="keyword">new</span> UploadVideoRequest(accessKeyId, accessKeySecret, title, fileName);</span><br><span class="line">    <span class="comment">//可指定分片上传时每个分片的大小，默认为2m字节</span></span><br><span class="line">    request.setPartSize(<span class="number">2</span> * <span class="number">1024</span> * <span class="number">1024L</span>);</span><br><span class="line">    <span class="comment">//可指定分片上传时的并发线程数，默认为1(注：该配置会占用服务器CPU资源，需根据服务器情况指定）</span></span><br><span class="line">    request.setTaskNum(<span class="number">1</span>);</span><br><span class="line">    <span class="comment">//获取上传对象，并调用上传方法，返回数据</span></span><br><span class="line">    UploadVideoImpl uploader = <span class="keyword">new</span> UploadVideoImpl();</span><br><span class="line">    UploadVideoResponse response = uploader.uploadVideo(request);</span><br><span class="line">    <span class="comment">//判断是否上传成功</span></span><br><span class="line">    <span class="keyword">if</span>(response.isSuccess())&#123;</span><br><span class="line">        System.out.println(<span class="string">"VideoId = "</span> + response.getVideoId() + <span class="string">"\n"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//如果设置回调URL无效，不影响视频上传，可以返回VideoId同时会返回错误码。</span></span><br><span class="line">        <span class="comment">//其他情况上传失败时，VideoId为空，此时需要根据返回错误码分析具体错误原因</span></span><br><span class="line">        System.out.println(<span class="string">"VideoId = "</span> + response.getVideoId() + <span class="string">"\n"</span>);</span><br><span class="line">        System.out.println(<span class="string">"ErrorCode = "</span> + response.getCode() + <span class="string">"\n"</span>);</span><br><span class="line">        System.out.println(<span class="string">"ErrorMessage = "</span> + response.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200707233342.png" alt="image-20200707233342355"></p><p>查看阿里云视频列表，发现已经上传成功</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200707233413.png" alt="image-20200707233412792"></p><h2 id="2、springboot整合阿里云视频点播"><a href="#2、springboot整合阿里云视频点播" class="headerlink" title="2、springboot整合阿里云视频点播"></a>2、springboot整合阿里云视频点播</h2><h3 id="上传视频后端"><a href="#上传视频后端" class="headerlink" title="上传视频后端"></a>上传视频后端</h3><h4 id="新建模块service-vod"><a href="#新建模块service-vod" class="headerlink" title="新建模块service_vod"></a>新建模块service_vod</h4><h4 id="导入依赖-1"><a href="#导入依赖-1" class="headerlink" title="导入依赖"></a>导入依赖</h4><p>略，即上面所说的视频点播的相关依赖</p><h4 id="配置yml文件"><a href="#配置yml文件" class="headerlink" title="配置yml文件"></a>配置yml文件</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8003</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-vod</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line"></span><br><span class="line"><span class="attr">aliyun:</span></span><br><span class="line">  <span class="attr">oss:</span></span><br><span class="line">    <span class="attr">file:</span></span><br><span class="line">      <span class="attr">keyid:</span> <span class="string">your</span> <span class="string">keyid</span></span><br><span class="line">      <span class="attr">keysecret:</span> <span class="string">your</span> <span class="string">secretid</span></span><br></pre></td></tr></table></figure><h4 id="编写主启动类"><a href="#编写主启动类" class="headerlink" title="编写主启动类"></a>编写主启动类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span>(exclude = DataSourceAutoConfiguration<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">ComponentScan</span>(<span class="title">basePackages</span> </span>= <span class="string">"com.ryan"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VodApplication</span> </span>&#123;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">           SpringApplication.run(VodApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写常量工具类"><a href="#编写常量工具类" class="headerlink" title="编写常量工具类"></a>编写常量工具类</h4><p>提示：别忘了添加@Component注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConstantVodUtils</span> <span class="keyword">implements</span> <span class="title">InitializingBean</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value</span>(value = <span class="string">"$&#123;aliyun.oss.file.keyid&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String keyid;</span><br><span class="line">    <span class="meta">@Value</span>(value = <span class="string">"$&#123;aliyun.oss.file.keysecret&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String keysecret;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String KEY_ID;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String KEY_SECRET;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterPropertiesSet</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        KEY_ID = keyid;</span><br><span class="line">        KEY_SECRET = keysecret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写service层"><a href="#编写service层" class="headerlink" title="编写service层"></a>编写service层</h4><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">VodService</span> </span>&#123;</span><br><span class="line">    <span class="function">String <span class="title">uploadVideo</span><span class="params">(MultipartFile file)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VodServiceImpl</span> <span class="keyword">implements</span> <span class="title">VodService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">uploadVideo</span><span class="params">(MultipartFile file)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//上传视频，推荐使用流式上传</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//accessKeyId, accessKeySecret</span></span><br><span class="line">            <span class="comment">//fileName：上传文件原始名称</span></span><br><span class="line">            String fileName = file.getOriginalFilename();</span><br><span class="line">            <span class="comment">//title：上传之后显示名称，我们去掉原始名称的后缀</span></span><br><span class="line">            String title = fileName.substring(<span class="number">0</span>, fileName.lastIndexOf(<span class="string">"."</span>));</span><br><span class="line">            <span class="comment">//inputStream：上传文件输入流</span></span><br><span class="line">            InputStream inputStream = file.getInputStream();</span><br><span class="line"></span><br><span class="line">            UploadStreamRequest request = <span class="keyword">new</span> UploadStreamRequest(ConstantVodUtils.KEY_ID, ConstantVodUtils.KEY_SECRET, title, fileName, inputStream);</span><br><span class="line"></span><br><span class="line">            UploadVideoImpl uploader = <span class="keyword">new</span> UploadVideoImpl();</span><br><span class="line">            UploadStreamResponse response = uploader.uploadStream(request);</span><br><span class="line"></span><br><span class="line">            String videoId = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (response.isSuccess()) &#123;</span><br><span class="line">                videoId = response.getVideoId();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//如果设置回调URL无效，不影响视频上传，可以返回VideoId同时会返回错误码。</span></span><br><span class="line">                <span class="comment">// 其他情况上传失败时，VideoId为空，此时需要根据返回错误码分析具体错误原因</span></span><br><span class="line">                videoId = response.getVideoId();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> videoId;</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写controller层"><a href="#编写controller层" class="headerlink" title="编写controller层"></a>编写controller层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/eduvod/video"</span>)</span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VodController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    VodService vodService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//上传视频</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/uploadVideo"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">uploadVideo</span><span class="params">(MultipartFile file)</span></span>&#123;</span><br><span class="line">        <span class="comment">//因为上传视频之后，是把视频的id存到数据库中，所以这里应该返回一个id</span></span><br><span class="line">        String videoId = vodService.uploadVideo(file);</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">"videoId"</span>, videoId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="swagger测试"><a href="#swagger测试" class="headerlink" title="swagger测试"></a>swagger测试</h4><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200708004821.png" alt="image-20200708004821376"></p><p>发现抛出异常：org.springframework.web.multipart.MaxUploadSizeExceededException: Maximum upload size exceeded</p><p>分析得到是tomcat抛出的异常，因为上传的文件大小超出了tomcat的大小限制</p><p>解决方案：在yml文件中配置tomcat的大小限制</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8003</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-vod</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="comment"># 最大上传单个文件大小：默认1M,最大置总上传的数据大小 ：默认10M</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">multipart:</span></span><br><span class="line">      <span class="attr">max-file-size:</span> <span class="string">1024MB</span></span><br><span class="line">      <span class="attr">max-request-size:</span> <span class="string">1024MB</span></span><br><span class="line"></span><br><span class="line"><span class="attr">aliyun:</span></span><br><span class="line">  <span class="attr">oss:</span></span><br><span class="line">    <span class="attr">file:</span></span><br><span class="line">      <span class="attr">keyid:</span> <span class="string">your</span> <span class="string">keyid</span></span><br><span class="line">      <span class="attr">keysecret:</span> <span class="string">your</span> <span class="string">secretid</span></span><br></pre></td></tr></table></figure><p>再次测试，成功上传</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200708005758.png" alt="image-20200708005758739"></p><h3 id="上传视频前端"><a href="#上传视频前端" class="headerlink" title="上传视频前端"></a>上传视频前端</h3><p>在chapter.vue页面中添加上传组件，并完善相关属性以及方法</p><h4 id="chapter-vue"><a href="#chapter-vue" class="headerlink" title="chapter.vue"></a>chapter.vue</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div class&#x3D;&quot;app-container&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h2 style&#x3D;&quot;text-align: center;&quot;&gt;发布新课程&lt;&#x2F;h2&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-steps :active&#x3D;&quot;2&quot; process-status&#x3D;&quot;wait&quot; align-center style&#x3D;&quot;margin-bottom: 40px;&quot;&gt;</span><br><span class="line">      &lt;el-step title&#x3D;&quot;填写课程基本信息&quot;&#x2F;&gt;</span><br><span class="line">      &lt;el-step title&#x3D;&quot;创建课程大纲&quot;&#x2F;&gt;</span><br><span class="line">      &lt;el-step title&#x3D;&quot;最终发布&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;el-steps&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-button type&#x3D;&quot;text&quot; @click&#x3D;&quot;openChapterDialog()&quot;&gt;添加章节&lt;&#x2F;el-button&gt;</span><br><span class="line">    &lt;!-- 添加和修改章节表单 --&gt;</span><br><span class="line">    &lt;el-dialog :visible.sync&#x3D;&quot;dialogChapterFormVisible&quot; title&#x3D;&quot;添加章节&quot;&gt;</span><br><span class="line">        &lt;el-form :model&#x3D;&quot;chapter&quot; label-width&#x3D;&quot;120px&quot;&gt;</span><br><span class="line">            &lt;el-form-item label&#x3D;&quot;章节标题&quot;&gt;</span><br><span class="line">                &lt;el-input v-model&#x3D;&quot;chapter.title&quot;&#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;el-form-item&gt;</span><br><span class="line">            &lt;el-form-item label&#x3D;&quot;章节排序&quot;&gt;</span><br><span class="line">                &lt;el-input-number v-model&#x3D;&quot;chapter.sort&quot; :min&#x3D;&quot;0&quot; controls-position&#x3D;&quot;right&quot;&#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;el-form-item&gt;</span><br><span class="line">        &lt;&#x2F;el-form&gt;</span><br><span class="line">        &lt;div slot&#x3D;&quot;footer&quot; class&#x3D;&quot;dialog-footer&quot;&gt;</span><br><span class="line">            &lt;el-button @click&#x3D;&quot;dialogChapterFormVisible &#x3D; false&quot;&gt;取 消&lt;&#x2F;el-button&gt;</span><br><span class="line">            &lt;el-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;saveOrUpdate&quot;&gt;确 定&lt;&#x2F;el-button&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;el-dialog&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 添加和修改课时表单 --&gt;</span><br><span class="line">    &lt;el-dialog :visible.sync&#x3D;&quot;dialogVideoFormVisible&quot; title&#x3D;&quot;添加课时&quot;&gt;</span><br><span class="line">      &lt;el-form :model&#x3D;&quot;video&quot; label-width&#x3D;&quot;120px&quot;&gt;</span><br><span class="line">        &lt;el-form-item label&#x3D;&quot;课时标题&quot;&gt;</span><br><span class="line">          &lt;el-input v-model&#x3D;&quot;video.title&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label&#x3D;&quot;课时排序&quot;&gt;</span><br><span class="line">          &lt;el-input-number v-model&#x3D;&quot;video.sort&quot; :min&#x3D;&quot;0&quot; controls-position&#x3D;&quot;right&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label&#x3D;&quot;是否免费&quot;&gt;</span><br><span class="line">          &lt;el-radio-group v-model&#x3D;&quot;video.free&quot;&gt;</span><br><span class="line">            &lt;el-radio :label&#x3D;&quot;true&quot;&gt;免费&lt;&#x2F;el-radio&gt;</span><br><span class="line">            &lt;el-radio :label&#x3D;&quot;false&quot;&gt;默认&lt;&#x2F;el-radio&gt;</span><br><span class="line">          &lt;&#x2F;el-radio-group&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">        &lt;el-form-item label&#x3D;&quot;上传视频&quot;&gt;</span><br><span class="line">        &lt;el-upload</span><br><span class="line">            :on-success&#x3D;&quot;handleVodUploadSuccess&quot;</span><br><span class="line">            :on-remove&#x3D;&quot;handleVodRemove&quot;</span><br><span class="line">            :before-remove&#x3D;&quot;beforeVodRemove&quot;</span><br><span class="line">            :on-exceed&#x3D;&quot;handleUploadExceed&quot;</span><br><span class="line">            :file-list&#x3D;&quot;fileList&quot;</span><br><span class="line">            :action&#x3D;&quot;BASE_API+&#39;&#x2F;eduvod&#x2F;video&#x2F;uploadVideo&#39;&quot;</span><br><span class="line">            :limit&#x3D;&quot;1&quot;</span><br><span class="line">            class&#x3D;&quot;upload-demo&quot;&gt;</span><br><span class="line">        &lt;el-button size&#x3D;&quot;small&quot; type&#x3D;&quot;primary&quot;&gt;上传视频&lt;&#x2F;el-button&gt;</span><br><span class="line">        &lt;el-tooltip placement&#x3D;&quot;right-end&quot;&gt;</span><br><span class="line">            &lt;div slot&#x3D;&quot;content&quot;&gt;最大支持1G，&lt;br&gt;</span><br><span class="line">                支持3GP、ASF、AVI、DAT、DV、FLV、F4V、&lt;br&gt;</span><br><span class="line">                GIF、M2T、M4V、MJ2、MJPEG、MKV、MOV、MP4、&lt;br&gt;</span><br><span class="line">                MPE、MPG、MPEG、MTS、OGG、QT、RM、RMVB、&lt;br&gt;</span><br><span class="line">                SWF、TS、VOB、WMV、WEBM 等视频格式上传&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;i class&#x3D;&quot;el-icon-question&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;el-tooltip&gt;</span><br><span class="line">        &lt;&#x2F;el-upload&gt;</span><br><span class="line">    &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;&#x2F;el-form&gt;</span><br><span class="line">      &lt;div slot&#x3D;&quot;footer&quot; class&#x3D;&quot;dialog-footer&quot;&gt;</span><br><span class="line">        &lt;el-button @click&#x3D;&quot;dialogVideoFormVisible &#x3D; false&quot;&gt;取 消&lt;&#x2F;el-button&gt;</span><br><span class="line">        &lt;el-button :disabled&#x3D;&quot;saveVideoBtnDisabled&quot; type&#x3D;&quot;primary&quot; @click&#x3D;&quot;saveOrUpdateVideo&quot;&gt;确 定&lt;&#x2F;el-button&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;el-dialog&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 章节 --&gt;</span><br><span class="line">    &lt;ul class&#x3D;&quot;chanpterList&quot;&gt;</span><br><span class="line">        &lt;li</span><br><span class="line">            v-for&#x3D;&quot;chapter in chapterVideoList&quot;</span><br><span class="line">            :key&#x3D;&quot;chapter.id&quot;&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">                &#123;&#123; chapter.title &#125;&#125;</span><br><span class="line"></span><br><span class="line">                &lt;span class&#x3D;&quot;acts&quot;&gt;</span><br><span class="line">                    &lt;el-button style&#x3D;&quot;&quot; type&#x3D;&quot;text&quot; @click&#x3D;&quot;openVideo(chapter.id)&quot;&gt;添加小节&lt;&#x2F;el-button&gt;</span><br><span class="line">                    &lt;el-button style&#x3D;&quot;&quot; type&#x3D;&quot;text&quot; @click&#x3D;&quot;openEditChatper(chapter.id)&quot;&gt;编辑&lt;&#x2F;el-button&gt;</span><br><span class="line">                    &lt;el-button type&#x3D;&quot;text&quot; @click&#x3D;&quot;removeChapter(chapter.id)&quot;&gt;删除&lt;&#x2F;el-button&gt;</span><br><span class="line">                &lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;p&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 视频 --&gt;</span><br><span class="line">            &lt;ul class&#x3D;&quot;chanpterList videoList&quot;&gt;</span><br><span class="line">                &lt;li</span><br><span class="line">                    v-for&#x3D;&quot;video in chapter.children&quot;</span><br><span class="line">                    :key&#x3D;&quot;video.id&quot;&gt;</span><br><span class="line">                    &lt;p&gt;&#123;&#123; video.title &#125;&#125;</span><br><span class="line">                      &lt;span class&#x3D;&quot;acts&quot;&gt;</span><br><span class="line">                    </span><br><span class="line">                        &lt;el-button style&#x3D;&quot;&quot; type&#x3D;&quot;text&quot; @click&#x3D;&quot;openEditVideo(video.id)&quot;&gt;编辑&lt;&#x2F;el-button&gt;</span><br><span class="line">                        &lt;el-button type&#x3D;&quot;text&quot; @click&#x3D;&quot;removeVideo(video.id)&quot;&gt;删除&lt;&#x2F;el-button&gt;</span><br><span class="line">                      &lt;&#x2F;span&gt;</span><br><span class="line">                    &lt;&#x2F;p&gt;</span><br><span class="line">                &lt;&#x2F;li&gt;</span><br><span class="line">            &lt;&#x2F;ul&gt;</span><br><span class="line">        &lt;&#x2F;li&gt;</span><br><span class="line">    &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;el-button @click&#x3D;&quot;previous&quot;&gt;上一步&lt;&#x2F;el-button&gt;</span><br><span class="line">        &lt;el-button :disabled&#x3D;&quot;saveBtnDisabled&quot; type&#x3D;&quot;primary&quot; @click&#x3D;&quot;next&quot;&gt;下一步&lt;&#x2F;el-button&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import chapter from &#39;@&#x2F;api&#x2F;edu&#x2F;chapter&#39;</span><br><span class="line">import video from &#39;@&#x2F;api&#x2F;edu&#x2F;video&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">    data()&#123;</span><br><span class="line">        return&#123;</span><br><span class="line">            saveBtnDisabled: false,</span><br><span class="line">            saveVideoBtnDisabled: false,</span><br><span class="line">            chapterVideoList: [],</span><br><span class="line">            courseId: &quot;&quot;,</span><br><span class="line">            chapter: &#123;</span><br><span class="line">              title: &quot;&quot;,</span><br><span class="line">              sort: &quot;&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            video: &#123;</span><br><span class="line">              title: &#39;&#39;,</span><br><span class="line">              sort: 0,</span><br><span class="line">              Free: 0,</span><br><span class="line">              videoSourceId: &#39;&#39;,&#x2F;&#x2F;视频id</span><br><span class="line">              videoOriginalName: &#39;&#39;&#x2F;&#x2F;视频名称</span><br><span class="line">            &#125;,</span><br><span class="line">            fileList: [],</span><br><span class="line">            dialogChapterFormVisible: false,</span><br><span class="line">            dialogVideoFormVisible: false,</span><br><span class="line">            BASE_API: process.env.BASE_API &#x2F;&#x2F; 接口API地址</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    created()&#123;</span><br><span class="line">      &#x2F;&#x2F;如果有id值则查询章节信息，没有就是添加章节信息</span><br><span class="line">      if(this.$route.params &amp;&amp; this.$route.params.id)&#123;</span><br><span class="line">        this.courseId &#x3D; this.$route.params.id</span><br><span class="line">        this.getChaptersByCourseId()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">&#x2F;&#x2F;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;上传视频对应的方法&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">      &#x2F;&#x2F;上传成功调用的方法</span><br><span class="line">      handleVodUploadSuccess(response, file, fileList)&#123;</span><br><span class="line">        &#x2F;&#x2F;上传视频id赋值</span><br><span class="line">        this.video.videoSourceId &#x3D; response.data.videoId</span><br><span class="line">        &#x2F;&#x2F;上传视频名称赋值</span><br><span class="line">        this.video.videoOriginalName &#x3D; file.name</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      handleUploadExceed() &#123;</span><br><span class="line">        this.$message.warning(&#39;想要重新上传视频，请先删除已上传的视频&#39;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;上传时移除视频，主要是操作</span><br><span class="line">      handleVodRemove()&#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;上传时移除视频前调用的方法，主要是提示</span><br><span class="line">      beforeVodRemove()&#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">&#x2F;&#x2F;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;小节crud对应的方法&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">      &#x2F;&#x2F;打开添加小节弹框</span><br><span class="line">      openVideo(chapterId)&#123;</span><br><span class="line">        &#x2F;&#x2F;弹框</span><br><span class="line">        this.dialogVideoFormVisible &#x3D; true</span><br><span class="line">        &#x2F;&#x2F;清空，注意清空和设置id的顺序，不能反过来</span><br><span class="line">        this.video &#x3D; &#123;&#125;</span><br><span class="line">        &#x2F;&#x2F;设置章节id</span><br><span class="line">        this.video.chapterId &#x3D; chapterId</span><br><span class="line">        </span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;添加小节</span><br><span class="line">      addVideo()&#123;</span><br><span class="line">        this.video.courseId &#x3D; this.courseId</span><br><span class="line">        video.addVideo(this.video)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            &#x2F;&#x2F;关闭弹框</span><br><span class="line">            this.dialogVideoFormVisible &#x3D; false</span><br><span class="line">            &#x2F;&#x2F;提示信息</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">              type: &#39;success&#39;,</span><br><span class="line">              message: &#39;添加小节成功!&#39;</span><br><span class="line">            &#125;);</span><br><span class="line">            &#x2F;&#x2F;刷新页面</span><br><span class="line">            this.getChaptersByCourseId()</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;修改小节信息</span><br><span class="line">      updateVideo()&#123;</span><br><span class="line">        video.updateVideo(this.video)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            &#x2F;&#x2F;关弹框，提示信息，刷新页面</span><br><span class="line">            &#x2F;&#x2F;关闭弹框</span><br><span class="line">            this.dialogVideoFormVisible &#x3D; false</span><br><span class="line">            &#x2F;&#x2F;提示</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">                type: &#39;success&#39;,</span><br><span class="line">                message: &#39;修改小节成功!&#39;</span><br><span class="line">            &#125;);</span><br><span class="line">            &#x2F;&#x2F;刷新页面</span><br><span class="line">            this.getChaptersByCourseId()</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;点击小节编辑按钮，数据回显</span><br><span class="line">      openEditVideo(videoId)&#123;</span><br><span class="line">        this.dialogVideoFormVisible &#x3D; true&#x2F;&#x2F;弹框</span><br><span class="line">        video.getVideo(videoId)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            this.video &#x3D; response.data.eduVideo</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;删除小节信息</span><br><span class="line">      removeVideo(videoId)&#123;</span><br><span class="line">        &#x2F;&#x2F;弹框提示</span><br><span class="line">        &#x2F;&#x2F;为了用户体验，应该弹框提醒</span><br><span class="line">        this.$confirm(&#39;确定需要删除此小节记录吗？&#39;, &#39;提示&#39;, &#123;</span><br><span class="line">            confirmButtonText: &#39;确定&#39;,</span><br><span class="line">            cancelButtonText: &#39;取消&#39;,</span><br><span class="line">            type: &#39;warning&#39;</span><br><span class="line">          &#125;).then(() &#x3D;&gt; &#123;&#x2F;&#x2F;点击确定执行</span><br><span class="line">            video.deleteVideo(videoId)</span><br><span class="line">              .then(response &#x3D;&gt; &#123;</span><br><span class="line">                this.$message(&#123;&#x2F;&#x2F;删除成功后弹框</span><br><span class="line">                  type: &#39;success&#39;,</span><br><span class="line">                  message: &#39;删除小节成功!&#39;</span><br><span class="line">                &#125;);</span><br><span class="line">                &#x2F;&#x2F;删除成功后需要重新查询所有</span><br><span class="line">                this.getChaptersByCourseId()</span><br><span class="line">              &#125;)</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      saveOrUpdateVideo()&#123;</span><br><span class="line">        if(!this.video.id)&#123;</span><br><span class="line">          this.addVideo()</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">          this.updateVideo()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;章节crud对应的方法&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">      &#x2F;&#x2F;点击编辑弹框并数据回显</span><br><span class="line">      openEditChatper(chapterId)&#123;</span><br><span class="line">        this.dialogChapterFormVisible &#x3D; true</span><br><span class="line">        chapter.getChapter(chapterId)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            this.chapter &#x3D; response.data.chapter</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;删除章节信息</span><br><span class="line">      removeChapter(chapterId)&#123;</span><br><span class="line">        &#x2F;&#x2F;弹框提示</span><br><span class="line">        &#x2F;&#x2F;为了用户体验，应该弹框提醒</span><br><span class="line">        this.$confirm(&#39;确定需要删除此章节记录吗？&#39;, &#39;提示&#39;, &#123;</span><br><span class="line">            confirmButtonText: &#39;确定&#39;,</span><br><span class="line">            cancelButtonText: &#39;取消&#39;,</span><br><span class="line">            type: &#39;warning&#39;</span><br><span class="line">          &#125;).then(() &#x3D;&gt; &#123;&#x2F;&#x2F;点击确定执行</span><br><span class="line">            chapter.deleteChapter(chapterId)</span><br><span class="line">              .then(response &#x3D;&gt; &#123;</span><br><span class="line">                this.$message(&#123;&#x2F;&#x2F;删除成功后弹框</span><br><span class="line">                  type: &#39;success&#39;,</span><br><span class="line">                  message: &#39;删除章节成功!&#39;</span><br><span class="line">                &#125;);</span><br><span class="line">                &#x2F;&#x2F;删除成功后需要重新查询所有</span><br><span class="line">                this.getChaptersByCourseId()</span><br><span class="line">              &#125;)</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;添加章节方法</span><br><span class="line">      addChapter()&#123;</span><br><span class="line">        &#x2F;&#x2F;设置当前所属课程id</span><br><span class="line">        this.chapter.courseId &#x3D; this.courseId</span><br><span class="line">        chapter.addChapter(this.chapter)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            &#x2F;&#x2F;关闭弹框</span><br><span class="line">            this.dialogChapterFormVisible &#x3D; false</span><br><span class="line">            &#x2F;&#x2F;提示信息</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">              type: &#39;success&#39;,</span><br><span class="line">              message: &#39;添加成功!&#39;</span><br><span class="line">            &#125;);</span><br><span class="line">            &#x2F;&#x2F;刷新页面</span><br><span class="line">            this.getChaptersByCourseId()</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;修改章节方法</span><br><span class="line">      updateChapter()&#123;</span><br><span class="line">        chapter.updateChapter(this.chapter)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            &#x2F;&#x2F;关弹框，提示信息，刷新页面</span><br><span class="line">            &#x2F;&#x2F;关闭弹框</span><br><span class="line">            this.dialogChapterFormVisible &#x3D; false</span><br><span class="line">            &#x2F;&#x2F;提示</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">                type: &#39;success&#39;,</span><br><span class="line">                message: &#39;修改章节成功!&#39;</span><br><span class="line">            &#125;);</span><br><span class="line">            &#x2F;&#x2F;刷新页面</span><br><span class="line">            this.getChaptersByCourseId()</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;打开弹框</span><br><span class="line">      openChapterDialog()&#123;</span><br><span class="line">        this.dialogChapterFormVisible &#x3D; true</span><br><span class="line">        &#x2F;&#x2F;因为第二次打开添加章节的时候，会显示上一次添加的章节信息，所以每次点击添加章节的时候应该初始化一下</span><br><span class="line">        this.chapter.title &#x3D; &quot;&quot;</span><br><span class="line">        this.chapter.sort &#x3D; 0</span><br><span class="line">      &#125;,</span><br><span class="line">      </span><br><span class="line">      &#x2F;&#x2F;根据课程id查询章节列表信息</span><br><span class="line">      getChaptersByCourseId()&#123;</span><br><span class="line">        chapter.getChaptersByCourseId(this.courseId)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            this.chapterVideoList &#x3D; response.data.chapterList</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;上一步点击事件</span><br><span class="line">      previous()&#123;</span><br><span class="line">          this.$router.push(&#123;path:&quot;&#x2F;course&#x2F;info&#x2F;&quot; + this.courseId&#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;下一步点击事件</span><br><span class="line">      next()&#123;</span><br><span class="line">          this.$router.push(&#123;path: &#39;&#x2F;course&#x2F;publish&#x2F;&#39; + this.courseId&#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      saveOrUpdate()&#123;</span><br><span class="line">        &#x2F;&#x2F;判断是否携带章节id</span><br><span class="line">        if(!this.chapter.id)&#123;</span><br><span class="line">          this.addChapter()</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">          this.updateChapter()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.chanpterList&#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    list-style: none;</span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line">.chanpterList li&#123;</span><br><span class="line">  position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.chanpterList p&#123;</span><br><span class="line">  float: left;</span><br><span class="line">  font-size: 20px;</span><br><span class="line">  margin: 10px 0;</span><br><span class="line">  padding: 10px;</span><br><span class="line">  height: 70px;</span><br><span class="line">  line-height: 50px;</span><br><span class="line">  width: 100%;</span><br><span class="line">  border: 1px solid #DDD;</span><br><span class="line">&#125;</span><br><span class="line">.chanpterList .acts &#123;</span><br><span class="line">    float: right;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.videoList&#123;</span><br><span class="line">  padding-left: 50px;</span><br><span class="line">&#125;</span><br><span class="line">.videoList p&#123;</span><br><span class="line">  float: left;</span><br><span class="line">  font-size: 14px;</span><br><span class="line">  margin: 10px 0;</span><br><span class="line">  padding: 10px;</span><br><span class="line">  height: 50px;</span><br><span class="line">  line-height: 30px;</span><br><span class="line">  width: 100%;</span><br><span class="line">  border: 1px dotted #DDD;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><p>测试：</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200708011041.png" alt="image-20200708011041716"></p><p>新建的模块，别忘了添加代理到nginx的配置中，同时nginx也有限制上传文件大小，所以也得配置文件大小</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">client_max_body_size 1024m;</span><br><span class="line">server &#123;</span><br><span class="line">        listen       9001;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        location ~ /eduoss/ &#123;</span><br><span class="line">            proxy_pass http://localhost:8002;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">location ~ /eduservice/ &#123;</span><br><span class="line">            proxy_pass http://localhost:8001;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">location ~ /eduvod/ &#123;</span><br><span class="line">            proxy_pass http://localhost:8003;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再次测试，成功上传</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200708014559.png" alt="image-20200708014559201"></p><h3 id="删除视频后端"><a href="#删除视频后端" class="headerlink" title="删除视频后端"></a>删除视频后端</h3><p>提示：点击删除应该将视频从阿里云中删除响应的视频文件</p><h4 id="编写service层-1"><a href="#编写service层-1" class="headerlink" title="编写service层"></a>编写service层</h4><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteVideo</span><span class="params">(String videoId)</span></span>;</span><br></pre></td></tr></table></figure><p>实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据视频id删除视频</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteVideo</span><span class="params">(String videoId)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//初始化对象</span></span><br><span class="line">        DefaultAcsClient client = InitVod.initVodClient(ConstantVodUtils.KEY_ID, ConstantVodUtils.KEY_SECRET);</span><br><span class="line">        <span class="comment">//创建删除请求</span></span><br><span class="line">        DeleteVideoRequest request = <span class="keyword">new</span> DeleteVideoRequest();</span><br><span class="line">        <span class="comment">//设置id</span></span><br><span class="line">        request.setVideoIds(videoId);</span><br><span class="line">        <span class="comment">//执行删除操作</span></span><br><span class="line">        client.getAcsResponse(request);</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：需要在工具类中添加初始化的类，其实上面已经写过了，复制过来即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InitVod</span> </span>&#123;</span><br><span class="line">    <span class="comment">//使用账号AccessKey初始化</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DefaultAcsClient <span class="title">initVodClient</span><span class="params">(String accessKeyId, String accessKeySecret)</span> <span class="keyword">throws</span> ClientException </span>&#123;</span><br><span class="line">        String regionId = <span class="string">"cn-shanghai"</span>;  <span class="comment">// 点播服务接入区域</span></span><br><span class="line">        DefaultProfile profile = DefaultProfile.getProfile(regionId, accessKeyId, accessKeySecret);</span><br><span class="line">        DefaultAcsClient client = <span class="keyword">new</span> DefaultAcsClient(profile);</span><br><span class="line">        <span class="keyword">return</span> client;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写controller层-1"><a href="#编写controller层-1" class="headerlink" title="编写controller层"></a>编写controller层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除视频</span></span><br><span class="line"><span class="meta">@DeleteMapping</span>(<span class="string">"/deleteVideo/&#123;videoId&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">deleteVideo</span><span class="params">(@PathVariable String videoId)</span></span>&#123;</span><br><span class="line">    vodService.deleteVideo(videoId);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="swagger测试-1"><a href="#swagger测试-1" class="headerlink" title="swagger测试"></a>swagger测试</h4><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200708111001.png" alt="image-20200708110954119"></p><p>删除成功，接下来开发前端即可</p><h3 id="删除视频前端"><a href="#删除视频前端" class="headerlink" title="删除视频前端"></a>删除视频前端</h3><h4 id="api"><a href="#api" class="headerlink" title="api"></a>api</h4><p>video.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除小节视频</span></span><br><span class="line">deleteVod(videoId)&#123;</span><br><span class="line">    <span class="keyword">return</span> request(&#123;</span><br><span class="line">        url: <span class="string">'/eduvod/video/deleteVideo/'</span> + videoId,</span><br><span class="line">        method: <span class="string">'delete'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="chapter-vue-1"><a href="#chapter-vue-1" class="headerlink" title="chapter.vue"></a>chapter.vue</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div class&#x3D;&quot;app-container&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h2 style&#x3D;&quot;text-align: center;&quot;&gt;发布新课程&lt;&#x2F;h2&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-steps :active&#x3D;&quot;2&quot; process-status&#x3D;&quot;wait&quot; align-center style&#x3D;&quot;margin-bottom: 40px;&quot;&gt;</span><br><span class="line">      &lt;el-step title&#x3D;&quot;填写课程基本信息&quot;&#x2F;&gt;</span><br><span class="line">      &lt;el-step title&#x3D;&quot;创建课程大纲&quot;&#x2F;&gt;</span><br><span class="line">      &lt;el-step title&#x3D;&quot;最终发布&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;el-steps&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-button type&#x3D;&quot;text&quot; @click&#x3D;&quot;openChapterDialog()&quot;&gt;添加章节&lt;&#x2F;el-button&gt;</span><br><span class="line">    &lt;!-- 添加和修改章节表单 --&gt;</span><br><span class="line">    &lt;el-dialog :visible.sync&#x3D;&quot;dialogChapterFormVisible&quot; title&#x3D;&quot;添加章节&quot;&gt;</span><br><span class="line">        &lt;el-form :model&#x3D;&quot;chapter&quot; label-width&#x3D;&quot;120px&quot;&gt;</span><br><span class="line">            &lt;el-form-item label&#x3D;&quot;章节标题&quot;&gt;</span><br><span class="line">                &lt;el-input v-model&#x3D;&quot;chapter.title&quot;&#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;el-form-item&gt;</span><br><span class="line">            &lt;el-form-item label&#x3D;&quot;章节排序&quot;&gt;</span><br><span class="line">                &lt;el-input-number v-model&#x3D;&quot;chapter.sort&quot; :min&#x3D;&quot;0&quot; controls-position&#x3D;&quot;right&quot;&#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;el-form-item&gt;</span><br><span class="line">        &lt;&#x2F;el-form&gt;</span><br><span class="line">        &lt;div slot&#x3D;&quot;footer&quot; class&#x3D;&quot;dialog-footer&quot;&gt;</span><br><span class="line">            &lt;el-button @click&#x3D;&quot;dialogChapterFormVisible &#x3D; false&quot;&gt;取 消&lt;&#x2F;el-button&gt;</span><br><span class="line">            &lt;el-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;saveOrUpdate&quot;&gt;确 定&lt;&#x2F;el-button&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;el-dialog&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 添加和修改课时表单 --&gt;</span><br><span class="line">    &lt;el-dialog :visible.sync&#x3D;&quot;dialogVideoFormVisible&quot; title&#x3D;&quot;添加课时&quot;&gt;</span><br><span class="line">      &lt;el-form :model&#x3D;&quot;video&quot; label-width&#x3D;&quot;120px&quot;&gt;</span><br><span class="line">        &lt;el-form-item label&#x3D;&quot;课时标题&quot;&gt;</span><br><span class="line">          &lt;el-input v-model&#x3D;&quot;video.title&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label&#x3D;&quot;课时排序&quot;&gt;</span><br><span class="line">          &lt;el-input-number v-model&#x3D;&quot;video.sort&quot; :min&#x3D;&quot;0&quot; controls-position&#x3D;&quot;right&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label&#x3D;&quot;是否免费&quot;&gt;</span><br><span class="line">          &lt;el-radio-group v-model&#x3D;&quot;video.free&quot;&gt;</span><br><span class="line">            &lt;el-radio :label&#x3D;&quot;true&quot;&gt;免费&lt;&#x2F;el-radio&gt;</span><br><span class="line">            &lt;el-radio :label&#x3D;&quot;false&quot;&gt;默认&lt;&#x2F;el-radio&gt;</span><br><span class="line">          &lt;&#x2F;el-radio-group&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">        &lt;el-form-item label&#x3D;&quot;上传视频&quot;&gt;</span><br><span class="line">        &lt;el-upload</span><br><span class="line">            :on-success&#x3D;&quot;handleVodUploadSuccess&quot;</span><br><span class="line">            :on-remove&#x3D;&quot;handleVodRemove&quot;</span><br><span class="line">            :before-remove&#x3D;&quot;beforeVodRemove&quot;</span><br><span class="line">            :on-exceed&#x3D;&quot;handleUploadExceed&quot;</span><br><span class="line">            :file-list&#x3D;&quot;fileList&quot;</span><br><span class="line">            :action&#x3D;&quot;BASE_API+&#39;&#x2F;eduvod&#x2F;video&#x2F;uploadVideo&#39;&quot;</span><br><span class="line">            :limit&#x3D;&quot;1&quot;</span><br><span class="line">            class&#x3D;&quot;upload-demo&quot;&gt;</span><br><span class="line">        &lt;el-button size&#x3D;&quot;small&quot; type&#x3D;&quot;primary&quot;&gt;上传视频&lt;&#x2F;el-button&gt;</span><br><span class="line">        &lt;el-tooltip placement&#x3D;&quot;right-end&quot;&gt;</span><br><span class="line">            &lt;div slot&#x3D;&quot;content&quot;&gt;最大支持1G，&lt;br&gt;</span><br><span class="line">                支持3GP、ASF、AVI、DAT、DV、FLV、F4V、&lt;br&gt;</span><br><span class="line">                GIF、M2T、M4V、MJ2、MJPEG、MKV、MOV、MP4、&lt;br&gt;</span><br><span class="line">                MPE、MPG、MPEG、MTS、OGG、QT、RM、RMVB、&lt;br&gt;</span><br><span class="line">                SWF、TS、VOB、WMV、WEBM 等视频格式上传&lt;&#x2F;div&gt;</span><br><span class="line">            &lt;i class&#x3D;&quot;el-icon-question&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;el-tooltip&gt;</span><br><span class="line">        &lt;&#x2F;el-upload&gt;</span><br><span class="line">    &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;&#x2F;el-form&gt;</span><br><span class="line">      &lt;div slot&#x3D;&quot;footer&quot; class&#x3D;&quot;dialog-footer&quot;&gt;</span><br><span class="line">        &lt;el-button @click&#x3D;&quot;dialogVideoFormVisible &#x3D; false&quot;&gt;取 消&lt;&#x2F;el-button&gt;</span><br><span class="line">        &lt;el-button :disabled&#x3D;&quot;saveVideoBtnDisabled&quot; type&#x3D;&quot;primary&quot; @click&#x3D;&quot;saveOrUpdateVideo&quot;&gt;确 定&lt;&#x2F;el-button&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;el-dialog&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 章节 --&gt;</span><br><span class="line">    &lt;ul class&#x3D;&quot;chanpterList&quot;&gt;</span><br><span class="line">        &lt;li</span><br><span class="line">            v-for&#x3D;&quot;chapter in chapterVideoList&quot;</span><br><span class="line">            :key&#x3D;&quot;chapter.id&quot;&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">                &#123;&#123; chapter.title &#125;&#125;</span><br><span class="line"></span><br><span class="line">                &lt;span class&#x3D;&quot;acts&quot;&gt;</span><br><span class="line">                    &lt;el-button style&#x3D;&quot;&quot; type&#x3D;&quot;text&quot; @click&#x3D;&quot;openVideo(chapter.id)&quot;&gt;添加小节&lt;&#x2F;el-button&gt;</span><br><span class="line">                    &lt;el-button style&#x3D;&quot;&quot; type&#x3D;&quot;text&quot; @click&#x3D;&quot;openEditChatper(chapter.id)&quot;&gt;编辑&lt;&#x2F;el-button&gt;</span><br><span class="line">                    &lt;el-button type&#x3D;&quot;text&quot; @click&#x3D;&quot;removeChapter(chapter.id)&quot;&gt;删除&lt;&#x2F;el-button&gt;</span><br><span class="line">                &lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;p&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 视频 --&gt;</span><br><span class="line">            &lt;ul class&#x3D;&quot;chanpterList videoList&quot;&gt;</span><br><span class="line">                &lt;li</span><br><span class="line">                    v-for&#x3D;&quot;video in chapter.children&quot;</span><br><span class="line">                    :key&#x3D;&quot;video.id&quot;&gt;</span><br><span class="line">                    &lt;p&gt;&#123;&#123; video.title &#125;&#125;</span><br><span class="line">                      &lt;span class&#x3D;&quot;acts&quot;&gt;</span><br><span class="line">                    </span><br><span class="line">                        &lt;el-button style&#x3D;&quot;&quot; type&#x3D;&quot;text&quot; @click&#x3D;&quot;openEditVideo(video.id)&quot;&gt;编辑&lt;&#x2F;el-button&gt;</span><br><span class="line">                        &lt;el-button type&#x3D;&quot;text&quot; @click&#x3D;&quot;removeVideo(video.id)&quot;&gt;删除&lt;&#x2F;el-button&gt;</span><br><span class="line">                      &lt;&#x2F;span&gt;</span><br><span class="line">                    &lt;&#x2F;p&gt;</span><br><span class="line">                &lt;&#x2F;li&gt;</span><br><span class="line">            &lt;&#x2F;ul&gt;</span><br><span class="line">        &lt;&#x2F;li&gt;</span><br><span class="line">    &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;el-button @click&#x3D;&quot;previous&quot;&gt;上一步&lt;&#x2F;el-button&gt;</span><br><span class="line">        &lt;el-button :disabled&#x3D;&quot;saveBtnDisabled&quot; type&#x3D;&quot;primary&quot; @click&#x3D;&quot;next&quot;&gt;下一步&lt;&#x2F;el-button&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import chapter from &#39;@&#x2F;api&#x2F;edu&#x2F;chapter&#39;</span><br><span class="line">import video from &#39;@&#x2F;api&#x2F;edu&#x2F;video&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">    data()&#123;</span><br><span class="line">        return&#123;</span><br><span class="line">            saveBtnDisabled: false,</span><br><span class="line">            saveVideoBtnDisabled: false,</span><br><span class="line">            chapterVideoList: [],</span><br><span class="line">            courseId: &quot;&quot;,</span><br><span class="line">            chapter: &#123;</span><br><span class="line">              title: &quot;&quot;,</span><br><span class="line">              sort: &quot;&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            video: &#123;</span><br><span class="line">              title: &#39;&#39;,</span><br><span class="line">              sort: 0,</span><br><span class="line">              Free: 0,</span><br><span class="line">              videoSourceId: &#39;&#39;,&#x2F;&#x2F;视频id</span><br><span class="line">              videoOriginalName: &#39;&#39;&#x2F;&#x2F;视频名称</span><br><span class="line">            &#125;,</span><br><span class="line">            fileList: [],</span><br><span class="line">            dialogChapterFormVisible: false,</span><br><span class="line">            dialogVideoFormVisible: false,</span><br><span class="line">            BASE_API: process.env.BASE_API &#x2F;&#x2F; 接口API地址</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    created()&#123;</span><br><span class="line">      &#x2F;&#x2F;如果有id值则查询章节信息，没有就是添加章节信息</span><br><span class="line">      if(this.$route.params &amp;&amp; this.$route.params.id)&#123;</span><br><span class="line">        this.courseId &#x3D; this.$route.params.id</span><br><span class="line">        this.getChaptersByCourseId()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">&#x2F;&#x2F;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;操作视频对应的方法&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">      &#x2F;&#x2F;执行删除视频操作的方法</span><br><span class="line">      handleVodRemove()&#123;</span><br><span class="line">        video.deleteVod(this.video.videoSourceId)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            &#x2F;&#x2F;提示</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">                type: &#39;success&#39;,</span><br><span class="line">                message: &#39;删除视频成功!&#39;</span><br><span class="line">            &#125;);</span><br><span class="line">            &#x2F;&#x2F;把文件列表清空</span><br><span class="line">            this.fileList &#x3D; []</span><br><span class="line">            &#x2F;&#x2F;因为上传成功后已经给这两个属性赋值，如果删除视频需要初始化这两个值</span><br><span class="line">            this.video.videoSourceId &#x3D; &#39;&#39;</span><br><span class="line">            this.video.videoOriginalName &#x3D; &#39;&#39;</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;删除视频前的方法，主要是提示用户</span><br><span class="line">      beforeVodRemove(file, fileList)&#123;</span><br><span class="line">        return this.$confirm(&#96;确定移除 $&#123; file.name &#125;？&#96;);</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;上传成功调用的方法</span><br><span class="line">      handleVodUploadSuccess(response, file, fileList)&#123;</span><br><span class="line">        &#x2F;&#x2F;上传视频id赋值</span><br><span class="line">        this.video.videoSourceId &#x3D; response.data.videoId</span><br><span class="line">        &#x2F;&#x2F;上传视频名称赋值</span><br><span class="line">        this.video.videoOriginalName &#x3D; file.name</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      handleUploadExceed() &#123;</span><br><span class="line">        this.$message.warning(&#39;想要重新上传视频，请先删除已上传的视频&#39;)</span><br><span class="line">      &#125;,</span><br><span class="line">&#x2F;&#x2F;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;小节crud对应的方法&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">      &#x2F;&#x2F;打开添加小节弹框</span><br><span class="line">      openVideo(chapterId)&#123;</span><br><span class="line">        &#x2F;&#x2F;弹框</span><br><span class="line">        this.dialogVideoFormVisible &#x3D; true</span><br><span class="line">        &#x2F;&#x2F;清空，注意清空和设置id的顺序，不能反过来</span><br><span class="line">        this.video &#x3D; &#123;&#125;</span><br><span class="line">        &#x2F;&#x2F;设置章节id</span><br><span class="line">        this.video.chapterId &#x3D; chapterId</span><br><span class="line">        </span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;添加小节</span><br><span class="line">      addVideo()&#123;</span><br><span class="line">        this.video.courseId &#x3D; this.courseId</span><br><span class="line">        video.addVideo(this.video)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            &#x2F;&#x2F;关闭弹框</span><br><span class="line">            this.dialogVideoFormVisible &#x3D; false</span><br><span class="line">            &#x2F;&#x2F;提示信息</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">              type: &#39;success&#39;,</span><br><span class="line">              message: &#39;添加小节成功!&#39;</span><br><span class="line">            &#125;);</span><br><span class="line">            &#x2F;&#x2F;刷新页面</span><br><span class="line">            this.getChaptersByCourseId()</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;修改小节信息</span><br><span class="line">      updateVideo()&#123;</span><br><span class="line">        video.updateVideo(this.video)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            &#x2F;&#x2F;关弹框，提示信息，刷新页面</span><br><span class="line">            &#x2F;&#x2F;关闭弹框</span><br><span class="line">            this.dialogVideoFormVisible &#x3D; false</span><br><span class="line">            &#x2F;&#x2F;提示</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">                type: &#39;success&#39;,</span><br><span class="line">                message: &#39;修改小节成功!&#39;</span><br><span class="line">            &#125;);</span><br><span class="line">            &#x2F;&#x2F;刷新页面</span><br><span class="line">            this.getChaptersByCourseId()</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;点击小节编辑按钮，数据回显</span><br><span class="line">      openEditVideo(videoId)&#123;</span><br><span class="line">        this.dialogVideoFormVisible &#x3D; true&#x2F;&#x2F;弹框</span><br><span class="line">        video.getVideo(videoId)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            this.video &#x3D; response.data.eduVideo</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;删除小节信息</span><br><span class="line">      removeVideo(videoId)&#123;</span><br><span class="line">        &#x2F;&#x2F;弹框提示</span><br><span class="line">        &#x2F;&#x2F;为了用户体验，应该弹框提醒</span><br><span class="line">        this.$confirm(&#39;确定需要删除此小节记录吗？&#39;, &#39;提示&#39;, &#123;</span><br><span class="line">            confirmButtonText: &#39;确定&#39;,</span><br><span class="line">            cancelButtonText: &#39;取消&#39;,</span><br><span class="line">            type: &#39;warning&#39;</span><br><span class="line">          &#125;).then(() &#x3D;&gt; &#123;&#x2F;&#x2F;点击确定执行</span><br><span class="line">            video.deleteVideo(videoId)</span><br><span class="line">              .then(response &#x3D;&gt; &#123;</span><br><span class="line">                this.$message(&#123;&#x2F;&#x2F;删除成功后弹框</span><br><span class="line">                  type: &#39;success&#39;,</span><br><span class="line">                  message: &#39;删除小节成功!&#39;</span><br><span class="line">                &#125;);</span><br><span class="line">                &#x2F;&#x2F;删除成功后需要重新查询所有</span><br><span class="line">                this.getChaptersByCourseId()</span><br><span class="line">              &#125;)</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      saveOrUpdateVideo()&#123;</span><br><span class="line">        if(!this.video.id)&#123;</span><br><span class="line">          this.addVideo()</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">          this.updateVideo()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;章节crud对应的方法&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">      &#x2F;&#x2F;点击编辑弹框并数据回显</span><br><span class="line">      openEditChatper(chapterId)&#123;</span><br><span class="line">        this.dialogChapterFormVisible &#x3D; true</span><br><span class="line">        chapter.getChapter(chapterId)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            this.chapter &#x3D; response.data.chapter</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;删除章节信息</span><br><span class="line">      removeChapter(chapterId)&#123;</span><br><span class="line">        &#x2F;&#x2F;弹框提示</span><br><span class="line">        &#x2F;&#x2F;为了用户体验，应该弹框提醒</span><br><span class="line">        this.$confirm(&#39;确定需要删除此章节记录吗？&#39;, &#39;提示&#39;, &#123;</span><br><span class="line">            confirmButtonText: &#39;确定&#39;,</span><br><span class="line">            cancelButtonText: &#39;取消&#39;,</span><br><span class="line">            type: &#39;warning&#39;</span><br><span class="line">          &#125;).then(() &#x3D;&gt; &#123;&#x2F;&#x2F;点击确定执行</span><br><span class="line">            chapter.deleteChapter(chapterId)</span><br><span class="line">              .then(response &#x3D;&gt; &#123;</span><br><span class="line">                this.$message(&#123;&#x2F;&#x2F;删除成功后弹框</span><br><span class="line">                  type: &#39;success&#39;,</span><br><span class="line">                  message: &#39;删除章节成功!&#39;</span><br><span class="line">                &#125;);</span><br><span class="line">                &#x2F;&#x2F;删除成功后需要重新查询所有</span><br><span class="line">                this.getChaptersByCourseId()</span><br><span class="line">              &#125;)</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;添加章节方法</span><br><span class="line">      addChapter()&#123;</span><br><span class="line">        &#x2F;&#x2F;设置当前所属课程id</span><br><span class="line">        this.chapter.courseId &#x3D; this.courseId</span><br><span class="line">        chapter.addChapter(this.chapter)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            &#x2F;&#x2F;关闭弹框</span><br><span class="line">            this.dialogChapterFormVisible &#x3D; false</span><br><span class="line">            &#x2F;&#x2F;提示信息</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">              type: &#39;success&#39;,</span><br><span class="line">              message: &#39;添加成功!&#39;</span><br><span class="line">            &#125;);</span><br><span class="line">            &#x2F;&#x2F;刷新页面</span><br><span class="line">            this.getChaptersByCourseId()</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;修改章节方法</span><br><span class="line">      updateChapter()&#123;</span><br><span class="line">        chapter.updateChapter(this.chapter)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            &#x2F;&#x2F;关弹框，提示信息，刷新页面</span><br><span class="line">            &#x2F;&#x2F;关闭弹框</span><br><span class="line">            this.dialogChapterFormVisible &#x3D; false</span><br><span class="line">            &#x2F;&#x2F;提示</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">                type: &#39;success&#39;,</span><br><span class="line">                message: &#39;修改章节成功!&#39;</span><br><span class="line">            &#125;);</span><br><span class="line">            &#x2F;&#x2F;刷新页面</span><br><span class="line">            this.getChaptersByCourseId()</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;打开弹框</span><br><span class="line">      openChapterDialog()&#123;</span><br><span class="line">        this.dialogChapterFormVisible &#x3D; true</span><br><span class="line">        &#x2F;&#x2F;因为第二次打开添加章节的时候，会显示上一次添加的章节信息，所以每次点击添加章节的时候应该初始化一下</span><br><span class="line">        this.chapter.title &#x3D; &quot;&quot;</span><br><span class="line">        this.chapter.sort &#x3D; 0</span><br><span class="line">      &#125;,</span><br><span class="line">      </span><br><span class="line">      &#x2F;&#x2F;根据课程id查询章节列表信息</span><br><span class="line">      getChaptersByCourseId()&#123;</span><br><span class="line">        chapter.getChaptersByCourseId(this.courseId)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            this.chapterVideoList &#x3D; response.data.chapterList</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;上一步点击事件</span><br><span class="line">      previous()&#123;</span><br><span class="line">          this.$router.push(&#123;path:&quot;&#x2F;course&#x2F;info&#x2F;&quot; + this.courseId&#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;下一步点击事件</span><br><span class="line">      next()&#123;</span><br><span class="line">          this.$router.push(&#123;path: &#39;&#x2F;course&#x2F;publish&#x2F;&#39; + this.courseId&#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      saveOrUpdate()&#123;</span><br><span class="line">        &#x2F;&#x2F;判断是否携带章节id</span><br><span class="line">        if(!this.chapter.id)&#123;</span><br><span class="line">          this.addChapter()</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">          this.updateChapter()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.chanpterList&#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    list-style: none;</span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line">.chanpterList li&#123;</span><br><span class="line">  position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.chanpterList p&#123;</span><br><span class="line">  float: left;</span><br><span class="line">  font-size: 20px;</span><br><span class="line">  margin: 10px 0;</span><br><span class="line">  padding: 10px;</span><br><span class="line">  height: 70px;</span><br><span class="line">  line-height: 50px;</span><br><span class="line">  width: 100%;</span><br><span class="line">  border: 1px solid #DDD;</span><br><span class="line">&#125;</span><br><span class="line">.chanpterList .acts &#123;</span><br><span class="line">    float: right;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.videoList&#123;</span><br><span class="line">  padding-left: 50px;</span><br><span class="line">&#125;</span><br><span class="line">.videoList p&#123;</span><br><span class="line">  float: left;</span><br><span class="line">  font-size: 14px;</span><br><span class="line">  margin: 10px 0;</span><br><span class="line">  padding: 10px;</span><br><span class="line">  height: 50px;</span><br><span class="line">  line-height: 30px;</span><br><span class="line">  width: 100%;</span><br><span class="line">  border: 1px dotted #DDD;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><h2 id="3、微服务"><a href="#3、微服务" class="headerlink" title="3、微服务"></a>3、微服务</h2><h3 id="什么是微服务？"><a href="#什么是微服务？" class="headerlink" title="什么是微服务？"></a>什么是微服务？</h3><p>两个关键点：</p><ul><li>一种架构风格（对比单体架构）</li><li>将一个项目拆分为多个服务，每个服务是独立运行的，并使用轻量级机制通信，通常是HTTP API</li></ul><h3 id="为什么需要微服务？"><a href="#为什么需要微服务？" class="headerlink" title="为什么需要微服务？"></a>为什么需要微服务？</h3><p>在传统的IT行业软件大多都是各种独立系统的堆砌，这些系统的问题总结来说就是扩展性差，可靠性不高，维护成本高。到后面引入了SOA服务化，但是，由于 SOA 早期均使用了总线模式，这种总线模式是与某种技术栈强绑定的，比如：J2EE。这导致很多企业的遗留系统很难对接，切换时间太长，成本太高，新系统稳定性的收敛也需要一些时间。 </p><h3 id="微服务与单体架构的区别"><a href="#微服务与单体架构的区别" class="headerlink" title="微服务与单体架构的区别"></a>微服务与单体架构的区别</h3><ul><li><p>单体架构所有的模块全都耦合在一块，代码量大，维护困难。</p><p>微服务每个模块就相当于一个单独的项目，代码量明显减少，遇到问题也相对来说比较好解决。</p></li><li><p>单体架构所有的模块都共用一个数据库，存储方式比较单一。</p><p>微服务每个模块都可以使用不同的存储方式（比如有的用redis，有的用mysql等），数据库也是单个模块  对应自己的数据库。</p></li><li><p>单体架构所有的模块开发所使用的技术一样。</p><p>微服务每个模块都可以使用不同的开发技术，开发模式更灵活。 </p></li></ul><h3 id="微服务本质"><a href="#微服务本质" class="headerlink" title="微服务本质"></a>微服务本质</h3><ul><li>微服务，关键其实不仅仅是微服务本身，而是系统要提供一套基础的架构，这种架构使得微服务可以独立的部署、运行、升级，不仅如此，这个系统架构还让微服务与微服务之间在结构上“松耦合”，而在功能上则表现为一个统一的整体。这种所谓的“统一的整体”表现出来的是统一风格的界面，统一的权限管理，统一的安全策略，统一的上线过程，统一的日志和审计方法，统一的调度方式，统一的访问入口等等。</li><li>微服务的目的是有效的拆分应用，实现敏捷开发和部署 。</li><li>微服务提倡的理念团队间应该是 inter-operate, not integrate 。inter-operate是定义好系统的边界和接口，在一个团队内全栈，让团队自治，原因就是因为如果团队按照这样的方式组建，将沟通的成本维持在系统内部，每个子系统就会更加内聚，彼此的依赖耦合能变弱，跨系统的沟通成本也就能降低。</li></ul><h3 id="什么样的项目适合微服务"><a href="#什么样的项目适合微服务" class="headerlink" title="什么样的项目适合微服务"></a>什么样的项目适合微服务</h3><p>微服务可以按照业务功能本身的独立性来划分，如果系统提供的业务是非常底层的，如：操作系统内核、存储系统、网络系统、数据库系统等等，这类系统都偏底层，功能和功能之间有着紧密的配合关系，如果强制拆分为较小的服务单元，会让集成工作量急剧上升，并且这种人为的切割无法带来业务上的真正的隔离，所以无法做到独立部署和运行，也就不适合做成微服务了。</p><h3 id="微服务开发框架"><a href="#微服务开发框架" class="headerlink" title="微服务开发框架"></a>微服务开发框架</h3><p>目前微服务的开发框架，最常用的有以下四个：</p><p>Spring Cloud：<a href="http://projects.spring.io/spring-cloud（现在非常流行的微服务架构）" target="_blank" rel="noopener">http://projects.spring.io/spring-cloud（现在非常流行的微服务架构）</a></p><p>Dubbo：http：//dubbo.io</p><p>Dropwizard：<a href="http://www.dropwizard.io" target="_blank" rel="noopener">http://www.dropwizard.io</a> （关注单个微服务的开发）</p><p>Consul、etcd&amp;etc.（微服务的模块）</p><p>目前比较流行的主要是springcloud和dubbo，前者目前非常流行，相对多点，后者因为出现的比较早，所以现在还有挺多使用这个的</p><h2 id="4、springcloud"><a href="#4、springcloud" class="headerlink" title="4、springcloud"></a>4、springcloud</h2><h3 id="什么是springcloud？"><a href="#什么是springcloud？" class="headerlink" title="什么是springcloud？"></a>什么是springcloud？</h3><p>三个关键点</p><ul><li>本身并不是一个技术，而是非常多的技术的一个总称，框架的集合</li><li>springcloud里面很多框架（技术），使用springcloud里面这些框架实现微服务操作</li><li>使用springcloud，需要依赖springboot技术</li></ul><h3 id="springcloud和springboot的关系？"><a href="#springcloud和springboot的关系？" class="headerlink" title="springcloud和springboot的关系？"></a>springcloud和springboot的关系？</h3><p>Spring Boot 是 Spring 的一套快速配置脚手架，可以基于Spring Boot 快速开发单个微服务，Spring Cloud是一个基于Spring Boot实现的开发工具；Spring Boot专注于快速、方便集成的单个微服务个体，Spring Cloud关注全局的服务治理框架； Spring Boot使用了默认大于配置的理念，很多集成方案已经帮你选择好了，能不配置就不配置，Spring Cloud很大的一部分是基于Spring Boot来实现，必须基于Spring Boot开发。可以单独使用Spring Boot开发项目，但是Spring Cloud离不开 Spring Boot。</p><h3 id="Spring-Cloud相关基础服务组件"><a href="#Spring-Cloud相关基础服务组件" class="headerlink" title="Spring Cloud相关基础服务组件"></a>Spring Cloud相关基础服务组件</h3><p>服务发现——Netflix Eureka （Nacos）</p><p>服务调用——Netflix Feign </p><p>熔断器——Netflix Hystrix </p><p>服务网关——Spring Cloud GateWay </p><p>分布式配置——Spring Cloud Config  （Nacos）</p><p>消息总线 —— Spring Cloud Bus （Nacos）</p><h3 id="Spring-Cloud的版本"><a href="#Spring-Cloud的版本" class="headerlink" title="Spring Cloud的版本"></a>Spring Cloud的版本</h3><p>springcloud版本和springboot必须一一对应起来</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200708121816.png" alt="image-20200708121815974"></p><p>小知识：</p><p>开发代号看似没有什么规律，但实际上首字母是有顺序的，比如：Dalston版本，我们可以简称 D 版本，对应的 Edgware 版本我们可以简称 E 版本。</p><p>Spring Cloud 小版本分为:</p><p>SNAPSHOT： 快照版本，随时可能修改</p><p>M： MileStone，M1表示第1个里程碑版本，一般同时标注PRE，表示预览版版。</p><p>SR： Service Release，SR1表示第1个正式版本，一般同时标注GA：(GenerallyAvailable),表示稳定版本。</p><h2 id="5、Nacos"><a href="#5、Nacos" class="headerlink" title="5、Nacos"></a>5、Nacos</h2><h3 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h3><p><a href="https://nacos.io/zh-cn/docs/what-is-nacos.html" target="_blank" rel="noopener">https://nacos.io/zh-cn/docs/what-is-nacos.html</a></p><p>一图看懂nacos</p><p><img src= "/img/loading.gif" data-src="https://nacos.io/img/nacosMap.jpg" alt="nacos_map"></p><p>nacos生态圈</p><p><img src= "/img/loading.gif" data-src="https://cdn.nlark.com/lark/0/2018/png/11189/1533045871534-e64b8031-008c-4dfc-b6e8-12a597a003fb.png" alt="nacos_landscape.png"></p><h3 id="安装和使用"><a href="#安装和使用" class="headerlink" title="安装和使用"></a>安装和使用</h3><p>提示：这里以windows环境实操、nacos1.1.4 为例</p><p>下载地址：<a href="https://github.com/alibaba/nacos/releases/tag/1.1.4" target="_blank" rel="noopener">https://github.com/alibaba/nacos/releases/tag/1.1.4</a></p><p>下载完成后解压，进入bin目录，打开命令窗口，运行startup.cmd即可</p><p>访问地址：localhost:8848/nacos</p><p>用户名和密码都是nacos</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200708134234.png" alt="image-20200708134234208"></p><h3 id="springboot整合nacos"><a href="#springboot整合nacos" class="headerlink" title="springboot整合nacos"></a>springboot整合nacos</h3><h4 id="服务注册"><a href="#服务注册" class="headerlink" title="服务注册"></a>服务注册</h4><h5 id="在service模块中导入依赖"><a href="#在service模块中导入依赖" class="headerlink" title="在service模块中导入依赖"></a>在service模块中导入依赖</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--服务注册--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="配置yml文件-1"><a href="#配置yml文件-1" class="headerlink" title="配置yml文件"></a>配置yml文件</h5><p>在service_edu和service_vod这两个模块中分别配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">    <span class="attr">cloud:</span></span><br><span class="line">      <span class="attr">nacos:</span></span><br><span class="line">        <span class="attr">discovery:</span></span><br><span class="line">          <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br></pre></td></tr></table></figure><h5 id="开启服务发现服务"><a href="#开启服务发现服务" class="headerlink" title="开启服务发现服务"></a>开启服务发现服务</h5><p>在对应的主启动类中添加注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br></pre></td></tr></table></figure><p>最后刷新下nacos界面即可发现这两个模块已经注册到服务注册中心了</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200708140541.png" alt="image-20200708140541092"></p><p>注意：由于我是在service中导入了依赖，子模块service_oss没有配置服务注册，启动则会报错：<br>java.lang.IllegalArgumentException: no server available</p><p>我们在所有模块都配置一下就行，后面应该都会用到的</p><h4 id="服务调用"><a href="#服务调用" class="headerlink" title="服务调用"></a>服务调用</h4><p>服务注册完毕之后，接下来就可以进行服务调用了，具体步骤如下</p><h5 id="导入OpenFeign依赖"><a href="#导入OpenFeign依赖" class="headerlink" title="导入OpenFeign依赖"></a>导入OpenFeign依赖</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--服务调用--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="调用端开启服务调用"><a href="#调用端开启服务调用" class="headerlink" title="调用端开启服务调用"></a>调用端开启服务调用</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableFeignClients</span><span class="comment">//服务调用</span></span><br></pre></td></tr></table></figure><h5 id="在调用端添加client接口"><a href="#在调用端添加client接口" class="headerlink" title="在调用端添加client接口"></a>在调用端添加client接口</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FeignClient</span>(name = <span class="string">"service-vod"</span>)<span class="comment">//这里填的是服务名称（application name）</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">VodFeignClient</span> </span>&#123;</span><br><span class="line">    <span class="comment">//将你想调用的方法复制粘贴过来即可</span></span><br><span class="line">    <span class="comment">//注意，方法调用的路径一定要写全</span></span><br><span class="line">    <span class="comment">//删除小节=&gt;删除视频</span></span><br><span class="line">    <span class="meta">@DeleteMapping</span>(<span class="string">"/eduvod/video/deleteVideo/&#123;videoId&#125;"</span>)</span><br><span class="line">    <span class="function">R <span class="title">deleteVod</span><span class="params">(@PathVariable(<span class="string">"videoId"</span>)</span> String videoId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意这里的接口必须在@PathVariable注解指定参数名称，否则报错：</p><p>org.springframework.web.bind.MissingPathVariableException: Missing URI template variable ‘videoId’ for method parameter</p><h5 id="完善删除小节信息接口"><a href="#完善删除小节信息接口" class="headerlink" title="完善删除小节信息接口"></a>完善删除小节信息接口</h5><p>原来的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除小节</span></span><br><span class="line"><span class="meta">@DeleteMapping</span>(<span class="string">"/deleteVideo/&#123;videoId&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">deleteVideo</span><span class="params">(@PathVariable String videoId)</span></span>&#123;</span><br><span class="line">    eduVideoService.removeById(id);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在的：</p><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteVideo</span><span class="params">(String videoId)</span></span>;</span><br></pre></td></tr></table></figure><p>实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteVideo</span><span class="params">(String videoId)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//点击删除小节的时候，需要先删除视频，然后再删除小节</span></span><br><span class="line">    <span class="comment">//由于这里传的参数是小节id，不是视频地址id，所以没法直接删除视频</span></span><br><span class="line">    <span class="comment">//需要先通过小节id得到小节对象，接着获取视频源地址，再通过视频源地址删除视频即可</span></span><br><span class="line">    EduVideo eduVideo = baseMapper.selectById(videoId);</span><br><span class="line">    String videoSourceId = eduVideo.getVideoSourceId();</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(videoSourceId))&#123;</span><br><span class="line">        <span class="comment">//如果视频源地址不为空，则进行删除操作</span></span><br><span class="line">        vodFeignClient.deleteVod(videoSourceId);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//视频删除完成后，再删除小节，别顺序颠倒了</span></span><br><span class="line">    baseMapper.deleteById(videoId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除小节</span></span><br><span class="line"><span class="meta">@DeleteMapping</span>(<span class="string">"/deleteVideo/&#123;videoId&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">deleteVideo</span><span class="params">(@PathVariable String videoId)</span></span>&#123;</span><br><span class="line">    <span class="comment">//之前写的是直接删除小节信息，没有删除视频功能，现在需要写删除小节信息的同时删除视频</span></span><br><span class="line">    <span class="comment">//eduVideoService.removeById(id);</span></span><br><span class="line">    eduVideoService.deleteVideo(videoId);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试成功：在删除小节信息的时候同时删除视频</p><h5 id="完善删除课程信息接口"><a href="#完善删除课程信息接口" class="headerlink" title="完善删除课程信息接口"></a>完善删除课程信息接口</h5><p>之前在点击删除课程的时候，是先删除小节，然后删除章节，最后删除课程信息，其中删除小节的环节中，还没开发删除视频的接口，所以现在来完善一下</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200708154033.png" alt="image-20200708154033554"></p><p>思考：一个课程下一般都有多个视频，所以还需要在<code>service_vod</code>模块中开发一个删除多个视频的接口，如下</p><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteVods</span><span class="params">(List&lt;String&gt; videoList)</span></span>;</span><br></pre></td></tr></table></figure><p>实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//同时删除多个视频</span></span><br><span class="line"><span class="comment">//其实跟删除一个视频的逻辑是一样的，只是传多个视频id，每个视频id以','分割即可</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteVods</span><span class="params">(List&lt;String&gt; videoList)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//初始化对象</span></span><br><span class="line">        DefaultAcsClient client = InitVod.initVodClient(ConstantVodUtils.KEY_ID, ConstantVodUtils.KEY_SECRET);</span><br><span class="line">        <span class="comment">//创建删除请求</span></span><br><span class="line">        DeleteVideoRequest request = <span class="keyword">new</span> DeleteVideoRequest();</span><br><span class="line">        <span class="comment">//设置id</span></span><br><span class="line">        <span class="comment">//利用lang包下StringUtils工具类将集合转换为11，22，33这种格式的数据，然后传入id即可</span></span><br><span class="line">        String videoIds = StringUtils.join(videoList.toArray(), <span class="string">","</span>);</span><br><span class="line">        request.setVideoIds(videoIds);</span><br><span class="line">        <span class="comment">//执行删除操作</span></span><br><span class="line">        client.getAcsResponse(request);</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除多个视频</span></span><br><span class="line"><span class="meta">@DeleteMapping</span>(<span class="string">"/deleteVideo-batch"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">deleteVod</span><span class="params">(@RequestParam(<span class="string">"videoList"</span>)</span> List&lt;String&gt; videoList)</span>&#123;</span><br><span class="line">    vodService.deleteVods(videoList);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在service_edu中调用此服务</p><p>VodFeignClient接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除多个视频</span></span><br><span class="line"><span class="meta">@DeleteMapping</span>(<span class="string">"/eduvod/video/deleteVideo-batch"</span>)</span><br><span class="line"><span class="function">R <span class="title">deleteVod</span><span class="params">(@RequestParam(<span class="string">"videoList"</span>)</span> List&lt;String&gt; videoList)</span>;</span><br></pre></td></tr></table></figure><p>最终完善删除课程下的删除小节信息接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeVideo</span><span class="params">(String courseId)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//TODO 删除小节信息前，需要先删除对应的视频</span></span><br><span class="line">    <span class="comment">//首先通过courseId获取所有小节信息，同时我们只需要视频id，所以指定查询的字段</span></span><br><span class="line">    QueryWrapper&lt;EduVideo&gt; videoWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    videoWrapper.eq(<span class="string">"course_Id"</span>, courseId);</span><br><span class="line">    videoWrapper.select(<span class="string">"video_source_id"</span>);</span><br><span class="line">    List&lt;EduVideo&gt; videoList = baseMapper.selectList(videoWrapper);</span><br><span class="line">    <span class="comment">//然后将videoList的类型转换为List&lt;String&gt;的类型</span></span><br><span class="line">    List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (EduVideo eduVideo : videoList) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(eduVideo.getVideoSourceId()))&#123;</span><br><span class="line">            list.add(eduVideo.getVideoSourceId());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (list.size() &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        vodFeignClient.deleteVod(list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注意这里不能直接调用deleteById()方法删除，因为这里传的是courseId，而不是id</span></span><br><span class="line">    QueryWrapper&lt;EduVideo&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.eq(<span class="string">"course_Id"</span>, courseId);</span><br><span class="line">    baseMapper.delete(wrapper);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>点击删除课程按钮，删除视频&gt;删除小节&gt;删除章节&gt;删除课程，最终测试成功</p><h5 id="服务调用的执行流程"><a href="#服务调用的执行流程" class="headerlink" title="服务调用的执行流程"></a>服务调用的执行流程</h5><p>根据以上代码，可以总计到，远程服务的调用执行流程大概是这样的：</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200708164745.png" alt="image-20200708164745099"></p><p><strong>接口化请求调用</strong>：当调用被<code>@FeignClient</code>注解修饰的接口时，在框架内部，将请求转换成Feign的请求实例<code>feign.Request</code>，交由Feign框架处理。</p><p><strong>Feign</strong>：转化请求Feign是一个http请求调用的轻量级框架，可以以Java接口注解的方式调用Http请求，封装了Http调用流程。</p><p><strong>Hystrix</strong>：熔断处理机制 Feign的调用关系，会被Hystrix代理拦截，对每一个Feign调用请求，Hystrix都会将其包装成<code>HystrixCommand</code>,参与Hystrix的流控和熔断规则。如果请求判断需要熔断，则Hystrix直接熔断，抛出异常或者使用<code>FallbackFactory</code>返回熔断<code>Fallback</code>结果；如果通过，则将调用请求传递给<code>Ribbon</code>组件。</p><p><strong>Ribbon</strong>：服务地址选择 当请求传递到<code>Ribbon</code>之后,<code>Ribbon</code>会根据自身维护的服务列表，根据服务的服务质量，如平均响应时间，Load等，结合特定的规则，从列表中挑选合适的服务实例，选择好机器之后，然后将机器实例的信息请求传递给<code>Http Client</code>客户端，<code>HttpClient</code>客户端来执行真正的Http接口调用；</p><p><strong>Http client</strong>：Http客户端，真正执行Http调用根据上层<code>Ribbon</code>传递过来的请求，已经指定了服务地址，则HttpClient开始执行真正的Http请求</p><h2 id="6、Hystrix"><a href="#6、Hystrix" class="headerlink" title="6、Hystrix"></a>6、Hystrix</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Hystrix 是一个供分布式系统使用，提供延迟和容错功能，保证复杂的分布系统在面临不可避免的失败时，仍能有其弹性。</p><p>比如系统中有很多服务，当某些服务不稳定的时候，使用这些服务的用户线程将会阻塞，如果没有隔离机制，系统随时就有可能会挂掉，从而带来很大的风险。SpringCloud使用Hystrix组件提供断路器、资源隔离与自我修复功能。下图表示服务B触发了断路器，阻止了级联失败</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200708171732.jpg" alt="img"></p><h3 id="feign结合Hystrix使用"><a href="#feign结合Hystrix使用" class="headerlink" title="feign结合Hystrix使用"></a>feign结合Hystrix使用</h3><h4 id="导入依赖-2"><a href="#导入依赖-2" class="headerlink" title="导入依赖"></a>导入依赖</h4><p>在service模块中继续添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--负载均衡--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-ribbon<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--服务熔断--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="配置yml文件-2"><a href="#配置yml文件-2" class="headerlink" title="配置yml文件"></a>配置yml文件</h4><p>主要是开启hystrix服务，同时还可以设置最大请求时间</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启hystrix服务</span></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">hystrix:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="创建Feign实现类"><a href="#创建Feign实现类" class="headerlink" title="创建Feign实现类"></a>创建Feign实现类</h4><p>并重写方法，也就是fallback函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VodFileDegradeFeignClient</span> <span class="keyword">implements</span> <span class="title">VodFeignClient</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">deleteVod</span><span class="params">(String videoId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> R.error().message(<span class="string">"删除视频出错了，执行hystrix熔断机制"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">deleteVod</span><span class="params">(List&lt;String&gt; videoList)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> R.error().message(<span class="string">"删除多个视频出错了，执行hystrix熔断机制"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="配置回调函数"><a href="#配置回调函数" class="headerlink" title="配置回调函数"></a>配置回调函数</h4><p>在client接口中指定回调函数，也就是刚刚的实现类，通过注解即可指定</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FeignClient</span>(name = <span class="string">"service-vod"</span>, fallback = VodFileDegradeFeignClient<span class="class">.<span class="keyword">class</span>)</span></span><br></pre></td></tr></table></figure><h4 id="测试："><a href="#测试：" class="headerlink" title="测试："></a>测试：</h4><p>场景：点击删除小节，会执行删除视频的服务，当我们service_vod宕机了，则会熔断，并调用回调函数</p><p>在删除视频deleteVideo的方法中，稍微修改下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteVideo</span><span class="params">(String videoId)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//点击删除小节的时候，需要先删除视频，然后再删除小节</span></span><br><span class="line">    <span class="comment">//由于这里传的参数是小节id，不是视频地址id，所以没法直接删除视频</span></span><br><span class="line">    <span class="comment">//需要先通过小节id得到小节对象，接着获取视频源地址，再通过视频源地址删除视频即可</span></span><br><span class="line">    EduVideo eduVideo = baseMapper.selectById(videoId);</span><br><span class="line">    String videoSourceId = eduVideo.getVideoSourceId();</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(videoSourceId))&#123;</span><br><span class="line">        <span class="comment">//如果视频源地址不为空，则进行删除操作</span></span><br><span class="line">        <span class="comment">//为了测试hystrix，这里返回结果并判断</span></span><br><span class="line">        R result = vodFeignClient.deleteVod(videoSourceId);</span><br><span class="line">        <span class="keyword">if</span>(result.getCode() == <span class="number">20001</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> GuliException(<span class="number">20001</span>, <span class="string">"删除视频失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//视频删除完成后，再删除小节，别顺序颠倒了</span></span><br><span class="line">    baseMapper.deleteById(videoId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>找一个已经上传过视频的小节测试删除，比如这个</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200708173918.png" alt="image-20200708173918530"></p><p>在删除前，我们先关闭service_vod的服务，使用debug运行service_edu，并且在刚刚改过的方法中打断点</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200708174142.png" alt="image-20200708174142374"></p><p>然后点击删除刚刚的小节</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200708174323.png" alt="image-20200708174323136"></p><p>一步步往下执行，发现其执行了熔断后的回调函数，测试成功</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1、阿里云视频点播服务&quot;&gt;&lt;a href=&quot;#1、阿里云视频点播服务&quot; class=&quot;headerlink&quot; title=&quot;1、阿里云视频点播服务&quot;&gt;&lt;/a&gt;1、阿里云视频点播服务&lt;/h2&gt;&lt;p&gt;阿里云视频点播（ApsaraVideo for VoD）是集音视频采
      
    
    </summary>
    
    
      <category term="前后端分离" scheme="http://yoursite.com/categories/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="springboot" scheme="http://yoursite.com/tags/springboot/"/>
    
      <category term="springcloud" scheme="http://yoursite.com/tags/springcloud/"/>
    
  </entry>
  
  <entry>
    <title>谷粒学院实战day04—课程管理开发(1)</title>
    <link href="http://yoursite.com/2020/07/06/%E7%B2%92%E5%AD%A6%E9%99%A2%E5%AE%9E%E6%88%98day04%E2%80%94%E8%AF%BE%E7%A8%8B%E7%AE%A1%E7%90%86%E5%BC%80%E5%8F%91-1/"/>
    <id>http://yoursite.com/2020/07/06/%E7%B2%92%E5%AD%A6%E9%99%A2%E5%AE%9E%E6%88%98day04%E2%80%94%E8%AF%BE%E7%A8%8B%E7%AE%A1%E7%90%86%E5%BC%80%E5%8F%91-1/</id>
    <published>2020-07-06T01:26:00.000Z</published>
    <updated>2020-07-08T08:23:55.677Z</updated>
    
    <content type="html"><![CDATA[<h1 id="课程开发模块"><a href="#课程开发模块" class="headerlink" title="课程开发模块"></a>课程开发模块</h1><h2 id="1、添加课程后端开发"><a href="#1、添加课程后端开发" class="headerlink" title="1、添加课程后端开发"></a>1、添加课程后端开发</h2><h3 id="导入相关数据库表"><a href="#导入相关数据库表" class="headerlink" title="导入相关数据库表"></a>导入相关数据库表</h3><p>sql脚本如下：</p><h4 id="edu-course"><a href="#edu-course" class="headerlink" title="edu_course"></a>edu_course</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`edu_course`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'课程ID'</span>,</span><br><span class="line">  <span class="string">`teacher_id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'课程讲师ID'</span>,</span><br><span class="line">  <span class="string">`subject_id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'课程专业ID'</span>,</span><br><span class="line">  <span class="string">`subject_parent_id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">COMMENT</span> <span class="string">'课程专业父级ID'</span>,</span><br><span class="line">  <span class="string">`title`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'课程标题'</span>,</span><br><span class="line">  <span class="string">`price`</span> <span class="built_in">decimal</span>(<span class="number">10</span>,<span class="number">2</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0.00'</span> <span class="keyword">COMMENT</span> <span class="string">'课程销售价格，设置为0则可免费观看'</span>,</span><br><span class="line">  <span class="string">`lesson_num`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'总课时'</span>,</span><br><span class="line">  <span class="string">`cover`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'课程封面图片路径'</span>,</span><br><span class="line">  <span class="string">`buy_count`</span> <span class="built_in">bigint</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'销售数量'</span>,</span><br><span class="line">  <span class="string">`view_count`</span> <span class="built_in">bigint</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'浏览数量'</span>,</span><br><span class="line">  <span class="string">`version`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'1'</span> <span class="keyword">COMMENT</span> <span class="string">'乐观锁'</span>,</span><br><span class="line">  <span class="string">`status`</span> <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'Draft'</span> <span class="keyword">COMMENT</span> <span class="string">'课程状态 Draft未发布  Normal已发布'</span>,</span><br><span class="line">  <span class="string">`is_deleted`</span> <span class="built_in">tinyint</span>(<span class="number">3</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'逻辑删除 1（true）已删除， 0（false）未删除'</span>,</span><br><span class="line">  <span class="string">`gmt_create`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  <span class="string">`gmt_modified`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_title`</span> (<span class="string">`title`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_subject_id`</span> (<span class="string">`subject_id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_teacher_id`</span> (<span class="string">`teacher_id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4 ROW_FORMAT=<span class="keyword">COMPACT</span> <span class="keyword">COMMENT</span>=<span class="string">'课程'</span>;</span><br></pre></td></tr></table></figure><h4 id="edu-course-description"><a href="#edu-course-description" class="headerlink" title="edu_course_description"></a>edu_course_description</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`edu_course_description`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'课程ID'</span>,</span><br><span class="line">  <span class="string">`description`</span> <span class="built_in">text</span> <span class="keyword">COMMENT</span> <span class="string">'课程简介'</span>,</span><br><span class="line">  <span class="string">`gmt_create`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  <span class="string">`gmt_modified`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4 <span class="keyword">COMMENT</span>=<span class="string">'课程简介'</span>;</span><br></pre></td></tr></table></figure><h4 id="edu-chapter"><a href="#edu-chapter" class="headerlink" title="edu_chapter"></a>edu_chapter</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`edu_chapter`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'章节ID'</span>,</span><br><span class="line">  <span class="string">`course_id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'课程ID'</span>,</span><br><span class="line">  <span class="string">`title`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'章节名称'</span>,</span><br><span class="line">  <span class="string">`sort`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'显示排序'</span>,</span><br><span class="line">  <span class="string">`gmt_create`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  <span class="string">`gmt_modified`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_course_id`</span> (<span class="string">`course_id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4 ROW_FORMAT=<span class="keyword">COMPACT</span> <span class="keyword">COMMENT</span>=<span class="string">'课程'</span>;</span><br></pre></td></tr></table></figure><h4 id="edu-video"><a href="#edu-video" class="headerlink" title="edu_video"></a>edu_video</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`edu_video`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'视频ID'</span>,</span><br><span class="line">  <span class="string">`course_id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'课程ID'</span>,</span><br><span class="line">  <span class="string">`chapter_id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'章节ID'</span>,</span><br><span class="line">  <span class="string">`title`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'节点名称'</span>,</span><br><span class="line">  <span class="string">`video_source_id`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'云端视频资源'</span>,</span><br><span class="line">  <span class="string">`video_original_name`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'原始文件名称'</span>,</span><br><span class="line">  <span class="string">`sort`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'排序字段'</span>,</span><br><span class="line">  <span class="string">`play_count`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'播放次数'</span>,</span><br><span class="line">  <span class="string">`is_free`</span> <span class="built_in">tinyint</span>(<span class="number">1</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'是否可以试听：0收费 1免费'</span>,</span><br><span class="line">  <span class="string">`duration`</span> <span class="built_in">float</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'视频时长（秒）'</span>,</span><br><span class="line">  <span class="string">`status`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'Empty'</span> <span class="keyword">COMMENT</span> <span class="string">'Empty未上传 Transcoding转码中  Normal正常'</span>,</span><br><span class="line">  <span class="string">`size`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'视频源文件大小（字节）'</span>,</span><br><span class="line">  <span class="string">`version`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'1'</span> <span class="keyword">COMMENT</span> <span class="string">'乐观锁'</span>,</span><br><span class="line">  <span class="string">`gmt_create`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  <span class="string">`gmt_modified`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_course_id`</span> (<span class="string">`course_id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_chapter_id`</span> (<span class="string">`chapter_id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4 ROW_FORMAT=<span class="keyword">COMPACT</span> <span class="keyword">COMMENT</span>=<span class="string">'课程视频'</span>;</span><br></pre></td></tr></table></figure><h3 id="mp生成代码"><a href="#mp生成代码" class="headerlink" title="mp生成代码"></a>mp生成代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strategy.setInclude(<span class="string">"edu_course"</span>,<span class="string">"edu_course_description"</span>,<span class="string">"edu_chapter"</span>,<span class="string">"edu_video"</span>);</span><br></pre></td></tr></table></figure><p>生成代码完成后对实体类进行一些优化：</p><ul><li>需要自动填充的字段，都加上相应的注解</li><li>因为课程简介和课程是一对一的关系，也就是课程id决定课程简介id，所以课程简介的id生成方式需要更改为手动配置</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程ID"</span>)</span><br><span class="line"><span class="meta">@TableId</span>(value = <span class="string">"id"</span>, type = IdType.INPUT)</span><br><span class="line"><span class="keyword">private</span> String id;</span><br></pre></td></tr></table></figure><h3 id="编写数据封装实体类"><a href="#编写数据封装实体类" class="headerlink" title="编写数据封装实体类"></a>编写数据封装实体类</h3><p>因为编辑课程简介信息的时候，是同时包含基本信息和简介的，生成的实体类无法完全满足需求，所以需要再新建一个vo实体类来封装并返回前端</p><p>提示：其实你的vo实体类怎么写，具体还是看业务需求，你得知道前端页面是怎么设计的，需要什么内容，就写什么字段，比如前端想要的内容如下：</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200706114112.png" alt="image-20200706114112100"></p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200706114403.png" alt="image-20200706114403485"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CourseInfoVo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程ID"</span>)</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程讲师ID"</span>)</span><br><span class="line">    <span class="keyword">private</span> String teacherId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程专业ID"</span>)</span><br><span class="line">    <span class="keyword">private</span> String SubjectId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程专业父级ID"</span>)</span><br><span class="line">    <span class="keyword">private</span> String subjectParentId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程标题"</span>)</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程销售价格，设置为0则可免费观看"</span>)</span><br><span class="line">    <span class="keyword">private</span> BigDecimal price;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"总课时"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer lessonNum;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程封面图片路径"</span>)</span><br><span class="line">    <span class="keyword">private</span> String cover;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程简介"</span>)</span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以编写vo类还要结合具体的业务需求来设计</p><h3 id="编写service层"><a href="#编写service层" class="headerlink" title="编写service层"></a>编写service层</h3><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">EduCourseService</span> <span class="keyword">extends</span> <span class="title">IService</span>&lt;<span class="title">EduCourse</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">saveCourseInfo</span><span class="params">(CourseInfoVo courseInfoVo)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EduCourseServiceImpl</span> <span class="keyword">extends</span> <span class="title">ServiceImpl</span>&lt;<span class="title">EduCourseMapper</span>, <span class="title">EduCourse</span>&gt; <span class="keyword">implements</span> <span class="title">EduCourseService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> EduCourseDescriptionService eduCourseDescriptionService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">saveCourseInfo</span><span class="params">(CourseInfoVo courseInfoVo)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//因为添加课程基本信息的时候，还需要同时添加课程简介，所以需要将数据同事添加到course表和description表</span></span><br><span class="line">        <span class="comment">//1. 添加EduCourse</span></span><br><span class="line">        EduCourse eduCourse = <span class="keyword">new</span> EduCourse();</span><br><span class="line">        BeanUtils.copyProperties(courseInfoVo, eduCourse);</span><br><span class="line">        <span class="keyword">int</span> insert = baseMapper.insert(eduCourse);</span><br><span class="line">        <span class="keyword">if</span> (insert == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> GuliException(<span class="number">20001</span>, <span class="string">"添加数据失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//2. 添加eduCourseDescription</span></span><br><span class="line">        EduCourseDescription eduCourseDescription = <span class="keyword">new</span> EduCourseDescription();</span><br><span class="line">        eduCourseDescription.setDescription(courseInfoVo.getDescription());</span><br><span class="line">        <span class="comment">//因为course和description是一对一的关系，所以description的id也就是course的id，这个别忘了</span></span><br><span class="line">        String cid = eduCourse.getId();</span><br><span class="line">        eduCourseDescription.setId(cid);</span><br><span class="line">        <span class="comment">//这里是EduCourse的实现类，那么怎么在这里将数据添加到简介表中呢？</span></span><br><span class="line">        <span class="comment">//想要用谁就注入谁</span></span><br><span class="line">        eduCourseDescriptionService.save(eduCourseDescription);</span><br><span class="line">        <span class="keyword">return</span> cid;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编写controller层"><a href="#编写controller层" class="headerlink" title="编写controller层"></a>编写controller层</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/eduservice/edu-course"</span>)</span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EduCourseController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> EduCourseService eduCourseService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/addCourseInfo"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">addCourseInfo</span><span class="params">(@RequestBody CourseInfoVo courseInfoVo)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        String id = eduCourseService.saveCourseInfo(courseInfoVo);</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">"id"</span>, id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="swagger测试"><a href="#swagger测试" class="headerlink" title="swagger测试"></a>swagger测试</h3><p>后台自测成功后，继续开发前台接口</p><h2 id="2、添加课程前端开发"><a href="#2、添加课程前端开发" class="headerlink" title="2、添加课程前端开发"></a>2、添加课程前端开发</h2><h3 id="添加路由"><a href="#添加路由" class="headerlink" title="添加路由"></a>添加路由</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    path: <span class="string">'/course'</span>,</span><br><span class="line">    component: Layout,</span><br><span class="line">    redirect: <span class="string">'/course/list'</span>,</span><br><span class="line">    name: <span class="string">'课程管理'</span>,</span><br><span class="line">    meta: &#123; <span class="attr">title</span>: <span class="string">'课程管理'</span>, <span class="attr">icon</span>: <span class="string">'example'</span> &#125;,</span><br><span class="line">    children: [</span><br><span class="line">        &#123;</span><br><span class="line">            path: <span class="string">'list'</span>,</span><br><span class="line">            name: <span class="string">'课程列表'</span>,</span><br><span class="line">            component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/views/edu/course/list'</span>),</span><br><span class="line">            meta: &#123; <span class="attr">title</span>: <span class="string">'课程列表'</span>, <span class="attr">icon</span>: <span class="string">'table'</span> &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            path: <span class="string">'info'</span>,</span><br><span class="line">            name: <span class="string">'添加课程'</span>,</span><br><span class="line">            component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/views/edu/course/info'</span>),</span><br><span class="line">            meta: &#123; <span class="attr">title</span>: <span class="string">'添加课程'</span>, <span class="attr">icon</span>: <span class="string">'tree'</span> &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            path: <span class="string">'info/:id'</span>,</span><br><span class="line">            name: <span class="string">'EduCourseInfoEdit'</span>,</span><br><span class="line">            component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/views/edu/course/info'</span>),</span><br><span class="line">            meta: &#123; <span class="attr">title</span>: <span class="string">'编辑课程基本信息'</span>, <span class="attr">noCache</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">            hidden: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            path: <span class="string">'chapter/:id'</span>,</span><br><span class="line">            name: <span class="string">'EduCourseChapterEdit'</span>,</span><br><span class="line">            component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/views/edu/course/chapter'</span>),</span><br><span class="line">            meta: &#123; <span class="attr">title</span>: <span class="string">'编辑课程大纲'</span>, <span class="attr">noCache</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">            hidden: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            path: <span class="string">'publish/:id'</span>,</span><br><span class="line">            name: <span class="string">'EduCoursePublishEdit'</span>,</span><br><span class="line">            component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/views/edu/course/publish'</span>),</span><br><span class="line">            meta: &#123; <span class="attr">title</span>: <span class="string">'发布课程'</span>, <span class="attr">noCache</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">            hidden: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="对应的页面开发"><a href="#对应的页面开发" class="headerlink" title="对应的页面开发"></a>对应的页面开发</h3><h4 id="info-vue"><a href="#info-vue" class="headerlink" title="info.vue"></a>info.vue</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div class&#x3D;&quot;app-container&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h2 style&#x3D;&quot;text-align: center;&quot;&gt;发布新课程&lt;&#x2F;h2&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-steps :active&#x3D;&quot;1&quot; process-status&#x3D;&quot;wait&quot; align-center style&#x3D;&quot;margin-bottom: 40px;&quot;&gt;</span><br><span class="line">      &lt;el-step title&#x3D;&quot;填写课程基本信息&quot;&#x2F;&gt;</span><br><span class="line">      &lt;el-step title&#x3D;&quot;创建课程大纲&quot;&#x2F;&gt;</span><br><span class="line">      &lt;el-step title&#x3D;&quot;最终发布&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;el-steps&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-form label-width&#x3D;&quot;120px&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;el-form-item label&#x3D;&quot;课程标题&quot;&gt;</span><br><span class="line">            &lt;el-input v-model&#x3D;&quot;courseInfo.title&quot; placeholder&#x3D;&quot; 示例：机器学习项目课：从基础到搭建项目视频课程。专业名称注意大小写&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 所属分类 TODO --&gt;</span><br><span class="line">        &lt;!-- 一级分类 --&gt;</span><br><span class="line">        &lt;el-form-item label&#x3D;&quot;课程分类&quot;&gt;</span><br><span class="line">            &lt;el-select</span><br><span class="line">                v-model&#x3D;&quot;courseInfo.subjectParentId&quot;</span><br><span class="line">                placeholder&#x3D;&quot;一级分类&quot; @change&#x3D;&quot;subjectLevelOneChanged&quot;&gt;</span><br><span class="line"></span><br><span class="line">                &lt;el-option</span><br><span class="line">                    v-for&#x3D;&quot;subject in subjectOneList&quot;</span><br><span class="line">                    :key&#x3D;&quot;subject.id&quot;</span><br><span class="line">                    :label&#x3D;&quot;subject.title&quot;</span><br><span class="line">                    :value&#x3D;&quot;subject.id&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">            &lt;&#x2F;el-select&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 二级分类 --&gt;</span><br><span class="line">            &lt;el-select v-model&#x3D;&quot;courseInfo.subjectId&quot; placeholder&#x3D;&quot;二级分类&quot;&gt;</span><br><span class="line">                &lt;el-option</span><br><span class="line">                    v-for&#x3D;&quot;subject in subjectTwoList&quot;</span><br><span class="line">                    :key&#x3D;&quot;subject.id&quot;</span><br><span class="line">                    :label&#x3D;&quot;subject.title&quot;</span><br><span class="line">                    :value&#x3D;&quot;subject.id&quot;&#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;el-select&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 课程讲师 TODO --&gt;</span><br><span class="line">        &lt;!-- 课程讲师 --&gt;</span><br><span class="line">        &lt;el-form-item label&#x3D;&quot;课程讲师&quot;&gt;</span><br><span class="line">            &lt;el-select</span><br><span class="line">                v-model&#x3D;&quot;courseInfo.teacherId&quot;</span><br><span class="line">                placeholder&#x3D;&quot;请选择&quot;&gt;</span><br><span class="line"></span><br><span class="line">                &lt;el-option</span><br><span class="line">                    v-for&#x3D;&quot;teacher in teacherList&quot;</span><br><span class="line">                    :key&#x3D;&quot;teacher.id&quot;</span><br><span class="line">                    :label&#x3D;&quot;teacher.name&quot;</span><br><span class="line">                    :value&#x3D;&quot;teacher.id&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">            &lt;&#x2F;el-select&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;el-form-item label&#x3D;&quot;总课时&quot;&gt;</span><br><span class="line">            &lt;el-input-number :min&#x3D;&quot;0&quot; v-model&#x3D;&quot;courseInfo.lessonNum&quot; controls-position&#x3D;&quot;right&quot; placeholder&#x3D;&quot;请填写课程的总课时数&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 课程简介 TODO --&gt;</span><br><span class="line">        &lt;el-form-item label&#x3D;&quot;课程简介&quot;&gt;</span><br><span class="line">            &lt;el-input v-model&#x3D;&quot;courseInfo.description&quot; placeholder&#x3D;&quot;&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 课程封面 TODO --&gt;</span><br><span class="line">        &lt;!-- 课程封面--&gt;</span><br><span class="line">        &lt;el-form-item label&#x3D;&quot;课程封面&quot;&gt;</span><br><span class="line"></span><br><span class="line">            &lt;el-upload</span><br><span class="line">                :show-file-list&#x3D;&quot;false&quot;</span><br><span class="line">                :on-success&#x3D;&quot;handleAvatarSuccess&quot;</span><br><span class="line">                :before-upload&#x3D;&quot;beforeAvatarUpload&quot;</span><br><span class="line">                :action&#x3D;&quot;BASE_API+&#39;&#x2F;eduoss&#x2F;fileupload&#39;&quot;</span><br><span class="line">                class&#x3D;&quot;avatar-uploader&quot;&gt;</span><br><span class="line">                &lt;img :src&#x3D;&quot;courseInfo.cover&quot;&gt;</span><br><span class="line">                &lt;p&gt;点击图片更换图片&lt;&#x2F;p&gt;</span><br><span class="line">            &lt;&#x2F;el-upload&gt;</span><br><span class="line"></span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">        &lt;el-form-item label&#x3D;&quot;课程价格&quot;&gt;</span><br><span class="line">            &lt;el-input-number :min&#x3D;&quot;0&quot; v-model&#x3D;&quot;courseInfo.price&quot; controls-position&#x3D;&quot;right&quot; placeholder&#x3D;&quot;免费课程请设置为0元&quot;&#x2F;&gt; 元</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">        &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-button :disabled&#x3D;&quot;saveBtnDisabled&quot; type&#x3D;&quot;primary&quot; @click&#x3D;&quot;saveOrUpdate&quot;&gt;保存并下一步&lt;&#x2F;el-button&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line">        &lt;&#x2F;el-form&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import course from &#39;@&#x2F;api&#x2F;edu&#x2F;course&#39;</span><br><span class="line">import subject from &#39;@&#x2F;api&#x2F;edu&#x2F;subject&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">    data()&#123;</span><br><span class="line">        return&#123;</span><br><span class="line">            courseInfo: &#123;</span><br><span class="line">                title: &#39;&#39;,</span><br><span class="line">                subjectId: &#39;&#39;,&#x2F;&#x2F;二级分类id</span><br><span class="line">                subjectParentId:&#39;&#39;,&#x2F;&#x2F;一级分类id</span><br><span class="line">                teacherId: &#39;&#39;,</span><br><span class="line">                lessonNum: 0,</span><br><span class="line">                description: &#39;&#39;,</span><br><span class="line">                cover: &#39;&#x2F;static&#x2F;default.jpg&#39;,</span><br><span class="line">                price: 0</span><br><span class="line">            &#125;,</span><br><span class="line">            subjectOneList: [],&#x2F;&#x2F;一级分类列表</span><br><span class="line">            subjectTwoList: [],&#x2F;&#x2F;二级分类列表</span><br><span class="line">            teacherList: [],&#x2F;&#x2F;所属讲师列表</span><br><span class="line">            BASE_API: process.env.BASE_API, &#x2F;&#x2F; 接口API地址</span><br><span class="line">            saveBtnDisabled: false</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    created()&#123;</span><br><span class="line">        &#x2F;&#x2F;初始化讲师列表</span><br><span class="line">        this.findAllTeacher()</span><br><span class="line">        &#x2F;&#x2F;初始化一级分类列表</span><br><span class="line">        this.getOneSubject()</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        &#x2F;&#x2F;上传封面成功后调用的方法</span><br><span class="line">        handleAvatarSuccess(res, file)&#123;</span><br><span class="line">            this.courseInfo.cover &#x3D; res.data.url</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F;上传封面之前调用的方法，一般用来定义上传文件的类型、大小等</span><br><span class="line">        beforeAvatarUpload(file)&#123;</span><br><span class="line">            const isJPG &#x3D; file.type &#x3D;&#x3D;&#x3D; &#39;image&#x2F;jpeg&#39;</span><br><span class="line">            const isLt2M &#x3D; file.size &#x2F; 1024 &#x2F; 1024 &lt; 2</span><br><span class="line"></span><br><span class="line">            if (!isJPG) &#123;</span><br><span class="line">                this.$message.error(&#39;上传头像图片只能是 JPG 格式!&#39;)</span><br><span class="line">            &#125;</span><br><span class="line">            if (!isLt2M) &#123;</span><br><span class="line">                this.$message.error(&#39;上传头像图片大小不能超过 2MB!&#39;)</span><br><span class="line">            &#125;</span><br><span class="line">            return isJPG &amp;&amp; isLt2M</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F;选好一级分类之后，查询二级分类的信息，属于二级联动的效果（一级没选的话二级是不会有数据的）</span><br><span class="line">        subjectLevelOneChanged(value)&#123;&#x2F;&#x2F;value就是一级分类id值</span><br><span class="line">            &#x2F;&#x2F;遍历所有的一级分类</span><br><span class="line">            for(var i &#x3D; 0; i &lt;&#x3D; this.subjectOneList.length; i++)&#123;</span><br><span class="line">                &#x2F;&#x2F;获取每一个一级分类</span><br><span class="line">                var oneSubject &#x3D; this.subjectOneList[i]</span><br><span class="line">                &#x2F;&#x2F;判断id是否相等</span><br><span class="line">                if(value &#x3D;&#x3D;&#x3D; oneSubject.id)&#123;</span><br><span class="line">                    &#x2F;&#x2F;如果相等则赋值</span><br><span class="line">                    this.subjectTwoList &#x3D; oneSubject.children</span><br><span class="line">                    &#x2F;&#x2F;注意，每当二级分类选好了之后，又想改一级分类，需要将选好的二级分类的值清空</span><br><span class="line">                    this.courseInfo.subjectId &#x3D; &quot;&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F;获取一级分类方法</span><br><span class="line">        getOneSubject()&#123;</span><br><span class="line">            subject.getAllSubject()</span><br><span class="line">                .then(response &#x3D;&gt; &#123;</span><br><span class="line">                    this.subjectOneList &#x3D; response.data.list</span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F;查询所有讲师方法</span><br><span class="line">        findAllTeacher()&#123;</span><br><span class="line">            course.findAllTeacher()</span><br><span class="line">                .then(response &#x3D;&gt; &#123;</span><br><span class="line">                    this.teacherList &#x3D; response.data.items</span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        saveOrUpdate()&#123;</span><br><span class="line">            course.addCourseInfo(this.courseInfo)</span><br><span class="line">                .then(response &#x3D;&gt; &#123;</span><br><span class="line">                    &#x2F;&#x2F;提示信息</span><br><span class="line">                    this.$message(&#123;</span><br><span class="line">                    type: &#39;success&#39;,</span><br><span class="line">                    message: &#39;添加课程基本信息成功!&#39;</span><br><span class="line">                    &#125;);</span><br><span class="line">                    this.$router.push(&#123;path: &#39;&#x2F;course&#x2F;chapter&#x2F;&#39; + response.data.id&#125;)</span><br><span class="line">                &#125;)</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="api开发"><a href="#api开发" class="headerlink" title="api开发"></a>api开发</h3><p>course.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">'@/utils/request'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">//添加课程，别忘了传参</span></span><br><span class="line">    addCourseInfo(courseInfoVo)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">'/eduservice/edu-course/addCourseInfo'</span>,</span><br><span class="line">            method: <span class="string">'post'</span>,</span><br><span class="line">            data: courseInfoVo</span><br><span class="line">          &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//查询所有讲师</span></span><br><span class="line">    findAllTeacher()&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">'/eduservice/edu-teacher/findAll'</span>,</span><br><span class="line">            method: <span class="string">'get'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="效果测试"><a href="#效果测试" class="headerlink" title="效果测试"></a>效果测试</h3><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200706101739.png" alt="image-20200706094608487"></p><h2 id="3、创建课程大纲开发"><a href="#3、创建课程大纲开发" class="headerlink" title="3、创建课程大纲开发"></a>3、创建课程大纲开发</h2><h3 id="章节列表后端接口开发"><a href="#章节列表后端接口开发" class="headerlink" title="章节列表后端接口开发"></a>章节列表后端接口开发</h3><p>首先为了巩固上一节课学习的内容，我们先来开发章节列表的接口开发</p><p>在添加课程基本信息页面点击下一步之后，会跳转到创建课程大纲的页面，而大纲的显示效果我们也采用类似树状的结构显示，一级大纲为章节，二级大纲为小节，例如下面的效果</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200706203220.png" alt="image-20200706203220852"></p><h4 id="创建chapter的两个章节实体类"><a href="#创建chapter的两个章节实体类" class="headerlink" title="创建chapter的两个章节实体类"></a>创建chapter的两个章节实体类</h4><p>ChapterVo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChapterVo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> List&lt;VideoVo&gt; children = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>VideoVo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VideoVo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写service层-1"><a href="#编写service层-1" class="headerlink" title="编写service层"></a>编写service层</h4><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">EduCourseService</span> <span class="keyword">extends</span> <span class="title">IService</span>&lt;<span class="title">EduCourse</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">saveCourseInfo</span><span class="params">(CourseInfoVo courseInfoVo)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EduChapterServiceImpl</span> <span class="keyword">extends</span> <span class="title">ServiceImpl</span>&lt;<span class="title">EduChapterMapper</span>, <span class="title">EduChapter</span>&gt; <span class="keyword">implements</span> <span class="title">EduChapterService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    EduVideoService eduVideoService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;ChapterVo&gt; <span class="title">getCourseChapters</span><span class="params">(String courseId)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取该课程下的所有的章信息</span></span><br><span class="line">        QueryWrapper&lt;EduChapter&gt; chapterWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        chapterWrapper.eq(<span class="string">"course_id"</span>, courseId);</span><br><span class="line">        List&lt;EduChapter&gt; eduChapterList = baseMapper.selectList(chapterWrapper);</span><br><span class="line">        <span class="comment">//获取该课程下的所有的节信息</span></span><br><span class="line">        QueryWrapper&lt;EduVideo&gt; videoWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        videoWrapper.eq(<span class="string">"course_id"</span>,courseId);</span><br><span class="line">        List&lt;EduVideo&gt; eduVideos = eduVideoService.list(videoWrapper);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//封装数据</span></span><br><span class="line">        List&lt;ChapterVo&gt; finalList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (EduChapter eduChapter : eduChapterList) &#123;</span><br><span class="line">            ChapterVo chapterVo = <span class="keyword">new</span> ChapterVo();</span><br><span class="line">            BeanUtils.copyProperties(eduChapter, chapterVo);</span><br><span class="line">            finalList.add(chapterVo);</span><br><span class="line"></span><br><span class="line">            List&lt;VideoVo&gt; videoVoList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span> (EduVideo eduVideo : eduVideos) &#123;</span><br><span class="line">                <span class="keyword">if</span>(eduVideo.getChapterId().equals(eduChapter.getId()))&#123;</span><br><span class="line">                    VideoVo videoVo = <span class="keyword">new</span> VideoVo();</span><br><span class="line">                    BeanUtils.copyProperties(eduVideo, videoVo);</span><br><span class="line">                    videoVoList.add(videoVo);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            chapterVo.setChildren(videoVoList);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> finalList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写controller层-1"><a href="#编写controller层-1" class="headerlink" title="编写controller层"></a>编写controller层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/eduservice/edu-chapter"</span>)</span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EduChapterController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    EduChapterService eduChapterService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询某个课程的章节列表</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/getCourseChapters/&#123;courseId&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">getCourseChapter</span><span class="params">(@PathVariable String courseId)</span></span>&#123;</span><br><span class="line">         List&lt;ChapterVo&gt; chapterList = eduChapterService.getCourseChapters(courseId);</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">"chapterList"</span>, chapterList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="swagger测试："><a href="#swagger测试：" class="headerlink" title="swagger测试："></a>swagger测试：</h4><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200706203413.png" alt="image-20200706203413729"></p><p>后端自测成功，接着开发前端</p><h3 id="章节列表前端几口开发"><a href="#章节列表前端几口开发" class="headerlink" title="章节列表前端几口开发"></a>章节列表前端几口开发</h3><h4 id="api开发-1"><a href="#api开发-1" class="headerlink" title="api开发"></a>api开发</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">'@/utils/request'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">//根据课程id查询章节列表</span></span><br><span class="line">    getChaptersByCourseId(courseId)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">'/eduservice/edu-chapter/getCourseChapters/'</span> + courseId,</span><br><span class="line">            method: <span class="string">'get'</span></span><br><span class="line">          &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="views视图层开发"><a href="#views视图层开发" class="headerlink" title="views视图层开发"></a>views视图层开发</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"app-container"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h2 style=<span class="string">"text-align: center;"</span>&gt;发布新课程&lt;<span class="regexp">/h2&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;el-steps :active="2" process-status="wait" align-center style="margin-bottom: 40px;"&gt;</span></span><br><span class="line"><span class="regexp">      &lt;el-step title="填写课程基本信息"/</span>&gt;</span><br><span class="line">      &lt;el-step title=<span class="string">"创建课程大纲"</span>/&gt;</span><br><span class="line">      &lt;el-step title=<span class="string">"最终发布"</span>/&gt;</span><br><span class="line">    &lt;<span class="regexp">/el-steps&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;!-- 章节 --&gt;</span></span><br><span class="line"><span class="regexp">    &lt;ul class="chanpterList"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li</span></span><br><span class="line"><span class="regexp">            v-for="chapter in chapterVideoList"</span></span><br><span class="line"><span class="regexp">            :key="chapter.id"&gt;</span></span><br><span class="line"><span class="regexp">            &lt;p&gt;</span></span><br><span class="line"><span class="regexp">                &#123;&#123; chapter.title &#125;&#125;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>p&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 视频 --&gt;</span><br><span class="line">            &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"chanpterList videoList"</span>&gt;</span><br><span class="line">                &lt;li</span><br><span class="line">                    v-<span class="keyword">for</span>=<span class="string">"video in chapter.children"</span></span><br><span class="line">                    :key=<span class="string">"video.id"</span>&gt;</span><br><span class="line">                    &lt;p&gt;&#123;&#123; video.title &#125;&#125;</span><br><span class="line">                    &lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">                &lt;/</span>li&gt;</span><br><span class="line">            &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>li&gt;</span><br><span class="line">    &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-button @click="previous"&gt;上一步&lt;/</span>el-button&gt;</span><br><span class="line">        &lt;el-button :disabled=<span class="string">"saveBtnDisabled"</span> type=<span class="string">"primary"</span> @click=<span class="string">"next"</span>&gt;下一步&lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> chapter <span class="keyword">from</span> <span class="string">'@/api/edu/chapter'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    data()&#123;</span><br><span class="line">        <span class="keyword">return</span>&#123;</span><br><span class="line">            saveBtnDisabled: <span class="literal">false</span>,</span><br><span class="line">            chapterVideoList: [],</span><br><span class="line">            courseId: <span class="string">""</span>,</span><br><span class="line">            chapter: &#123;</span><br><span class="line">              title: <span class="string">""</span></span><br><span class="line">            &#125;,</span><br><span class="line">            video: &#123;</span><br><span class="line">              title:<span class="string">""</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    created()&#123;</span><br><span class="line">      <span class="comment">//如果有id值则查询章节信息，没有就是添加章节信息</span></span><br><span class="line">      <span class="keyword">if</span>(<span class="keyword">this</span>.$route.params &amp;&amp; <span class="keyword">this</span>.$route.params.id)&#123;</span><br><span class="line">        <span class="keyword">this</span>.courseId = <span class="keyword">this</span>.$route.params.id</span><br><span class="line">        <span class="keyword">this</span>.getChaptersByCourseId()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">//根据课程id查询章节列表信息</span></span><br><span class="line">      getChaptersByCourseId()&#123;</span><br><span class="line">        chapter.getChaptersByCourseId(<span class="keyword">this</span>.courseId)</span><br><span class="line">          .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.chapterVideoList = response.data.chapterList</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//上一步点击事件</span></span><br><span class="line">      previous()&#123;</span><br><span class="line">          <span class="keyword">this</span>.$router.push(&#123;<span class="attr">path</span>:<span class="string">"/course/info"</span>&#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//下一步点击事件</span></span><br><span class="line">      next()&#123;</span><br><span class="line">          <span class="keyword">this</span>.$router.push(&#123;<span class="attr">path</span>: <span class="string">'/course/publish'</span>&#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;style scoped&gt;</span></span><br><span class="line"><span class="regexp">.chanpterList&#123;</span></span><br><span class="line"><span class="regexp">    position: relative;</span></span><br><span class="line"><span class="regexp">    list-style: none;</span></span><br><span class="line"><span class="regexp">    margin: 0;</span></span><br><span class="line"><span class="regexp">    padding: 0;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">.chanpterList li&#123;</span></span><br><span class="line"><span class="regexp">  position: relative;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">.chanpterList p&#123;</span></span><br><span class="line"><span class="regexp">  float: left;</span></span><br><span class="line"><span class="regexp">  font-size: 20px;</span></span><br><span class="line"><span class="regexp">  margin: 10px 0;</span></span><br><span class="line"><span class="regexp">  padding: 10px;</span></span><br><span class="line"><span class="regexp">  height: 70px;</span></span><br><span class="line"><span class="regexp">  line-height: 50px;</span></span><br><span class="line"><span class="regexp">  width: 100%;</span></span><br><span class="line"><span class="regexp">  border: 1px solid #DDD;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">.chanpterList .acts &#123;</span></span><br><span class="line"><span class="regexp">    float: right;</span></span><br><span class="line"><span class="regexp">    font-size: 14px;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">.videoList&#123;</span></span><br><span class="line"><span class="regexp">  padding-left: 50px;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">.videoList p&#123;</span></span><br><span class="line"><span class="regexp">  float: left;</span></span><br><span class="line"><span class="regexp">  font-size: 14px;</span></span><br><span class="line"><span class="regexp">  margin: 10px 0;</span></span><br><span class="line"><span class="regexp">  padding: 10px;</span></span><br><span class="line"><span class="regexp">  height: 50px;</span></span><br><span class="line"><span class="regexp">  line-height: 30px;</span></span><br><span class="line"><span class="regexp">  width: 100%;</span></span><br><span class="line"><span class="regexp">  border: 1px dotted #DDD;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure><p>小结：</p><ul><li>再次强调，从上一步的路由传过来的id只要使用this.courseId就可以取到</li></ul><h4 id="效果测试："><a href="#效果测试：" class="headerlink" title="效果测试："></a>效果测试：</h4><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200706203220.png" alt="image-20200706203220852"></p><h3 id="上一步接口完善"><a href="#上一步接口完善" class="headerlink" title="上一步接口完善"></a>上一步接口完善</h3><p>在发布新课程这一步中，点击上一步回到填写课程基本信息，这时候我们需要信息回显，所以需要完善这一部分的内容</p><h4 id="携带id"><a href="#携带id" class="headerlink" title="携带id"></a>携带id</h4><p>首先在前端点击上一步/下一步，都要携带当前的id进行路由跳转</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//上一步点击事件</span></span><br><span class="line">previous()&#123;</span><br><span class="line">    <span class="keyword">this</span>.$router.push(&#123;<span class="attr">path</span>:<span class="string">"/course/info/"</span> + <span class="keyword">this</span>.courseId&#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//下一步点击事件</span></span><br><span class="line">next()&#123;</span><br><span class="line">    <span class="keyword">this</span>.$router.push(&#123;<span class="attr">path</span>: <span class="string">'/course/publish/'</span> + <span class="keyword">this</span>.courseId&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="信息回显"><a href="#信息回显" class="headerlink" title="信息回显"></a>信息回显</h4><p>提示：信息回显需要重新获取课程基本信息，编辑后修改再进行下一步，所以这里需要再开发两个接口：</p><h5 id="编写service层-2"><a href="#编写service层-2" class="headerlink" title="编写service层"></a>编写service层</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据课程id查询课程信息</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> CourseInfoVo <span class="title">getCourseInfo</span><span class="params">(String courseId)</span> </span>&#123;</span><br><span class="line">    CourseInfoVo courseInfoVo = <span class="keyword">new</span> CourseInfoVo();</span><br><span class="line">    EduCourse eduCourse = baseMapper.selectById(courseId);</span><br><span class="line">    BeanUtils.copyProperties(eduCourse, courseInfoVo);</span><br><span class="line">    EduCourseDescription eduCourseDescription = eduCourseDescriptionService.getById(courseId);</span><br><span class="line">    BeanUtils.copyProperties(eduCourseDescription, courseInfoVo);</span><br><span class="line">    <span class="keyword">return</span> courseInfoVo;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新课程信息</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateCourseInfo</span><span class="params">(CourseInfoVo courseInfoVo)</span> </span>&#123;</span><br><span class="line">    EduCourse eduCourse = <span class="keyword">new</span> EduCourse();</span><br><span class="line">    BeanUtils.copyProperties(courseInfoVo, eduCourse);</span><br><span class="line">    <span class="keyword">int</span> update = baseMapper.updateById(eduCourse);</span><br><span class="line">    <span class="keyword">if</span>(update == <span class="number">0</span>)&#123;<span class="comment">//修改失败，抛出异常</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> GuliException(<span class="number">20001</span>, <span class="string">"更改课程信息失败"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//修改成功则继续修改简介</span></span><br><span class="line">    EduCourseDescription eduCourseDescription = <span class="keyword">new</span> EduCourseDescription();</span><br><span class="line">    BeanUtils.copyProperties(courseInfoVo, eduCourseDescription);</span><br><span class="line">    eduCourseDescriptionService.updateById(eduCourseDescription);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="编写controller层-2"><a href="#编写controller层-2" class="headerlink" title="编写controller层"></a>编写controller层</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询课程信息,别忘了查询的应该是CourseInfo的信息</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/getCourseInfo/&#123;courseId&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">getCourseInfo</span><span class="params">(@PathVariable String courseId)</span></span>&#123;</span><br><span class="line">    CourseInfoVo courseInfoVo = eduCourseService.getCourseInfo(courseId);</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">"courseInfoVo"</span>, courseInfoVo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新课程基本信息</span></span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/updateCourseInfo"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">updateCourseInfo</span><span class="params">(@RequestBody CourseInfoVo courseInfoVo)</span></span>&#123;</span><br><span class="line">    eduCourseService.updateCourseInfo(courseInfoVo);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>前端info.vue页面完善</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div class&#x3D;&quot;app-container&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h2 style&#x3D;&quot;text-align: center;&quot;&gt;发布新课程&lt;&#x2F;h2&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-steps :active&#x3D;&quot;1&quot; process-status&#x3D;&quot;wait&quot; align-center style&#x3D;&quot;margin-bottom: 40px;&quot;&gt;</span><br><span class="line">      &lt;el-step title&#x3D;&quot;填写课程基本信息&quot;&#x2F;&gt;</span><br><span class="line">      &lt;el-step title&#x3D;&quot;创建课程大纲&quot;&#x2F;&gt;</span><br><span class="line">      &lt;el-step title&#x3D;&quot;最终发布&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;el-steps&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-form label-width&#x3D;&quot;120px&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;el-form-item label&#x3D;&quot;课程标题&quot;&gt;</span><br><span class="line">            &lt;el-input v-model&#x3D;&quot;courseInfo.title&quot; placeholder&#x3D;&quot; 示例：机器学习项目课：从基础到搭建项目视频课程。专业名称注意大小写&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 所属分类 TODO --&gt;</span><br><span class="line">        &lt;!-- 一级分类 --&gt;</span><br><span class="line">        &lt;el-form-item label&#x3D;&quot;课程分类&quot;&gt;</span><br><span class="line">            &lt;el-select</span><br><span class="line">                v-model&#x3D;&quot;courseInfo.subjectParentId&quot;</span><br><span class="line">                placeholder&#x3D;&quot;一级分类&quot; @change&#x3D;&quot;subjectLevelOneChanged&quot;&gt;</span><br><span class="line"></span><br><span class="line">                &lt;el-option</span><br><span class="line">                    v-for&#x3D;&quot;subject in subjectOneList&quot;</span><br><span class="line">                    :key&#x3D;&quot;subject.id&quot;</span><br><span class="line">                    :label&#x3D;&quot;subject.title&quot;</span><br><span class="line">                    :value&#x3D;&quot;subject.id&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">            &lt;&#x2F;el-select&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 二级分类 --&gt;</span><br><span class="line">            &lt;el-select v-model&#x3D;&quot;courseInfo.subjectId&quot; placeholder&#x3D;&quot;二级分类&quot;&gt;</span><br><span class="line">                &lt;el-option</span><br><span class="line">                    v-for&#x3D;&quot;subject in subjectTwoList&quot;</span><br><span class="line">                    :key&#x3D;&quot;subject.id&quot;</span><br><span class="line">                    :label&#x3D;&quot;subject.title&quot;</span><br><span class="line">                    :value&#x3D;&quot;subject.id&quot;&#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;el-select&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 课程讲师 TODO --&gt;</span><br><span class="line">        &lt;!-- 课程讲师 --&gt;</span><br><span class="line">        &lt;el-form-item label&#x3D;&quot;课程讲师&quot;&gt;</span><br><span class="line">            &lt;el-select</span><br><span class="line">                v-model&#x3D;&quot;courseInfo.teacherId&quot;</span><br><span class="line">                placeholder&#x3D;&quot;请选择&quot;&gt;</span><br><span class="line"></span><br><span class="line">                &lt;el-option</span><br><span class="line">                    v-for&#x3D;&quot;teacher in teacherList&quot;</span><br><span class="line">                    :key&#x3D;&quot;teacher.id&quot;</span><br><span class="line">                    :label&#x3D;&quot;teacher.name&quot;</span><br><span class="line">                    :value&#x3D;&quot;teacher.id&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">            &lt;&#x2F;el-select&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;el-form-item label&#x3D;&quot;总课时&quot;&gt;</span><br><span class="line">            &lt;el-input-number :min&#x3D;&quot;0&quot; v-model&#x3D;&quot;courseInfo.lessonNum&quot; controls-position&#x3D;&quot;right&quot; placeholder&#x3D;&quot;请填写课程的总课时数&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 课程简介 TODO --&gt;</span><br><span class="line">        &lt;!-- 课程简介--&gt;</span><br><span class="line">        &lt;el-form-item label&#x3D;&quot;课程简介&quot;&gt;</span><br><span class="line">            &lt;tinymce :height&#x3D;&quot;300&quot; v-model&#x3D;&quot;courseInfo.description&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 课程封面 TODO --&gt;</span><br><span class="line">        &lt;!-- 课程封面--&gt;</span><br><span class="line">        &lt;el-form-item label&#x3D;&quot;课程封面&quot;&gt;</span><br><span class="line"></span><br><span class="line">            &lt;el-upload</span><br><span class="line">                :show-file-list&#x3D;&quot;false&quot;</span><br><span class="line">                :on-success&#x3D;&quot;handleAvatarSuccess&quot;</span><br><span class="line">                :before-upload&#x3D;&quot;beforeAvatarUpload&quot;</span><br><span class="line">                :action&#x3D;&quot;BASE_API+&#39;&#x2F;eduoss&#x2F;fileupload&#39;&quot;</span><br><span class="line">                class&#x3D;&quot;avatar-uploader&quot;&gt;</span><br><span class="line">                &lt;img :src&#x3D;&quot;courseInfo.cover&quot;&gt;</span><br><span class="line">                &lt;p&gt;点击图片更换封面&lt;&#x2F;p&gt;</span><br><span class="line">            &lt;&#x2F;el-upload&gt;</span><br><span class="line"></span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">        &lt;el-form-item label&#x3D;&quot;课程价格&quot;&gt;</span><br><span class="line">            &lt;el-input-number :min&#x3D;&quot;0&quot; v-model&#x3D;&quot;courseInfo.price&quot; controls-position&#x3D;&quot;right&quot; placeholder&#x3D;&quot;免费课程请设置为0元&quot;&#x2F;&gt; 元</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">        &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-button :disabled&#x3D;&quot;saveBtnDisabled&quot; type&#x3D;&quot;primary&quot; @click&#x3D;&quot;saveOrUpdate&quot;&gt;保存并下一步&lt;&#x2F;el-button&gt;</span><br><span class="line">        &lt;&#x2F;el-form-item&gt;</span><br><span class="line">        &lt;&#x2F;el-form&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import course from &#39;@&#x2F;api&#x2F;edu&#x2F;course&#39;</span><br><span class="line">import subject from &#39;@&#x2F;api&#x2F;edu&#x2F;subject&#39;</span><br><span class="line">&#x2F;&#x2F;导入富文本编辑器组件</span><br><span class="line">import Tinymce from &#39;@&#x2F;components&#x2F;Tinymce&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">    &#x2F;&#x2F;声明组件</span><br><span class="line">    components: &#123;Tinymce&#125;,</span><br><span class="line">    data()&#123;</span><br><span class="line">        return&#123;</span><br><span class="line">            courseInfo: &#123;</span><br><span class="line">                title: &#39;&#39;,</span><br><span class="line">                subjectId: &#39;&#39;,&#x2F;&#x2F;二级分类id</span><br><span class="line">                subjectParentId:&#39;&#39;,&#x2F;&#x2F;一级分类id</span><br><span class="line">                teacherId: &#39;&#39;,</span><br><span class="line">                lessonNum: 0,</span><br><span class="line">                description: &#39;&#39;,</span><br><span class="line">                cover: &#39;&#x2F;static&#x2F;add.jpg&#39;,</span><br><span class="line">                price: 0</span><br><span class="line">            &#125;,</span><br><span class="line">            courseId: &quot;&quot;,</span><br><span class="line">            subjectOneList: [],&#x2F;&#x2F;一级分类列表</span><br><span class="line">            subjectTwoList: [],&#x2F;&#x2F;二级分类列表</span><br><span class="line">            teacherList: [],&#x2F;&#x2F;所属讲师列表</span><br><span class="line">            BASE_API: process.env.BASE_API, &#x2F;&#x2F; 接口API地址</span><br><span class="line">            saveBtnDisabled: false</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    created()&#123;</span><br><span class="line">        this.init()</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        &#x2F;&#x2F;数据回显&#x2F;初始化课程基本信息</span><br><span class="line">        init()&#123;</span><br><span class="line">            &#x2F;&#x2F;如果当前页面有携带id，则是更新课程基本信息，需要信息回显</span><br><span class="line">            if(this.$route.params &amp;&amp; this.$route.params.id)&#123;</span><br><span class="line">                this.courseId &#x3D; this.$route.params.id</span><br><span class="line">                this.getCourseInfo()</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                &#x2F;&#x2F;初始化讲师列表</span><br><span class="line">                this.findAllTeacher()</span><br><span class="line">                &#x2F;&#x2F;初始化一级分类列表</span><br><span class="line">                this.getOneSubject()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F;获取课程基本信息方法</span><br><span class="line">        getCourseInfo()&#123;</span><br><span class="line">            course.getCourseInfo(this.courseId)</span><br><span class="line">                .then(response &#x3D;&gt; &#123;</span><br><span class="line">                    this.courseInfo &#x3D; response.data.courseInfoVo</span><br><span class="line">                    &#x2F;&#x2F;chapte返回上一步数据回显时会产生一个bug，就是二级分类中没有数据,导致显示的是id</span><br><span class="line">                    &#x2F;&#x2F;所以我们要使二级分类有数据,就要查询</span><br><span class="line">                    subject.getAllSubject()</span><br><span class="line">                        .then(response &#x3D;&gt; &#123;</span><br><span class="line">                            this.subjectOneList &#x3D; response.data.list</span><br><span class="line">                            &#x2F;&#x2F;把所有的以及分类数据进行遍历</span><br><span class="line">                            for(var i &#x3D; 0; i &lt; this.subjectOneList.length; i++)&#123;</span><br><span class="line">                                var oneSubject &#x3D; this.subjectOneList[i]</span><br><span class="line">                                &#x2F;&#x2F;比较当前courseInfo里面的以及分类id和所有的以及分类id</span><br><span class="line">                                if(this.courseInfo.subjectParentId &#x3D;&#x3D; oneSubject.id)&#123;</span><br><span class="line">                                    &#x2F;&#x2F;获取一级分类所有的二级分类</span><br><span class="line">                                    this.subjectTwoList &#x3D; oneSubject.children</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;)</span><br><span class="line">                        &#x2F;&#x2F;讲师列表也一样，需要初始化，不然没数据只会显示id</span><br><span class="line">                        this.findAllTeacher()</span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F;更新课程基本信息方法,并下一步</span><br><span class="line">        updateCourseInfo()&#123;</span><br><span class="line">            course.updateCourseInfo(this.courseInfo)</span><br><span class="line">                .then(response &#x3D;&gt; &#123;</span><br><span class="line">                    &#x2F;&#x2F;提示</span><br><span class="line">                    this.$message(&#123;</span><br><span class="line">                        type: &#39;success&#39;,</span><br><span class="line">                        message: &#39;修改课程信息成功!&#39;</span><br><span class="line">                    &#125;);</span><br><span class="line">                    &#x2F;&#x2F;跳转到第二步,注意需要携带id</span><br><span class="line">                    this.$router.push(&#123;path: &#39;&#x2F;course&#x2F;chapter&#x2F;&#39; + this.courseId&#125;)</span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F;上传封面成功后调用的方法</span><br><span class="line">        handleAvatarSuccess(res, file)&#123;</span><br><span class="line">            this.courseInfo.cover &#x3D; res.data.url</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F;上传封面之前调用的方法，一般用来定义上传文件的类型、大小等</span><br><span class="line">        beforeAvatarUpload(file)&#123;</span><br><span class="line">            const isJPG &#x3D; file.type &#x3D;&#x3D;&#x3D; &#39;image&#x2F;jpeg&#39;</span><br><span class="line">            const isLt2M &#x3D; file.size &#x2F; 1024 &#x2F; 1024 &lt; 2</span><br><span class="line"></span><br><span class="line">            if (!isJPG) &#123;</span><br><span class="line">                this.$message.error(&#39;上传头像图片只能是 JPG 格式!&#39;)</span><br><span class="line">            &#125;</span><br><span class="line">            if (!isLt2M) &#123;</span><br><span class="line">                this.$message.error(&#39;上传头像图片大小不能超过 2MB!&#39;)</span><br><span class="line">            &#125;</span><br><span class="line">            return isJPG &amp;&amp; isLt2M</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F;选好一级分类之后，查询二级分类的信息，属于二级联动的效果（一级没选的话二级是不会有数据的）</span><br><span class="line">        subjectLevelOneChanged(value)&#123;&#x2F;&#x2F;value就是一级分类id值</span><br><span class="line">            &#x2F;&#x2F;遍历所有的一级分类</span><br><span class="line">            for(var i &#x3D; 0; i &lt;&#x3D; this.subjectOneList.length; i++)&#123;</span><br><span class="line">                &#x2F;&#x2F;获取每一个一级分类</span><br><span class="line">                var oneSubject &#x3D; this.subjectOneList[i]</span><br><span class="line">                &#x2F;&#x2F;判断id是否相等</span><br><span class="line">                if(value &#x3D;&#x3D;&#x3D; oneSubject.id)&#123;</span><br><span class="line">                    &#x2F;&#x2F;如果相等则赋值</span><br><span class="line">                    this.subjectTwoList &#x3D; oneSubject.children</span><br><span class="line">                    &#x2F;&#x2F;注意，每当二级分类选好了之后，又想改一级分类，需要将选好的二级分类的值清空</span><br><span class="line">                    this.courseInfo.subjectId &#x3D; &quot;&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F;获取一级分类方法</span><br><span class="line">        getOneSubject()&#123;</span><br><span class="line">            subject.getAllSubject()</span><br><span class="line">                .then(response &#x3D;&gt; &#123;</span><br><span class="line">                    this.subjectOneList &#x3D; response.data.list</span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F;查询所有讲师方法</span><br><span class="line">        findAllTeacher()&#123;</span><br><span class="line">            course.findAllTeacher()</span><br><span class="line">                .then(response &#x3D;&gt; &#123;</span><br><span class="line">                    this.teacherList &#x3D; response.data.items</span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        addCourse()&#123;</span><br><span class="line">            course.addCourseInfo(this.courseInfo)</span><br><span class="line">                .then(response &#x3D;&gt; &#123;</span><br><span class="line">                    &#x2F;&#x2F;提示信息</span><br><span class="line">                    this.$message(&#123;</span><br><span class="line">                    type: &#39;success&#39;,</span><br><span class="line">                    message: &#39;添加课程基本信息成功!&#39;</span><br><span class="line">                    &#125;);</span><br><span class="line">                    this.$router.push(&#123;path: &#39;&#x2F;course&#x2F;chapter&#x2F;&#39; + response.data.id&#125;)</span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F;保存并下一步，这里分离两个方法再调用即可</span><br><span class="line">        saveOrUpdate()&#123;</span><br><span class="line">            &#x2F;&#x2F;判断是添加还是修改</span><br><span class="line">            if(!this.courseInfo.id)&#123;</span><br><span class="line">                &#x2F;&#x2F;添加</span><br><span class="line">                this.addCourse()</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                this.updateCourseInfo()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.tinymce-container &#123;</span><br><span class="line">  line-height: 29px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><p>注意以下几个问题(其实跟teacher的save界面相似)</p><ul><li>携带id的问题</li><li>数据回显的问题</li><li>数据回显后再点击添加课程的问题(<code>todo</code>)</li></ul><p>还有如果遇到403错误，一般都是这两个错误：</p><ul><li>跨域问题</li><li>路径写错了</li></ul><h3 id="章节列表的crud"><a href="#章节列表的crud" class="headerlink" title="章节列表的crud"></a>章节列表的crud</h3><h4 id="后端代码"><a href="#后端代码" class="headerlink" title="后端代码"></a>后端代码</h4><h5 id="service层接口"><a href="#service层接口" class="headerlink" title="service层接口"></a>service层接口</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">deleteChapter</span><span class="params">(String chapterId)</span></span>;</span><br></pre></td></tr></table></figure><h5 id="service层实现类"><a href="#service层实现类" class="headerlink" title="service层实现类"></a>service层实现类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">deleteChapter</span><span class="params">(String chapterId)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//判断是否有小结信息，在决定是否删除操作</span></span><br><span class="line">    <span class="comment">//video中也一样有chapterId，所有根据chapterId也可以查出小节信息</span></span><br><span class="line">    QueryWrapper&lt;EduVideo&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.eq(<span class="string">"chapter_id"</span>, chapterId);</span><br><span class="line">    <span class="comment">//因为查询数据列表没什么用，所以我们可以计数</span></span><br><span class="line">    <span class="keyword">int</span> count = eduVideoService.count(wrapper);</span><br><span class="line">    <span class="keyword">if</span>(count &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> GuliException(<span class="number">20001</span>,<span class="string">"操作失败，请先删除小节"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = baseMapper.deleteById(chapterId);</span><br><span class="line">        <span class="keyword">return</span> result &gt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="controller层"><a href="#controller层" class="headerlink" title="controller层"></a>controller层</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加章节</span></span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/addChapter"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">addChapter</span><span class="params">(@RequestBody EduChapter eduChapter)</span></span>&#123;</span><br><span class="line">    eduChapterService.save(eduChapter);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据章节id查询</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/getChapter/&#123;chapterId&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">getChapter</span><span class="params">(@PathVariable String chapterId)</span></span>&#123;</span><br><span class="line">    EduChapter chapter = eduChapterService.getById(chapterId);</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">"chapter"</span>,chapter);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改章节</span></span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/updateChapter"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">updateChapter</span><span class="params">(@RequestBody EduChapter eduChapter)</span></span>&#123;</span><br><span class="line">    eduChapterService.updateById(eduChapter);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除章节信息</span></span><br><span class="line"><span class="comment">//思路=&gt;如果章节中还有小节信息，则不进行删除操作，只有没有小节信息才进行删除操作</span></span><br><span class="line"><span class="meta">@DeleteMapping</span>(<span class="string">"/deleteChapter/&#123;chapterId&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">updateChapter</span><span class="params">(@PathVariable String chapterId)</span></span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> flag = eduChapterService.deleteChapter(chapterId);</span><br><span class="line">    <span class="comment">//如果flag为true则不删除</span></span><br><span class="line">    <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> R.error();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="sawagger自测"><a href="#sawagger自测" class="headerlink" title="sawagger自测"></a>sawagger自测</h5><p>略</p><h4 id="前端代码"><a href="#前端代码" class="headerlink" title="前端代码"></a>前端代码</h4><h5 id="api"><a href="#api" class="headerlink" title="api"></a>api</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加课程章信息</span></span><br><span class="line">addChapter(eduChapter)&#123;</span><br><span class="line">    <span class="keyword">return</span> request(&#123;</span><br><span class="line">        url: <span class="string">'/eduservice/edu-chapter/addChapter'</span>,</span><br><span class="line">        method: <span class="string">'post'</span>,</span><br><span class="line">        data: eduChapter</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//根据id查询</span></span><br><span class="line">getChapter(chapterId)&#123;</span><br><span class="line">    <span class="keyword">return</span> request(&#123;</span><br><span class="line">        url: <span class="string">'/eduservice/edu-chapter/getChapter/'</span> + chapterId,</span><br><span class="line">        method: <span class="string">'get'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//更新</span></span><br><span class="line">updateChapter(eduChapter)&#123;</span><br><span class="line">    <span class="keyword">return</span> request(&#123;</span><br><span class="line">        url: <span class="string">'/eduservice/edu-chapter/updateChapter'</span>,</span><br><span class="line">        method: <span class="string">'post'</span>,</span><br><span class="line">        data: eduChapter</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//删除</span></span><br><span class="line">deleteChapter(chapterId)&#123;</span><br><span class="line">    <span class="keyword">return</span> request(&#123;</span><br><span class="line">        url: <span class="string">'/eduservice/edu-chapter/deleteChapter/'</span> + chapterId,</span><br><span class="line">        method: <span class="string">'delete'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="chapter-vue"><a href="#chapter-vue" class="headerlink" title="chapter.vue"></a>chapter.vue</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"app-container"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h2 style=<span class="string">"text-align: center;"</span>&gt;发布新课程&lt;<span class="regexp">/h2&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;el-steps :active="2" process-status="wait" align-center style="margin-bottom: 40px;"&gt;</span></span><br><span class="line"><span class="regexp">      &lt;el-step title="填写课程基本信息"/</span>&gt;</span><br><span class="line">      &lt;el-step title=<span class="string">"创建课程大纲"</span>/&gt;</span><br><span class="line">      &lt;el-step title=<span class="string">"最终发布"</span>/&gt;</span><br><span class="line">    &lt;<span class="regexp">/el-steps&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;el-button type="text" @click="openChapterDialog()"&gt;添加章节&lt;/</span>el-button&gt;</span><br><span class="line">    &lt;!-- 添加和修改章节表单 --&gt;</span><br><span class="line">    &lt;el-dialog :visible.sync=<span class="string">"dialogChapterFormVisible"</span> title=<span class="string">"添加章节"</span>&gt;</span><br><span class="line">        &lt;el-form :model=<span class="string">"chapter"</span> label-width=<span class="string">"120px"</span>&gt;</span><br><span class="line">            &lt;el-form-item label=<span class="string">"章节标题"</span>&gt;</span><br><span class="line">                &lt;el-input v-model=<span class="string">"chapter.title"</span>/&gt;</span><br><span class="line">            &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">            &lt;el-form-item label="章节排序"&gt;</span></span><br><span class="line"><span class="regexp">                &lt;el-input-number v-model="chapter.sort" :min="0" controls-position="right"/</span>&gt;</span><br><span class="line">            &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>el-form&gt;</span><br><span class="line">        &lt;div slot=<span class="string">"footer"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"dialog-footer"</span>&gt;</span><br><span class="line">            &lt;el-button @click=<span class="string">"dialogChapterFormVisible = false"</span>&gt;取 消&lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp">            &lt;el-button type="primary" @click="saveOrUpdate"&gt;确 定&lt;/</span>el-button&gt;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>el-dialog&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 章节 --&gt;</span><br><span class="line">    &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"chanpterList"</span>&gt;</span><br><span class="line">        &lt;li</span><br><span class="line">            v-<span class="keyword">for</span>=<span class="string">"chapter in chapterVideoList"</span></span><br><span class="line">            :key=<span class="string">"chapter.id"</span>&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">                &#123;&#123; chapter.title &#125;&#125;</span><br><span class="line"></span><br><span class="line">                &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"acts"</span>&gt;</span><br><span class="line">                    &lt;el-button style=<span class="string">""</span> type=<span class="string">"text"</span> @click=<span class="string">"openVideo(chapter.id)"</span>&gt;添加小节&lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;el-button style="" type="text" @click="openEditChatper(chapter.id)"&gt;编辑&lt;/</span>el-button&gt;</span><br><span class="line">                    &lt;el-button type=<span class="string">"text"</span> @click=<span class="string">"removeChapter(chapter.id)"</span>&gt;删除&lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp">                &lt;/</span>span&gt;</span><br><span class="line">            &lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            &lt;!-- 视频 --&gt;</span></span><br><span class="line"><span class="regexp">            &lt;ul class="chanpterList videoList"&gt;</span></span><br><span class="line"><span class="regexp">                &lt;li</span></span><br><span class="line"><span class="regexp">                    v-for="video in chapter.children"</span></span><br><span class="line"><span class="regexp">                    :key="video.id"&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;p&gt;&#123;&#123; video.title &#125;&#125;</span></span><br><span class="line"><span class="regexp">                    &lt;/</span>p&gt;</span><br><span class="line">                &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/u</span>l&gt;</span><br><span class="line">        &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/u</span>l&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;el-button @click=<span class="string">"previous"</span>&gt;上一步&lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-button :disabled="saveBtnDisabled" type="primary" @click="next"&gt;下一步&lt;/</span>el-button&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">import chapter from '@/</span>api/edu/chapter<span class="string">'</span></span><br><span class="line"><span class="string">export default &#123;</span></span><br><span class="line"><span class="string">    data()&#123;</span></span><br><span class="line"><span class="string">        return&#123;</span></span><br><span class="line"><span class="string">            saveBtnDisabled: false,</span></span><br><span class="line"><span class="string">            chapterVideoList: [],</span></span><br><span class="line"><span class="string">            courseId: "",</span></span><br><span class="line"><span class="string">            chapter: &#123;</span></span><br><span class="line"><span class="string">              title: "",</span></span><br><span class="line"><span class="string">              sort: ""</span></span><br><span class="line"><span class="string">            &#125;,</span></span><br><span class="line"><span class="string">            video: &#123;</span></span><br><span class="line"><span class="string">              title:""</span></span><br><span class="line"><span class="string">            &#125;,</span></span><br><span class="line"><span class="string">            dialogChapterFormVisible: false</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    created()&#123;</span></span><br><span class="line"><span class="string">      //如果有id值则查询章节信息，没有就是添加章节信息</span></span><br><span class="line"><span class="string">      if(this.$route.params &amp;&amp; this.$route.params.id)&#123;</span></span><br><span class="line"><span class="string">        this.courseId = this.$route.params.id</span></span><br><span class="line"><span class="string">        this.getChaptersByCourseId()</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    methods: &#123;</span></span><br><span class="line"><span class="string">//================================小节crud对应的方法=========================================</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//================================章节crud对应的方法=======================================</span></span><br><span class="line"><span class="string">      //点击编辑弹框并数据回显</span></span><br><span class="line"><span class="string">      openEditChatper(chapterId)&#123;</span></span><br><span class="line"><span class="string">        this.dialogChapterFormVisible = true</span></span><br><span class="line"><span class="string">        chapter.getChapter(chapterId)</span></span><br><span class="line"><span class="string">          .then(response =&gt; &#123;</span></span><br><span class="line"><span class="string">            this.chapter = response.data.chapter</span></span><br><span class="line"><span class="string">          &#125;)</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      //删除章节信息</span></span><br><span class="line"><span class="string">      removeChapter(chapterId)&#123;</span></span><br><span class="line"><span class="string">        //弹框提示</span></span><br><span class="line"><span class="string">        //为了用户体验，应该弹框提醒</span></span><br><span class="line"><span class="string">        this.$confirm('</span>确定需要删除此章节记录吗？<span class="string">', '</span>提示<span class="string">', &#123;</span></span><br><span class="line"><span class="string">            confirmButtonText: '</span>确定<span class="string">',</span></span><br><span class="line"><span class="string">            cancelButtonText: '</span>取消<span class="string">',</span></span><br><span class="line"><span class="string">            type: '</span>warning<span class="string">'</span></span><br><span class="line"><span class="string">          &#125;).then(() =&gt; &#123;//点击确定执行</span></span><br><span class="line"><span class="string">            chapter.deleteChapter(chapterId)</span></span><br><span class="line"><span class="string">              .then(response =&gt; &#123;</span></span><br><span class="line"><span class="string">                this.$message(&#123;//删除成功后弹框</span></span><br><span class="line"><span class="string">                  type: '</span>success<span class="string">',</span></span><br><span class="line"><span class="string">                  message: '</span>删除章节成功!<span class="string">'</span></span><br><span class="line"><span class="string">                &#125;);</span></span><br><span class="line"><span class="string">                //删除成功后需要重新查询所有</span></span><br><span class="line"><span class="string">                this.getChaptersByCourseId()</span></span><br><span class="line"><span class="string">              &#125;)</span></span><br><span class="line"><span class="string">          &#125;)</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      //添加章节方法</span></span><br><span class="line"><span class="string">      addChapter()&#123;</span></span><br><span class="line"><span class="string">        //设置当前所属课程id</span></span><br><span class="line"><span class="string">        this.chapter.courseId = this.courseId</span></span><br><span class="line"><span class="string">        chapter.addChapter(this.chapter)</span></span><br><span class="line"><span class="string">          .then(response =&gt; &#123;</span></span><br><span class="line"><span class="string">            //关闭弹框</span></span><br><span class="line"><span class="string">            this.dialogChapterFormVisible = false</span></span><br><span class="line"><span class="string">            //提示信息</span></span><br><span class="line"><span class="string">            this.$message(&#123;</span></span><br><span class="line"><span class="string">              type: '</span>success<span class="string">',</span></span><br><span class="line"><span class="string">              message: '</span>添加成功!<span class="string">'</span></span><br><span class="line"><span class="string">            &#125;);</span></span><br><span class="line"><span class="string">            //刷新页面</span></span><br><span class="line"><span class="string">            this.getChaptersByCourseId()</span></span><br><span class="line"><span class="string">          &#125;)</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      //修改章节方法</span></span><br><span class="line"><span class="string">      updateChapter()&#123;</span></span><br><span class="line"><span class="string">        chapter.updateChapter(this.chapter)</span></span><br><span class="line"><span class="string">          .then(response =&gt; &#123;</span></span><br><span class="line"><span class="string">            //关弹框，提示信息，刷新页面</span></span><br><span class="line"><span class="string">            //关闭弹框</span></span><br><span class="line"><span class="string">            this.dialogChapterFormVisible = false</span></span><br><span class="line"><span class="string">            //提示</span></span><br><span class="line"><span class="string">            this.$message(&#123;</span></span><br><span class="line"><span class="string">                type: '</span>success<span class="string">',</span></span><br><span class="line"><span class="string">                message: '</span>修改章节成功!<span class="string">'</span></span><br><span class="line"><span class="string">            &#125;);</span></span><br><span class="line"><span class="string">            //刷新页面</span></span><br><span class="line"><span class="string">            this.getChaptersByCourseId()</span></span><br><span class="line"><span class="string">          &#125;)</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      //打开弹框</span></span><br><span class="line"><span class="string">      openChapterDialog()&#123;</span></span><br><span class="line"><span class="string">        this.dialogChapterFormVisible = true</span></span><br><span class="line"><span class="string">        //因为第二次打开添加章节的时候，会显示上一次添加的章节信息，所以每次点击添加章节的时候应该初始化一下</span></span><br><span class="line"><span class="string">        this.chapter.title = ""</span></span><br><span class="line"><span class="string">        this.chapter.sort = 0</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">      //根据课程id查询章节列表信息</span></span><br><span class="line"><span class="string">      getChaptersByCourseId()&#123;</span></span><br><span class="line"><span class="string">        chapter.getChaptersByCourseId(this.courseId)</span></span><br><span class="line"><span class="string">          .then(response =&gt; &#123;</span></span><br><span class="line"><span class="string">            this.chapterVideoList = response.data.chapterList</span></span><br><span class="line"><span class="string">          &#125;)</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      //上一步点击事件</span></span><br><span class="line"><span class="string">      previous()&#123;</span></span><br><span class="line"><span class="string">          this.$router.push(&#123;path:"/course/info/" + this.courseId&#125;)</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      //下一步点击事件</span></span><br><span class="line"><span class="string">      next()&#123;</span></span><br><span class="line"><span class="string">          this.$router.push(&#123;path: '</span>/course/publish/<span class="string">' + this.courseId&#125;)</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      saveOrUpdate()&#123;</span></span><br><span class="line"><span class="string">        //判断是否携带章节id</span></span><br><span class="line"><span class="string">        if(!this.chapter.id)&#123;</span></span><br><span class="line"><span class="string">          this.addChapter()</span></span><br><span class="line"><span class="string">        &#125;else&#123;</span></span><br><span class="line"><span class="string">          this.updateChapter()</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;style scoped&gt;</span></span><br><span class="line"><span class="string">.chanpterList&#123;</span></span><br><span class="line"><span class="string">    position: relative;</span></span><br><span class="line"><span class="string">    list-style: none;</span></span><br><span class="line"><span class="string">    margin: 0;</span></span><br><span class="line"><span class="string">    padding: 0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">.chanpterList li&#123;</span></span><br><span class="line"><span class="string">  position: relative;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">.chanpterList p&#123;</span></span><br><span class="line"><span class="string">  float: left;</span></span><br><span class="line"><span class="string">  font-size: 20px;</span></span><br><span class="line"><span class="string">  margin: 10px 0;</span></span><br><span class="line"><span class="string">  padding: 10px;</span></span><br><span class="line"><span class="string">  height: 70px;</span></span><br><span class="line"><span class="string">  line-height: 50px;</span></span><br><span class="line"><span class="string">  width: 100%;</span></span><br><span class="line"><span class="string">  border: 1px solid #DDD;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">.chanpterList .acts &#123;</span></span><br><span class="line"><span class="string">    float: right;</span></span><br><span class="line"><span class="string">    font-size: 14px;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.videoList&#123;</span></span><br><span class="line"><span class="string">  padding-left: 50px;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">.videoList p&#123;</span></span><br><span class="line"><span class="string">  float: left;</span></span><br><span class="line"><span class="string">  font-size: 14px;</span></span><br><span class="line"><span class="string">  margin: 10px 0;</span></span><br><span class="line"><span class="string">  padding: 10px;</span></span><br><span class="line"><span class="string">  height: 50px;</span></span><br><span class="line"><span class="string">  line-height: 30px;</span></span><br><span class="line"><span class="string">  width: 100%;</span></span><br><span class="line"><span class="string">  border: 1px dotted #DDD;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br></pre></td></tr></table></figure><h3 id="小节列表的crud"><a href="#小节列表的crud" class="headerlink" title="小节列表的crud"></a>小节列表的crud</h3><h4 id="后端代码-1"><a href="#后端代码-1" class="headerlink" title="后端代码"></a>后端代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/eduservice/edu-video"</span>)</span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EduVideoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    EduVideoService eduVideoService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加小节</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/addVideo"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">addVideo</span><span class="params">(@RequestBody EduVideo eduVideo)</span></span>&#123;</span><br><span class="line">        eduVideoService.save(eduVideo);</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除小节</span></span><br><span class="line">    <span class="meta">@DeleteMapping</span>(<span class="string">"/deleteVideo/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">deleteVideo</span><span class="params">(@PathVariable String id)</span></span>&#123;</span><br><span class="line">        eduVideoService.removeById(id);</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改小节</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/updateVideo"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">updateVideo</span><span class="params">(@RequestBody EduVideo eduVideo)</span></span>&#123;</span><br><span class="line">        eduVideoService.updateById(eduVideo);</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据id查询小节</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/getVideo/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">getVideo</span><span class="params">(@PathVariable String id)</span></span>&#123;</span><br><span class="line">        EduVideo eduVideo = eduVideoService.getById(id);</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">"eduVideo"</span>,eduVideo);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="前端代码-1"><a href="#前端代码-1" class="headerlink" title="前端代码"></a>前端代码</h4><h5 id="api-1"><a href="#api-1" class="headerlink" title="api"></a>api</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">'@/utils/request'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">//添加小节</span></span><br><span class="line">    addVideo(eduVideo)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">'/eduservice/edu-video/addVideo'</span>,</span><br><span class="line">            method: <span class="string">'post'</span>,</span><br><span class="line">            data: eduVideo</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//删除小节</span></span><br><span class="line">    deleteVideo(id)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">'/eduservice/edu-video/deleteVideo/'</span> + id,</span><br><span class="line">            method: <span class="string">'delete'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//修改小节</span></span><br><span class="line">    updateVideo(eduVideo)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">'/eduservice/edu-video/updateVideo'</span>,</span><br><span class="line">            method: <span class="string">'post'</span>,</span><br><span class="line">            data: eduVideo</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//根据id查询小节</span></span><br><span class="line">    getVideo(id)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">'/eduservice/edu-video/getVideo/'</span> + id,</span><br><span class="line">            method: <span class="string">'get'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="chapter-vue-1"><a href="#chapter-vue-1" class="headerlink" title="chapter.vue"></a>chapter.vue</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"app-container"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h2 style=<span class="string">"text-align: center;"</span>&gt;发布新课程&lt;<span class="regexp">/h2&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;el-steps :active="2" process-status="wait" align-center style="margin-bottom: 40px;"&gt;</span></span><br><span class="line"><span class="regexp">      &lt;el-step title="填写课程基本信息"/</span>&gt;</span><br><span class="line">      &lt;el-step title=<span class="string">"创建课程大纲"</span>/&gt;</span><br><span class="line">      &lt;el-step title=<span class="string">"最终发布"</span>/&gt;</span><br><span class="line">    &lt;<span class="regexp">/el-steps&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;el-button type="text" @click="openChapterDialog()"&gt;添加章节&lt;/</span>el-button&gt;</span><br><span class="line">    &lt;!-- 添加和修改章节表单 --&gt;</span><br><span class="line">    &lt;el-dialog :visible.sync=<span class="string">"dialogChapterFormVisible"</span> title=<span class="string">"添加章节"</span>&gt;</span><br><span class="line">        &lt;el-form :model=<span class="string">"chapter"</span> label-width=<span class="string">"120px"</span>&gt;</span><br><span class="line">            &lt;el-form-item label=<span class="string">"章节标题"</span>&gt;</span><br><span class="line">                &lt;el-input v-model=<span class="string">"chapter.title"</span>/&gt;</span><br><span class="line">            &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">            &lt;el-form-item label="章节排序"&gt;</span></span><br><span class="line"><span class="regexp">                &lt;el-input-number v-model="chapter.sort" :min="0" controls-position="right"/</span>&gt;</span><br><span class="line">            &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>el-form&gt;</span><br><span class="line">        &lt;div slot=<span class="string">"footer"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"dialog-footer"</span>&gt;</span><br><span class="line">            &lt;el-button @click=<span class="string">"dialogChapterFormVisible = false"</span>&gt;取 消&lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp">            &lt;el-button type="primary" @click="saveOrUpdate"&gt;确 定&lt;/</span>el-button&gt;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>el-dialog&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 添加和修改课时表单 --&gt;</span><br><span class="line">    &lt;el-dialog :visible.sync=<span class="string">"dialogVideoFormVisible"</span> title=<span class="string">"添加课时"</span>&gt;</span><br><span class="line">      &lt;el-form :model=<span class="string">"video"</span> label-width=<span class="string">"120px"</span>&gt;</span><br><span class="line">        &lt;el-form-item label=<span class="string">"课时标题"</span>&gt;</span><br><span class="line">          &lt;el-input v-model=<span class="string">"video.title"</span>/&gt;</span><br><span class="line">        &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-form-item label="课时排序"&gt;</span></span><br><span class="line"><span class="regexp">          &lt;el-input-number v-model="video.sort" :min="0" controls-position="right"/</span>&gt;</span><br><span class="line">        &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-form-item label="是否免费"&gt;</span></span><br><span class="line"><span class="regexp">          &lt;el-radio-group v-model="video.free"&gt;</span></span><br><span class="line"><span class="regexp">            &lt;el-radio :label="true"&gt;免费&lt;/</span>el-radio&gt;</span><br><span class="line">            &lt;el-radio :label=<span class="string">"false"</span>&gt;默认&lt;<span class="regexp">/el-radio&gt;</span></span><br><span class="line"><span class="regexp">          &lt;/</span>el-radio-group&gt;</span><br><span class="line">        &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-form-item label="上传视频"&gt;</span></span><br><span class="line"><span class="regexp">          &lt;!-- TODO --&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>el-form-item&gt;</span><br><span class="line">      &lt;<span class="regexp">/el-form&gt;</span></span><br><span class="line"><span class="regexp">      &lt;div slot="footer" class="dialog-footer"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-button @click="dialogVideoFormVisible = false"&gt;取 消&lt;/</span>el-button&gt;</span><br><span class="line">        &lt;el-button :disabled=<span class="string">"saveVideoBtnDisabled"</span> type=<span class="string">"primary"</span> @click=<span class="string">"saveOrUpdateVideo"</span>&gt;确 定&lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>div&gt;</span><br><span class="line">    &lt;<span class="regexp">/el-dialog&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &lt;!-- 章节 --&gt;</span></span><br><span class="line"><span class="regexp">    &lt;ul class="chanpterList"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li</span></span><br><span class="line"><span class="regexp">            v-for="chapter in chapterVideoList"</span></span><br><span class="line"><span class="regexp">            :key="chapter.id"&gt;</span></span><br><span class="line"><span class="regexp">            &lt;p&gt;</span></span><br><span class="line"><span class="regexp">                &#123;&#123; chapter.title &#125;&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">                &lt;span class="acts"&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;el-button style="" type="text" @click="openVideo(chapter.id)"&gt;添加小节&lt;/</span>el-button&gt;</span><br><span class="line">                    &lt;el-button style=<span class="string">""</span> type=<span class="string">"text"</span> @click=<span class="string">"openEditChatper(chapter.id)"</span>&gt;编辑&lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;el-button type="text" @click="removeChapter(chapter.id)"&gt;删除&lt;/</span>el-button&gt;</span><br><span class="line">                &lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>p&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- 视频 --&gt;</span><br><span class="line">            &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"chanpterList videoList"</span>&gt;</span><br><span class="line">                &lt;li</span><br><span class="line">                    v-<span class="keyword">for</span>=<span class="string">"video in chapter.children"</span></span><br><span class="line">                    :key=<span class="string">"video.id"</span>&gt;</span><br><span class="line">                    &lt;p&gt;&#123;&#123; video.title &#125;&#125;</span><br><span class="line">                      &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"acts"</span>&gt;</span><br><span class="line">                    </span><br><span class="line">                        &lt;el-button style=<span class="string">""</span> type=<span class="string">"text"</span> @click=<span class="string">"openEditVideo(video.id)"</span>&gt;编辑&lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp">                        &lt;el-button type="text" @click="removeVideo(video.id)"&gt;删除&lt;/</span>el-button&gt;</span><br><span class="line">                      &lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;/</span>p&gt;</span><br><span class="line">                &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/u</span>l&gt;</span><br><span class="line">        &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/u</span>l&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;el-button @click=<span class="string">"previous"</span>&gt;上一步&lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-button :disabled="saveBtnDisabled" type="primary" @click="next"&gt;下一步&lt;/</span>el-button&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">import chapter from '@/</span>api/edu/chapter<span class="string">'</span></span><br><span class="line"><span class="string">import video from '</span>@/api/edu/video<span class="string">'</span></span><br><span class="line"><span class="string">export default &#123;</span></span><br><span class="line"><span class="string">    data()&#123;</span></span><br><span class="line"><span class="string">        return&#123;</span></span><br><span class="line"><span class="string">            saveBtnDisabled: false,</span></span><br><span class="line"><span class="string">            saveVideoBtnDisabled: false,</span></span><br><span class="line"><span class="string">            chapterVideoList: [],</span></span><br><span class="line"><span class="string">            courseId: "",</span></span><br><span class="line"><span class="string">            chapter: &#123;</span></span><br><span class="line"><span class="string">              title: "",</span></span><br><span class="line"><span class="string">              sort: ""</span></span><br><span class="line"><span class="string">            &#125;,</span></span><br><span class="line"><span class="string">            video: &#123;</span></span><br><span class="line"><span class="string">              title: '</span><span class="string">',</span></span><br><span class="line"><span class="string">              sort: 0,</span></span><br><span class="line"><span class="string">              Free: 0,</span></span><br><span class="line"><span class="string">              videoSourceId: '</span><span class="string">'</span></span><br><span class="line"><span class="string">            &#125;,</span></span><br><span class="line"><span class="string">            dialogChapterFormVisible: false,</span></span><br><span class="line"><span class="string">            dialogVideoFormVisible: false</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    created()&#123;</span></span><br><span class="line"><span class="string">      //如果有id值则查询章节信息，没有就是添加章节信息</span></span><br><span class="line"><span class="string">      if(this.$route.params &amp;&amp; this.$route.params.id)&#123;</span></span><br><span class="line"><span class="string">        this.courseId = this.$route.params.id</span></span><br><span class="line"><span class="string">        this.getChaptersByCourseId()</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    methods: &#123;</span></span><br><span class="line"><span class="string">//================================小节crud对应的方法=========================================</span></span><br><span class="line"><span class="string">      //打开添加小节弹框</span></span><br><span class="line"><span class="string">      openVideo(chapterId)&#123;</span></span><br><span class="line"><span class="string">        //弹框</span></span><br><span class="line"><span class="string">        this.dialogVideoFormVisible = true</span></span><br><span class="line"><span class="string">        //清空，注意清空和设置id的顺序，不能反过来</span></span><br><span class="line"><span class="string">        this.video = &#123;&#125;</span></span><br><span class="line"><span class="string">        //设置章节id</span></span><br><span class="line"><span class="string">        this.video.chapterId = chapterId</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      //添加小节</span></span><br><span class="line"><span class="string">      addVideo()&#123;</span></span><br><span class="line"><span class="string">        this.video.courseId = this.courseId</span></span><br><span class="line"><span class="string">        video.addVideo(this.video)</span></span><br><span class="line"><span class="string">          .then(response =&gt; &#123;</span></span><br><span class="line"><span class="string">            //关闭弹框</span></span><br><span class="line"><span class="string">            this.dialogVideoFormVisible = false</span></span><br><span class="line"><span class="string">            //提示信息</span></span><br><span class="line"><span class="string">            this.$message(&#123;</span></span><br><span class="line"><span class="string">              type: '</span>success<span class="string">',</span></span><br><span class="line"><span class="string">              message: '</span>添加小节成功!<span class="string">'</span></span><br><span class="line"><span class="string">            &#125;);</span></span><br><span class="line"><span class="string">            //刷新页面</span></span><br><span class="line"><span class="string">            this.getChaptersByCourseId()</span></span><br><span class="line"><span class="string">          &#125;)</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      //修改小节信息</span></span><br><span class="line"><span class="string">      updateVideo()&#123;</span></span><br><span class="line"><span class="string">        video.updateVideo(this.video)</span></span><br><span class="line"><span class="string">          .then(response =&gt; &#123;</span></span><br><span class="line"><span class="string">            //关弹框，提示信息，刷新页面</span></span><br><span class="line"><span class="string">            //关闭弹框</span></span><br><span class="line"><span class="string">            this.dialogVideoFormVisible = false</span></span><br><span class="line"><span class="string">            //提示</span></span><br><span class="line"><span class="string">            this.$message(&#123;</span></span><br><span class="line"><span class="string">                type: '</span>success<span class="string">',</span></span><br><span class="line"><span class="string">                message: '</span>修改小节成功!<span class="string">'</span></span><br><span class="line"><span class="string">            &#125;);</span></span><br><span class="line"><span class="string">            //刷新页面</span></span><br><span class="line"><span class="string">            this.getChaptersByCourseId()</span></span><br><span class="line"><span class="string">          &#125;)</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      //点击小节编辑按钮，数据回显</span></span><br><span class="line"><span class="string">      openEditVideo(videoId)&#123;</span></span><br><span class="line"><span class="string">        this.dialogVideoFormVisible = true//弹框</span></span><br><span class="line"><span class="string">        video.getVideo(videoId)</span></span><br><span class="line"><span class="string">          .then(response =&gt; &#123;</span></span><br><span class="line"><span class="string">            this.video = response.data.eduVideo</span></span><br><span class="line"><span class="string">          &#125;)</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      //删除小节信息</span></span><br><span class="line"><span class="string">      removeVideo(videoId)&#123;</span></span><br><span class="line"><span class="string">        //弹框提示</span></span><br><span class="line"><span class="string">        //为了用户体验，应该弹框提醒</span></span><br><span class="line"><span class="string">        this.$confirm('</span>确定需要删除此小节记录吗？<span class="string">', '</span>提示<span class="string">', &#123;</span></span><br><span class="line"><span class="string">            confirmButtonText: '</span>确定<span class="string">',</span></span><br><span class="line"><span class="string">            cancelButtonText: '</span>取消<span class="string">',</span></span><br><span class="line"><span class="string">            type: '</span>warning<span class="string">'</span></span><br><span class="line"><span class="string">          &#125;).then(() =&gt; &#123;//点击确定执行</span></span><br><span class="line"><span class="string">            video.deleteVideo(videoId)</span></span><br><span class="line"><span class="string">              .then(response =&gt; &#123;</span></span><br><span class="line"><span class="string">                this.$message(&#123;//删除成功后弹框</span></span><br><span class="line"><span class="string">                  type: '</span>success<span class="string">',</span></span><br><span class="line"><span class="string">                  message: '</span>删除小节成功!<span class="string">'</span></span><br><span class="line"><span class="string">                &#125;);</span></span><br><span class="line"><span class="string">                //删除成功后需要重新查询所有</span></span><br><span class="line"><span class="string">                this.getChaptersByCourseId()</span></span><br><span class="line"><span class="string">              &#125;)</span></span><br><span class="line"><span class="string">          &#125;)</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      saveOrUpdateVideo()&#123;</span></span><br><span class="line"><span class="string">        if(!this.video.id)&#123;</span></span><br><span class="line"><span class="string">          this.addVideo()</span></span><br><span class="line"><span class="string">        &#125;else&#123;</span></span><br><span class="line"><span class="string">          this.updateVideo()</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//================================章节crud对应的方法=======================================</span></span><br><span class="line"><span class="string">      //点击编辑弹框并数据回显</span></span><br><span class="line"><span class="string">      openEditChatper(chapterId)&#123;</span></span><br><span class="line"><span class="string">        this.dialogChapterFormVisible = true</span></span><br><span class="line"><span class="string">        chapter.getChapter(chapterId)</span></span><br><span class="line"><span class="string">          .then(response =&gt; &#123;</span></span><br><span class="line"><span class="string">            this.chapter = response.data.chapter</span></span><br><span class="line"><span class="string">          &#125;)</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      //删除章节信息</span></span><br><span class="line"><span class="string">      removeChapter(chapterId)&#123;</span></span><br><span class="line"><span class="string">        //弹框提示</span></span><br><span class="line"><span class="string">        //为了用户体验，应该弹框提醒</span></span><br><span class="line"><span class="string">        this.$confirm('</span>确定需要删除此章节记录吗？<span class="string">', '</span>提示<span class="string">', &#123;</span></span><br><span class="line"><span class="string">            confirmButtonText: '</span>确定<span class="string">',</span></span><br><span class="line"><span class="string">            cancelButtonText: '</span>取消<span class="string">',</span></span><br><span class="line"><span class="string">            type: '</span>warning<span class="string">'</span></span><br><span class="line"><span class="string">          &#125;).then(() =&gt; &#123;//点击确定执行</span></span><br><span class="line"><span class="string">            chapter.deleteChapter(chapterId)</span></span><br><span class="line"><span class="string">              .then(response =&gt; &#123;</span></span><br><span class="line"><span class="string">                this.$message(&#123;//删除成功后弹框</span></span><br><span class="line"><span class="string">                  type: '</span>success<span class="string">',</span></span><br><span class="line"><span class="string">                  message: '</span>删除章节成功!<span class="string">'</span></span><br><span class="line"><span class="string">                &#125;);</span></span><br><span class="line"><span class="string">                //删除成功后需要重新查询所有</span></span><br><span class="line"><span class="string">                this.getChaptersByCourseId()</span></span><br><span class="line"><span class="string">              &#125;)</span></span><br><span class="line"><span class="string">          &#125;)</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      //添加章节方法</span></span><br><span class="line"><span class="string">      addChapter()&#123;</span></span><br><span class="line"><span class="string">        //设置当前所属课程id</span></span><br><span class="line"><span class="string">        this.chapter.courseId = this.courseId</span></span><br><span class="line"><span class="string">        chapter.addChapter(this.chapter)</span></span><br><span class="line"><span class="string">          .then(response =&gt; &#123;</span></span><br><span class="line"><span class="string">            //关闭弹框</span></span><br><span class="line"><span class="string">            this.dialogChapterFormVisible = false</span></span><br><span class="line"><span class="string">            //提示信息</span></span><br><span class="line"><span class="string">            this.$message(&#123;</span></span><br><span class="line"><span class="string">              type: '</span>success<span class="string">',</span></span><br><span class="line"><span class="string">              message: '</span>添加成功!<span class="string">'</span></span><br><span class="line"><span class="string">            &#125;);</span></span><br><span class="line"><span class="string">            //刷新页面</span></span><br><span class="line"><span class="string">            this.getChaptersByCourseId()</span></span><br><span class="line"><span class="string">          &#125;)</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      //修改章节方法</span></span><br><span class="line"><span class="string">      updateChapter()&#123;</span></span><br><span class="line"><span class="string">        chapter.updateChapter(this.chapter)</span></span><br><span class="line"><span class="string">          .then(response =&gt; &#123;</span></span><br><span class="line"><span class="string">            //关弹框，提示信息，刷新页面</span></span><br><span class="line"><span class="string">            //关闭弹框</span></span><br><span class="line"><span class="string">            this.dialogChapterFormVisible = false</span></span><br><span class="line"><span class="string">            //提示</span></span><br><span class="line"><span class="string">            this.$message(&#123;</span></span><br><span class="line"><span class="string">                type: '</span>success<span class="string">',</span></span><br><span class="line"><span class="string">                message: '</span>修改章节成功!<span class="string">'</span></span><br><span class="line"><span class="string">            &#125;);</span></span><br><span class="line"><span class="string">            //刷新页面</span></span><br><span class="line"><span class="string">            this.getChaptersByCourseId()</span></span><br><span class="line"><span class="string">          &#125;)</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      //打开弹框</span></span><br><span class="line"><span class="string">      openChapterDialog()&#123;</span></span><br><span class="line"><span class="string">        this.dialogChapterFormVisible = true</span></span><br><span class="line"><span class="string">        //因为第二次打开添加章节的时候，会显示上一次添加的章节信息，所以每次点击添加章节的时候应该初始化一下</span></span><br><span class="line"><span class="string">        this.chapter.title = ""</span></span><br><span class="line"><span class="string">        this.chapter.sort = 0</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">      //根据课程id查询章节列表信息</span></span><br><span class="line"><span class="string">      getChaptersByCourseId()&#123;</span></span><br><span class="line"><span class="string">        chapter.getChaptersByCourseId(this.courseId)</span></span><br><span class="line"><span class="string">          .then(response =&gt; &#123;</span></span><br><span class="line"><span class="string">            this.chapterVideoList = response.data.chapterList</span></span><br><span class="line"><span class="string">          &#125;)</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      //上一步点击事件</span></span><br><span class="line"><span class="string">      previous()&#123;</span></span><br><span class="line"><span class="string">          this.$router.push(&#123;path:"/course/info/" + this.courseId&#125;)</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      //下一步点击事件</span></span><br><span class="line"><span class="string">      next()&#123;</span></span><br><span class="line"><span class="string">          this.$router.push(&#123;path: '</span>/course/publish/<span class="string">' + this.courseId&#125;)</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      saveOrUpdate()&#123;</span></span><br><span class="line"><span class="string">        //判断是否携带章节id</span></span><br><span class="line"><span class="string">        if(!this.chapter.id)&#123;</span></span><br><span class="line"><span class="string">          this.addChapter()</span></span><br><span class="line"><span class="string">        &#125;else&#123;</span></span><br><span class="line"><span class="string">          this.updateChapter()</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;style scoped&gt;</span></span><br><span class="line"><span class="string">.chanpterList&#123;</span></span><br><span class="line"><span class="string">    position: relative;</span></span><br><span class="line"><span class="string">    list-style: none;</span></span><br><span class="line"><span class="string">    margin: 0;</span></span><br><span class="line"><span class="string">    padding: 0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">.chanpterList li&#123;</span></span><br><span class="line"><span class="string">  position: relative;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">.chanpterList p&#123;</span></span><br><span class="line"><span class="string">  float: left;</span></span><br><span class="line"><span class="string">  font-size: 20px;</span></span><br><span class="line"><span class="string">  margin: 10px 0;</span></span><br><span class="line"><span class="string">  padding: 10px;</span></span><br><span class="line"><span class="string">  height: 70px;</span></span><br><span class="line"><span class="string">  line-height: 50px;</span></span><br><span class="line"><span class="string">  width: 100%;</span></span><br><span class="line"><span class="string">  border: 1px solid #DDD;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">.chanpterList .acts &#123;</span></span><br><span class="line"><span class="string">    float: right;</span></span><br><span class="line"><span class="string">    font-size: 14px;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.videoList&#123;</span></span><br><span class="line"><span class="string">  padding-left: 50px;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">.videoList p&#123;</span></span><br><span class="line"><span class="string">  float: left;</span></span><br><span class="line"><span class="string">  font-size: 14px;</span></span><br><span class="line"><span class="string">  margin: 10px 0;</span></span><br><span class="line"><span class="string">  padding: 10px;</span></span><br><span class="line"><span class="string">  height: 50px;</span></span><br><span class="line"><span class="string">  line-height: 30px;</span></span><br><span class="line"><span class="string">  width: 100%;</span></span><br><span class="line"><span class="string">  border: 1px dotted #DDD;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4、发布课程开发"><a href="#4、发布课程开发" class="headerlink" title="4、发布课程开发"></a>4、发布课程开发</h2><h3 id="业务分析"><a href="#业务分析" class="headerlink" title="业务分析"></a>业务分析</h3><p>点击发布课程前，需要客户确认自己前面填写的信息， 也就是最终的课程信息，需要在这一界面现实出来，按照之前的做法就是新建实体类封装数据，但是这里设计太多张表了，这种方法不适合</p><p>所以这里自己写sql语句是最方便的，也就是联表查询，回顾一下联表查询包括：</p><p>比如有两张表</p><p>内连接：只显示两张表中有关联的数据</p><p>左外连接：左边的表的字段都显示，数据显示有个关联的，没有关联的就是默认值</p><p>右外连接：同理</p><p>而我们一般都会采取左外连接：例如</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * </span><br><span class="line"><span class="keyword">FROM</span> edu_course ec </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> edu_course_description ecd <span class="keyword">ON</span> ec.<span class="string">`id`</span> = ecd.<span class="string">`id`</span></span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> edu_teacher et <span class="keyword">ON</span> ec.<span class="string">`teacher_id`</span> = et.<span class="string">`id`</span></span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> edu_subject es1 <span class="keyword">ON</span> ec.<span class="string">`subject_parent_id`</span> = es1.<span class="string">`id`</span></span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> edu_subject es2 <span class="keyword">ON</span> ec.<span class="string">`subject_id`</span> = es2.<span class="string">`id`</span></span><br><span class="line"><span class="keyword">WHERE</span> ec.<span class="string">`id`</span> = <span class="number">18</span></span><br></pre></td></tr></table></figure><p>查询结果：</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200707114500.png" alt="image-20200707114500192"></p><p>根据业务需求，我们需要在这一步显示的课程内容类似如下</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200707112858.png" alt="image-20200707112851500"></p><h3 id="后端开发"><a href="#后端开发" class="headerlink" title="后端开发"></a>后端开发</h3><h4 id="编写数据封装实体类-1"><a href="#编写数据封装实体类-1" class="headerlink" title="编写数据封装实体类"></a>编写数据封装实体类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CoursePublishVo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> String cover;</span><br><span class="line">    <span class="keyword">private</span> Integer lessonNum;</span><br><span class="line">    <span class="keyword">private</span> String subjectLevelOne;</span><br><span class="line">    <span class="keyword">private</span> String subjectLevelTwo;</span><br><span class="line">    <span class="keyword">private</span> String teacherName;</span><br><span class="line">    <span class="keyword">private</span> String price;<span class="comment">//只用于显示</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写mapper接口"><a href="#编写mapper接口" class="headerlink" title="编写mapper接口"></a>编写mapper接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">EduCourseMapper</span> <span class="keyword">extends</span> <span class="title">BaseMapper</span>&lt;<span class="title">EduCourse</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">CoursePublishVo <span class="title">getPublishCourseInfo</span><span class="params">(String courseId)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写mapper-xml"><a href="#编写mapper-xml" class="headerlink" title="编写mapper.xml"></a>编写mapper.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.ryan.eduservice.mapper.EduCourseMapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getPublishCourseInfo"</span> <span class="attr">resultType</span>=<span class="string">"com.ryan.eduservice.entity.vo.CoursePublishVo"</span>&gt;</span></span><br><span class="line">        SELECT</span><br><span class="line">            ec.id,ec.title,ec.cover,ec.lesson_num as lessonNum,</span><br><span class="line">            es1.title as subjectLevelOne,es2.title as subjectLevelTwo,</span><br><span class="line">            et.name as teacherName,ec.price</span><br><span class="line">        FROM edu_course ec</span><br><span class="line">                 LEFT JOIN edu_course_description ecd ON ec.id = ecd.id</span><br><span class="line">                 LEFT JOIN edu_teacher et ON ec.teacher_id = et.id</span><br><span class="line">                 LEFT JOIN edu_subject es1 ON ec.subject_parent_id = es1.id</span><br><span class="line">                 LEFT JOIN edu_subject es2 ON ec.subject_id = es2.id</span><br><span class="line">        WHERE ec.id = #&#123;courseId&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="service层接口-1"><a href="#service层接口-1" class="headerlink" title="service层接口"></a>service层接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">EduCourseMapper</span> <span class="keyword">extends</span> <span class="title">BaseMapper</span>&lt;<span class="title">EduCourse</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">CoursePublishVo <span class="title">getPublishCourseInfo</span><span class="params">(String courseId)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="service层实现类-1"><a href="#service层实现类-1" class="headerlink" title="service层实现类"></a>service层实现类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> CoursePublishVo <span class="title">getPublishCourseById</span><span class="params">(String courseId)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//如果是自己写的mapper，必须使用bashMapper，不能使用this调用方法</span></span><br><span class="line">    CoursePublishVo publishCourseInfo = baseMapper.getPublishCourseInfo(courseId);</span><br><span class="line">    <span class="keyword">return</span> publishCourseInfo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="controller层-1"><a href="#controller层-1" class="headerlink" title="controller层"></a>controller层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取最终发布的课程信息</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/getPublishCourseInfo/&#123;courseId&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">getPublishCourseInfo</span><span class="params">(@PathVariable String courseId)</span></span>&#123;</span><br><span class="line">    CoursePublishVo coursePublishVo = eduCourseService.getPublishCourseById(courseId);</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">"coursePublishVo"</span>,coursePublishVo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//发布课程</span></span><br><span class="line"><span class="comment">//从数据可表格中可以看到课程有一个状态，Draft表示未发布，Normal表示已发布</span></span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/publishCourse/&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">publishCourse</span><span class="params">(@PathVariable String id)</span></span>&#123;</span><br><span class="line">    EduCourse eduCourse = <span class="keyword">new</span> EduCourse();</span><br><span class="line">    eduCourse.setId(id);</span><br><span class="line">    eduCourse.setStatus(<span class="string">"Normal"</span>);</span><br><span class="line">    eduCourseService.updateById(eduCourse);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="swagger后端自测"><a href="#swagger后端自测" class="headerlink" title="swagger后端自测"></a>swagger后端自测</h4><p>测试发现报错，熟悉的异常：<code>BindingException</code></p><p>问题分析：</p><p>dao层编译后只有class文件，没有mapper.xml，因为maven工程在默认情况下src/main/java目录下的所有资源文件是不发布到target目录下的，</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200707124735.png" alt="img"></p><p>解决方案：</p><ul><li>直接将xml目录复制到target中（不通用，不推荐）</li><li>将mapper放到resource目录下（导致目录结构改变，不推荐）</li><li>配置pom.xml和application.yml文件，通用方法，推荐使用，具体操作如下</li></ul><p>在pom.xml中添加以下配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--项目打包时会将java目录中的*.xml文件也进行打包--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在application.yml中添加以下配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置mapper xml文件的路径</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:com/ryan/eduservice/mapper/xml/*.xml</span></span><br></pre></td></tr></table></figure><p>再次测试成功</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200707125123.png" alt="image-20200707125123561"></p><h3 id="前端开发"><a href="#前端开发" class="headerlink" title="前端开发"></a>前端开发</h3><h4 id="api-2"><a href="#api-2" class="headerlink" title="api"></a>api</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取发布课程内容</span></span><br><span class="line">getPublishCourseInfo(id)&#123;</span><br><span class="line">    <span class="keyword">return</span> request(&#123;</span><br><span class="line">        url: <span class="string">'/eduservice/edu-course/getPublishCourseInfo/'</span> + id,</span><br><span class="line">        method: <span class="string">'get'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//发布课程</span></span><br><span class="line">publishCourse(id)&#123;</span><br><span class="line">    <span class="keyword">return</span> request(&#123;</span><br><span class="line">        url: <span class="string">'/eduservice/edu-course/publishCourse/'</span> + id,</span><br><span class="line">        method: <span class="string">'post'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="publish-vue"><a href="#publish-vue" class="headerlink" title="publish.vue"></a>publish.vue</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div class&#x3D;&quot;app-container&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h2 style&#x3D;&quot;text-align: center;&quot;&gt;发布新课程&lt;&#x2F;h2&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-steps :active&#x3D;&quot;3&quot; process-status&#x3D;&quot;wait&quot; align-center style&#x3D;&quot;margin-bottom: 40px;&quot;&gt;</span><br><span class="line">      &lt;el-step title&#x3D;&quot;填写课程基本信息&quot;&#x2F;&gt;</span><br><span class="line">      &lt;el-step title&#x3D;&quot;创建课程大纲&quot;&#x2F;&gt;</span><br><span class="line">      &lt;el-step title&#x3D;&quot;发布课程&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;el-steps&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class&#x3D;&quot;ccInfo&quot;&gt;</span><br><span class="line">      &lt;img :src&#x3D;&quot;coursePublish.cover&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;main&quot;&gt;</span><br><span class="line">        &lt;h2&gt;&#123;&#123; coursePublish.title &#125;&#125;&lt;&#x2F;h2&gt;</span><br><span class="line">        &lt;p class&#x3D;&quot;gray&quot;&gt;&lt;span&gt;共&#123;&#123; coursePublish.lessonNum &#125;&#125;课时&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;p&gt;&lt;span&gt;所属分类：&#123;&#123; coursePublish.subjectLevelOne &#125;&#125; — &#123;&#123; coursePublish.subjectLevelTwo &#125;&#125;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;p&gt;课程讲师：&#123;&#123; coursePublish.teacherName &#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;h3 class&#x3D;&quot;red&quot;&gt;￥&#123;&#123; coursePublish.price &#125;&#125;&lt;&#x2F;h3&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;el-button @click&#x3D;&quot;previous&quot;&gt;返回修改&lt;&#x2F;el-button&gt;</span><br><span class="line">      &lt;el-button :disabled&#x3D;&quot;saveBtnDisabled&quot; type&#x3D;&quot;primary&quot; @click&#x3D;&quot;publish&quot;&gt;发布课程&lt;&#x2F;el-button&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import course from &#39;@&#x2F;api&#x2F;edu&#x2F;course&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">    data()&#123;</span><br><span class="line">        return&#123;</span><br><span class="line">            saveBtnDisabled: false,</span><br><span class="line">            courseId: &quot;&quot;,</span><br><span class="line">            coursePublish:&#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    created()&#123;</span><br><span class="line">      if(this.$route.params &amp;&amp; this.$route.params.id)&#123;</span><br><span class="line">        &#x2F;&#x2F;设置id</span><br><span class="line">        this.courseId &#x3D; this.$route.params.id</span><br><span class="line">        &#x2F;&#x2F;调用获取最终课程信息方法</span><br><span class="line">        this.getPublishCourse()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      &#x2F;&#x2F;获取最终课程信息方法</span><br><span class="line">      getPublishCourse()&#123;</span><br><span class="line">        course.getPublishCourseInfo(this.courseId)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            this.coursePublish &#x3D; response.data.coursePublishVo</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      previous()&#123;</span><br><span class="line">          this.$router.push(&#123;path:&quot;&#x2F;course&#x2F;chapter&#x2F;&quot; + this.courseId&#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      publish()&#123;</span><br><span class="line">        &#x2F;&#x2F;调用方法,提示信息，路由跳转</span><br><span class="line">        course.publishCourse(this.courseId)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            &#x2F;&#x2F;提示</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">                type: &#39;success&#39;,</span><br><span class="line">                message: &#39;发布成功!&#39;</span><br><span class="line">            &#125;);</span><br><span class="line">            &#x2F;&#x2F;跳转到第二步,注意需要携带id</span><br><span class="line">            this.$router.push(&#123;path: &#39;&#x2F;course&#x2F;list&#39;&#125;)</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.ccInfo &#123;</span><br><span class="line">    background: #f5f5f5;</span><br><span class="line">    padding: 20px;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">    border: 1px dashed #DDD;</span><br><span class="line">    margin-bottom: 40px;</span><br><span class="line">    position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.ccInfo img &#123;</span><br><span class="line">    background: #d6d6d6;</span><br><span class="line">    width: 500px;</span><br><span class="line">    height: 278px;</span><br><span class="line">    display: block;</span><br><span class="line">    float: left;</span><br><span class="line">    border: none;</span><br><span class="line">&#125;</span><br><span class="line">.ccInfo .main &#123;</span><br><span class="line">    margin-left: 520px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.ccInfo .main h2 &#123;</span><br><span class="line">    font-size: 28px;</span><br><span class="line">    margin-bottom: 30px;</span><br><span class="line">    line-height: 1;</span><br><span class="line">    font-weight: normal;</span><br><span class="line">&#125;</span><br><span class="line">.ccInfo .main p &#123;</span><br><span class="line">    margin-bottom: 10px;</span><br><span class="line">    word-wrap: break-word;</span><br><span class="line">    line-height: 24px;</span><br><span class="line">    max-height: 48px;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.ccInfo .main p &#123;</span><br><span class="line">    margin-bottom: 10px;</span><br><span class="line">    word-wrap: break-word;</span><br><span class="line">    line-height: 24px;</span><br><span class="line">    max-height: 48px;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line">.ccInfo .main h3 &#123;</span><br><span class="line">    left: 540px;</span><br><span class="line">    bottom: 20px;</span><br><span class="line">    line-height: 1;</span><br><span class="line">    font-size: 28px;</span><br><span class="line">    color: #d32f24;</span><br><span class="line">    font-weight: normal;</span><br><span class="line">    position: absolute;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><h4 id="测试效果"><a href="#测试效果" class="headerlink" title="测试效果"></a>测试效果</h4><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200707131920.png" alt="image-20200707131919988"></p><h2 id="5、课程列表开发"><a href="#5、课程列表开发" class="headerlink" title="5、课程列表开发"></a>5、课程列表开发</h2><h3 id="业务分析-1"><a href="#业务分析-1" class="headerlink" title="业务分析"></a>业务分析</h3><p>首先我们要知道这个课程列表想要怎么一个效果，具体跟讲师列表差不多的，主要分为查询、列表、分页</p><p>然后每个课程有编辑和删除的功能</p><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200707143334.png" alt="image-20200707143334254"></p><h3 id="后端开发-1"><a href="#后端开发-1" class="headerlink" title="后端开发"></a>后端开发</h3><h4 id="编写课程查询实体类封装"><a href="#编写课程查询实体类封装" class="headerlink" title="编写课程查询实体类封装"></a>编写课程查询实体类封装</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CourseQuery</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"课程名称，模糊查询"</span>)</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"发布状态，Draft表示为发布，Normal表示已发布"</span>)</span><br><span class="line">    <span class="keyword">private</span> String status;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"查询开始时间，如2020-06-01 10:00:00"</span>)</span><br><span class="line">    <span class="keyword">private</span> String begin;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"查询结束时间，如2020-07-01 10:00:10"</span>)</span><br><span class="line">    <span class="keyword">private</span> String end;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="service层接口-2"><a href="#service层接口-2" class="headerlink" title="service层接口"></a>service层接口</h4><p>EduCourseService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">List&lt;EduCourse&gt; <span class="title">getCourseByPage</span><span class="params">(<span class="keyword">long</span> current, <span class="keyword">long</span> pageSize)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">Page&lt;EduCourse&gt; <span class="title">getCourseCondition</span><span class="params">(<span class="keyword">long</span> current, <span class="keyword">long</span> pageSize, CourseQuery courseQuery)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteCourse</span><span class="params">(String courseId)</span></span>;</span><br></pre></td></tr></table></figure><p>EduVideoService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">EduVideoService</span> <span class="keyword">extends</span> <span class="title">IService</span>&lt;<span class="title">EduVideo</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">removeVideo</span><span class="params">(String courseId)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>EduChapterService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">removeChapter</span><span class="params">(String courseId)</span></span>;</span><br></pre></td></tr></table></figure><h4 id="service层实现类-2"><a href="#service层实现类-2" class="headerlink" title="service层实现类"></a>service层实现类</h4><p>EduCourseServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页查询课程</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;EduCourse&gt; <span class="title">getCourseByPage</span><span class="params">(<span class="keyword">long</span> current, <span class="keyword">long</span> pageSize)</span> </span>&#123;</span><br><span class="line">    Page&lt;EduCourse&gt; coursePage = <span class="keyword">new</span> Page&lt;&gt;(current, pageSize);</span><br><span class="line">    baseMapper.selectPage(coursePage, <span class="keyword">null</span>);</span><br><span class="line">    <span class="keyword">return</span> coursePage.getRecords();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Page&lt;EduCourse&gt; <span class="title">getCourseCondition</span><span class="params">(<span class="keyword">long</span> current, <span class="keyword">long</span> pageSize, CourseQuery courseQuery)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//创建page对象</span></span><br><span class="line">    Page&lt;EduCourse&gt; coursePage = <span class="keyword">new</span> Page&lt;&gt;(current, pageSize);</span><br><span class="line">    <span class="comment">//创建查询条件</span></span><br><span class="line">    QueryWrapper&lt;EduCourse&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    String title = courseQuery.getTitle();</span><br><span class="line">    String status = courseQuery.getStatus();</span><br><span class="line">    String begin = courseQuery.getBegin();</span><br><span class="line">    String end = courseQuery.getEnd();</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(title))&#123;</span><br><span class="line">        wrapper.like(<span class="string">"title"</span>, title);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(status))&#123;</span><br><span class="line">        wrapper.eq(<span class="string">"status"</span>, status);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(begin))&#123;</span><br><span class="line">        wrapper.ge(<span class="string">"gmt_create"</span>, begin);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(end))&#123;</span><br><span class="line">        wrapper.le(<span class="string">"gmt_modified"</span>, end);</span><br><span class="line">    &#125;</span><br><span class="line">    baseMapper.selectPage(coursePage, wrapper);</span><br><span class="line">    <span class="keyword">return</span> coursePage;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除课程信息</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteCourse</span><span class="params">(String courseId)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//删除视频</span></span><br><span class="line">    <span class="comment">//删除小节</span></span><br><span class="line">    eduVideoService.removeVideo(courseId);</span><br><span class="line">    <span class="comment">//删除章节</span></span><br><span class="line">    eduChapterService.removeChapter(courseId);</span><br><span class="line">    <span class="comment">//删除简介</span></span><br><span class="line">    eduCourseDescriptionService.removeById(courseId);</span><br><span class="line">    <span class="comment">//删除课程</span></span><br><span class="line">    <span class="keyword">int</span> count = baseMapper.deleteById(courseId);</span><br><span class="line">    <span class="keyword">if</span>(count == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> GuliException(<span class="number">20001</span>, <span class="string">"删除失败"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>EduVideoServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeVideo</span><span class="params">(String courseId)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//注意这里不能直接调用deleteById()方法删除，因为这里传的是courseId，而不是id</span></span><br><span class="line">    QueryWrapper&lt;EduVideo&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.eq(<span class="string">"course_Id"</span>, courseId);</span><br><span class="line">    baseMapper.delete(wrapper);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>EduChapterServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeChapter</span><span class="params">(String courseId)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//因为courseId不是id，所以不能直接deleteById</span></span><br><span class="line">    QueryWrapper&lt;EduChapter&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.eq(<span class="string">"course_id"</span>, courseId);</span><br><span class="line">    baseMapper.delete(wrapper);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="controller层-2"><a href="#controller层-2" class="headerlink" title="controller层"></a>controller层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询所有课程</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/getAllCourseInfo"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">getAllCourseInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line">    List&lt;EduCourse&gt; allList = eduCourseService.list(<span class="keyword">null</span>);</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">"allList"</span>,allList);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//分页查询</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/pageCourse/&#123;current&#125;/&#123;pageSize&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">getCoursePage</span><span class="params">(@PathVariable <span class="keyword">long</span> current, @PathVariable <span class="keyword">long</span> pageSize)</span></span>&#123;</span><br><span class="line">    List&lt;EduCourse&gt; pageList = eduCourseService.getCourseByPage(current, pageSize);</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">"pageList"</span>, pageList);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询所有课程列表（综合条件查询带分页）</span></span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/getCourseCondition/&#123;current&#125;/&#123;pageSize&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">getCourseCondition</span><span class="params">(@PathVariable <span class="keyword">long</span> current,</span></span></span><br><span class="line"><span class="function"><span class="params">                            @PathVariable <span class="keyword">long</span> pageSize,</span></span></span><br><span class="line"><span class="function"><span class="params">                            @RequestBody(required = <span class="keyword">false</span>)</span> CourseQuery courseQuery)</span>&#123;</span><br><span class="line">    Page&lt;EduCourse&gt; coursePage = eduCourseService.getCourseCondition(current, pageSize, courseQuery);</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">"total"</span>, coursePage.getTotal()).data(<span class="string">"rows"</span>, coursePage.getRecords());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="swagger测试-1"><a href="#swagger测试-1" class="headerlink" title="swagger测试"></a>swagger测试</h4><p>略</p><h3 id="前端开发-1"><a href="#前端开发-1" class="headerlink" title="前端开发"></a>前端开发</h3><h4 id="api-3"><a href="#api-3" class="headerlink" title="api"></a>api</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询所有课程列表</span></span><br><span class="line">getAllCourse()&#123;</span><br><span class="line">    <span class="keyword">return</span> request(&#123;</span><br><span class="line">        url: <span class="string">'/eduservice/edu-course/getAllCourseInfo'</span>,</span><br><span class="line">        method: <span class="string">'get'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//分页查询课程</span></span><br><span class="line">getPageCourse(current,pageSize)&#123;</span><br><span class="line">    <span class="keyword">return</span> request(&#123;</span><br><span class="line">        url: <span class="string">`/eduservice/edu-course/pageCourse/<span class="subst">$&#123;current&#125;</span>/<span class="subst">$&#123;pageSize&#125;</span>`</span>,</span><br><span class="line">        method: <span class="string">'get'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//综合条件分页查询</span></span><br><span class="line">getCourseCondition(current,pageSize,courseQuery)&#123;</span><br><span class="line">    <span class="keyword">return</span> request(&#123;</span><br><span class="line">        url: <span class="string">`/eduservice/edu-course/getCourseCondition/<span class="subst">$&#123;current&#125;</span>/<span class="subst">$&#123;pageSize&#125;</span>`</span>,</span><br><span class="line">        method: <span class="string">'post'</span>,</span><br><span class="line">        data: courseQuery</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//删除课程</span></span><br><span class="line">deleteCourseById(courseId)&#123;</span><br><span class="line">    <span class="keyword">return</span> request(&#123;</span><br><span class="line">        url: <span class="string">`/eduservice/edu-course/deleteCourse/<span class="subst">$&#123;courseId&#125;</span>`</span>,</span><br><span class="line">        method: <span class="string">'delete'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="list-vue"><a href="#list-vue" class="headerlink" title="list.vue"></a>list.vue</h4><p>提示：页面和teacher的list差不多，直接复制过来修改一下即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;app-container&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--查询表单--&gt;</span><br><span class="line">    &lt;el-form :inline&#x3D;&quot;true&quot; class&#x3D;&quot;demo-form-inline&quot;&gt;</span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;el-input v-model&#x3D;&quot;courseQuery.title&quot; placeholder&#x3D;&quot;课程名称&quot;&#x2F;&gt;</span><br><span class="line">      &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;el-select v-model&#x3D;&quot;courseQuery.status&quot; clearable placeholder&#x3D;&quot;发布状态&quot;&gt;</span><br><span class="line">          &lt;el-option :value &#x3D; &#39;Normal&#39; label&#x3D;&quot;已发布&quot;&#x2F;&gt;</span><br><span class="line">          &lt;el-option :value &#x3D; &#39;Draft&#39; label&#x3D;&quot;未发布&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;el-select&gt;</span><br><span class="line">      &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-form-item label&#x3D;&quot;添加时间&quot;&gt;</span><br><span class="line">        &lt;el-date-picker</span><br><span class="line">          v-model&#x3D;&quot;courseQuery.begin&quot;</span><br><span class="line">          type&#x3D;&quot;datetime&quot;</span><br><span class="line">          placeholder&#x3D;&quot;选择开始时间&quot;</span><br><span class="line">          value-format&#x3D;&quot;yyyy-MM-dd HH:mm:ss&quot;</span><br><span class="line">          default-time&#x3D;&quot;00:00:00&quot;</span><br><span class="line">        &#x2F;&gt;</span><br><span class="line">      &lt;&#x2F;el-form-item&gt;</span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;el-date-picker</span><br><span class="line">          v-model&#x3D;&quot;courseQuery.end&quot;</span><br><span class="line">          type&#x3D;&quot;datetime&quot;</span><br><span class="line">          placeholder&#x3D;&quot;选择截止时间&quot;</span><br><span class="line">          value-format&#x3D;&quot;yyyy-MM-dd HH:mm:ss&quot;</span><br><span class="line">          default-time&#x3D;&quot;00:00:00&quot;</span><br><span class="line">        &#x2F;&gt;</span><br><span class="line">      &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-button type&#x3D;&quot;primary&quot; icon&#x3D;&quot;el-icon-search&quot; @click&#x3D;&quot;getList()&quot;&gt;查询&lt;&#x2F;el-button&gt;</span><br><span class="line">      &lt;el-button type&#x3D;&quot;default&quot; @click&#x3D;&quot;resetData()&quot;&gt;清空&lt;&#x2F;el-button&gt;</span><br><span class="line">    &lt;&#x2F;el-form&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 表格 --&gt;</span><br><span class="line">    &lt;el-table</span><br><span class="line">      :data&#x3D;&quot;list&quot;</span><br><span class="line">      border</span><br><span class="line">      fit</span><br><span class="line">      highlight-current-row&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-table-column</span><br><span class="line">        label&#x3D;&quot;序号&quot;</span><br><span class="line">        width&#x3D;&quot;70&quot;</span><br><span class="line">        align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">        &lt;template slot-scope&#x3D;&quot;scope&quot;&gt;</span><br><span class="line">          &#123;&#123; (current - 1) * pageSize + scope.$index + 1 &#125;&#125;</span><br><span class="line">        &lt;&#x2F;template&gt;</span><br><span class="line">      &lt;&#x2F;el-table-column&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-table-column prop&#x3D;&quot;title&quot; label&#x3D;&quot;名称&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-table-column label&#x3D;&quot;发布状态&quot; width&#x3D;&quot;80&quot;&gt;</span><br><span class="line">        &lt;!--scope就是整个表格的域，scope.row就是每条记录--&gt;</span><br><span class="line">        &lt;template slot-scope&#x3D;&quot;scope&quot;&gt;</span><br><span class="line">          &#123;&#123; scope.row.status &#x3D;&#x3D;&#x3D; &#39;Normal&#39;?&#39;已发布&#39;:&#39;未发布&#39; &#125;&#125;</span><br><span class="line">        &lt;&#x2F;template&gt;</span><br><span class="line">      &lt;&#x2F;el-table-column&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-table-column prop&#x3D;&quot;lessonNum&quot; label&#x3D;&quot;课时数&quot;  width&#x3D;&quot;80&quot; &#x2F;&gt;</span><br><span class="line">      &lt;el-table-column prop&#x3D;&quot;price&quot; label&#x3D;&quot;价格&quot;  width&#x3D;&quot;80&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-table-column prop&#x3D;&quot;gmtCreate&quot; label&#x3D;&quot;添加时间&quot; width&#x3D;&quot;160&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-table-column prop&#x3D;&quot;buyCount&quot; label&#x3D;&quot;购买数&quot; width&#x3D;&quot;80&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-table-column label&#x3D;&quot;操作&quot; width&#x3D;&quot;200&quot; align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">        &lt;template slot-scope&#x3D;&quot;scope&quot;&gt;</span><br><span class="line">          &lt;router-link :to&#x3D;&quot;&#39;&#x2F;course&#x2F;info&#x2F;&#39;+scope.row.id&quot;&gt;</span><br><span class="line">            &lt;el-button type&#x3D;&quot;primary&quot; size&#x3D;&quot;mini&quot; icon&#x3D;&quot;el-icon-edit&quot;&gt;修改课程基本信息&lt;&#x2F;el-button&gt;</span><br><span class="line">          &lt;&#x2F;router-link&gt;</span><br><span class="line">          &lt;router-link :to&#x3D;&quot;&#39;&#x2F;course&#x2F;chapter&#x2F;&#39;+scope.row.id&quot;&gt;</span><br><span class="line">            &lt;el-button type&#x3D;&quot;primary&quot; size&#x3D;&quot;mini&quot; icon&#x3D;&quot;el-icon-edit&quot;&gt;修改课程章节信息&lt;&#x2F;el-button&gt;</span><br><span class="line">          &lt;&#x2F;router-link&gt;</span><br><span class="line">          &lt;el-button type&#x3D;&quot;danger&quot; size&#x3D;&quot;mini&quot; icon&#x3D;&quot;el-icon-delete&quot; @click&#x3D;&quot;removeCourseById(scope.row.id)&quot;&gt;删除课程&lt;&#x2F;el-button&gt;</span><br><span class="line">        &lt;&#x2F;template&gt;</span><br><span class="line">      &lt;&#x2F;el-table-column&gt;</span><br><span class="line">    &lt;&#x2F;el-table&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 分页 --&gt;</span><br><span class="line">    &lt;el-pagination</span><br><span class="line">      :current-page&#x3D;&quot;current&quot;</span><br><span class="line">      :page-size&#x3D;&quot;pageSize&quot;</span><br><span class="line">      :total&#x3D;&quot;total&quot;</span><br><span class="line">      style&#x3D;&quot;padding: 30px 0; text-align: center;&quot;</span><br><span class="line">      layout&#x3D;&quot;total, prev, pager, next, jumper&quot;</span><br><span class="line">      @current-change&#x3D;&quot;getList&quot;</span><br><span class="line">    &#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">&#x2F;&#x2F;引入调用teache.js文件</span><br><span class="line">import course from &#39;@&#x2F;api&#x2F;edu&#x2F;course&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">  &#x2F;&#x2F;在这里编写核心代码，固定格式</span><br><span class="line">  data()&#123;&#x2F;&#x2F;定义变量和初始值</span><br><span class="line">    return&#123;&#x2F;&#x2F;参数以及查询出来的数据</span><br><span class="line">      list: null,&#x2F;&#x2F;查询结果</span><br><span class="line">      current: 1,&#x2F;&#x2F;当前页</span><br><span class="line">      pageSize: 3,&#x2F;&#x2F;每页记录数</span><br><span class="line">      total: 0,&#x2F;&#x2F;总记录数</span><br><span class="line">      courseQuery: &#123;</span><br><span class="line">          title: &#39;&#39;,</span><br><span class="line">          status: &#39;&#39;,</span><br><span class="line">          begin: &#39;&#39;,</span><br><span class="line">          end: &#39;&#39;</span><br><span class="line">      &#125;&#x2F;&#x2F;条件封装对象</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created()&#123;&#x2F;&#x2F;页面渲染之前执行，一般调用methods中定义的方法</span><br><span class="line">    &#x2F;&#x2F;一般都是先写methods，最后再在此调用方法</span><br><span class="line">    this.getList()</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;&#x2F;&#x2F;创建具体的方法，调用teacher.js中定义的方法</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;按照我们一开始学习的方法，是直接在这里使用axios.post.....</span><br><span class="line">    &#x2F;&#x2F;现在我们直接调用teacher.js的中的方法，而teacher.js中又封装了axios</span><br><span class="line">    getList(current &#x3D; 1)&#123;&#x2F;&#x2F;es6规范定义方法</span><br><span class="line">      this.current &#x3D; current</span><br><span class="line">      course.getCourseCondition(this.current, this.pageSize, this.courseQuery)</span><br><span class="line">        .then(response &#x3D;&gt; &#123;</span><br><span class="line">          &#x2F;&#x2F;console.log(response)&#x2F;&#x2F;测试请求结果</span><br><span class="line">          this.list &#x3D; response.data.rows</span><br><span class="line">          this.total &#x3D; response.data.total</span><br><span class="line">        &#125;)&#x2F;&#x2F;请求成功</span><br><span class="line">        .catch(error &#x3D;&gt; &#123;</span><br><span class="line">          console.log(error)</span><br><span class="line">        &#125;)&#x2F;&#x2F;请求失败</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x2F;&#x2F;清空查询条件</span><br><span class="line">    resetData()&#123;</span><br><span class="line">      &#x2F;&#x2F;分两步，清空数据+查询所有</span><br><span class="line">      &#x2F;&#x2F;清空数据（双向绑定）</span><br><span class="line">      this.courseQuery &#x3D; &#123;&#125;</span><br><span class="line">      &#x2F;&#x2F;查询所有</span><br><span class="line">      this.getList()</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x2F;&#x2F;删除课程方法</span><br><span class="line">    removeCourseById(id)&#123;</span><br><span class="line">        &#x2F;&#x2F;为了用户体验，应该弹框提醒</span><br><span class="line">      this.$confirm(&#39;确定需要删除此课程所有信息吗？&#39;, &#39;提示&#39;, &#123;</span><br><span class="line">          confirmButtonText: &#39;确定&#39;,</span><br><span class="line">          cancelButtonText: &#39;取消&#39;,</span><br><span class="line">          type: &#39;warning&#39;</span><br><span class="line">        &#125;).then(() &#x3D;&gt; &#123;&#x2F;&#x2F;点击确定执行</span><br><span class="line">          course.deleteCourseById(id).then(response &#x3D;&gt; &#123;</span><br><span class="line">            this.$message(&#123;&#x2F;&#x2F;删除成功后弹框</span><br><span class="line">            type: &#39;success&#39;,</span><br><span class="line">            message: &#39;删除课程成功!&#39;</span><br><span class="line">            &#125;);</span><br><span class="line">            &#x2F;&#x2F;删除成功后需要重新查询所有</span><br><span class="line">            this.getList()</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p><img src= "/img/loading.gif" data-src="https://my-pic-bed-01.oss-cn-shenzhen.aliyuncs.com/img/20200707161621.png" alt="image-20200707161621081"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;课程开发模块&quot;&gt;&lt;a href=&quot;#课程开发模块&quot; class=&quot;headerlink&quot; title=&quot;课程开发模块&quot;&gt;&lt;/a&gt;课程开发模块&lt;/h1&gt;&lt;h2 id=&quot;1、添加课程后端开发&quot;&gt;&lt;a href=&quot;#1、添加课程后端开发&quot; class=&quot;headerli
      
    
    </summary>
    
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="springboot" scheme="http://yoursite.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>谷粒学院实战day03—阿里云对象存储+niginx+easyexcel+课程分类模块开发</title>
    <link href="http://yoursite.com/2020/07/04/%E5%AD%A6%E9%99%A2%E5%AE%9E%E6%88%98day03%E2%80%94%E9%98%BF%E9%87%8C%E4%BA%91%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8-niginx-easyexcel-%E8%AF%BE%E7%A8%8B%E5%88%86%E7%B1%BB%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91/"/>
    <id>http://yoursite.com/2020/07/04/%E5%AD%A6%E9%99%A2%E5%AE%9E%E6%88%98day03%E2%80%94%E9%98%BF%E9%87%8C%E4%BA%91%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8-niginx-easyexcel-%E8%AF%BE%E7%A8%8B%E5%88%86%E7%B1%BB%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91/</id>
    <published>2020-07-03T17:09:00.000Z</published>
    <updated>2020-07-09T15:54:04.234Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、阿里云对象存储OSS"><a href="#1、阿里云对象存储OSS" class="headerlink" title="1、阿里云对象存储OSS"></a>1、阿里云对象存储OSS</h2><h3 id="1-1、简介"><a href="#1-1、简介" class="headerlink" title="1.1、简介"></a>1.1、简介</h3><p>在阿里云官网中开通对象存储oss</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/03/jvqs9GRYAgd8Ppa.png" alt="image-20200703135742826"></p><p>开通后打开控制台，可创建一个bucket</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/03/Rx1HsiS2QnyTFEz.png" alt="image-20200703135848438"></p><p>如需获取keyid等私人信息，可以点击这里</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/03/935nwQS2NxHbjRa.png" alt="image-20200703135937298"></p><p>在实际开发中除管理员外其他员工一般都没有权限去访问以上这些服务的，而我们一般是通过java代码去实现相关操作，具体怎么操作的呢？</p><h3 id="1-2、springboot整合oss—头像上传"><a href="#1-2、springboot整合oss—头像上传" class="headerlink" title="1.2、springboot整合oss—头像上传"></a>1.2、springboot整合oss—头像上传</h3><h4 id="1-2-1、创建子模块service-oss"><a href="#1-2-1、创建子模块service-oss" class="headerlink" title="1.2.1、创建子模块service_oss"></a>1.2.1、创建子模块service_oss</h4><p>导入相关依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--阿里云对象存储oss--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun.oss<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-sdk-oss<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--日期工具--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-2-2、配置yml文件"><a href="#1-2-2、配置yml文件" class="headerlink" title="1.2.2、配置yml文件"></a>1.2.2、配置yml文件</h4><p>提示：相关信息都可以通过阿里云对象存储oss控制台查到</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8002</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-oss</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line"><span class="comment"># 阿里云oss</span></span><br><span class="line"><span class="comment"># 注意不同的服务器，地址可能会不一样,涉及到安全问题，这里就不写出来了</span></span><br><span class="line"><span class="attr">aliyun:</span></span><br><span class="line">  <span class="attr">oss:</span></span><br><span class="line">    <span class="attr">file:</span></span><br><span class="line">      <span class="attr">endpoint:</span> <span class="string">oss-cn-shenzhen.aliyuncs.com</span></span><br><span class="line">      <span class="attr">keyid:</span> <span class="string">your</span> <span class="string">keyid</span></span><br><span class="line">      <span class="attr">keysecret:</span> <span class="string">your</span> <span class="string">keysecret</span></span><br><span class="line">      <span class="attr">bucketname:</span> <span class="string">ryan-guli-01</span></span><br></pre></td></tr></table></figure><h4 id="1-2-3、编写主启动类"><a href="#1-2-3、编写主启动类" class="headerlink" title="1.2.3、编写主启动类"></a>1.2.3、编写主启动类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注意因为service工程的依赖中包含了datasource依赖，这里不需要用到，也没配置相关数据库</span></span><br><span class="line"><span class="comment">//所以为了避免报错，此工程要配置不加载DataSource的自动装配</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span>(exclude = DataSourceAutoConfiguration<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">ComponentScan</span>(<span class="title">basePackages</span> </span>= <span class="string">"com.ryan"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OssApplication</span> </span>&#123;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">           SpringApplication.run(OssApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>小结：不需要用到数据库，就不要加载数据源驱动，否则会报错</p><h4 id="1-2-4、编写常量工具类"><a href="#1-2-4、编写常量工具类" class="headerlink" title="1.2.4、编写常量工具类"></a>1.2.4、编写常量工具类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.oss.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.InitializingBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">//为什么要spring接管呢？因为只要接管了，只要项目启动，就会去读取配置文件数据，然后执行接口的方法</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConstancePropertiesUtils</span> <span class="keyword">implements</span> <span class="title">InitializingBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//此工具类主要是为了读取到配置文件对应的值，然后赋值给常量，方便其他地方调用的时候直接通过类名.常量就可以</span></span><br><span class="line">    <span class="comment">//那么怎么读取配置文件中的对应的值呢？之前学过可以通过注解@Value($&#123;&#125;)来读取,注意千万别忘了$&#123;&#125;</span></span><br><span class="line">    <span class="meta">@Value</span>(value = <span class="string">"$&#123;aliyun.oss.file.endpoint&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String endPoint;</span><br><span class="line">    <span class="meta">@Value</span>(value = <span class="string">"$&#123;aliyun.oss.file.keyid&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String keyId;</span><br><span class="line">    <span class="meta">@Value</span>(value = <span class="string">"$&#123;aliyun.oss.file.keysecret&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String keySecret;</span><br><span class="line">    <span class="meta">@Value</span>(value = <span class="string">"$&#123;aliyun.oss.file.bucketname&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String bucketName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//此工具类交给spring来管理，在上面读取完配置文件的时候应该执行下一步，这时候需要实现InitializingBean接口及其方法</span></span><br><span class="line">    <span class="comment">//先定义常量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String END_POINT;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String KEY_ID;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String KEY_SECRET;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String BUCKET_NAME;</span><br><span class="line">    <span class="comment">//然后赋值</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterPropertiesSet</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        END_POINT = endPoint;</span><br><span class="line">        KEY_ID = keyId;</span><br><span class="line">        KEY_SECRET = keySecret;</span><br><span class="line">        BUCKET_NAME = bucketName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>小结：为方便开发，一些常量可以使用类.常量名来使用</p><h4 id="1-2-5、编写sevice层"><a href="#1-2-5、编写sevice层" class="headerlink" title="1.2.5、编写sevice层"></a>1.2.5、编写sevice层</h4><p>service接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OssService</span> </span>&#123;</span><br><span class="line">    <span class="function">String <span class="title">uploadAvatar</span><span class="params">(MultipartFile file)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>service实现类</p><p>提示：代码基本都是固定的，我们可以在官方文档中看到，最后再优化即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OssServiceImpl</span> <span class="keyword">implements</span> <span class="title">OssService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">uploadAvatar</span><span class="params">(MultipartFile file)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//实现上传头像的方法</span></span><br><span class="line">        <span class="comment">//从阿里云官方文档中可以看是怎样上传的（这里采用的应该是上传文件流的方式）</span></span><br><span class="line">        <span class="comment">// Endpoint以杭州为例，其它Region请按实际情况填写。</span></span><br><span class="line">        String endpoint = ConstancePropertiesUtils.END_POINT;</span><br><span class="line">        String accessKeyId = ConstancePropertiesUtils.KEY_ID;</span><br><span class="line">        String accessKeySecret = ConstancePropertiesUtils.KEY_SECRET;</span><br><span class="line">        String bucketName = ConstancePropertiesUtils.BUCKET_NAME;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">// 创建OSSClient实例。</span></span><br><span class="line">            OSS ossClient = <span class="keyword">new</span> OSSClientBuilder().build(endpoint, accessKeyId, accessKeySecret);</span><br><span class="line">            <span class="comment">//获取文件名称</span></span><br><span class="line">            String fileName = file.getOriginalFilename();</span><br><span class="line">            <span class="comment">//为了保证所有的文件名不重复（以防覆盖）,可以采用uuid拼接文件名,注意需要toString，并将短横线去掉</span></span><br><span class="line">            String uuid = UUID.randomUUID().toString().replaceAll(<span class="string">"-"</span>, <span class="string">""</span>);</span><br><span class="line">            fileName = uuid + fileName;</span><br><span class="line">            <span class="comment">//为了方便头像管理，我们可以采用日期来分类（年/月/日/fileName），也就是使用日期作为目录管理头像</span></span><br><span class="line">            String datePath = <span class="keyword">new</span> DateTime().toString(<span class="string">"yyyy/MM/dd"</span>);<span class="comment">//注意别忘了是toString哦</span></span><br><span class="line">            <span class="comment">//拼接的时候别忘了添加“/”</span></span><br><span class="line">            fileName = datePath + <span class="string">"/"</span> + fileName;</span><br><span class="line">            <span class="comment">// 上传文件流。</span></span><br><span class="line">            InputStream inputStream = file.getInputStream();</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 参数1：bucket名称</span></span><br><span class="line"><span class="comment">             * 参数2：上传的文件名，可携带路径（/）</span></span><br><span class="line"><span class="comment">             * 参数3：文件流</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            ossClient.putObject(bucketName, fileName, inputStream);</span><br><span class="line">            <span class="comment">// 关闭OSSClient。</span></span><br><span class="line">            ossClient.shutdown();</span><br><span class="line">            <span class="comment">//上传完成之后，需要将对应的url返回,这个url的格式是固定的,我们动态拼接一下即可</span></span><br><span class="line">            String url = <span class="string">"https://"</span> + bucketName + <span class="string">"."</span> + endpoint + <span class="string">"/"</span> + fileName;</span><br><span class="line">            <span class="keyword">return</span> url;</span><br><span class="line">            <span class="comment">//最后启动项目，使用swagger来测试下</span></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>小结：注意两个问题：</p><ul><li>预防文件名重复，可以使用uuid</li><li>为了方便管理，可以使用时间进行分类</li></ul><h4 id="1-2-6、swagger测试"><a href="#1-2-6、swagger测试" class="headerlink" title="1.2.6、swagger测试"></a>1.2.6、swagger测试</h4><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/03/zAOTE5JDxqvkjHc.png" alt="image-20200703141026005"></p><p>最后成功返回url则表明上传成功，具体可以到对象存储oss的文件管理中查看到</p><h2 id="2、Nginx"><a href="#2、Nginx" class="headerlink" title="2、Nginx"></a>2、Nginx</h2><h3 id="2-1、简介"><a href="#2-1、简介" class="headerlink" title="2.1、简介"></a>2.1、简介</h3><p>Nginx是一款<a href="https://baike.baidu.com/item/轻量级/10002835" target="_blank" rel="noopener">轻量级</a>的<a href="https://baike.baidu.com/item/Web/150564" target="_blank" rel="noopener">Web</a> 服务器/<a href="https://baike.baidu.com/item/反向代理/7793488" target="_blank" rel="noopener">反向代理</a>服务器及<a href="https://baike.baidu.com/item/电子邮件/111106" target="_blank" rel="noopener">电子邮件</a>（IMAP/POP3）代理服务器，在BSD-like 协议下发行。其特点是占有内存少，<a href="https://baike.baidu.com/item/并发/11024806" target="_blank" rel="noopener">并发</a>能力强。</p><p>作用，总结三点：</p><ul><li>请求转发</li><li>负载均衡</li><li>动静分离</li></ul><h3 id="2-2、下载安装（这里以windows为例）"><a href="#2-2、下载安装（这里以windows为例）" class="headerlink" title="2.2、下载安装（这里以windows为例）"></a>2.2、下载安装（这里以windows为例）</h3><p>略</p><h3 id="2-3、运行"><a href="#2-3、运行" class="headerlink" title="2.3、运行"></a>2.3、运行</h3><p>进入到安装目录，建议使用命令窗口打开</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D:\environment\nginx\nginx-1.18.0&gt;nginx.exe</span><br><span class="line"><span class="meta">#</span><span class="bash"> 停止服务</span></span><br><span class="line">nginx -s stop</span><br></pre></td></tr></table></figure><h3 id="2-4、配置"><a href="#2-4、配置" class="headerlink" title="2.4、配置"></a>2.4、配置</h3><p>打开nginx.conf，对http这一块的服务进行配置，主要配置以下几个方面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       <span class="number">81</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       <span class="number">9001</span>;</span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    location ~ /eduoss/ &#123;</span><br><span class="line">        proxy_pass http:<span class="comment">//localhost:8002;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ /eduservice/ &#123;</span><br><span class="line">        proxy_pass http:<span class="comment">//localhost:8001;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完成后记得重启</p><h3 id="2-5、测试"><a href="#2-5、测试" class="headerlink" title="2.5、测试"></a>2.5、测试</h3><p>将前端的dev.env.js的BASH_API改为nginx的url</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BASE_API: <span class="string">'"http://localhost:9001"'</span>,</span><br></pre></td></tr></table></figure><p>前后端都运行起来，打开浏览器控制台，随便点一个请求，可以看到最后都是经过9001去转发请求的了</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/03/dyIOEXx7U8h6mRr.png" alt="image-20200703142309736"></p><h2 id="3、前端头像上传开发"><a href="#3、前端头像上传开发" class="headerlink" title="3、前端头像上传开发"></a>3、前端头像上传开发</h2><h3 id="3-1、导入组件"><a href="#3-1、导入组件" class="headerlink" title="3.1、导入组件"></a>3.1、导入组件</h3><p>为了时页面更加美观，从其他地方直接复制了两个组件：ImageCropper以及PanThumb</p><p>在save.vue中导入以上两个组件，并且需要声明两个组件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入头像上传的相关组件</span></span><br><span class="line">  <span class="keyword">import</span> ImageCropper <span class="keyword">from</span> <span class="string">'@/components/ImageCropper'</span></span><br><span class="line">  <span class="keyword">import</span> PanThumb <span class="keyword">from</span> <span class="string">'@/components/PanThumb'</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">//同时还要声明组件</span></span><br><span class="line">    components: &#123;ImageCropper, PanThumb&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2、导入表格"><a href="#3-2、导入表格" class="headerlink" title="3.2、导入表格"></a>3.2、导入表格</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 讲师头像 直接复制粘贴过来的组件（ImageCropper以及PanThumb）--&gt;</span><br><span class="line">     &lt;el-form-item label=<span class="string">"讲师头像"</span>&gt;</span><br><span class="line">       </span><br><span class="line">       &lt;!-- 头衔缩略图 --&gt;</span><br><span class="line">       &lt;pan-thumb :image=<span class="string">"teacher.avatar"</span>/&gt;</span><br><span class="line">       &lt;!-- 文件上传按钮，当点击更换头像时，imagecropperShow为<span class="literal">true</span>也就是现实弹框（参考下面的v-show） --&gt;</span><br><span class="line">       &lt;el-button type=<span class="string">"primary"</span> icon=<span class="string">"el-icon-upload"</span> @click=<span class="string">"imagecropperShow=true"</span>&gt;更换头像</span><br><span class="line">       &lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">       &lt;!--</span></span><br><span class="line"><span class="regexp">       v-show：是否显示上传组件</span></span><br><span class="line"><span class="regexp">       :key：类似于id，如果一个页面多个图片上传控件，可以做区分</span></span><br><span class="line"><span class="regexp">       :url：后台上传的url地址</span></span><br><span class="line"><span class="regexp">       @close：关闭上传组件</span></span><br><span class="line"><span class="regexp">       @crop-upload-success：上传成功后的回调 </span></span><br><span class="line"><span class="regexp">         &lt;input type="file" name="file"/</span>&gt;</span><br><span class="line">       --&gt;</span><br><span class="line">       &lt;image-cropper</span><br><span class="line">                     v-show=<span class="string">"imagecropperShow"</span></span><br><span class="line">                     :width=<span class="string">"300"</span></span><br><span class="line">                     :height=<span class="string">"300"</span></span><br><span class="line">                     :key=<span class="string">"imagecropperKey"</span></span><br><span class="line">                     :url=<span class="string">"BASE_API+'/eduoss/fileupload'"</span></span><br><span class="line">                     field=<span class="string">"file"</span></span><br><span class="line">                     @close=<span class="string">"close"</span></span><br><span class="line">                     @crop-upload-success=<span class="string">"cropSuccess"</span>/&gt;</span><br><span class="line">     &lt;<span class="regexp">/el-form-item&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-3、定义默认值"><a href="#3-3、定义默认值" class="headerlink" title="3.3、定义默认值"></a>3.3、定义默认值</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">imagecropperShow: <span class="literal">false</span>,<span class="comment">//上传弹框组件是否显示</span></span><br><span class="line">imagecropperKey: <span class="number">0</span>,<span class="comment">//上传组件key值</span></span><br><span class="line">BASE_API: process.env.BASE_API, <span class="comment">//获取dev.env.js里面地址</span></span><br></pre></td></tr></table></figure><h3 id="3-4、编写单击事件"><a href="#3-4、编写单击事件" class="headerlink" title="3.4、编写单击事件"></a>3.4、编写单击事件</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//关闭上传头像组件方法</span></span><br><span class="line">close()&#123;</span><br><span class="line">   <span class="keyword">this</span>.imagecropperShow = <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//保存更换头像方法</span></span><br><span class="line">cropSuccess(data)&#123;<span class="comment">//传参，也就是组件中的数据</span></span><br><span class="line">    <span class="comment">//先关闭组件</span></span><br><span class="line">    <span class="keyword">this</span>.imagecropperShow = <span class="literal">false</span></span><br><span class="line">    <span class="comment">//然后赋值,这里的组件其实已经封装了response等操作</span></span><br><span class="line">    <span class="keyword">this</span>.teacher.avatar = data.url</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终的save.vue代码如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"app-container"</span>&gt;</span><br><span class="line">    &lt;el-form label-width=<span class="string">"120px"</span>&gt;</span><br><span class="line">      &lt;el-form-item label=<span class="string">"讲师名称"</span>&gt;</span><br><span class="line">        &lt;el-input v-model=<span class="string">"teacher.name"</span>/&gt;</span><br><span class="line">      &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">      &lt;el-form-item label="讲师排序"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-input-number v-model="teacher.sort" controls-position="right" min='0'/</span>&gt;</span><br><span class="line">      &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">      &lt;el-form-item label="讲师头衔"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-select v-model="teacher.level" clearable placeholder="请选择"&gt;</span></span><br><span class="line"><span class="regexp">          &lt;el-option :value="1" label="高级讲师"/</span>&gt;</span><br><span class="line">          &lt;el-option :value=<span class="string">"2"</span> label=<span class="string">"首席讲师"</span>/&gt;</span><br><span class="line">        &lt;<span class="regexp">/el-select&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=<span class="string">"讲师资历"</span>&gt;</span><br><span class="line">        &lt;el-input v-model=<span class="string">"teacher.career"</span>/&gt;</span><br><span class="line">      &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">      &lt;el-form-item label="讲师简介"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-input v-model="teacher.intro" :rows="10" type="textarea"/</span>&gt;</span><br><span class="line">      &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">      &lt;!-- 讲师头像：TODO --&gt;</span></span><br><span class="line"><span class="regexp">      &lt;!-- 讲师头像 直接复制粘贴过来的组件（ImageCropper以及PanThumb）--&gt;</span></span><br><span class="line"><span class="regexp">      &lt;el-form-item label="讲师头像"&gt;</span></span><br><span class="line"><span class="regexp">        </span></span><br><span class="line"><span class="regexp">        &lt;!-- 头衔缩略图 --&gt;</span></span><br><span class="line"><span class="regexp">        &lt;pan-thumb :image="teacher.avatar"/</span>&gt;</span><br><span class="line">        &lt;!-- 文件上传按钮，当点击更换头像时，imagecropperShow为<span class="literal">true</span>也就是现实弹框（参考下面的v-show） --&gt;</span><br><span class="line">        &lt;el-button type=<span class="string">"primary"</span> icon=<span class="string">"el-icon-upload"</span> @click=<span class="string">"imagecropperShow=true"</span>&gt;更换头像</span><br><span class="line">        &lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        &lt;!--</span></span><br><span class="line"><span class="regexp">        v-show：是否显示上传组件</span></span><br><span class="line"><span class="regexp">        :key：类似于id，如果一个页面多个图片上传控件，可以做区分</span></span><br><span class="line"><span class="regexp">        :url：后台上传的url地址</span></span><br><span class="line"><span class="regexp">        @close：关闭上传组件</span></span><br><span class="line"><span class="regexp">        @crop-upload-success：上传成功后的回调 </span></span><br><span class="line"><span class="regexp">          &lt;input type="file" name="file"/</span>&gt;</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;image-cropper</span><br><span class="line">                      v-show=<span class="string">"imagecropperShow"</span></span><br><span class="line">                      :width=<span class="string">"300"</span></span><br><span class="line">                      :height=<span class="string">"300"</span></span><br><span class="line">                      :key=<span class="string">"imagecropperKey"</span></span><br><span class="line">                      :url=<span class="string">"BASE_API+'/eduoss/fileupload'"</span></span><br><span class="line">                      field=<span class="string">"file"</span></span><br><span class="line">                      @close=<span class="string">"close"</span></span><br><span class="line">                      @crop-upload-success=<span class="string">"cropSuccess"</span>/&gt;</span><br><span class="line">      &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">      &lt;el-form-item&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-button :disabled="saveBtnDisabled" type="primary" @click="saveOrUpdate"&gt;保存&lt;/</span>el-button&gt;</span><br><span class="line">      &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>el-form&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">import</span> teacher <span class="keyword">from</span> <span class="string">'@/api/edu/teacher'</span></span><br><span class="line">  <span class="comment">//导入头像上传的相关组件</span></span><br><span class="line">  <span class="keyword">import</span> ImageCropper <span class="keyword">from</span> <span class="string">'@/components/ImageCropper'</span></span><br><span class="line">  <span class="keyword">import</span> PanThumb <span class="keyword">from</span> <span class="string">'@/components/PanThumb'</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">//同时还要声明组件</span></span><br><span class="line">    components: &#123;ImageCropper, PanThumb&#125;,</span><br><span class="line">    data() &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        teacher: &#123;<span class="comment">//其实这里添不添加下面的属性都是无所谓的，因为是双向绑定的</span></span><br><span class="line">          name: <span class="string">''</span>,</span><br><span class="line">          sort: <span class="number">0</span>,</span><br><span class="line">          level: <span class="number">1</span>,</span><br><span class="line">          career: <span class="string">''</span>,</span><br><span class="line">          intro: <span class="string">''</span>,</span><br><span class="line">          avatar: <span class="string">''</span></span><br><span class="line">        &#125;,</span><br><span class="line">        imagecropperShow: <span class="literal">false</span>,<span class="comment">//上传弹框组件是否显示</span></span><br><span class="line">        imagecropperKey: <span class="number">0</span>,<span class="comment">//上传组件key值</span></span><br><span class="line">        BASE_API: process.env.BASE_API, <span class="comment">//获取dev.env.js里面地址</span></span><br><span class="line">        saveBtnDisabled: <span class="literal">false</span><span class="comment">//保存按钮是否禁用</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    created()&#123;</span><br><span class="line">      <span class="comment">//注意created钩子函数只会执行一次</span></span><br><span class="line">      <span class="comment">//如果在此同时回显数据和清空数据，由于先点击修改跳转的路由和再点击添加讲师跳转的路由是同一个路由，导致后点击添加讲师的时候无法清空数据表单</span></span><br><span class="line">      <span class="comment">//解决办法就是，添加路由监听功能，每当路由跳转的时候再次条用即可</span></span><br><span class="line">      <span class="keyword">this</span>.init()</span><br><span class="line">    &#125;,</span><br><span class="line">    watch: &#123;</span><br><span class="line">      $route(to, <span class="keyword">from</span>)&#123;<span class="comment">//路由变化时，方法就会执行</span></span><br><span class="line">        <span class="keyword">this</span>.init()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//关闭上传头像组件方法</span></span><br><span class="line">      close()&#123;</span><br><span class="line">        <span class="keyword">this</span>.imagecropperShow = <span class="literal">false</span></span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      <span class="comment">//保存更换头像方法</span></span><br><span class="line">      cropSuccess(data)&#123;<span class="comment">//传参，也就是组件中的数据</span></span><br><span class="line">        <span class="comment">//先关闭组件</span></span><br><span class="line">        <span class="keyword">this</span>.imagecropperShow = <span class="literal">false</span></span><br><span class="line">        <span class="comment">//然后赋值,这里的组件其实已经封装了response等操作</span></span><br><span class="line">        <span class="keyword">this</span>.teacher.avatar = data.url</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      <span class="comment">//调用添加方法</span></span><br><span class="line">      saveOrUpdate()&#123;</span><br><span class="line">        <span class="comment">//判断是修改还是添加，也就是判断是否携带id</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">this</span>.teacher.id)&#123;</span><br><span class="line">          <span class="keyword">this</span>.saveTeacher()</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="keyword">this</span>.updateTeacher()</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//判断是否有携带id，有的话回显数据，没有的话则清空表单</span></span><br><span class="line">      init()&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.$route.params &amp;&amp; <span class="keyword">this</span>.$route.params.id)&#123;</span><br><span class="line">          <span class="comment">//如果有则获取id</span></span><br><span class="line">          <span class="keyword">const</span> id = <span class="keyword">this</span>.$route.params.id</span><br><span class="line">          <span class="comment">//通过id获取讲师信息</span></span><br><span class="line">          <span class="keyword">this</span>.getTeacher(id)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="comment">//如果没有id则清空表单</span></span><br><span class="line">          <span class="keyword">this</span>.teacher = &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//通过id查询讲师</span></span><br><span class="line">      getTeacher(id)&#123;</span><br><span class="line">        <span class="comment">//注意这样写是错的：this.teacehr = teacher.getTeacherById(id)</span></span><br><span class="line">        <span class="comment">//一定是要通过.then()返回数据获取到数据再赋值</span></span><br><span class="line">        teacher.getTeacherById(id)</span><br><span class="line">          .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.teacher = response.data.teacher</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//添加讲师的方法</span></span><br><span class="line">      saveTeacher()&#123;</span><br><span class="line">        teacher.addTeacher(<span class="keyword">this</span>.teacher)</span><br><span class="line">          .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">//提示信息</span></span><br><span class="line">            <span class="keyword">this</span>.$message(&#123;<span class="comment">//添加成功后弹框</span></span><br><span class="line">            type: <span class="string">'success'</span>,</span><br><span class="line">            message: <span class="string">'添加成功!'</span></span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="comment">//添加成功后需要重新查询所有，由于是在不同的页面，需要路由跳转（相当于重定向）</span></span><br><span class="line">            <span class="keyword">this</span>.$router.push(&#123;<span class="attr">path</span>: <span class="string">'/teacher/table'</span>&#125;)</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//修改讲师的方法</span></span><br><span class="line">      updateTeacher()&#123;</span><br><span class="line">        teacher.updateTeacher(<span class="keyword">this</span>.teacher)</span><br><span class="line">          .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">//提示信息</span></span><br><span class="line">            <span class="keyword">this</span>.$message(&#123;<span class="comment">//修改成功后弹框</span></span><br><span class="line">            type: <span class="string">'success'</span>,</span><br><span class="line">            message: <span class="string">'修改成功!'</span></span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="comment">//修改成功后需要重新查询所有，由于是在不同的页面，需要路由跳转（相当于重定向）</span></span><br><span class="line">            <span class="keyword">this</span>.$router.push(&#123;<span class="attr">path</span>: <span class="string">'/teacher/table'</span>&#125;)</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4、EasyExcel"><a href="#4、EasyExcel" class="headerlink" title="4、EasyExcel"></a>4、EasyExcel</h2><h3 id="4-1、简介"><a href="#4-1、简介" class="headerlink" title="4.1、简介"></a>4.1、简介</h3><p>EasyExcel是一个基于Java的简单、省内存的读写Excel的开源项目。在尽可能节约内存的情况下支持读写百M的Excel。</p><p>这是阿里巴巴的一个开源项目，针对apache poi等一些框架进行了一些优化，目前在市面上使用的也比较广泛</p><p>github地址:<a href="https://github.com/alibaba/easyexcel" target="_blank" rel="noopener">https://github.com/alibaba/easyexcel</a></p><h3 id="4-2、快速入门"><a href="#4-2、快速入门" class="headerlink" title="4.2、快速入门"></a>4.2、快速入门</h3><h4 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- easyexcel --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easyexcel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：本质上easyexcel也是对poi这些进行了封装，所以在项目中还是要引入poi的依赖的，我们在servce项目的pom文件已经引入了</p><h4 id="写excel"><a href="#写excel" class="headerlink" title="写excel"></a>写excel</h4><p>提示：因为只是快速入门，所以可以在测试代码中编写即可</p><p>实体类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataDemo</span> </span>&#123;</span><br><span class="line">    <span class="meta">@ExcelProperty</span>(value = <span class="string">"字符串标题"</span>)</span><br><span class="line">    <span class="keyword">private</span> String string;</span><br><span class="line">    <span class="meta">@ExcelProperty</span>(value = <span class="string">"日期标题"</span>)</span><br><span class="line">    <span class="keyword">private</span> Date date;</span><br><span class="line">    <span class="meta">@ExcelProperty</span>(value = <span class="string">"数字标题"</span>)</span><br><span class="line">    <span class="keyword">private</span> Double doubleData;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 忽略这个字段</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExcelIgnore</span></span><br><span class="line">    <span class="keyword">private</span> String ignore;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestExcel</span> </span>&#123;</span><br><span class="line">    <span class="comment">//数据生成</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;DataDemo&gt; <span class="title">data</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;DataDemo&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            DataDemo data = <span class="keyword">new</span> DataDemo();</span><br><span class="line">            data.setString(<span class="string">"字符串"</span> + i);</span><br><span class="line">            data.setDate(<span class="keyword">new</span> Date());</span><br><span class="line">            data.setDoubleData(<span class="number">0.56</span>);</span><br><span class="line">            list.add(data);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testWriteExcel</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//假设将文件写到e盘的write.xlsx</span></span><br><span class="line">        <span class="comment">//当然再实际开发中是不会写死的，这里只是为了快速入门而已</span></span><br><span class="line">        String fileName = <span class="string">"E:\\write.xlsx"</span>;</span><br><span class="line">        <span class="comment">//写操作</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 参数1：fileName，文件名（可携带路径）</span></span><br><span class="line"><span class="comment">         * 参数2：实体类</span></span><br><span class="line"><span class="comment">         * 参数3： sheet名称</span></span><br><span class="line"><span class="comment">         * 参数4： 写入的数据</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        EasyExcel.write(fileName, DataDemo.class).sheet("模板").doWrite(data());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/03/VRockxSi7JGgFmL.png" alt="image-20200703182657780"></p><h4 id="读excel"><a href="#读excel" class="headerlink" title="读excel"></a>读excel</h4><p>提示：读excel相对写比较麻烦，需要添加一个监听器</p><p>首先在实体类中添加索引index</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataDemo</span> </span>&#123;</span><br><span class="line">    <span class="meta">@ExcelProperty</span>(value = <span class="string">"字符串标题"</span>, index = <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">private</span> String string;</span><br><span class="line">    <span class="meta">@ExcelProperty</span>(value = <span class="string">"日期标题"</span>, index = <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">private</span> Date date;</span><br><span class="line">    <span class="meta">@ExcelProperty</span>(value = <span class="string">"数字标题"</span>, index = <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">private</span> Double doubleData;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 忽略这个字段</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExcelIgnore</span></span><br><span class="line">    <span class="keyword">private</span> String ignore;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编写监听器，继承AnalysisEventListener类即可，同时泛型是实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExcelListener</span> <span class="keyword">extends</span> <span class="title">AnalysisEventListener</span>&lt;<span class="title">DataDemo</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">//一行一行地读取数据</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">invoke</span><span class="params">(DataDemo dataDemo, AnalysisContext analysisContext)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"*****"</span> + dataDemo);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//还可以选择读取数据表头</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">invokeHeadMap</span><span class="params">(Map&lt;Integer, String&gt; headMap, AnalysisContext context)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"表头"</span> + headMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//数据读取完成后，这里暂时用不到</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doAfterAllAnalysed</span><span class="params">(AnalysisContext analysisContext)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testReadExcel</span><span class="params">()</span></span>&#123;</span><br><span class="line">    String fileName = <span class="string">"E:\\write.xlsx"</span>;</span><br><span class="line">    <span class="comment">//读操作</span></span><br><span class="line">    EasyExcel.read(fileName, DataDemo<span class="class">.<span class="keyword">class</span>, <span class="title">new</span> <span class="title">ExcelListener</span>()).<span class="title">sheet</span>().<span class="title">doRead</span>()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/03/39BFTRi6YCXVq5K.png" alt="image-20200703182949064"></p><h2 id="5、后端课程分类开发"><a href="#5、后端课程分类开发" class="headerlink" title="5、后端课程分类开发"></a>5、后端课程分类开发</h2><p>提示：这里就需要结合上面所学的EasyExcel来开发课程分类了</p><h3 id="5-1、后端添加课程分类开发"><a href="#5-1、后端添加课程分类开发" class="headerlink" title="5.1、后端添加课程分类开发"></a>5.1、后端添加课程分类开发</h3><h4 id="导入数据库表"><a href="#导入数据库表" class="headerlink" title="导入数据库表"></a>导入数据库表</h4><p>“edu_subject”数据脚本</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`edu_subject`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'课程类别ID'</span>,</span><br><span class="line">  <span class="string">`title`</span> <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'类别名称'</span>,</span><br><span class="line">  <span class="string">`parent_id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'父ID'</span>,</span><br><span class="line">  <span class="string">`sort`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'排序字段'</span>,</span><br><span class="line">  <span class="string">`gmt_create`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  <span class="string">`gmt_modified`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_parent_id`</span> (<span class="string">`parent_id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4 ROW_FORMAT=<span class="keyword">COMPACT</span> <span class="keyword">COMMENT</span>=<span class="string">'课程科目'</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/03/v3WXhJsVzGj8PIA.png" alt="image-20200703183459956"></p><h4 id="mp代码生成"><a href="#mp代码生成" class="headerlink" title="mp代码生成"></a>mp代码生成</h4><p>提示：</p><ul><li><p>跟之前的代码生成一样，只需要修改对应的数据库表名称即可</p></li><li><p>生成代码之后，别忘了优化实体类，比如添加自动填充等功能</p></li></ul><h4 id="编写excel文件以及对应的实体类"><a href="#编写excel文件以及对应的实体类" class="headerlink" title="编写excel文件以及对应的实体类"></a>编写excel文件以及对应的实体类</h4><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/03/dEFTzj7gsfSLxMG.png" alt="image-20200703203834462"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SubjectData</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelProperty</span>(value = <span class="string">"一级分类"</span>,index = <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">private</span> String oneSubjectName;</span><br><span class="line">    <span class="meta">@ExcelProperty</span>(value = <span class="string">"二级分类"</span>,index = <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">private</span> String twoSubjectName;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写监听器"><a href="#编写监听器" class="headerlink" title="编写监听器"></a>编写监听器</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.eduservice.listener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.excel.context.AnalysisContext;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.excel.event.AnalysisEventListener;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.ryan.eduservice.entity.EduSubject;</span><br><span class="line"><span class="keyword">import</span> com.ryan.eduservice.entity.excel.SubjectData;</span><br><span class="line"><span class="keyword">import</span> com.ryan.eduservice.service.EduSubjectService;</span><br><span class="line"><span class="keyword">import</span> com.ryan.servicebase.exceptionhandler.GuliException;</span><br><span class="line"></span><br><span class="line"><span class="comment">//因为在service中是自己new SubjectExcelListener对象的，所以这里是不能交给spring管理的</span></span><br><span class="line"><span class="comment">//所以就不能自动注入service，这样操作数据库等操作非常不方便</span></span><br><span class="line"><span class="comment">//这时候我们应该利用构造方法手动注入</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SubjectExcelListener</span> <span class="keyword">extends</span> <span class="title">AnalysisEventListener</span>&lt;<span class="title">SubjectData</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> EduSubjectService eduSubjectService;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SubjectExcelListener</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SubjectExcelListener</span><span class="params">(EduSubjectService eduSubjectService)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.eduSubjectService = eduSubjectService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一行一行地读取数据</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">invoke</span><span class="params">(SubjectData subjectData, AnalysisContext analysisContext)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果数据为空，则抛出异常</span></span><br><span class="line">        <span class="keyword">if</span>(subjectData == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> GuliException(<span class="number">20001</span>, <span class="string">"数据为空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//数据不为空，因为数据是一行一行读取的，一级分类中可能会有重复的，但是我们不能重复添加，所以需要 判断</span></span><br><span class="line">        <span class="comment">//判断一级分类</span></span><br><span class="line">        <span class="comment">//一级分类名称</span></span><br><span class="line">        String oneName = subjectData.getOneSubjectName();</span><br><span class="line">        EduSubject oneSubject = <span class="keyword">this</span>.isExistOneSubject(eduSubjectService, oneName);</span><br><span class="line">        <span class="keyword">if</span> (oneSubject == <span class="keyword">null</span>)&#123;<span class="comment">//如果为空表示没有重复，需要添加</span></span><br><span class="line">            <span class="comment">//添加前需要先设置值</span></span><br><span class="line">            oneSubject = <span class="keyword">new</span> EduSubject();</span><br><span class="line">            oneSubject.setParentId(<span class="string">"0"</span>);</span><br><span class="line">            oneSubject.setTitle(oneName);</span><br><span class="line">            eduSubjectService.save(oneSubject);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断二级分类</span></span><br><span class="line">        <span class="comment">//二级分类名称</span></span><br><span class="line">        String twoName = subjectData.getTwoSubjectName();</span><br><span class="line">        <span class="comment">//二级分类的父id就是以及分类的id</span></span><br><span class="line">        String pid = oneSubject.getId();</span><br><span class="line">        EduSubject twoSubject = <span class="keyword">this</span>.isExistTwoSubject(eduSubjectService, twoName, pid);</span><br><span class="line">        <span class="keyword">if</span>(twoSubject == <span class="keyword">null</span>)&#123;<span class="comment">//如果为空表示不重复，需要添加</span></span><br><span class="line">            twoSubject = <span class="keyword">new</span> EduSubject();</span><br><span class="line">            twoSubject.setTitle(twoName);</span><br><span class="line">            twoSubject.setParentId(pid);</span><br><span class="line">            eduSubjectService.save(twoSubject);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断一级分类是否为空</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> EduSubject <span class="title">isExistOneSubject</span><span class="params">(EduSubjectService eduSubjectService,String name)</span></span>&#123;</span><br><span class="line">        QueryWrapper&lt;EduSubject&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        wrapper.eq(<span class="string">"parent_id"</span>, <span class="string">"0"</span>);<span class="comment">//一级分类的parent_id肯定为0</span></span><br><span class="line">        wrapper.eq(<span class="string">"title"</span>,name);</span><br><span class="line">        EduSubject oneSubject = eduSubjectService.getOne(wrapper);</span><br><span class="line">        <span class="keyword">return</span> oneSubject;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断二级分类是否为空</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> EduSubject <span class="title">isExistTwoSubject</span><span class="params">(EduSubjectService eduSubjectService, String name, String pid)</span></span>&#123;</span><br><span class="line">        QueryWrapper&lt;EduSubject&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        wrapper.eq(<span class="string">"title"</span>, name);</span><br><span class="line">        wrapper.eq(<span class="string">"parent_id"</span>, pid);</span><br><span class="line">        EduSubject twoSubject = eduSubjectService.getOne(wrapper);</span><br><span class="line">        <span class="keyword">return</span> twoSubject;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//数据读取完成后的操作，暂时用不到</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doAfterAllAnalysed</span><span class="params">(AnalysisContext analysisContext)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>监听器小结：</p><ul><li>无法交给spring管理，需要通过构造方法手动注入service</li><li>因为是一行一行读取数据，而且不能重复添加，所以需要做判断</li><li>二级分类的父id也就是以及分类的id，理清思路</li></ul><h4 id="编写service层"><a href="#编写service层" class="headerlink" title="编写service层"></a>编写service层</h4><p>提示：其实在实际的开发过程中，是从controller层开发到service层的</p><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">EduSubjectService</span> <span class="keyword">extends</span> <span class="title">IService</span>&lt;<span class="title">EduSubject</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//因为要监听器需要手动注入，所以这里在new监听器的时候顺便将eduSubjectService传过去，不管是service层还是controller层</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">saveSubject</span><span class="params">(MultipartFile file, EduSubjectService eduSubjectService)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EduSubjectServiceImpl</span> <span class="keyword">extends</span> <span class="title">ServiceImpl</span>&lt;<span class="title">EduSubjectMapper</span>, <span class="title">EduSubject</span>&gt; <span class="keyword">implements</span> <span class="title">EduSubjectService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//因为要监听器需要手动注入，所以这里在new监听器的时候顺便将eduSubjectService传过去，不管是service层还是controller层</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveSubject</span><span class="params">(MultipartFile file, EduSubjectService eduSubjectService)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取file的流</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream inputStream = file.getInputStream();</span><br><span class="line">            EasyExcel.read(inputStream, SubjectData<span class="class">.<span class="keyword">class</span>, <span class="title">new</span> <span class="title">SubjectExcelListener</span>(<span class="title">eduSubjectService</span>)).<span class="title">sheet</span>().<span class="title">doRead</span>()</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>小结：注意读取excel文件的时候别忘了.sheet().doRead();</p><h4 id="编写controller层"><a href="#编写controller层" class="headerlink" title="编写controller层"></a>编写controller层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/eduservice/edu-subject"</span>)</span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EduSubjectController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    EduSubjectService eduSubjectService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加课程分类</span></span><br><span class="line">    <span class="comment">//因为要监听器需要手动注入，所以这里在new监听器的时候顺便将eduSubjectService传过去，不管是service层还是controller层</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/addSubject"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">addSubject</span><span class="params">(MultipartFile file)</span></span>&#123;</span><br><span class="line">        eduSubjectService.saveSubject(file, eduSubjectService);</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="swagger测试"><a href="#swagger测试" class="headerlink" title="swagger测试"></a>swagger测试</h4><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/03/smE3YCXgJGT7dUw.png" alt="image-20200703204845585"></p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/03/wCvkZcN8qpiVGAb.png" alt="image-20200703204905669"></p><p>成功添加课程分类</p><h3 id="5-2、前端添加课程分类开发"><a href="#5-2、前端添加课程分类开发" class="headerlink" title="5.2、前端添加课程分类开发"></a>5.2、前端添加课程分类开发</h3><h4 id="添加路由"><a href="#添加路由" class="headerlink" title="添加路由"></a>添加路由</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    path: <span class="string">'/subject'</span>,</span><br><span class="line">    component: Layout,</span><br><span class="line">    redirect: <span class="string">'/subject/list'</span>,</span><br><span class="line">    name: <span class="string">'课程分类管理'</span>,</span><br><span class="line">    meta: &#123; <span class="attr">title</span>: <span class="string">'课程分类管理'</span>, <span class="attr">icon</span>: <span class="string">'example'</span> &#125;,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'list'</span>,</span><br><span class="line">        name: <span class="string">'课程分类列表'</span>,</span><br><span class="line">        component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/views/edu/subject/list'</span>),</span><br><span class="line">        meta: &#123; <span class="attr">title</span>: <span class="string">'课程分类列表'</span>, <span class="attr">icon</span>: <span class="string">'table'</span> &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'save'</span>,</span><br><span class="line">        name: <span class="string">'添加课程分类'</span>,</span><br><span class="line">        component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/views/edu/subject/save'</span>),</span><br><span class="line">        meta: &#123; <span class="attr">title</span>: <span class="string">'添加课程分类'</span>, <span class="attr">icon</span>: <span class="string">'tree'</span> &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="配置路由跳转页面"><a href="#配置路由跳转页面" class="headerlink" title="配置路由跳转页面"></a>配置路由跳转页面</h4><p>在views/edu目录下新建subject目录，然后新建两个对应的list.vue和save.vue</p><p>save.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;el-form label-width&#x3D;&quot;120px&quot;&gt;</span><br><span class="line">      &lt;el-form-item label&#x3D;&quot;信息描述&quot;&gt;</span><br><span class="line">        &lt;el-tag type&#x3D;&quot;info&quot;&gt;excel模版说明&lt;&#x2F;el-tag&gt;</span><br><span class="line">        &lt;el-tag&gt;</span><br><span class="line">          &lt;i class&#x3D;&quot;el-icon-download&quot;&#x2F;&gt;</span><br><span class="line">          &lt;!--这里的下载模板我放到本地的static目录下，当然也可以选择放在阿里云中--&gt;</span><br><span class="line">          &lt;a :href&#x3D;&quot;&#39;&#x2F;static&#x2F;subject.xlsx&#39;&quot;&gt;点击下载模版&lt;&#x2F;a&gt;</span><br><span class="line">        &lt;&#x2F;el-tag&gt;</span><br><span class="line"></span><br><span class="line">      &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-form-item label&#x3D;&quot;选择Excel&quot;&gt;</span><br><span class="line">        &lt;!--</span><br><span class="line">            ref相当于id</span><br><span class="line">            auto-upload是否自动上传</span><br><span class="line">            on-success上传成功事件</span><br><span class="line">            on-error上传失败事件</span><br><span class="line">            limit最多能上传多少个文件</span><br><span class="line">            accept只接受微软的excel文件</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;el-upload</span><br><span class="line">          ref&#x3D;&quot;upload&quot;</span><br><span class="line">          :auto-upload&#x3D;&quot;false&quot;</span><br><span class="line">          :on-success&#x3D;&quot;fileUploadSuccess&quot;</span><br><span class="line">          :on-error&#x3D;&quot;fileUploadError&quot;</span><br><span class="line">          :disabled&#x3D;&quot;importBtnDisabled&quot;</span><br><span class="line">          :limit&#x3D;&quot;1&quot;</span><br><span class="line">          :action&#x3D;&quot;BASE_API+&#39;&#x2F;eduservice&#x2F;edu-subject&#x2F;addSubject&#39;&quot;</span><br><span class="line">          name&#x3D;&quot;file&quot;</span><br><span class="line">          accept&#x3D;&quot;application&#x2F;vnd.ms-excel&quot;&gt;</span><br><span class="line">          &lt;el-button slot&#x3D;&quot;trigger&quot; size&#x3D;&quot;small&quot; type&#x3D;&quot;primary&quot;&gt;选取文件&lt;&#x2F;el-button&gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">            :loading&#x3D;&quot;loading&quot;</span><br><span class="line">            style&#x3D;&quot;margin-left: 10px;&quot;</span><br><span class="line">            size&#x3D;&quot;small&quot;</span><br><span class="line">            type&#x3D;&quot;success&quot;</span><br><span class="line">            @click&#x3D;&quot;submitUpload&quot;&gt;上传到服务器&lt;&#x2F;el-button&gt;</span><br><span class="line">        &lt;&#x2F;el-upload&gt;</span><br><span class="line">      &lt;&#x2F;el-form-item&gt;</span><br><span class="line">    &lt;&#x2F;el-form&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    data()&#123;</span><br><span class="line">        return&#123;</span><br><span class="line">            BASE_API: process.env.BASE_API, &#x2F;&#x2F; 接口API地址</span><br><span class="line">            importBtnDisabled: false, &#x2F;&#x2F; 按钮是否禁用,</span><br><span class="line">            loading: false</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    created()&#123;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        &#x2F;&#x2F;上传成功方法</span><br><span class="line">        fileUploadSuccess()&#123;</span><br><span class="line">            &#x2F;&#x2F;提示信息</span><br><span class="line">            this.loading &#x3D; false</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">                type: &#39;success&#39;,</span><br><span class="line">                message: &#39;添加课程分类成功&#39;</span><br><span class="line">            &#125;)</span><br><span class="line">            &#x2F;&#x2F;添加成功后跳转到分类列表</span><br><span class="line">            this.$router.push(&#123;path: &#39;&#x2F;subject&#x2F;list&#39;&#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F;上传失败方法</span><br><span class="line">        fileUploadError()&#123;</span><br><span class="line">            &#x2F;&#x2F;提示信息</span><br><span class="line">            this.loading &#x3D; false</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">                type: &#39;success&#39;,</span><br><span class="line">                message: &#39;添加课程分类失败&#39;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F;上传方法</span><br><span class="line">        submitUpload()&#123;</span><br><span class="line">            this.importBtnDisabled &#x3D; true</span><br><span class="line">            this.loading &#x3D; true</span><br><span class="line">            &#x2F;&#x2F;其实这里就类似于js的：document.getElementById(&quot;upload&quot;).submit()</span><br><span class="line">            this.$refs.upload.submit()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="5-3、后端课程分类列表开发"><a href="#5-3、后端课程分类列表开发" class="headerlink" title="5.3、后端课程分类列表开发"></a>5.3、后端课程分类列表开发</h3><p>提示：分类列表我们就不再使用表格来显示了，使用tree的方式显示会更加直观一些，如下</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/03/KEG3ZPl7az8iYFb.png" alt="image-20200703224347006"></p><p>具体要怎么实现呢？我们先看看前端的代码</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/03/hcqWSOgju8APrVK.png" alt="image-20200703224643162"></p><p>通过分析可以看到如果要显示树状的效果，返回的数据只能是这种格式的数据，也就是要求我后端返回的数据必须是这种格式，具体要怎么实现呢？</p><p>遇到这种数据格式的，建议使用实体类封装数据来实现</p><h4 id="编写实体类"><a href="#编写实体类" class="headerlink" title="编写实体类"></a>编写实体类</h4><p>一级课程分类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OneSubject</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="comment">//一级分类中包含二级分类</span></span><br><span class="line">    List&lt;TwoSubject&gt; children = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>二级课程分类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TwoSubject</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写service层-1"><a href="#编写service层-1" class="headerlink" title="编写service层"></a>编写service层</h4><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">List&lt;OneSubject&gt; <span class="title">getList</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;OneSubject&gt; <span class="title">getList</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//思路，获取EduSubject的一级分类和二级分类的数据，然后复制到对应的subject目录下的实体类中，然后封装数据，最后返回数据</span></span><br><span class="line">    <span class="comment">//获取一级分类数据,也就是parent_id为0的</span></span><br><span class="line">    <span class="comment">//查询数据可以使用当前对象，或者使用baseMapper都是可以的</span></span><br><span class="line">    QueryWrapper&lt;EduSubject&gt; oneWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    oneWrapper.eq(<span class="string">"parent_id"</span>, <span class="string">"0"</span>);</span><br><span class="line">    List&lt;EduSubject&gt; oneEduSubjects = baseMapper.selectList(oneWrapper);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取二级分类数据，也就是parent_id不为0的</span></span><br><span class="line">    QueryWrapper&lt;EduSubject&gt; twoWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    twoWrapper.ne(<span class="string">"parent_id"</span>, <span class="string">"0"</span>);</span><br><span class="line">    List&lt;EduSubject&gt; twoEduSubjects = baseMapper.selectList(twoWrapper);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//最后封装数据</span></span><br><span class="line">    <span class="comment">//先new一个集合作为总集合存放总数据的</span></span><br><span class="line">    List&lt;OneSubject&gt; finalList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="comment">//然后对查询出来的一级分类遍历，将遍历出来的数据都复制到对应的subject中的</span></span><br><span class="line">    <span class="keyword">for</span> (EduSubject oneEduSubject : oneEduSubjects) &#123;</span><br><span class="line">        OneSubject oneSubject = <span class="keyword">new</span> OneSubject();</span><br><span class="line">        BeanUtils.copyProperties(oneEduSubject, oneSubject);</span><br><span class="line">        finalList.add(oneSubject);</span><br><span class="line">        <span class="comment">//创建一个集合存放每个一级分类的二级分类数据</span></span><br><span class="line">        List&lt;TwoSubject&gt; twoSubjectList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//再遍历二级分类中的数据，并复制到一级分类中的二级分类list中</span></span><br><span class="line">        <span class="keyword">for</span> (EduSubject twoEduSubject : twoEduSubjects) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//判断是否为此一级分类下的二级分类</span></span><br><span class="line">            <span class="keyword">if</span>(twoEduSubject.getParentId().equals(oneSubject.getId()))&#123;</span><br><span class="line">                TwoSubject twoSubject = <span class="keyword">new</span> TwoSubject();</span><br><span class="line">                <span class="comment">//如果是则复制</span></span><br><span class="line">                BeanUtils.copyProperties(twoEduSubject, twoSubject);</span><br><span class="line">                <span class="comment">//然后将二级分类的数据放到二级分类的集合中</span></span><br><span class="line">                twoSubjectList.add(twoSubject);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//将二级分类下的所有数据都放到一级分类中</span></span><br><span class="line">        oneSubject.setChildren(twoSubjectList);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> finalList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>小结：</p><ul><li>但凡遇到这个数据格式的，一般都是这种套路，获取数据=&gt;封装数据=&gt;返回数据</li><li>二级分类记得要判断id</li></ul><h4 id="编写controller层-1"><a href="#编写controller层-1" class="headerlink" title="编写controller层"></a>编写controller层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//课程分类列表</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/subjectList"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">getAllSubject</span><span class="params">()</span></span>&#123;</span><br><span class="line">    List&lt;OneSubject&gt; list = eduSubjectService.getList();</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">"list"</span>, list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="swagger测试-1"><a href="#swagger测试-1" class="headerlink" title="swagger测试"></a>swagger测试</h4><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/04/zcvtPUFxn4sBwYL.png" alt="image-20200704002516483"></p><p>后端自测成功，然后再开发前端</p><h3 id="5-4、前端课程分类列表开发"><a href="#5-4、前端课程分类列表开发" class="headerlink" title="5.4、前端课程分类列表开发"></a>5.4、前端课程分类列表开发</h3><h4 id="编写list-vue页面"><a href="#编写list-vue页面" class="headerlink" title="编写list.vue页面"></a>编写list.vue页面</h4><p>因为是使用树形结构，所以使用模板中的tree，然后再修改一下即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;el-input v-model&#x3D;&quot;filterText&quot; placeholder&#x3D;&quot;Filter keyword&quot; style&#x3D;&quot;margin-bottom:30px;&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-tree</span><br><span class="line">      ref&#x3D;&quot;tree2&quot;</span><br><span class="line">      :data&#x3D;&quot;data2&quot;</span><br><span class="line">      :props&#x3D;&quot;defaultProps&quot;</span><br><span class="line">      :filter-node-method&#x3D;&quot;filterNode&quot;</span><br><span class="line">      class&#x3D;&quot;filter-tree&quot;</span><br><span class="line">      default-expand-all</span><br><span class="line">    &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import subject from &#39;@&#x2F;api&#x2F;edu&#x2F;subject&#39;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      filterText: &#39;&#39;,</span><br><span class="line">      data2: [],  &#x2F;&#x2F;返回所有分类数据</span><br><span class="line">      defaultProps: &#123;</span><br><span class="line">        children: &#39;children&#39;,</span><br><span class="line">        label: &#39;title&#39;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">      this.getAllSubjectList()</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    filterText(val) &#123;</span><br><span class="line">      this.$refs.tree2.filter(val)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  methods: &#123;</span><br><span class="line">    getAllSubjectList() &#123;</span><br><span class="line">        subject.getAllSubject()</span><br><span class="line">            .then(response &#x3D;&gt; &#123;</span><br><span class="line">                this.data2 &#x3D; response.data.list</span><br><span class="line">            &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    filterNode(value, data) &#123;</span><br><span class="line">      if (!value) return true</span><br><span class="line">      return data.title.toLowerCase().indexOf(value.toLowerCase()) !&#x3D;&#x3D; -1</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h4 id="开发前端接口"><a href="#开发前端接口" class="headerlink" title="开发前端接口"></a>开发前端接口</h4><p>在api/edu目录下新建subject.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">'@/utils/request'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">//获取所有课程分类</span></span><br><span class="line">    getAllSubject()&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">'/eduservice/edu-subject/subjectList'</span>,</span><br><span class="line">            method: <span class="string">'get'</span></span><br><span class="line">          &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试：</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/04/mNtApa3wgXJIChe.png" alt="image-20200704002931727"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1、阿里云对象存储OSS&quot;&gt;&lt;a href=&quot;#1、阿里云对象存储OSS&quot; class=&quot;headerlink&quot; title=&quot;1、阿里云对象存储OSS&quot;&gt;&lt;/a&gt;1、阿里云对象存储OSS&lt;/h2&gt;&lt;h3 id=&quot;1-1、简介&quot;&gt;&lt;a href=&quot;#1-1、简介&quot;
      
    
    </summary>
    
    
      <category term="前后端分离" scheme="http://yoursite.com/categories/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="springboot" scheme="http://yoursite.com/tags/springboot/"/>
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="nginx" scheme="http://yoursite.com/tags/nginx/"/>
    
      <category term="EasyExcel" scheme="http://yoursite.com/tags/EasyExcel/"/>
    
  </entry>
  
  <entry>
    <title>谷粒学院项目实战day02—ES6规范+讲师管理前端模块开发</title>
    <link href="http://yoursite.com/2020/07/02/%E5%AD%A6%E9%99%A2%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98day02%E2%80%94%E8%AE%B2%E5%B8%88%E7%AE%A1%E7%90%86%E5%89%8D%E7%AB%AF%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91/"/>
    <id>http://yoursite.com/2020/07/02/%E5%AD%A6%E9%99%A2%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98day02%E2%80%94%E8%AE%B2%E5%B8%88%E7%AE%A1%E7%90%86%E5%89%8D%E7%AB%AF%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91/</id>
    <published>2020-07-02T15:19:00.000Z</published>
    <updated>2020-07-02T15:23:15.698Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、ES6规范"><a href="#1、ES6规范" class="headerlink" title="1、ES6规范"></a>1、ES6规范</h2><p>ES标准中不包含 DOM 和 BOM的定义，只涵盖基本数据类型、关键字、语句、运算符、内建对象、内建函数等通用语法。</p><p>本部分只学习前端开发中ES6的最少必要知识，方便后面项目开发中对代码的理解。</p><h3 id="1-1、let声明变量"><a href="#1-1、let声明变量" class="headerlink" title="1.1、let声明变量"></a>1.1、let声明变量</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//var声明的变量，没有局部作用域</span></span><br><span class="line">    <span class="comment">//let声明的变量，有局部作用域</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> a = <span class="number">0</span></span><br><span class="line">        <span class="keyword">let</span> b = <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(a)</span><br><span class="line">    <span class="comment">//console.log(b)//Uncaught ReferenceError: b is not defined</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//var 可以声明多次</span></span><br><span class="line">    <span class="comment">//let 只能声明一次</span></span><br><span class="line">    <span class="keyword">var</span> c = <span class="number">2</span></span><br><span class="line">    <span class="keyword">var</span> c = <span class="number">3</span></span><br><span class="line">    <span class="keyword">let</span> d = <span class="number">4</span></span><br><span class="line">    <span class="keyword">let</span> d = <span class="number">5</span></span><br><span class="line">    <span class="built_in">console</span>.log(c)</span><br><span class="line">    <span class="built_in">console</span>.log(d)<span class="comment">//Identifier 'd' has already been declared</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-2、const声明变量（只读变量）"><a href="#1-2、const声明变量（只读变量）" class="headerlink" title="1.2、const声明变量（只读变量）"></a>1.2、const声明变量（只读变量）</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//1. const声明变量之后不允许改变</span></span><br><span class="line">    <span class="keyword">const</span> PI = <span class="string">"3.1415926"</span></span><br><span class="line">    <span class="comment">//PI = 3//Uncaught TypeError: Assignment to constant variable.</span></span><br><span class="line">    <span class="comment">//2. const声明变量必须赋初始化值（并且之后不可改变）</span></span><br><span class="line">    <span class="keyword">const</span> c<span class="comment">//Missing initializer in const declaration</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-3、解构赋值"><a href="#1-3、解构赋值" class="headerlink" title="1.3、解构赋值"></a>1.3、解构赋值</h3><p>解构赋值是对赋值运算符的扩展，是一种针对数组或者对象进行模式匹配，然后对其中的变量进行赋值。在代码书写上简洁且易读，语义更加清晰明了；也方便了复杂对象中数据字段获取。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//1. 数据结构</span></span><br><span class="line">    <span class="comment">//传统方式</span></span><br><span class="line">    <span class="keyword">let</span> a = <span class="number">1</span>, b = <span class="number">2</span>, c = <span class="number">3</span></span><br><span class="line">    <span class="built_in">console</span>.log(a, b, c)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//es6</span></span><br><span class="line">    <span class="keyword">let</span> [x, y ,z] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">    <span class="built_in">console</span>.log(x, y, z)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2. 对象结构</span></span><br><span class="line">    <span class="keyword">let</span> user = &#123;<span class="attr">name</span>: <span class="string">"ryan"</span>, <span class="attr">age</span>: <span class="number">20</span>&#125;</span><br><span class="line">    <span class="comment">//传统</span></span><br><span class="line">    <span class="keyword">let</span> name1 = user.name</span><br><span class="line">    <span class="keyword">let</span> age1 = user.age</span><br><span class="line">    <span class="built_in">console</span>.log(name1, age1)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//es6</span></span><br><span class="line">    <span class="keyword">let</span> &#123;name, age&#125; = user<span class="comment">//注意：结构的变量必须是user中的属性</span></span><br><span class="line">    <span class="built_in">console</span>.log(name, age)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-4、模板字符串"><a href="#1-4、模板字符串" class="headerlink" title="1.4、模板字符串"></a>1.4、模板字符串</h3><p>模板字符串相当于加强版的字符串，用反引号 `,除了作为普通字符串，还可以用来定义多行字符串，还可以在字符串中加入变量和表达式。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//1. 多行字符串</span></span><br><span class="line">    <span class="keyword">let</span> str1 = <span class="string">`hello,</span></span><br><span class="line"><span class="string">    es6`</span></span><br><span class="line">    <span class="built_in">console</span>.log(str1)</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    hello,</span></span><br><span class="line"><span class="comment">    es6</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="comment">//2. 字符串中插入变量和表达式，变量名写在$&#123;&#125;中，也可以写js表达式</span></span><br><span class="line">   <span class="keyword">let</span> name = <span class="string">"ryan"</span></span><br><span class="line">   <span class="keyword">let</span> age = <span class="number">20</span></span><br><span class="line">   <span class="keyword">let</span> info = <span class="string">`My name is <span class="subst">$&#123;name&#125;</span>, i'm <span class="subst">$&#123;age&#125;</span> years old`</span></span><br><span class="line">   <span class="built_in">console</span>.log(info)<span class="comment">//My name is ryan, i'm 20 years old</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//3. 字符串中调用函数</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="string">"hello"</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">let</span> str2 = <span class="string">`<span class="subst">$&#123;f()&#125;</span> , es6`</span></span><br><span class="line">   <span class="built_in">console</span>.log(str2)<span class="comment">//hello , es6</span></span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-5、声明对象简写"><a href="#1-5、声明对象简写" class="headerlink" title="1.5、声明对象简写"></a>1.5、声明对象简写</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">const</span> age = <span class="number">12</span></span><br><span class="line">    <span class="keyword">const</span> name = <span class="string">"ryan"</span></span><br><span class="line">    <span class="comment">//传统</span></span><br><span class="line">    <span class="keyword">const</span> person1 = &#123;<span class="attr">age</span>: age, <span class="attr">name</span>: name&#125;</span><br><span class="line">    <span class="built_in">console</span>.log(person1)</span><br><span class="line">    <span class="comment">//es6</span></span><br><span class="line">    <span class="keyword">const</span> person2 = &#123;age, name&#125;</span><br><span class="line">    <span class="built_in">console</span>.log(person2)</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    以上结果都是一个对象</span></span><br><span class="line"><span class="comment">    age: 12</span></span><br><span class="line"><span class="comment">    name: "ryan"</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-6、定义方法简写"><a href="#1-6、定义方法简写" class="headerlink" title="1.6、定义方法简写"></a>1.6、定义方法简写</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//传统</span></span><br><span class="line">    <span class="keyword">const</span> f1 = &#123;</span><br><span class="line">        sayHi: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"hi"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    f1.sayHi();<span class="comment">//hi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//es6，实际上就是省去了function</span></span><br><span class="line">    <span class="keyword">const</span> f2 = &#123;</span><br><span class="line">        sayHi()&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"Hi"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    f2.sayHi();<span class="comment">//Hi</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-7、对象拓展运算符"><a href="#1-7、对象拓展运算符" class="headerlink" title="1.7、对象拓展运算符"></a>1.7、对象拓展运算符</h3><p>拓展运算符（…）用于取出参数对象所有可遍历属性然后拷贝到当前对象。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//1. 拷贝对象</span></span><br><span class="line">    <span class="keyword">let</span> person1 = &#123;<span class="attr">name</span>: <span class="string">"ryan"</span>, <span class="attr">age</span>: <span class="number">10</span>&#125;</span><br><span class="line">    <span class="keyword">let</span> somone = &#123;...person1&#125;</span><br><span class="line">    <span class="built_in">console</span>.log(somone)</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    age: 10</span></span><br><span class="line"><span class="comment">    name: "ryan"</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2. 合并对象</span></span><br><span class="line">    <span class="keyword">let</span> age = &#123;<span class="attr">age</span>: <span class="number">15</span>&#125;</span><br><span class="line">    <span class="keyword">let</span> name = &#123;<span class="attr">name</span>: <span class="string">"kobe"</span>&#125;</span><br><span class="line">    <span class="keyword">let</span> person2 = &#123;...age, ...name&#125;</span><br><span class="line">    <span class="built_in">console</span>.log(person2)</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    age: 15</span></span><br><span class="line"><span class="comment">    name: "kobe"</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-8、箭头函数"><a href="#1-8、箭头函数" class="headerlink" title="1.8、箭头函数"></a>1.8、箭头函数</h3><p>箭头函数提供了一种更加简洁的函数书写方式。基本语法是：</p><p>参数 =&gt; 函数体</p><p>箭头函数多用于匿名函数的定义</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//传统</span></span><br><span class="line">    <span class="keyword">var</span> f1 = <span class="function"><span class="keyword">function</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(f1(<span class="number">3</span>))<span class="comment">//3</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//es6</span></span><br><span class="line">    <span class="keyword">var</span> f2 = <span class="function"><span class="params">a</span> =&gt;</span> a<span class="comment">//参数=&gt;函数体</span></span><br><span class="line">    <span class="built_in">console</span>.log(f2(<span class="number">4</span>))<span class="comment">//4</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//当箭头函数没有参数或者有多个参数，要用()括起来</span></span><br><span class="line">    <span class="comment">//当箭头函数体由多行语句，要用&#123;&#125;包裹起来，表示代码块</span></span><br><span class="line">    <span class="comment">//当只有一行语句，并且需要返回结果时，可以省略&#123;&#125;，结果会自动返回</span></span><br><span class="line">    <span class="keyword">var</span> f3 = <span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> result = a + b</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(f3(<span class="number">5</span>, <span class="number">5</span>))<span class="comment">//10</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//其实相当于</span></span><br><span class="line">    <span class="keyword">var</span> f4 = <span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、前端页面开发"><a href="#2、前端页面开发" class="headerlink" title="2、前端页面开发"></a>2、前端页面开发</h2><h3 id="2-1、寻找模板：vue-admin-template"><a href="#2-1、寻找模板：vue-admin-template" class="headerlink" title="2.1、寻找模板：vue-admin-template"></a>2.1、寻找模板：vue-admin-template</h3><p>将vue-admin-template作为后台管理系统的前端模板</p><p>模板结构分析</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/02/gexWc8kLdYSpCBb.png" alt="image-20200702155238323"></p><p>为了方便编码，建议将config目录下的index.js文件中的属性值修改一下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将useEslint的值改为false，否则编码要求会非常严格</span></span><br><span class="line">useEslint: <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="2-2、安装依赖，测试运行"><a href="#2-2、安装依赖，测试运行" class="headerlink" title="2.2、安装依赖，测试运行"></a>2.2、安装依赖，测试运行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装依赖</span></span><br><span class="line">npm install</span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行</span></span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>接着在浏览器运行<a href="http://localhost:9528，则会转到登陆页面，当我们点击登陆时发现登陆不了，打开控制台网络，查看请求地址：(url前缀+接口地址)">http://localhost:9528，则会转到登陆页面，当我们点击登陆时发现登陆不了，打开控制台网络，查看请求地址：(url前缀+接口地址)</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://easy-mock.com/mock/5950a2419adc231f356a6636/vue-admin/login</span><br></pre></td></tr></table></figure><p>登陆不了的原因应该是这个地址的服务器不能使用了，我们可以使用我们本地的，所以需要修改config目录下dev.env.js的BASE_API</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BASE_API: <span class="string">'"http://localhost:8001"'</span>,</span><br></pre></td></tr></table></figure><h3 id="2-3、编写本地登陆接口"><a href="#2-3、编写本地登陆接口" class="headerlink" title="2.3、编写本地登陆接口"></a>2.3、编写本地登陆接口</h3><p>正常情况下登陆需要整合spring security获取shiro等权限框架的，这里只是需要临时登陆一下即可，所以就简单开发一下接口，后面再去整合权限框架</p><p>分析：</p><ul><li><p>在前端的接口目录下有login.js文件，这里就是登陆接口，发现其引入了：import request from ‘@/utils/request’，这个是干什么用的呢？其实就是帮我们封装了axios请求的。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">'@/utils/request'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params">username, password</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> request(&#123;</span><br><span class="line">    url: <span class="string">'/user/login'</span>,</span><br><span class="line">    method: <span class="string">'post'</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">      username,</span><br><span class="line">      password</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params">token</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> request(&#123;</span><br><span class="line">    url: <span class="string">'/user/info'</span>,</span><br><span class="line">    method: <span class="string">'get'</span>,</span><br><span class="line">    params: &#123; token &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">logout</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> request(&#123;</span><br><span class="line">    url: <span class="string">'/user/logout'</span>,</span><br><span class="line">    method: <span class="string">'post'</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>从store目录下的user.js文件中可以看到，只要获取到token就可以登陆了，同时还可以调用获取用户信息的方法，而获取用户信息主要有三个：roles, name, avatar</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 登录</span></span><br><span class="line">    Login(&#123; commit &#125;, userInfo) &#123;</span><br><span class="line">      <span class="keyword">const</span> username = userInfo.username.trim()</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        login(username, userInfo.password).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">const</span> data = response.data</span><br><span class="line">          setToken(data.token)</span><br><span class="line">          commit(<span class="string">'SET_TOKEN'</span>, data.token)</span><br><span class="line">          resolve()</span><br><span class="line">        &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">          reject(error)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取用户信息</span></span><br><span class="line">    GetInfo(&#123; commit, state &#125;) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        getInfo(state.token).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">const</span> data = response.data</span><br><span class="line">          <span class="keyword">if</span> (data.roles &amp;&amp; data.roles.length &gt; <span class="number">0</span>) &#123; <span class="comment">// 验证返回的roles是否是一个非空数组</span></span><br><span class="line">            commit(<span class="string">'SET_ROLES'</span>, data.roles)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            reject(<span class="string">'getInfo: roles must be a non-null array !'</span>)</span><br><span class="line">          &#125;</span><br><span class="line">          commit(<span class="string">'SET_NAME'</span>, data.name)</span><br><span class="line">          commit(<span class="string">'SET_AVATAR'</span>, data.avatar)</span><br><span class="line">          resolve(response)</span><br><span class="line">        &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">          reject(error)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><p>接口开发（临时）：</p><p>在controller层新建一个EduLoginController类，并编写登陆接口+获取用户信息接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/eduservice/user"</span>)</span><br><span class="line"><span class="meta">@CrossOrigin</span><span class="comment">//解决跨域问题</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EduLoginController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//登陆接口</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/login"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">login</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">"token"</span>, <span class="string">"admin"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取用户信息接口</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/info"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">getInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">"roles"</span>, <span class="string">"admin"</span>).data(<span class="string">"name"</span>, <span class="string">"name"</span>).data(<span class="string">"avatar"</span>, <span class="string">"https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改前端接口请求路径</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//登陆接口url</span></span><br><span class="line">url: <span class="string">'/eduservice/user/login'</span></span><br><span class="line"><span class="comment">//获取用户信息接口url</span></span><br><span class="line">url: <span class="string">'/eduservice/user/info'</span></span><br></pre></td></tr></table></figure><p>最后别忘了解决跨域问题</p><p>先了解一下什么是跨域问题：</p><p>通过一个地址去访问另外一个地址，这个过程中以下三个地方如有任意一个地方不一样，就涉及到跨域问题：访问协议、ip地址、端口号</p><p>如何解决：</p><ul><li>方案一：在后端接口添加注解：@CrossOrigin</li><li>方案二：使用网关解决（后面会讲到）</li></ul><p>登陆界面：</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/02/hXZxwOts9TCcuj4.png" alt="image-20200702161745719"></p><h3 id="2-4、讲师管理界面开发"><a href="#2-4、讲师管理界面开发" class="headerlink" title="2.4、讲师管理界面开发"></a>2.4、讲师管理界面开发</h3><p>提示：开发步骤：添加路由（router）—配置路由跳转页面—前端接口开发（api）—页面开发（vue）</p><p>每一个模块的功能基本上都是按照上面的大概步骤来实现的，建议多写多练，总结思路</p><h4 id="2-4-1、添加讲师管理路由"><a href="#2-4-1、添加讲师管理路由" class="headerlink" title="2.4.1、添加讲师管理路由"></a>2.4.1、添加讲师管理路由</h4><p>打开src目录下的router目录的index.js文件，修改一下对应的路由模板即可</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    path: <span class="string">'/teacher'</span>,</span><br><span class="line">    component: Layout,</span><br><span class="line">    redirect: <span class="string">'/teacher/table'</span>,</span><br><span class="line">    name: <span class="string">'讲师管理'</span>,</span><br><span class="line">    meta: &#123; <span class="attr">title</span>: <span class="string">'讲师管理'</span>, <span class="attr">icon</span>: <span class="string">'example'</span> &#125;,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'table'</span>,</span><br><span class="line">        name: <span class="string">'讲师列表'</span>,</span><br><span class="line">        component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/views/edu/teacher/list'</span>),</span><br><span class="line">        meta: &#123; <span class="attr">title</span>: <span class="string">'讲师列表'</span>, <span class="attr">icon</span>: <span class="string">'table'</span> &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'save'</span>,</span><br><span class="line">        name: <span class="string">'添加讲师'</span>,</span><br><span class="line">        component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/views/edu/teacher/save'</span>),</span><br><span class="line">        meta: &#123; <span class="attr">title</span>: <span class="string">'添加讲师'</span>, <span class="attr">icon</span>: <span class="string">'tree'</span> &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'edit/:id'</span>,</span><br><span class="line">        name: <span class="string">'修改讲师'</span>,</span><br><span class="line">        component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/views/edu/teacher/save'</span>),</span><br><span class="line">        meta: &#123; <span class="attr">title</span>: <span class="string">'修改讲师'</span>, <span class="attr">noCache</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        hidden: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果展示</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/02/enpfRNBGJvHDZXQ.png" alt="image-20200702224113889"></p><h4 id="2-4-2、配置讲师管理路由的跳转的页面"><a href="#2-4-2、配置讲师管理路由的跳转的页面" class="headerlink" title="2.4.2、配置讲师管理路由的跳转的页面"></a>2.4.2、配置讲师管理路由的跳转的页面</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/views/edu/teacher/list'</span>)</span><br><span class="line">component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/views/edu/teacher/save'</span>)</span><br><span class="line"><span class="comment">//第三个路由是对应修改功能的，和添加路由共用一个表单，同时这是一个隐藏路由</span></span><br></pre></td></tr></table></figure><p>对应的在视图层views目录下新建edu/teacher文件夹，新建两个对应的页面：list.vue和save.vue</p><h4 id="2-4-3、前端api接口开发"><a href="#2-4-3、前端api接口开发" class="headerlink" title="2.4.3、前端api接口开发"></a>2.4.3、前端api接口开发</h4><p>在开发页面前，我们应该先开发好对应的接口，这样我们才能在页面中调用相关的接口</p><p>在api目录下新建edu目录，再新建一个teacher.js文件作为接口开发，一开始仿照其他模板再优化即可</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">'@/utils/request'</span></span><br><span class="line"><span class="comment">//为了方便我们可以不用每一个都写成export function，可以这样下：</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">//综合条件分页查询</span></span><br><span class="line">    getTeacherListPage(current, pageSize, teacherQuery)&#123;<span class="comment">//传参</span></span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            <span class="comment">//url可以采用字符串拼接，也可以采用``来写</span></span><br><span class="line">            url: <span class="string">`/eduservice/edu-teacher/pageTeacherCondition/<span class="subst">$&#123;current&#125;</span>/<span class="subst">$&#123;pageSize&#125;</span>`</span>,</span><br><span class="line">            method: <span class="string">'post'</span>,</span><br><span class="line">            <span class="comment">//teacherQuery条件对象，后端使用requestBody获取数据</span></span><br><span class="line">            <span class="comment">//data表示把对象转换为json格式传递到接口中</span></span><br><span class="line">            data: teacherQuery</span><br><span class="line">          &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//移除讲师</span></span><br><span class="line">    removeTeacher(id)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">`/eduservice/edu-teacher/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">            method: <span class="string">'delete'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//添加讲师</span></span><br><span class="line">    addTeacher(eduTeacher)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">`/eduservice/edu-teacher/addTeacher`</span>,</span><br><span class="line">            method: <span class="string">'post'</span>,</span><br><span class="line">            data: eduTeacher</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//通过id查询讲师</span></span><br><span class="line">    getTeacherById(id)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">`/eduservice/edu-teacher/queryById/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">            method: <span class="string">'get'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//修改讲师</span></span><br><span class="line">    updateTeacher(eduTeacher)&#123;</span><br><span class="line">        <span class="keyword">return</span> request(&#123;</span><br><span class="line">            url: <span class="string">`/eduservice/edu-teacher/updateTeacher`</span>,</span><br><span class="line">            method: <span class="string">'post'</span>,</span><br><span class="line">            data: eduTeacher</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接口开发小结：</p><ul><li><p>接口可以使用export default{}，然后在花括号里面编写一个个的接口即可</p></li><li><p>如果后端接口是requestBody传递的，则前端接口需要有对应的data: XXX，表示是通过json数据格式传递的</p></li><li><p>前后端接口的提交方式一定要一一对应</p></li><li><p>前端接口的我url可以使用飘号``来拼接，这样可以使用${}来传参</p></li></ul><h4 id="2-4-4、对应的页面开发"><a href="#2-4-4、对应的页面开发" class="headerlink" title="2.4.4、对应的页面开发"></a>2.4.4、对应的页面开发</h4><h5 id="1-、list-vue"><a href="#1-、list-vue" class="headerlink" title="1)、list.vue"></a>1)、list.vue</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;app-container&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--查询表单--&gt;</span><br><span class="line">    &lt;el-form :inline&#x3D;&quot;true&quot; class&#x3D;&quot;demo-form-inline&quot;&gt;</span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;el-input v-model&#x3D;&quot;teacherQuery.name&quot; placeholder&#x3D;&quot;讲师名&quot;&#x2F;&gt;</span><br><span class="line">      &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;el-select v-model&#x3D;&quot;teacherQuery.level&quot; clearable placeholder&#x3D;&quot;讲师头衔&quot;&gt;</span><br><span class="line">          &lt;el-option :value&#x3D;&quot;1&quot; label&#x3D;&quot;高级讲师&quot;&#x2F;&gt;</span><br><span class="line">          &lt;el-option :value&#x3D;&quot;2&quot; label&#x3D;&quot;首席讲师&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;el-select&gt;</span><br><span class="line">      &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-form-item label&#x3D;&quot;添加时间&quot;&gt;</span><br><span class="line">        &lt;el-date-picker</span><br><span class="line">          v-model&#x3D;&quot;teacherQuery.begin&quot;</span><br><span class="line">          type&#x3D;&quot;datetime&quot;</span><br><span class="line">          placeholder&#x3D;&quot;选择开始时间&quot;</span><br><span class="line">          value-format&#x3D;&quot;yyyy-MM-dd HH:mm:ss&quot;</span><br><span class="line">          default-time&#x3D;&quot;00:00:00&quot;</span><br><span class="line">        &#x2F;&gt;</span><br><span class="line">      &lt;&#x2F;el-form-item&gt;</span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;el-date-picker</span><br><span class="line">          v-model&#x3D;&quot;teacherQuery.end&quot;</span><br><span class="line">          type&#x3D;&quot;datetime&quot;</span><br><span class="line">          placeholder&#x3D;&quot;选择截止时间&quot;</span><br><span class="line">          value-format&#x3D;&quot;yyyy-MM-dd HH:mm:ss&quot;</span><br><span class="line">          default-time&#x3D;&quot;00:00:00&quot;</span><br><span class="line">        &#x2F;&gt;</span><br><span class="line">      &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-button type&#x3D;&quot;primary&quot; icon&#x3D;&quot;el-icon-search&quot; @click&#x3D;&quot;getList()&quot;&gt;查询&lt;&#x2F;el-button&gt;</span><br><span class="line">      &lt;el-button type&#x3D;&quot;default&quot; @click&#x3D;&quot;resetData()&quot;&gt;清空&lt;&#x2F;el-button&gt;</span><br><span class="line">    &lt;&#x2F;el-form&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 表格 --&gt;</span><br><span class="line">    &lt;el-table</span><br><span class="line">      :data&#x3D;&quot;list&quot;</span><br><span class="line">      border</span><br><span class="line">      fit</span><br><span class="line">      highlight-current-row&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-table-column</span><br><span class="line">        label&#x3D;&quot;序号&quot;</span><br><span class="line">        width&#x3D;&quot;70&quot;</span><br><span class="line">        align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">        &lt;template slot-scope&#x3D;&quot;scope&quot;&gt;</span><br><span class="line">          &#123;&#123; (current - 1) * pageSize + scope.$index + 1 &#125;&#125;</span><br><span class="line">        &lt;&#x2F;template&gt;</span><br><span class="line">      &lt;&#x2F;el-table-column&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-table-column prop&#x3D;&quot;name&quot; label&#x3D;&quot;名称&quot; width&#x3D;&quot;80&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-table-column label&#x3D;&quot;头衔&quot; width&#x3D;&quot;80&quot;&gt;</span><br><span class="line">        &lt;!--scope就是整个表格的域，scope.row就是每条记录--&gt;</span><br><span class="line">        &lt;template slot-scope&#x3D;&quot;scope&quot;&gt;</span><br><span class="line">          &#123;&#123; scope.row.level&#x3D;&#x3D;&#x3D;1?&#39;高级讲师&#39;:&#39;首席讲师&#39; &#125;&#125;</span><br><span class="line">        &lt;&#x2F;template&gt;</span><br><span class="line">      &lt;&#x2F;el-table-column&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-table-column prop&#x3D;&quot;intro&quot; label&#x3D;&quot;资历&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-table-column prop&#x3D;&quot;gmtCreate&quot; label&#x3D;&quot;添加时间&quot; width&#x3D;&quot;160&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-table-column prop&#x3D;&quot;sort&quot; label&#x3D;&quot;排序&quot; width&#x3D;&quot;60&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-table-column label&#x3D;&quot;操作&quot; width&#x3D;&quot;200&quot; align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">        &lt;template slot-scope&#x3D;&quot;scope&quot;&gt;</span><br><span class="line">          &lt;router-link :to&#x3D;&quot;&#39;&#x2F;teacher&#x2F;edit&#x2F;&#39;+scope.row.id&quot;&gt;</span><br><span class="line">            &lt;el-button type&#x3D;&quot;primary&quot; size&#x3D;&quot;mini&quot; icon&#x3D;&quot;el-icon-edit&quot;&gt;修改&lt;&#x2F;el-button&gt;</span><br><span class="line">          &lt;&#x2F;router-link&gt;</span><br><span class="line">          &lt;el-button type&#x3D;&quot;danger&quot; size&#x3D;&quot;mini&quot; icon&#x3D;&quot;el-icon-delete&quot; @click&#x3D;&quot;removeDataById(scope.row.id)&quot;&gt;删除&lt;&#x2F;el-button&gt;</span><br><span class="line">        &lt;&#x2F;template&gt;</span><br><span class="line">      &lt;&#x2F;el-table-column&gt;</span><br><span class="line">    &lt;&#x2F;el-table&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 分页 --&gt;</span><br><span class="line">    &lt;el-pagination</span><br><span class="line">      :current-page&#x3D;&quot;current&quot;</span><br><span class="line">      :page-size&#x3D;&quot;pageSize&quot;</span><br><span class="line">      :total&#x3D;&quot;total&quot;</span><br><span class="line">      style&#x3D;&quot;padding: 30px 0; text-align: center;&quot;</span><br><span class="line">      layout&#x3D;&quot;total, prev, pager, next, jumper&quot;</span><br><span class="line">      @current-change&#x3D;&quot;getList&quot;</span><br><span class="line">    &#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">&#x2F;&#x2F;引入调用teache.js文件</span><br><span class="line">import teacher from &#39;@&#x2F;api&#x2F;edu&#x2F;teacher&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">  &#x2F;&#x2F;在这里编写核心代码，固定格式</span><br><span class="line">  data()&#123;&#x2F;&#x2F;定义变量和初始值</span><br><span class="line">    return&#123;&#x2F;&#x2F;参数以及查询出来的数据</span><br><span class="line">      list: null,&#x2F;&#x2F;查询结果</span><br><span class="line">      current: 1,&#x2F;&#x2F;当前页</span><br><span class="line">      pageSize: 3,&#x2F;&#x2F;每页记录数</span><br><span class="line">      total: 0,&#x2F;&#x2F;总记录数</span><br><span class="line">      teacherQuery: &#123;&#125;&#x2F;&#x2F;条件封装对象</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created()&#123;&#x2F;&#x2F;页面渲染之前执行，一般调用methods中定义的方法</span><br><span class="line">    &#x2F;&#x2F;一般都是先写methods，最后再在此调用方法</span><br><span class="line">    this.getList()</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;&#x2F;&#x2F;创建具体的方法，调用teacher.js中定义的方法</span><br><span class="line">    &#x2F;&#x2F;按照我们一开始学习的方法，是直接在这里使用axios.post.....</span><br><span class="line">    &#x2F;&#x2F;现在我们直接调用teacher.js的中的方法，而teacher.js中又封装了axios</span><br><span class="line">    getList(current &#x3D; 1)&#123;&#x2F;&#x2F;es6规范定义方法</span><br><span class="line">      this.current &#x3D; current</span><br><span class="line">      teacher.getTeacherListPage(this.current, this.pageSize, this.teacherQuery)</span><br><span class="line">        .then(response &#x3D;&gt; &#123;</span><br><span class="line">          &#x2F;&#x2F;console.log(response)&#x2F;&#x2F;测试请求结果</span><br><span class="line">          this.list &#x3D; response.data.rows</span><br><span class="line">          this.total &#x3D; response.data.total</span><br><span class="line">        &#125;)&#x2F;&#x2F;请求成功</span><br><span class="line">        .catch(error &#x3D;&gt; &#123;</span><br><span class="line">          console.log(error)</span><br><span class="line">        &#125;)&#x2F;&#x2F;请求失败</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x2F;&#x2F;清空查询条件</span><br><span class="line">    resetData()&#123;</span><br><span class="line">      &#x2F;&#x2F;分两步，清空数据+查询所有</span><br><span class="line">      &#x2F;&#x2F;清空数据（双向绑定）</span><br><span class="line">      this.teacherQuery &#x3D; &#123;&#125;</span><br><span class="line">      &#x2F;&#x2F;查询所有</span><br><span class="line">      this.getList()</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x2F;&#x2F;根据id删除讲师</span><br><span class="line">    removeDataById(id)&#123;</span><br><span class="line">      &#x2F;&#x2F;为了用户体验，应该弹框提醒</span><br><span class="line">      this.$confirm(&#39;确定需要删除此讲师记录？&#39;, &#39;提示&#39;, &#123;</span><br><span class="line">          confirmButtonText: &#39;确定&#39;,</span><br><span class="line">          cancelButtonText: &#39;取消&#39;,</span><br><span class="line">          type: &#39;warning&#39;</span><br><span class="line">        &#125;).then(() &#x3D;&gt; &#123;&#x2F;&#x2F;点击确定执行</span><br><span class="line">          teacher.removeTeacher(id).then(response &#x3D;&gt; &#123;</span><br><span class="line">            this.$message(&#123;&#x2F;&#x2F;删除成功后弹框</span><br><span class="line">            type: &#39;success&#39;,</span><br><span class="line">            message: &#39;删除成功!&#39;</span><br><span class="line">            &#125;);</span><br><span class="line">            &#x2F;&#x2F;删除成功后需要重新查询所有</span><br><span class="line">            this.getList()</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>list.vue小结：</p><ul><li>一个功能模块对应着一个接口，这样一步一步、循序渐进地区开发即可</li><li>表单、弹框、分页等可以直接套用element-ui的组件即可</li></ul><h5 id="2-、save-vue"><a href="#2-、save-vue" class="headerlink" title="2)、save.vue"></a>2)、save.vue</h5><p>提示：这里的添加路由和修改路由是共用一个表单的，修改路由是一个隐藏的路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;el-form label-width&#x3D;&quot;120px&quot;&gt;</span><br><span class="line">      &lt;el-form-item label&#x3D;&quot;讲师名称&quot;&gt;</span><br><span class="line">        &lt;el-input v-model&#x3D;&quot;teacher.name&quot;&#x2F;&gt;</span><br><span class="line">      &lt;&#x2F;el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label&#x3D;&quot;讲师排序&quot;&gt;</span><br><span class="line">        &lt;el-input-number v-model&#x3D;&quot;teacher.sort&quot; controls-position&#x3D;&quot;right&quot; min&#x3D;&quot;0&quot;&#x2F;&gt;</span><br><span class="line">      &lt;&#x2F;el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label&#x3D;&quot;讲师头衔&quot;&gt;</span><br><span class="line">        &lt;el-select v-model&#x3D;&quot;teacher.level&quot; clearable placeholder&#x3D;&quot;请选择&quot;&gt;</span><br><span class="line">          &lt;el-option :value&#x3D;&quot;1&quot; label&#x3D;&quot;高级讲师&quot;&#x2F;&gt;</span><br><span class="line">          &lt;el-option :value&#x3D;&quot;2&quot; label&#x3D;&quot;首席讲师&quot;&#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;el-select&gt;</span><br><span class="line">      &lt;&#x2F;el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label&#x3D;&quot;讲师资历&quot;&gt;</span><br><span class="line">        &lt;el-input v-model&#x3D;&quot;teacher.career&quot;&#x2F;&gt;</span><br><span class="line">      &lt;&#x2F;el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label&#x3D;&quot;讲师简介&quot;&gt;</span><br><span class="line">        &lt;el-input v-model&#x3D;&quot;teacher.intro&quot; :rows&#x3D;&quot;10&quot; type&#x3D;&quot;textarea&quot;&#x2F;&gt;</span><br><span class="line">      &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!-- 讲师头像：TODO --&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;el-button :disabled&#x3D;&quot;saveBtnDisabled&quot; type&#x3D;&quot;primary&quot; @click&#x3D;&quot;saveOrUpdate&quot;&gt;保存&lt;&#x2F;el-button&gt;</span><br><span class="line">      &lt;&#x2F;el-form-item&gt;</span><br><span class="line">    &lt;&#x2F;el-form&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import teacher from &#39;@&#x2F;api&#x2F;edu&#x2F;teacher&#39;</span><br><span class="line"></span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        teacher: &#123;&#x2F;&#x2F;其实这里添不添加下面的属性都是无所谓的，因为是双向绑定的</span><br><span class="line">          name: &#39;&#39;,</span><br><span class="line">          sort: 0,</span><br><span class="line">          level: 1,</span><br><span class="line">          career: &#39;&#39;,</span><br><span class="line">          intro: &#39;&#39;,</span><br><span class="line">          avatar: &#39;&#39;</span><br><span class="line">        &#125;,</span><br><span class="line">        saveBtnDisabled: false&#x2F;&#x2F;保存按钮是否禁用</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    created()&#123;</span><br><span class="line">      &#x2F;&#x2F;注意created钩子函数只会执行一次</span><br><span class="line">      &#x2F;&#x2F;如果在此同时回显数据和清空数据，由于先点击修改跳转的路由和再点击添加讲师跳转的路由是同一个路由，导致后点击添加讲师的时候无法清空数据表单</span><br><span class="line">      &#x2F;&#x2F;解决办法就是，添加路由监听功能，每当路由跳转的时候再次条用即可</span><br><span class="line">      this.init()</span><br><span class="line">    &#125;,</span><br><span class="line">    watch: &#123;</span><br><span class="line">      $route(to, from)&#123;&#x2F;&#x2F;路由变化时，方法就会执行</span><br><span class="line">        this.init()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#x2F;&#x2F;调用添加方法</span><br><span class="line">      saveOrUpdate()&#123;</span><br><span class="line">        &#x2F;&#x2F;判断是修改还是添加，也就是判断是否携带id</span><br><span class="line">        if(!this.teacher.id)&#123;</span><br><span class="line">          this.saveTeacher()</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">          this.updateTeacher()</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;判断是否有携带id，有的话回显数据，没有的话则清空表单</span><br><span class="line">      init()&#123;</span><br><span class="line">        if(this.$route.params &amp;&amp; this.$route.params.id)&#123;</span><br><span class="line">          &#x2F;&#x2F;如果有则获取id</span><br><span class="line">          const id &#x3D; this.$route.params.id</span><br><span class="line">          &#x2F;&#x2F;通过id获取讲师信息</span><br><span class="line">          this.getTeacher(id)</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">          &#x2F;&#x2F;如果没有id则清空表单</span><br><span class="line">          this.teacher &#x3D; &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;通过id查询讲师</span><br><span class="line">      getTeacher(id)&#123;</span><br><span class="line">        &#x2F;&#x2F;注意这样写是错的：this.teacehr &#x3D; teacher.getTeacherById(id)</span><br><span class="line">        &#x2F;&#x2F;一定是要通过.then()返回数据获取到数据再赋值</span><br><span class="line">        teacher.getTeacherById(id)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            this.teacher &#x3D; response.data.teacher</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;添加讲师的方法</span><br><span class="line">      saveTeacher()&#123;</span><br><span class="line">        teacher.addTeacher(this.teacher)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            &#x2F;&#x2F;提示信息</span><br><span class="line">            this.$message(&#123;&#x2F;&#x2F;添加成功后弹框</span><br><span class="line">            type: &#39;success&#39;,</span><br><span class="line">            message: &#39;添加成功!&#39;</span><br><span class="line">            &#125;);</span><br><span class="line">            &#x2F;&#x2F;添加成功后需要重新查询所有，由于是在不同的页面，需要路由跳转（相当于重定向）</span><br><span class="line">            this.$router.push(&#123;path: &#39;&#x2F;teacher&#x2F;table&#39;&#125;)</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F;修改讲师的方法</span><br><span class="line">      updateTeacher()&#123;</span><br><span class="line">        teacher.updateTeacher(this.teacher)</span><br><span class="line">          .then(response &#x3D;&gt; &#123;</span><br><span class="line">            &#x2F;&#x2F;提示信息</span><br><span class="line">            this.$message(&#123;&#x2F;&#x2F;修改成功后弹框</span><br><span class="line">            type: &#39;success&#39;,</span><br><span class="line">            message: &#39;修改成功!&#39;</span><br><span class="line">            &#125;);</span><br><span class="line">            &#x2F;&#x2F;修改成功后需要重新查询所有，由于是在不同的页面，需要路由跳转（相当于重定向）</span><br><span class="line">            this.$router.push(&#123;path: &#39;&#x2F;teacher&#x2F;table&#39;&#125;)</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>save.vue小结：</p><ul><li><p>如果需要从一个路由跳转到另一个路由，需要使用路由跳转，比如this.$router.push({path: ‘/teacher/table’})</p></li><li><p>调用相关方法的时候，如果需要赋值，不要直接向java那样赋值，一定要先得到返回结果，也就是.then(response =&gt; {然后在这里面赋值})，比如下面这个例子</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过id查询讲师</span></span><br><span class="line">getTeacher(id)&#123;</span><br><span class="line">    <span class="comment">//注意这样写是错的：this.teacehr = teacher.getTeacherById(id)</span></span><br><span class="line">    <span class="comment">//一定是要通过.then()返回数据获取到数据再赋值</span></span><br><span class="line">    teacher.getTeacherById(id)</span><br><span class="line">        .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.teacher = response.data.teacher</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>注意，如果两个路由跳转到同一个页面，钩子函数created是只会执行一次的，所以如果钩子函数中有条件语句，部分代码不一定能执行到，这时候涉及到路由跳转的话可以使用路由监听功能</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">watch: &#123;</span><br><span class="line">    $route(to, <span class="keyword">from</span>)&#123;<span class="comment">//路由变化时，方法就会执行</span></span><br><span class="line">        <span class="keyword">this</span>.init()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>删除、修改、添加等功能开发时，需要注意用户体验，可以添加弹窗或者提示效果</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1、ES6规范&quot;&gt;&lt;a href=&quot;#1、ES6规范&quot; class=&quot;headerlink&quot; title=&quot;1、ES6规范&quot;&gt;&lt;/a&gt;1、ES6规范&lt;/h2&gt;&lt;p&gt;ES标准中不包含 DOM 和 BOM的定义，只涵盖基本数据类型、关键字、语句、运算符、内建对象、内建
      
    
    </summary>
    
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="es6" scheme="http://yoursite.com/tags/es6/"/>
    
      <category term="element-ui" scheme="http://yoursite.com/tags/element-ui/"/>
    
      <category term="axios" scheme="http://yoursite.com/tags/axios/"/>
    
  </entry>
  
  <entry>
    <title>谷粒学院项目实战day01—后端讲师管理开发+统一异常/日志管理</title>
    <link href="http://yoursite.com/2020/07/02/%E5%AD%A6%E9%99%A2%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98day01%E2%80%94%E8%AE%B2%E5%B8%88%E7%AE%A1%E7%90%86-%E7%BB%9F%E4%B8%80%E5%BC%82%E5%B8%B8-%E6%97%A5%E5%BF%97%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2020/07/02/%E5%AD%A6%E9%99%A2%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98day01%E2%80%94%E8%AE%B2%E5%B8%88%E7%AE%A1%E7%90%86-%E7%BB%9F%E4%B8%80%E5%BC%82%E5%B8%B8-%E6%97%A5%E5%BF%97%E7%AE%A1%E7%90%86/</id>
    <published>2020-07-02T00:53:00.000Z</published>
    <updated>2020-07-02T15:21:34.511Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、创建一个父工程guli-parent，并且配置依赖版本管理"><a href="#1、创建一个父工程guli-parent，并且配置依赖版本管理" class="headerlink" title="1、创建一个父工程guli_parent，并且配置依赖版本管理"></a>1、创建一个父工程guli_parent，并且配置依赖版本管理</h2><p>提示：这里使用的springboot版本是2.2.1的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>service<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>common<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ryan<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guli_parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>guli_parent<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">guli.version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">guli.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mybatis-plus.version</span>&gt;</span>3.0.5<span class="tag">&lt;/<span class="name">mybatis-plus.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">velocity.version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">velocity.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">swagger.version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">swagger.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aliyun.oss.version</span>&gt;</span>2.8.3<span class="tag">&lt;/<span class="name">aliyun.oss.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jodatime.version</span>&gt;</span>2.10.1<span class="tag">&lt;/<span class="name">jodatime.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">poi.version</span>&gt;</span>3.17<span class="tag">&lt;/<span class="name">poi.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commons-fileupload.version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">commons-fileupload.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commons-io.version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">commons-io.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">httpclient.version</span>&gt;</span>4.5.1<span class="tag">&lt;/<span class="name">httpclient.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jwt.version</span>&gt;</span>0.7.0<span class="tag">&lt;/<span class="name">jwt.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aliyun-java-sdk-core.version</span>&gt;</span>4.3.3<span class="tag">&lt;/<span class="name">aliyun-java-sdk-core.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aliyun-sdk-oss.version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">aliyun-sdk-oss.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aliyun-java-sdk-vod.version</span>&gt;</span>2.15.2<span class="tag">&lt;/<span class="name">aliyun-java-sdk-vod.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aliyun-java-vod-upload.version</span>&gt;</span>1.4.11<span class="tag">&lt;/<span class="name">aliyun-java-vod-upload.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aliyun-sdk-vod-upload.version</span>&gt;</span>1.4.11<span class="tag">&lt;/<span class="name">aliyun-sdk-vod-upload.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fastjson.version</span>&gt;</span>1.2.28<span class="tag">&lt;/<span class="name">fastjson.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">gson.version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">gson.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">json.version</span>&gt;</span>20170516<span class="tag">&lt;/<span class="name">json.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commons-dbutils.version</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">commons-dbutils.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">canal.client.version</span>&gt;</span>1.1.0<span class="tag">&lt;/<span class="name">canal.client.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">docker.image.prefix</span>&gt;</span>zx<span class="tag">&lt;/<span class="name">docker.image.prefix</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">cloud-alibaba.version</span>&gt;</span>0.2.2.RELEASE<span class="tag">&lt;/<span class="name">cloud-alibaba.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--Spring Cloud--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>Hoxton.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cloud-alibaba.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--mybatis-plus 持久层--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-plus.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- velocity 模板引擎, Mybatis Plus 代码生成器需要 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity-engine-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;velocity.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--swagger--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;swagger.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--swagger ui--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;swagger.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--aliyunOSS--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun.oss<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-sdk-oss<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun.oss.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--日期时间工具--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jodatime.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--xls--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;poi.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--xlsx--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-ooxml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;poi.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--文件上传--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-fileupload.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--commons-io--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-io.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--httpclient--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;httpclient.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;gson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- JWT --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jwt.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--aliyun--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun-java-sdk-core.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun.oss<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-sdk-oss<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun-sdk-oss.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-vod<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun-java-sdk-vod.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-vod-upload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun-java-vod-upload.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-sdk-vod-upload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun-sdk-vod-upload.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;fastjson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.json<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>json<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;json.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-dbutils.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.otter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>canal.client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;canal.client.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、添加子模块service（同时又是下一级的父工程），并添加依赖"><a href="#2、添加子模块service（同时又是下一级的父工程），并添加依赖" class="headerlink" title="2、添加子模块service（同时又是下一级的父工程），并添加依赖"></a>2、添加子模块service（同时又是下一级的父工程），并添加依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guli_parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ryan<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>service<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>service_edu<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--依赖传递，service_base已经导入common_utils的依赖，所以这里只要导入service_base的依赖也就包含了common_utils的依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ryan<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>service_base<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mybatis-plus--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--mysql--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- velocity 模板引擎, Mybatis Plus 代码生成器需要 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity-engine-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--swagger--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--lombok用来简化实体类：需要安装lombok插件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--xls--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-ooxml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--httpclient--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--commons-io--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--gson--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3、在service模块中再添加子模块service-edu"><a href="#3、在service模块中再添加子模块service-edu" class="headerlink" title="3、在service模块中再添加子模块service_edu"></a>3、在service模块中再添加子模块service_edu</h2><h3 id="3-1、配置application-yml文件"><a href="#3-1、配置application-yml文件" class="headerlink" title="3.1、配置application.yml文件"></a>3.1、配置application.yml文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 服务端口</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8001</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment"># 服务名</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-edu</span></span><br><span class="line">  <span class="comment"># 环境设置</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># mysql数据库连接</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">  <span class="comment"># 返回json的全局时间格式</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">date-format:</span> <span class="string">yyyy-MM-dd</span> <span class="string">HH:mm:ss</span></span><br><span class="line">    <span class="attr">time-zone:</span> <span class="string">GMT+8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mybatis日志</span></span><br><span class="line"><span class="comment"># mybatis-plus:</span></span><br><span class="line"><span class="comment">#  configuration:</span></span><br><span class="line"><span class="comment">#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 统一日志处理（logback工具类），首先将前面的日志配置都删掉,然后在resource目录下创建logback-spring.xml</span></span><br></pre></td></tr></table></figure><h3 id="3-2、编写主启动类"><a href="#3-2、编写主启动类" class="headerlink" title="3.2、编写主启动类"></a>3.2、编写主启动类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(basePackages = &#123;<span class="string">"com.ryan"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EduApplication</span> </span>&#123;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">           SpringApplication.run(EduApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3、创建数据库guli和表edu-teacher"><a href="#3-3、创建数据库guli和表edu-teacher" class="headerlink" title="3.3、创建数据库guli和表edu_teacher"></a>3.3、创建数据库guli和表edu_teacher</h3><p>脚本如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`edu_teacher`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'讲师ID'</span>,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'讲师姓名'</span>,</span><br><span class="line">  <span class="string">`intro`</span> <span class="built_in">varchar</span>(<span class="number">500</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'讲师简介'</span>,</span><br><span class="line">  <span class="string">`career`</span> <span class="built_in">varchar</span>(<span class="number">500</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'讲师资历,一句话说明讲师'</span>,</span><br><span class="line">  <span class="string">`level`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'头衔 1高级讲师 2首席讲师'</span>,</span><br><span class="line">  <span class="string">`avatar`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'讲师头像'</span>,</span><br><span class="line">  <span class="string">`sort`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'排序'</span>,</span><br><span class="line">  <span class="string">`is_deleted`</span> <span class="built_in">tinyint</span>(<span class="number">1</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'逻辑删除 1（true）已删除， 0（false）未删除'</span>,</span><br><span class="line">  <span class="string">`gmt_create`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  <span class="string">`gmt_modified`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`uk_name`</span> (<span class="string">`name`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4 <span class="keyword">COMMENT</span>=<span class="string">'讲师'</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`edu_teacher`</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>,<span class="string">'张三'</span>,<span class="string">'近年主持国家自然科学基金（6项）、江苏省重大科技成果转化项目（5项）、江苏省产学研前瞻性联合研究项目（3项）、省工业科技支撑、省高技术、省自然科学基金等省部级及其企业的主要科研项目40多个，多个项目在企业成功转化，产生了较好的经济、社会和环境效益。积极开展产学研科技合作，并与省内16家企业建立了江苏省研究生工作站，其中6家为江苏省优秀研究生工作站'</span>,<span class="string">'高级'</span>,<span class="number">1</span>,<span class="string">'https://guli-file-190513.oss-cn-beijing.aliyuncs.com/avatar/default.jpg'</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="string">'2019-10-30 14:18:46'</span>,<span class="string">'2019-11-12 13:36:36'</span>),(<span class="string">'1189389726308478977'</span>,<span class="string">'晴天'</span>,<span class="string">'高级讲师简介'</span>,<span class="string">'高级讲师资历'</span>,<span class="number">2</span>,<span class="string">'https://online-teach-file.oss-cn-beijing.aliyuncs.com/teacher/2019/10/30/de47ee9b-7fec-43c5-8173-13c5f7f689b2.png'</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="string">'2019-10-30 11:53:03'</span>,<span class="string">'2019-10-30 11:53:03'</span>),(<span class="string">'1189390295668469762'</span>,<span class="string">'李刚'</span>,<span class="string">'高级讲师简介'</span>,<span class="string">'高级讲师'</span>,<span class="number">2</span>,<span class="string">'https://online-teach-file.oss-cn-beijing.aliyuncs.com/teacher/2019/10/30/b8aa36a2-db50-4eca-a6e3-cc6e608355e0.png'</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="string">'2019-10-30 11:55:19'</span>,<span class="string">'2019-11-12 13:37:52'</span>),(<span class="string">'1189426437876985857'</span>,<span class="string">'王二'</span>,<span class="string">'高级讲师简介'</span>,<span class="string">'高级讲师'</span>,<span class="number">1</span>,<span class="string">'https://online-teach-file.oss-cn-beijing.aliyuncs.com/teacher/2019/11/08/e44a2e92-2421-4ea3-bb49-46f2ec96ef88.png'</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="string">'2019-10-30 14:18:56'</span>,<span class="string">'2019-11-12 13:37:35'</span>),(<span class="string">'1189426464967995393'</span>,<span class="string">'王五'</span>,<span class="string">'高级讲师简介'</span>,<span class="string">'高级讲师'</span>,<span class="number">1</span>,<span class="string">'https://online-teach-file.oss-cn-beijing.aliyuncs.com/teacher/2019/10/30/65423f14-49a9-4092-baf5-6d0ef9686a85.png'</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="string">'2019-10-30 14:19:02'</span>,<span class="string">'2019-11-12 13:37:18'</span>),(<span class="string">'1192249914833055746'</span>,<span class="string">'李四'</span>,<span class="string">'高级讲师简介'</span>,<span class="string">'高级讲师'</span>,<span class="number">1</span>,<span class="string">'https://online-teach-file.oss-cn-beijing.aliyuncs.com/teacher/2019/11/07/91871e25-fd83-4af6-845f-ea8d471d825d.png'</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="string">'2019-11-07 09:18:25'</span>,<span class="string">'2019-11-12 13:37:01'</span>),(<span class="string">'1192327476087115778'</span>,<span class="string">'1222-12-12'</span>,<span class="string">'1111'</span>,<span class="string">'11'</span>,<span class="number">1</span>,<span class="string">'https://online-teach-file.oss-cn-beijing.aliyuncs.com/teacher/2019/11/08/5805c6cd-c8ad-4a77-aafd-d2e083bfd8a4.png'</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="string">'2019-11-07 14:26:37'</span>,<span class="string">'2019-11-11 16:26:26'</span>),(<span class="string">'1195337453429129218'</span>,<span class="string">'test'</span>,<span class="string">'sdfsdf'</span>,<span class="string">'sdfdf'</span>,<span class="number">1</span>,<span class="string">'https://guli-file-190513.oss-cn-beijing.aliyuncs.com/avatar/default.jpg'</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="string">'2019-11-15 21:47:12'</span>,<span class="string">'2019-11-15 21:47:27'</span>);</span><br></pre></td></tr></table></figure><h3 id="3-4、mybatis-plus代码自动生成"><a href="#3-4、mybatis-plus代码自动生成" class="headerlink" title="3.4、mybatis-plus代码自动生成"></a>3.4、mybatis-plus代码自动生成</h3><p>提示：这个代码生成器可以写在测试模块中，因为实际项目中是不需要他的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.generator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.DbType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.IdType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.AutoGenerator;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.DataSourceConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.GlobalConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.PackageConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.StrategyConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.DateType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CodeGenerator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建代码生成器</span></span><br><span class="line">        AutoGenerator mpg = <span class="keyword">new</span> AutoGenerator();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、全局配置</span></span><br><span class="line">        GlobalConfig gc = <span class="keyword">new</span> GlobalConfig();</span><br><span class="line">        String projectPath = System.getProperty(<span class="string">"user.dir"</span>);</span><br><span class="line">        gc.setOutputDir(<span class="string">"E:\\Programming\\Project\\guli_parent\\service\\service_edu"</span> + <span class="string">"/src/main/java"</span>);</span><br><span class="line"></span><br><span class="line">        gc.setAuthor(<span class="string">"ryan"</span>);</span><br><span class="line">        gc.setOpen(<span class="keyword">false</span>); <span class="comment">//生成后是否打开资源管理器</span></span><br><span class="line">        gc.setFileOverride(<span class="keyword">false</span>); <span class="comment">//重新生成时文件是否覆盖</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//UserServie</span></span><br><span class="line">        gc.setServiceName(<span class="string">"%sService"</span>);    <span class="comment">//去掉Service接口的首字母I</span></span><br><span class="line"></span><br><span class="line">        gc.setIdType(IdType.ID_WORKER_STR); <span class="comment">//主键策略</span></span><br><span class="line">        gc.setDateType(DateType.ONLY_DATE);<span class="comment">//定义生成的实体类中日期类型</span></span><br><span class="line">        gc.setSwagger2(<span class="keyword">true</span>);<span class="comment">//开启Swagger2模式</span></span><br><span class="line"></span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、数据源配置</span></span><br><span class="line">        DataSourceConfig dsc = <span class="keyword">new</span> DataSourceConfig();</span><br><span class="line">        dsc.setUrl(<span class="string">"jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8"</span>);</span><br><span class="line">        dsc.setDriverName(<span class="string">"com.mysql.cj.jdbc.Driver"</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">"root"</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">"123456"</span>);</span><br><span class="line">        dsc.setDbType(DbType.MYSQL);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、包配置</span></span><br><span class="line">        PackageConfig pc = <span class="keyword">new</span> PackageConfig();</span><br><span class="line">        pc.setModuleName(<span class="string">"eduservice"</span>); <span class="comment">//模块名</span></span><br><span class="line">        <span class="comment">//包  com.ryan.eduservice</span></span><br><span class="line">        pc.setParent(<span class="string">"com.ryan"</span>);</span><br><span class="line">        <span class="comment">//包  com.ryan.eduservice.controller</span></span><br><span class="line">        pc.setController(<span class="string">"controller"</span>);</span><br><span class="line">        pc.setEntity(<span class="string">"entity"</span>);</span><br><span class="line">        pc.setService(<span class="string">"service"</span>);</span><br><span class="line">        pc.setMapper(<span class="string">"mapper"</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5、策略配置</span></span><br><span class="line">        StrategyConfig strategy = <span class="keyword">new</span> StrategyConfig();</span><br><span class="line"></span><br><span class="line">        strategy.setInclude(<span class="string">"edu_teacher"</span>);</span><br><span class="line"></span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);<span class="comment">//数据库表映射到实体的命名策略</span></span><br><span class="line">        strategy.setTablePrefix(pc.getModuleName() + <span class="string">"_"</span>); <span class="comment">//生成实体时去掉表前缀</span></span><br><span class="line"></span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);<span class="comment">//数据库表字段映射到实体的命名策略</span></span><br><span class="line">        strategy.setEntityLombokModel(<span class="keyword">true</span>); <span class="comment">// lombok 模型 @Accessors(chain = true) setter链式操作</span></span><br><span class="line"></span><br><span class="line">        strategy.setRestControllerStyle(<span class="keyword">true</span>); <span class="comment">//restful api风格控制器</span></span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="keyword">true</span>); <span class="comment">//url中驼峰转连字符</span></span><br><span class="line"></span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6、执行</span></span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、统一结果集封装"><a href="#4、统一结果集封装" class="headerlink" title="4、统一结果集封装"></a>4、统一结果集封装</h2><h3 id="4-1、新建common模块"><a href="#4-1、新建common模块" class="headerlink" title="4.1、新建common模块"></a>4.1、新建common模块</h3><p>提示：在guli_parent父工程中新建子模块common,并导入相关依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guli_parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ryan<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>service_base<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>common_utils<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided <span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--mybatis-plus--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided <span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--lombok用来简化实体类：需要安装lombok插件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided <span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--swagger--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided <span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided <span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- redis --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- spring2.X集成redis所需common-pool2</span></span><br><span class="line"><span class="comment">        &lt;dependency&gt;</span></span><br><span class="line"><span class="comment">            &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">            &lt;artifactId&gt;commons-pool2&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">            &lt;version&gt;2.6.0&lt;/version&gt;</span></span><br><span class="line"><span class="comment">        &lt;/dependency&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-2、新建common-utils模块"><a href="#4-2、新建common-utils模块" class="headerlink" title="4.2、新建common_utils模块"></a>4.2、新建common_utils模块</h3><p>提示：在common模块中再新建一个子模块common_utils</p><p>依赖：无</p><h3 id="4-3、新建状态码接口（常量）-统一结果集"><a href="#4-3、新建状态码接口（常量）-统一结果集" class="headerlink" title="4.3、新建状态码接口（常量）+ 统一结果集"></a>4.3、新建状态码接口（常量）+ 统一结果集</h3><p>提示：因为在主启动类的扫描设置都是”com.ryan”，所以这里面的包名建议都写成com.ryan.xxx</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.commonutls;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ResultCode</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Integer SUCCESS = <span class="number">20000</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  Integer ERROR = <span class="number">20001</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.commonutls;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">//统一结果集封装</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">R</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"是否成功"</span>)</span><br><span class="line">    <span class="keyword">private</span> Boolean success;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"返回码"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"返回消息"</span>)</span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"返回数据"</span>)</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, Object&gt; data = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//私有化构造方法</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">R</span> <span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//私有化之后别人不能new对象，只能调用下面的静态方法</span></span><br><span class="line">    <span class="comment">//成功静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> R <span class="title">ok</span><span class="params">()</span></span>&#123;</span><br><span class="line">        R r = <span class="keyword">new</span> R();</span><br><span class="line">        r.setSuccess(<span class="keyword">true</span>);</span><br><span class="line">        r.setCode(ResultCode.SUCCESS);</span><br><span class="line">        r.setMessage(<span class="string">"成功"</span>);</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//失败静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> R <span class="title">error</span><span class="params">()</span></span>&#123;</span><br><span class="line">        R r = <span class="keyword">new</span> R();</span><br><span class="line">        r.setSuccess(<span class="keyword">false</span>);</span><br><span class="line">        r.setCode(ResultCode.ERROR);</span><br><span class="line">        r.setMessage(<span class="string">"失败"</span>);</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//return this可以实现链式编程</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">success</span><span class="params">(Boolean success)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setSuccess(success);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">code</span><span class="params">(Integer code)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setCode(code);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">message</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setMessage(message);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">data</span><span class="params">(String key, Object value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.data.put(key, value);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">data</span><span class="params">(Map&lt;String, Object&gt; map)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setData(map);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5、配置swagger"><a href="#5、配置swagger" class="headerlink" title="5、配置swagger"></a>5、配置swagger</h2><h3 id="5-1、新建service-bash模块"><a href="#5-1、新建service-bash模块" class="headerlink" title="5.1、新建service_bash模块"></a>5.1、新建service_bash模块</h3><p>提示：在common模块下再新建一个子模块service_bash，并导入common_utils模块</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ryan<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>service_base<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ryan<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common_utils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-2、新建配置类SwaggerConfig"><a href="#5-2、新建配置类SwaggerConfig" class="headerlink" title="5.2、新建配置类SwaggerConfig"></a>5.2、新建配置类SwaggerConfig</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.servicebase.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.base.Predicates;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.ApiInfoBuilder;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.PathSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.ApiInfo;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.Contact;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spi.DocumentationType;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spring.web.plugins.Docket;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.swagger2.annotations.EnableSwagger2;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger</span>2</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">webApiConfig</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .groupName(<span class="string">"ryan"</span>)</span><br><span class="line">                .apiInfo(webApiInfo())</span><br><span class="line">                .select()</span><br><span class="line">                .paths(Predicates.not(PathSelectors.regex(<span class="string">"/admin/.*"</span>)))</span><br><span class="line">                .paths(Predicates.not(PathSelectors.regex(<span class="string">"/error.*"</span>)))</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ApiInfo <span class="title">webApiInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">                .title(<span class="string">"网站-课程中心API文档"</span>)</span><br><span class="line">                .description(<span class="string">"本文档描述了课程中心微服务接口定义"</span>)</span><br><span class="line">                .version(<span class="string">"1.0"</span>)</span><br><span class="line">                .contact(<span class="keyword">new</span> Contact(<span class="string">"ryan"</span>, <span class="string">"https://ryan0824.github.io/"</span>, <span class="string">"13118844294@126.com"</span>))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6、测试CRUD"><a href="#6、测试CRUD" class="headerlink" title="6、测试CRUD"></a>6、测试CRUD</h2><p>在controller层编写相关接口，并使用swagger进行接口测试</p><h3 id="6-1、查询所有"><a href="#6-1、查询所有" class="headerlink" title="6.1、查询所有"></a>6.1、查询所有</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Api</span>(description = <span class="string">"讲师管理"</span>)</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/eduservice/edu-teacher"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EduTeacherController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    EduTeacherService eduTeacherService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询所有</span></span><br><span class="line">    <span class="meta">@ApiOperation</span>(value = <span class="string">"查询所有讲师"</span>)</span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findAll"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">findAllTeacher</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;EduTeacher&gt; list = eduTeacherService.list(<span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">"items"</span>, list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/02/iLDhGjc8NmapKEF.png" alt="image-20200702003515298"></p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/02/oFKu5BsEzktGbQq.png" alt="image-20200702003630167"></p><h3 id="6-2、逻辑删除-分页查询"><a href="#6-2、逻辑删除-分页查询" class="headerlink" title="6.2、逻辑删除+分页查询"></a>6.2、逻辑删除+分页查询</h3><p>测试前，需要对实体类进一步优化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@EqualsAndHashCode</span>(callSuper = <span class="keyword">false</span>)</span><br><span class="line"><span class="meta">@Accessors</span>(chain = <span class="keyword">true</span>)</span><br><span class="line"><span class="meta">@ApiModel</span>(value=<span class="string">"EduTeacher对象"</span>, description=<span class="string">"讲师"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EduTeacher</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"讲师ID"</span>)</span><br><span class="line">    <span class="meta">@TableId</span>(value = <span class="string">"id"</span>, type = IdType.ID_WORKER_STR)</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"讲师姓名"</span>)</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"讲师简介"</span>)</span><br><span class="line">    <span class="keyword">private</span> String intro;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"讲师资历,一句话说明讲师"</span>)</span><br><span class="line">    <span class="keyword">private</span> String career;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"头衔 1高级讲师 2首席讲师"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer level;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"讲师头像"</span>)</span><br><span class="line">    <span class="keyword">private</span> String avatar;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"排序"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer sort;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"逻辑删除 1（true）已删除， 0（false）未删除"</span>)</span><br><span class="line">    <span class="meta">@TableLogic</span></span><br><span class="line">    <span class="keyword">private</span> Boolean isDeleted;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"创建时间"</span>)</span><br><span class="line">    <span class="meta">@TableField</span>(fill = FieldFill.INSERT)<span class="comment">//自动填充</span></span><br><span class="line">    <span class="keyword">private</span> Date gmtCreate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"更新时间"</span>)</span><br><span class="line">    <span class="meta">@TableField</span>(fill = FieldFill.INSERT_UPDATE)</span><br><span class="line">    <span class="keyword">private</span> Date gmtModified;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在配置类中配置相关插件（bean）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan</span>(<span class="string">"com.ryan.eduservice.mapper"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EduConfig</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 逻辑删除插件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ISqlInjector <span class="title">sqlInjector</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> LogicSqlInjector();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分页插件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PaginationInterceptor <span class="title">paginationInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> PaginationInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接口编写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//逻辑删除，别忘了配置逻辑删除插件</span></span><br><span class="line"><span class="meta">@ApiOperation</span>(value = <span class="string">"根据id逻辑删除讲师"</span>)</span><br><span class="line"><span class="meta">@DeleteMapping</span>(<span class="string">"&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">removeTeacher</span><span class="params">(@ApiParam(name = <span class="string">"id"</span>, value = <span class="string">"讲师id"</span>, required = <span class="keyword">true</span>)</span> @<span class="title">PathVariable</span><span class="params">(<span class="string">"id"</span>)</span>String id)</span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> flag = eduTeacherService.removeById(id);</span><br><span class="line">    <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//分页查询，别忘了配置分页查询插件</span></span><br><span class="line"><span class="meta">@ApiModelProperty</span>(value = <span class="string">"分页查询讲师"</span>)</span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/pageTeacher/&#123;current&#125;/&#123;pageSize&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">pageTeacher</span><span class="params">(@PathVariable <span class="keyword">long</span> current,</span></span></span><br><span class="line"><span class="function"><span class="params">                     @PathVariable <span class="keyword">long</span> pageSize</span></span></span><br><span class="line"><span class="function"><span class="params">                     )</span></span>&#123;</span><br><span class="line">    <span class="comment">//创建page对象</span></span><br><span class="line">    Page&lt;EduTeacher&gt; teacherPage = <span class="keyword">new</span> Page&lt;&gt;(current, pageSize);</span><br><span class="line">    <span class="comment">//调用方法实现分页查询</span></span><br><span class="line">    <span class="comment">//调用方法的时候，底层封装，把所有数据都封装到teacherPage对象里面</span></span><br><span class="line">    eduTeacherService.page(teacherPage, <span class="keyword">null</span>);</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">"total"</span>, teacherPage.getTotal()).data(<span class="string">"rows"</span>, teacherPage.getRecords());</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-3、综合条件-分页查询"><a href="#6-3、综合条件-分页查询" class="headerlink" title="6.3、综合条件+分页查询"></a>6.3、综合条件+分页查询</h3><p>wrapper+page</p><p>因为需要将条件封装成实体类，所以先编写一个实体类(具体属性可以根据实际查询需求来定义)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TeacherQuery</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"教师名称，模糊查询"</span>)</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"讲师等级，1位高级讲师，2为首席讲师"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer level;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"查询开始时间，如2020-06-01 10:00:00"</span>)</span><br><span class="line">    <span class="keyword">private</span> String begin;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"查询结束时间，如2020-07-01 10:00:10"</span>)</span><br><span class="line">    <span class="keyword">private</span> String end;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接口编写</p><p>注意：需要使用requestbody传递数据（json格式）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实现综合条件+分页查询</span></span><br><span class="line"><span class="comment">//注意：如果使用requestbody（使用json格式传递数据，把json数据封装到对应的对象里），请求方式必须是post，而且required = false（参数可以为空）</span></span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/pageTeacherCondition/&#123;current&#125;/&#123;pageSize&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">pageTeacherCondition</span><span class="params">(@PathVariable <span class="keyword">long</span> current,</span></span></span><br><span class="line"><span class="function"><span class="params">                              @PathVariable <span class="keyword">long</span> pageSize,</span></span></span><br><span class="line"><span class="function"><span class="params">                              @RequestBody(required = <span class="keyword">false</span>)</span> TeacherQuery teacherQuery</span></span><br><span class="line"><span class="function">                              )</span>&#123;</span><br><span class="line">    <span class="comment">//创建page对象</span></span><br><span class="line">    Page&lt;EduTeacher&gt; pageTeacher = <span class="keyword">new</span> Page&lt;&gt;(current, pageSize);</span><br><span class="line">    <span class="comment">//创建查询条件</span></span><br><span class="line">    QueryWrapper&lt;EduTeacher&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    String name = teacherQuery.getName();</span><br><span class="line">    Integer level = teacherQuery.getLevel();</span><br><span class="line">    String begin = teacherQuery.getBegin();</span><br><span class="line">    String end = teacherQuery.getEnd();</span><br><span class="line">    <span class="comment">//判断条件值是否为空，如果不为空则拼接条件,注意StringUtils别导错包，正确的应该是org.springframework.util.StringUtils</span></span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(name))&#123;</span><br><span class="line">        wrapper.like(<span class="string">"name"</span>, name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(level))&#123;</span><br><span class="line">        wrapper.eq(<span class="string">"level"</span>, level);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(begin))&#123;</span><br><span class="line">        wrapper.ge(<span class="string">"gmt_create"</span>, begin);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(end))&#123;</span><br><span class="line">        wrapper.le(<span class="string">"gmt_modified"</span>, end);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//调用方法实现条件查询分页</span></span><br><span class="line">    eduTeacherService.page(pageTeacher, wrapper);</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">"total"</span>, pageTeacher.getTotal()).data(<span class="string">"rows"</span>, pageTeacher.getRecords());</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-4、增加讲师"><a href="#6-4、增加讲师" class="headerlink" title="6.4、增加讲师"></a>6.4、增加讲师</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//增加讲师</span></span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/addTeacher"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">addTeacher</span><span class="params">(@RequestBody EduTeacher eduTeacher)</span></span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> save = eduTeacherService.save(eduTeacher);</span><br><span class="line">    <span class="keyword">if</span> (save)&#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-5、通过id查询讲师"><a href="#6-5、通过id查询讲师" class="headerlink" title="6.5、通过id查询讲师"></a>6.5、通过id查询讲师</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过id查询讲师</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/queryById/&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">queryById</span><span class="params">(@PathVariable <span class="keyword">long</span> id)</span></span>&#123;</span><br><span class="line">    EduTeacher teacher = eduTeacherService.getById(id);</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">"teacher"</span>, teacher);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-6、通过id更新讲师"><a href="#6-6、通过id更新讲师" class="headerlink" title="6.6、通过id更新讲师"></a>6.6、通过id更新讲师</h3><p>注意：虽然方法名是byId，但是参数实际上是一个对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过id更新讲师</span></span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/updateTeacher"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">updateTeacher</span><span class="params">(@RequestBody EduTeacher eduTeacher)</span></span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> flag = eduTeacherService.updateById(eduTeacher);</span><br><span class="line">    <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7、统一异常处理"><a href="#7、统一异常处理" class="headerlink" title="7、统一异常处理"></a>7、统一异常处理</h2><p>在common模块下的service_bash模块新建一个包exceptionhandler，并新建一个类GlobalExceptionHandler</p><h3 id="7-1、全局异常处理"><a href="#7-1、全局异常处理" class="headerlink" title="7.1、全局异常处理"></a>7.1、全局异常处理</h3><p>也就是Exception异常处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalExceptionHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//全局异常处理</span></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(Exception<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    @<span class="title">ResponseBody</span>//为了返回数据</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">R</span> <span class="title">error</span>(<span class="title">Exception</span> <span class="title">e</span>)</span>&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> R.error().message(<span class="string">"执行了全局异常处理"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-2、特定异常处理"><a href="#7-2、特定异常处理" class="headerlink" title="7.2、特定异常处理"></a>7.2、特定异常处理</h3><p>针对特定的异常，执行相关异常处理，例如ArithmeticException</p><p>在controller层中的某个接口中添加一下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">10</span>/<span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>然后编写异常处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//指定异常处理</span></span><br><span class="line"><span class="meta">@ExceptionHandler</span>(ArithmeticException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">ResponseBody</span>//为了返回数据</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">R</span> <span class="title">error</span>(<span class="title">ArithmeticException</span> <span class="title">e</span>)</span>&#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">    <span class="keyword">return</span> R.error().message(<span class="string">"执行了ArithmeticException异常处理"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这时候异常处理会优先走ArithmeticException异常处理，而不是Exception异常处理</p><h3 id="7-3、自定义异常处理"><a href="#7-3、自定义异常处理" class="headerlink" title="7.3、自定义异常处理"></a>7.3、自定义异常处理</h3><p>首先自定义一个异常</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GuliException</span> <span class="keyword">extends</span> <span class="title">RuntimeException</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于自定义异常无法系统自动抛出，需要手动抛出，所以可在某个接口中添加以下代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">10</span>/<span class="number">0</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    <span class="comment">//手动抛出自定义异常</span></span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> GuliException(<span class="number">20001</span>, <span class="string">"执行了GuliException异常处理"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自定义异常处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/自定义异常处理</span><br><span class="line"><span class="comment">//注意自定义异常是无法自动抛出的，需要手动抛出异常</span></span><br><span class="line"><span class="meta">@ExceptionHandler</span>(GuliException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">ResponseBody</span>//为了返回数据</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">R</span> <span class="title">error</span>(<span class="title">GuliException</span> <span class="title">e</span>)</span>&#123;</span><br><span class="line">    log.error(e.getMessage());<span class="comment">//打印日志到本地</span></span><br><span class="line">    e.printStackTrace();</span><br><span class="line">    <span class="keyword">return</span> R.error().code(e.getCode()).message(e.getMsg());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上都可通过swagger进行接口测试，这里就不在这里一一详细说明了</p><h2 id="8、统一日志处理"><a href="#8、统一日志处理" class="headerlink" title="8、统一日志处理"></a>8、统一日志处理</h2><h3 id="8-1、logback日志工具"><a href="#8-1、logback日志工具" class="headerlink" title="8.1、logback日志工具"></a>8.1、logback日志工具</h3><p>这里可以使用logback日志工具</p><p>使用前可以先了解日志级别</p><p>logback有5种级别，分别是TRACE &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR，定义于ch.qos.logback.classic.Level类中。</p><p><strong>日志级别</strong></p><p>Trace:是追踪，就是程序推进以下，你就可以写个trace输出，所以trace应该会特别多，不过没关系，我们可以设置最低日志级别不让他输出.</p><p>Debug:指出细粒度信息事件对调试应用程序是非常有帮助的.</p><p>Info:消息在粗粒度级别上突出强调应用程序的运行过程.</p><p>Warn:输出警告及warn以下级别的日志.</p><p>Error:输出错误信息日志.</p><p>此外OFF表示关闭全部日志，ALL表示开启全部日志。</p><p><strong>级别等级</strong></p><p>等级从低到高分别是TRACE &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR</p><p><strong>总结</strong></p><ul><li><p>如果logger没有被分配级别，name它将从有被分配级别的最近的父类那里继承级别，root logger默认级别是DEBUG。</p></li><li><p>日志输出的时候，级别大的会输出，根据当前ROOT 级别，日志输出时，级别高于root默认的级别时会输出，比如如果root的级别是info，那么会输出info以及info级别以上的日志。</p></li></ul><h3 id="8-2、使用步骤"><a href="#8-2、使用步骤" class="headerlink" title="8.2、使用步骤"></a>8.2、使用步骤</h3><ul><li>将原先的日志配置都去掉</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mybatis日志</span></span><br><span class="line"><span class="comment"># mybatis-plus:</span></span><br><span class="line"><span class="comment">#  configuration:</span></span><br><span class="line"><span class="comment">#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure><ul><li>在resource目录下新建logback-spring.xml文件，注意日志的存放位置配置</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>  <span class="attr">scan</span>=<span class="string">"true"</span> <span class="attr">scanPeriod</span>=<span class="string">"10 seconds"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 日志级别从低到高分为TRACE &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR &lt; FATAL，如果设置为WARN，则低于WARN的信息都不会输出 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- de<span class="doctag">bug:</span>当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">contextName</span>&gt;</span>logback<span class="tag">&lt;/<span class="name">contextName</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- name的值是变量的名称，value的值时变量定义的值。通过定义的值会被插入到logger上下文中。定义变量后，可以使“$&#123;&#125;”来使用变量。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"log.path"</span> <span class="attr">value</span>=<span class="string">"E:/Programming/Project/guli_parent/log"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 彩色日志 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置格式变量：CONSOLE_LOG_PATTERN 彩色日志格式 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- magenta:洋红 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- boldMagenta:粗红--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- cyan:青色 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- white:白色 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- magenta:洋红 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"CONSOLE_LOG_PATTERN"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">value</span>=<span class="string">"%yellow(%date&#123;yyyy-MM-dd HH:mm:ss&#125;) |%highlight(%-5level) |%blue(%thread) |%blue(%file:%line) |%green(%logger) |%cyan(%msg%n)"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--输出到控制台--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"CONSOLE"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 例如：如果此处配置了INFO级别，则后面其他位置即使配置了DEBUG级别的日志，也不会被输出 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.ThresholdFilter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">level</span>&gt;</span>INFO<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Pattern</span>&gt;</span>$&#123;CONSOLE_LOG_PATTERN&#125;<span class="tag">&lt;/<span class="name">Pattern</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 设置字符集 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--输出到文件--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 时间滚动输出 level为 INFO 日志 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"INFO_FILE"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 正在记录的日志文件的路径及文件名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log.path&#125;/log_info.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--日志文件输出格式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;50&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 日志记录器的滚动策略，按日期，按大小记录 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 每天日志归档路径以及格式 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;log.path&#125;/info/log-info-%d&#123;yyyy-MM-dd&#125;.%i.log<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">timeBasedFileNamingAndTriggeringPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>100MB<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--日志文件保留天数--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>15<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 此日志文件只记录info级别的 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.LevelFilter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">level</span>&gt;</span>INFO<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMatch</span>&gt;</span>ACCEPT<span class="tag">&lt;/<span class="name">onMatch</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMismatch</span>&gt;</span>DENY<span class="tag">&lt;/<span class="name">onMismatch</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 时间滚动输出 level为 WARN 日志 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"WARN_FILE"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 正在记录的日志文件的路径及文件名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log.path&#125;/log_warn.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--日志文件输出格式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;50&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span> <span class="comment">&lt;!-- 此处设置字符集 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 日志记录器的滚动策略，按日期，按大小记录 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;log.path&#125;/warn/log-warn-%d&#123;yyyy-MM-dd&#125;.%i.log<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">timeBasedFileNamingAndTriggeringPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>100MB<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--日志文件保留天数--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>15<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 此日志文件只记录warn级别的 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.LevelFilter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">level</span>&gt;</span>warn<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMatch</span>&gt;</span>ACCEPT<span class="tag">&lt;/<span class="name">onMatch</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMismatch</span>&gt;</span>DENY<span class="tag">&lt;/<span class="name">onMismatch</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 时间滚动输出 level为 ERROR 日志 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"ERROR_FILE"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 正在记录的日志文件的路径及文件名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log.path&#125;/log_error.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--日志文件输出格式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;50&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span> <span class="comment">&lt;!-- 此处设置字符集 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 日志记录器的滚动策略，按日期，按大小记录 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;log.path&#125;/error/log-error-%d&#123;yyyy-MM-dd&#125;.%i.log<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">timeBasedFileNamingAndTriggeringPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>100MB<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--日志文件保留天数--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>15<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 此日志文件只记录ERROR级别的 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.LevelFilter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">level</span>&gt;</span>ERROR<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMatch</span>&gt;</span>ACCEPT<span class="tag">&lt;/<span class="name">onMatch</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">onMismatch</span>&gt;</span>DENY<span class="tag">&lt;/<span class="name">onMismatch</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        &lt;logger&gt;用来设置某一个包或者具体的某一个类的日志打印级别、以及指定&lt;appender&gt;。</span></span><br><span class="line"><span class="comment">        &lt;logger&gt;仅有一个name属性，</span></span><br><span class="line"><span class="comment">        一个可选的level和一个可选的addtivity属性。</span></span><br><span class="line"><span class="comment">        name:用来指定受此logger约束的某一个包或者具体的某一个类。</span></span><br><span class="line"><span class="comment">        level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，</span></span><br><span class="line"><span class="comment">              如果未设置此属性，那么当前logger将会继承上级的级别。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        使用mybatis的时候，sql语句是debug下才会打印，而这里我们只配置了info，所以想要查看sql语句的话，有以下两种操作：</span></span><br><span class="line"><span class="comment">        第一种把&lt;root level="INFO"&gt;改成&lt;root level="DEBUG"&gt;这样就会打印sql，不过这样日志那边会出现很多其他消息</span></span><br><span class="line"><span class="comment">        第二种就是单独给mapper下目录配置DEBUG模式，代码如下，这样配置sql语句会打印，其他还是正常DEBUG级别：</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开发环境:打印控制台--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">springProfile</span> <span class="attr">name</span>=<span class="string">"dev"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--可以输出项目中的debug日志，包括mybatis的sql日志--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.guli"</span> <span class="attr">level</span>=<span class="string">"INFO"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            root节点是必选节点，用来指定最基础的日志输出级别，只有一个level属性</span></span><br><span class="line"><span class="comment">            level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，默认是DEBUG</span></span><br><span class="line"><span class="comment">            可以包含零个或多个appender元素。</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"INFO"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"CONSOLE"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"INFO_FILE"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"WARN_FILE"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"ERROR_FILE"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">springProfile</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--生产环境:输出到文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">springProfile</span> <span class="attr">name</span>=<span class="string">"pro"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"INFO"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"CONSOLE"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"DEBUG_FILE"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"INFO_FILE"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"ERROR_FILE"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"WARN_FILE"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">springProfile</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在需要打印日志类添加注解@@Slf4j，如果想要将相关异常日志打印到本地中，可使用log.error()，案例：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//统一异常处理</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="meta">@Slf</span>4j<span class="comment">//日志处理</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalExceptionHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//自定义异常处理</span></span><br><span class="line">    <span class="comment">//注意自定义异常是无法自动抛出的，需要手动抛出异常</span></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(GuliException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    @<span class="title">ResponseBody</span>//为了返回数据</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">R</span> <span class="title">error</span>(<span class="title">GuliException</span> <span class="title">e</span>)</span>&#123;</span><br><span class="line">        log.error(e.getMessage());<span class="comment">//打印日志到本地</span></span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> R.error().code(e.getCode()).message(e.getMsg());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：后台接口的开发</p><p>父工程=&gt;子模块=&gt;数据库=&gt;生成代码=&gt;接口开发</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1、创建一个父工程guli-parent，并且配置依赖版本管理&quot;&gt;&lt;a href=&quot;#1、创建一个父工程guli-parent，并且配置依赖版本管理&quot; class=&quot;headerlink&quot; title=&quot;1、创建一个父工程guli_parent，并且配置依赖版本管
      
    
    </summary>
    
    
      <category term="后端" scheme="http://yoursite.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="谷粒学院" scheme="http://yoursite.com/categories/%E5%90%8E%E7%AB%AF/%E8%B0%B7%E7%B2%92%E5%AD%A6%E9%99%A2/"/>
    
    
      <category term="mybatis-plus" scheme="http://yoursite.com/tags/mybatis-plus/"/>
    
      <category term="swagger" scheme="http://yoursite.com/tags/swagger/"/>
    
      <category term="logback" scheme="http://yoursite.com/tags/logback/"/>
    
      <category term="exception" scheme="http://yoursite.com/tags/exception/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+github快速搭建个人博客系统</title>
    <link href="http://yoursite.com/2020/06/24/xo-github%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/"/>
    <id>http://yoursite.com/2020/06/24/xo-github%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/</id>
    <published>2020-06-24T09:25:00.000Z</published>
    <updated>2020-06-24T10:38:48.496Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>对于一个刚入门的程序员来说，写博客是一个非常好也是非常重要的习惯，不仅可以记录我们过去学习的内容，方便自己随时回顾，也是记录我们生活点滴的地方，但是对于后端程序员来说，前端只是可能是我们的一道坎，所以决定另辟蹊径，使用hexo这个轻量级博客框架来实现，亲测，效果炫酷，话不多说，我先上图</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/kRXe5KLych7zb21.png" alt="image-20200624172936139"></p><h2 id="涉及技术"><a href="#涉及技术" class="headerlink" title="涉及技术"></a>涉及技术</h2><ul><li>node</li><li>hexo</li><li>git</li><li>github仓库</li><li>markdown</li><li>typora+picgo+sm.ms</li></ul><p><code>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。这里是官网和github地址。大家可以进入官网进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</code></p><h2 id="搭建步骤："><a href="#搭建步骤：" class="headerlink" title="搭建步骤："></a>搭建步骤：</h2><h3 id="1、node-js下载安装"><a href="#1、node-js下载安装" class="headerlink" title="1、node.js下载安装"></a>1、node.js下载安装</h3><p>直接到官网下载安装即可，基本操作我就不多说了</p><p>安装完成后打开命令窗口测试：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 如果显示版本号就说明安装成功了</span></span><br><span class="line">node -v</span><br><span class="line">npm -v                                                                     </span><br><span class="line"><span class="meta">#</span><span class="bash"> 由于服务器原因可以配置一个淘宝镜像来快速的下载和安装一下文件</span></span><br><span class="line">npm config set registry https://registry.npm.taobao.org</span><br><span class="line"><span class="meta">#</span><span class="bash"> 检查镜像是否配置成功</span></span><br><span class="line">npm config get registry</span><br></pre></td></tr></table></figure><h3 id="2、hexo安装"><a href="#2、hexo安装" class="headerlink" title="2、hexo安装"></a>2、hexo安装</h3><p>安装好nodejs之后，接下来就可以按照下方命令开始安装hexo了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载安装hexo</span></span><br><span class="line">npm install hexo-cli -g </span><br><span class="line"><span class="meta">#</span><span class="bash"> 检查版本号来检验是否安装成功</span></span><br><span class="line">hexo -v </span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入一个空的文件夹来作为你的博客资源目录</span></span><br><span class="line">hexo init blog </span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入你的博客资源目录</span></span><br><span class="line">cd blog</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装hexo需要的依赖</span></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>注意：因为hexo init是从github上面拉取资源的，所以速度会非常慢，耐心等候一下，如果失败的话就尝试多几次</p><p><strong>hexo的项目目录文件</strong>，具体功能如下</p><ul><li><p>node_modules: 依赖包</p></li><li><p>public：存放生成的页面</p></li><li><p>scaffolds：生成文章的一些模板</p></li><li><p>source：用来存放你的文章</p></li><li><p>themes：主题</p></li><li><p>_config.yml: 博客的配置文件</p></li></ul><h3 id="3、生成静态文件和运行hexo"><a href="#3、生成静态文件和运行hexo" class="headerlink" title="3、生成静态文件和运行hexo"></a>3、生成静态文件和运行hexo</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 生成静态资源文件</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="meta">#</span><span class="bash"> 本地服务器运</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>启动浏览器访问<code>http://localhost:4000/</code>就能看到你的博客的初始demo了</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/R9FNlP35yKToIJV.png" alt="image-20200624174023379"></p><p>这就是初始化界面</p><p>在自定义配置之前，我先说一下hexo的常用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 该命令执行后在hexo站点根目录下生成public文件夹</span></span><br><span class="line">hexo g 或 hexo generate</span><br><span class="line"><span class="meta">#</span><span class="bash"> 把public文件夹删除</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动服务预览</span></span><br><span class="line">hexo s 或 hexo server</span><br><span class="line"><span class="meta">#</span><span class="bash"> 部署项目</span></span><br><span class="line">hexo d 或 hexo deploy</span><br></pre></td></tr></table></figure><h3 id="4、安装git"><a href="#4、安装git" class="headerlink" title="4、安装git"></a>4、安装git</h3><p>如果要部署到远程仓库获取服务器的话需要用到git，到官网下载安装即可</p><p><code>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的hexo博客文章，上传到GitHub或码云的工具。</code></p><p>安装完成之后，可以先去了解一下怎么使用git</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 检查git是否安装成功</span></span><br><span class="line">git --version</span><br></pre></td></tr></table></figure><h3 id="5、创建github创库"><a href="#5、创建github创库" class="headerlink" title="5、创建github创库"></a>5、创建github创库</h3><p>打开github官网=&gt;注册账号=&gt;登陆账号</p><p>点击右侧 “+” 号，然后点击 New repository 添加仓库，如图 ：</p><p>强调：这里创建的<code>仓库名称</code>必须为 <code>你的用户名.github.io</code>，username 替换成你的 github 用户名，每个账户有且只有一个仓库用来存放网页静态文件，这里名称是固定的。当创建其他仓库的时候，仓库名称可以自定义。</p><p><img src= "/img/loading.gif" data-src="https://upload-images.jianshu.io/upload_images/1869686-22848fdc4dd57b97.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1054/format/webp" alt="img"></p><p>完成上述操作后，点击 Create repository 创建仓库。</p><p>仓库创建成功后，如图 ：</p><p><img src= "/img/loading.gif" data-src="https://upload-images.jianshu.io/upload_images/1869686-2e8037460f23ad61.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>这里有两个地址，一个是 Https，一个是 SSH 。Https 每次提交都需要输入用户名和密码，SSH 只要添加了 SSH key 值，以后提交不需要输入用户名和密码。</p><p>GitHub 添加 SSH key</p><p>先创key</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh-keygen -t rsa -C <span class="string">"你的邮箱"</span></span></span><br></pre></td></tr></table></figure><p>把 “你的邮箱” 替换成你真实的邮箱，然后点击回车。接着会让你输入文件名，点击回车直接忽略，接着会让输入两次密码，点击两次回车，直接设置为空，不用输入密码 。</p><p>创建成功后，可以通过如下命令拷贝 SSH key 的内容 ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> clip &lt; ~/.ssh/id_rsa.pub<span class="string">"</span></span></span><br></pre></td></tr></table></figure><p>现在已拷贝了 SSH key 的内容，那么 GitHub 如何添加 SSH key 呢 ？点击右上角头像，然后点击Settings 。如图 ：</p><p><img src= "/img/loading.gif" data-src="https://upload-images.jianshu.io/upload_images/1869686-32beff10b531ffc7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1072/format/webp" alt="img"></p><p>然后点击 New SSH key，如图 ：</p><p><img src= "/img/loading.gif" data-src="https://upload-images.jianshu.io/upload_images/1869686-0a647ad9e0e23837.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/917/format/webp" alt="img"></p><p>把之前拷贝的内容粘贴到 key 里面，然后点击 Add SSH key，如图 ：</p><p><img src= "/img/loading.gif" data-src="https://upload-images.jianshu.io/upload_images/1869686-bbdc00531225023d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>怎么去验证是否已经添加成功了呢 ？通过如下命令 ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh -T git@github.com</span></span><br></pre></td></tr></table></figure><p>验证成功，如图 ：</p><p><img src= "/img/loading.gif" data-src="https://upload-images.jianshu.io/upload_images/1869686-33c2ff53006d63c5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/560/format/webp" alt="img"></p><p>然后复制刚刚创建的仓库https地址，如图：</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/EqQAUlgWYO6pGx1.png" alt="image-20200624175916296"></p><p>现在这样就成了 ？还差一步，现在我们需要去设置 hexo 配置文件 _config.yml。</p><p><code>注意：</code>对应的目录 ：blog/_config.yml/，blog 为 hexo init 初始化文件夹的名称，替换成你自己初始化文件夹的名称</p><p>修改 depoly ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git </span><br><span class="line"><span class="meta">  #</span><span class="bash"> 粘贴后，在https://后面加上github的用户名:密码,这样是为了在以后部署的时候重复输入账号密码</span></span><br><span class="line">  repo: https://用户名:密码@github.com/用户名/用户名.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>设置完成之后，通过git命令将静态资源上传到github仓库中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 先清理一下静态资源</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="meta">#</span><span class="bash">重新生成</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="meta">#</span><span class="bash"> 部署github</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>至此，就可以通过github page来访问博客了，格式如下：</p><p>https://用户名.github.io</p><h3 id="6、更换主题"><a href="#6、更换主题" class="headerlink" title="6、更换主题"></a>6、更换主题</h3><p>如果不喜欢默认的主题，可以到hexo官网找自己喜欢的主题，克隆/下载到blog目录下的theme文件夹，然后blog目录下的主配置文件，找到theme，换成你想要的主题即可，换好了重新启动下hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 先清理一下静态资源</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="meta">#</span><span class="bash">重新生成</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动hexo，测试期间就用本地了，不用远程的github</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><h3 id="7、配置主题"><a href="#7、配置主题" class="headerlink" title="7、配置主题"></a>7、配置主题</h3><p>博客主题具体怎么配置，不同的主题的配置方法不一样的，需要自己去看下自己选择的主题的官方文档，一般说的还是比较详细的，这里推荐我使用的butterfly，官方文档说的也比较详细：</p><p><a href="https://demo.jerryc.me/posts/21cfbf15/" target="_blank" rel="noopener">https://demo.jerryc.me/posts/21cfbf15/</a></p><p>提醒：建议一边配置，一边测试，不然全部配置完了，回头查不出哪里错了就尴尬了</p><h3 id="8、配置图床"><a href="#8、配置图床" class="headerlink" title="8、配置图床"></a>8、配置图床</h3><p>在我们编写博客文章的过程中，不可避免的需要引用图片来更加直观和生动。而本地图片的地址链接会让你的文章的一些上传等操作不方便。这里带大家搭建自己的图床并关联到Typro上一键上传云端。</p><p><strong>Typro+PicGo+SM.MS</strong></p><p>安装PicGO</p><p>所谓图床工具，就是自动把本地图片转换成链接的一款工具，网络上有很多图床工具，就目前使用种类而言，PicGo 算得上一款比较优秀的图床工具。它是一款用 <code>Electron-vue</code> 开发的软件，可以支持微博，七牛云，腾讯云COS，又拍云，GitHub，阿里云OSS，SM.MS，imgur 等8种常用图床，功能强大，简单易用。</p><p>下载地址：<a href="https://github.com/Molunerfinn/PicGo/releases" target="_blank" rel="noopener">https://github.com/Molunerfinn/PicGo/releases</a></p><p>作为白嫖党，我选择<a href="https://sm.ms/" target="_blank" rel="noopener">SM.MS</a>，对于个人用户来说完全免费且够用。</p><p>去官网注册并登陆</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/05/24/Uo2OTkEeiJHz5Lr.png" alt="image-20200524202230072"></p><p>去这个<a href="https://sm.ms/home/apitoken" target="_blank" rel="noopener">地址</a>获取你的<strong>Token</strong></p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/05/24/8bxq9AXajGig1pY.png" alt="image-20200524202608254"></p><p>在PicGo中安装插件</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/05/24/5zMXx9gaJeVWU3Y.png" alt="image-20200524202746075"></p><p>连接图床（其他不用的图床可以隐藏掉）</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/05/24/8bIRGChUwlkDX9O.png" alt="image-20200524202955417"></p><p>连接Typro</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/05/24/idpvCNho6zLKMBm.png" alt="image-20200524203211760"></p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/05/24/kfBJaPT8H24KbCR.png" alt="image-20200524203305672"></p><p>最后可以进行测试，如果成功就说明已经搭建成功了。</p><h3 id="9、管理博客"><a href="#9、管理博客" class="headerlink" title="9、管理博客"></a>9、管理博客</h3><p>以上工作都完成之后，就可以开始编写你的博客啦</p><p>但是如果按照目前的情况，只能将写好的文章放到blog目录西的source目录下的_post目录下，然后重启服务或者重新部署，这样非常麻烦，所以我们可以引用一个插件——hexo admin</p><p>首先安装hexo-admin</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-admin</span><br></pre></td></tr></table></figure><p>然后启动服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>即可在localhost:4000/admin/中编辑博文了。</p><p><img src= "/img/loading.gif" data-src="https://oscimg.oschina.net/oscnet/e5e70a805181d5fbe0bfdc71645724ddd0d.jpg" alt="img"></p><p>另外如果想设置账号密码登陆admin的话，可以点击导航栏的settings</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/DntFfs6TJVzhH1w.png" alt="image-20200624183043124"></p><p>设置好后，拉到最下面Admin Config Section，复制粘贴到blog目录下的配置文件最下方即可</p><p>但是再想一想，每次都要手动去启动服务麻不麻烦啊，如果觉得麻烦的话可以设置hexo服务开机启动，这样你就可以随时进入次界面管理自己的博客了，具体设置如下：</p><p>在blog目录下新建两个文件：</p><ul><li>hexo-server.bat，内容如下：(注意：具体的路径请改为自己的项目路径)</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">E:</span><br><span class="line">cd E:/Programming/Project/myblog</span><br><span class="line">hexo s -d</span><br></pre></td></tr></table></figure><ul><li>hexo-server.vbs，内容如下：(注意斜杠的数量和方向)</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set ws=WScript.CreateObject("WScript.Shell")</span><br><span class="line">ws.Run "E:\\Programming\\Project\\myblog\\hexo-server.bat /start",0</span><br></pre></td></tr></table></figure><p>然后将hexo-server.vbs文件剪切到以下目录：</p><p>C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp</p><p>这样就可以开机启动hexo服务了</p><h3 id="10、一键部署"><a href="#10、一键部署" class="headerlink" title="10、一键部署"></a>10、一键部署</h3><p>已经实现了管理博客的功能，但是为了让别人能随时访问到我们的博客，最终还是要部署到github上的，还是一样的问题，每次去命令行中敲hexo d就比较烦，有没有其他办法？</p><p>hexo-admin同时提供了一键部署的功能</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/UeqAM4ijZ8sFKSH.png" alt="image-20200624183155640"></p><p>但是使用前还需要配置一下，不然无法使用</p><p>在blog目录下，新建一个文件：</p><p>hexo-deploy.sh，内容一下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><p>然后打开blog配置文件，拉到最后刚刚添加的admin配置，添加一个配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> hexo-admin authentification</span></span><br><span class="line">admin:</span><br><span class="line">  username: 手动打码</span><br><span class="line">  password_hash: 手动打码</span><br><span class="line">  secret: 手动打码</span><br><span class="line">  deployCommand: 'sh hexo-deploy.sh'</span><br></pre></td></tr></table></figure><p>最后，在你添加的博文的时候，可以同事点击deploy部署到github了</p><p>以上，觉得有帮助的可以帮忙分享一下哦</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言：&quot;&gt;&lt;a href=&quot;#前言：&quot; class=&quot;headerlink&quot; title=&quot;前言：&quot;&gt;&lt;/a&gt;前言：&lt;/h2&gt;&lt;p&gt;对于一个刚入门的程序员来说，写博客是一个非常好也是非常重要的习惯，不仅可以记录我们过去学习的内容，方便自己随时回顾，也是记录我们生活
      
    
    </summary>
    
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>springboot+vue前后端分离博客项目</title>
    <link href="http://yoursite.com/2020/06/24/ringboot-vue%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE/"/>
    <id>http://yoursite.com/2020/06/24/ringboot-vue%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE/</id>
    <published>2020-06-24T08:49:00.000Z</published>
    <updated>2020-06-24T10:41:05.917Z</updated>
    
    <content type="html"><![CDATA[<h1 id="确定技术栈"><a href="#确定技术栈" class="headerlink" title="确定技术栈"></a>确定技术栈</h1><h2 id="后端技术栈："><a href="#后端技术栈：" class="headerlink" title="后端技术栈："></a>后端技术栈：</h2><ul><li>springboot</li><li>mybatis plus</li><li>shiro</li><li>lombok</li><li>redis</li><li>hibernate validatior(springboot内置)</li><li>jwt</li></ul><h3 id="后端开发步骤："><a href="#后端开发步骤：" class="headerlink" title="后端开发步骤："></a>后端开发步骤：</h3><h4 id="1、建好数据库"><a href="#1、建好数据库" class="headerlink" title="1、建好数据库"></a>1、建好数据库</h4><h4 id="2、springboot整合mybatis-plus（整合之后别忘了先测试一下）"><a href="#2、springboot整合mybatis-plus（整合之后别忘了先测试一下）" class="headerlink" title="2、springboot整合mybatis plus（整合之后别忘了先测试一下）"></a>2、springboot整合mybatis plus（整合之后别忘了先测试一下）</h4><h4 id="3、前后端统一结果封装"><a href="#3、前后端统一结果封装" class="headerlink" title="3、前后端统一结果封装"></a>3、前后端统一结果封装</h4><p>这里我们用到了一个Result的类，这个用于我们的异步统一返回的结果封装。一般来说，结果里面有几个要素必要的</p><ul><li>是否成功，可用code表示（如200表示成功，400表示异常）</li><li>结果消息</li><li>结果数据</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.common.lang;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Result</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="comment">//状态码,200一般表示正常，非200表示异常</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> code;</span><br><span class="line">    <span class="comment">//信息</span></span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line">    <span class="comment">//数据</span></span><br><span class="line">    <span class="keyword">private</span> Object data;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//操作成功的结果封装</span></span><br><span class="line">    <span class="comment">//对于前端来说，操作成功一般都是200，他们一般比较注重我data，所以我们需要进一步封装</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title">success</span><span class="params">(Object data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> success(<span class="number">200</span>,<span class="string">"操作成功"</span>,data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法封装，方便别处调用</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title">success</span><span class="params">(<span class="keyword">int</span> code,String msg,Object data)</span></span>&#123;</span><br><span class="line">        Result result = <span class="keyword">new</span> Result();</span><br><span class="line">        result.setCode(code);</span><br><span class="line">        result.setMsg(msg);</span><br><span class="line">        result.setData(data);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//往往操作失败之后，没有什么数据返回的，看中的是msg，所以我们可以再进一层封装</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title">fail</span><span class="params">(String msg)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> success(<span class="number">400</span>, msg,<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//操作失败的状态码一般是400，msg一般是错误原因什么的，所以这里最好也加上</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title">fail</span><span class="params">(String msg, Object data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> success(<span class="number">400</span>,msg,data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//操作失败的结果封装</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title">fail</span><span class="params">(<span class="keyword">int</span> code,String msg,Object data)</span></span>&#123;</span><br><span class="line">        Result result = <span class="keyword">new</span> Result();</span><br><span class="line">        result.setCode(code);</span><br><span class="line">        result.setMsg(msg);</span><br><span class="line">        result.setData(data);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4、shiro整合jwt逻辑分析"><a href="#4、shiro整合jwt逻辑分析" class="headerlink" title="4、shiro整合jwt逻辑分析"></a>4、shiro整合jwt逻辑分析</h4><ul><li><p>登陆逻辑</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/vizs7gK8Q36xkNj.png" alt="image-20200611113753252"></p></li><li><p>访问资源（接口）时的shiro&amp;jwt逻辑</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/JFZc7hiTYOgxdA4.png" alt="image-20200611115119307"></p></li></ul><h4 id="5、shiro代码编写"><a href="#5、shiro代码编写" class="headerlink" title="5、shiro代码编写"></a>5、shiro代码编写</h4><p>考虑到后面可能需要做集群、负载均衡等，所以就需要会话共享，而shiro的缓存和会话信息，我们一般考虑使用redis来存储这些数据，所以，我们不仅仅需要整合shiro，同时也需要整合redis。在开源的项目中，我们找到了一个starter可以快速整合shiro-redis，配置简单，这里也推荐大家使用。</p><p>而因为我们需要做的是前后端分离项目的骨架，所以一般我们会采用token或者jwt作为跨域身份验证解决方案。所以整合shiro的过程中，我们需要引入jwt的身份验证过程。</p><p>第一步：导入shiro-redis的starter包：还有jwt的工具包，以及为了简化开发，我引入了hutool工具包。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.crazycake<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-redis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- hutool工具类--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- jwt --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第二部：配置shiro</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ryan.shiro.AccountRealm;</span><br><span class="line"><span class="keyword">import</span> com.ryan.shiro.JwtFilter;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.DefaultSessionStorageEvaluator;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.DefaultSubjectDAO;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.SecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.session.mgt.SessionManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.spring.web.ShiroFilterFactoryBean;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.spring.web.config.DefaultShiroFilterChainDefinition;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.spring.web.config.ShiroFilterChainDefinition;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.web.mgt.DefaultWebSecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.web.session.mgt.DefaultWebSessionManager;</span><br><span class="line"><span class="keyword">import</span> org.crazycake.shiro.RedisCacheManager;</span><br><span class="line"><span class="keyword">import</span> org.crazycake.shiro.RedisSessionDAO;</span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.Filter;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * shiro启用注解拦截控制器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShiroConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    JwtFilter jwtFilter;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SessionManager <span class="title">sessionManager</span><span class="params">(RedisSessionDAO redisSessionDAO)</span> </span>&#123;</span><br><span class="line">        DefaultWebSessionManager sessionManager = <span class="keyword">new</span> DefaultWebSessionManager();</span><br><span class="line">        sessionManager.setSessionDAO(redisSessionDAO);</span><br><span class="line">        <span class="keyword">return</span> sessionManager;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DefaultWebSecurityManager <span class="title">securityManager</span><span class="params">(AccountRealm accountRealm,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                     SessionManager sessionManager,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                     RedisCacheManager redisCacheManager)</span> </span>&#123;</span><br><span class="line">        DefaultWebSecurityManager securityManager = <span class="keyword">new</span> DefaultWebSecurityManager(accountRealm);</span><br><span class="line">        securityManager.setSessionManager(sessionManager);</span><br><span class="line">        securityManager.setCacheManager(redisCacheManager);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 关闭shiro自带的session，详情见文档</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        DefaultSubjectDAO subjectDAO = <span class="keyword">new</span> DefaultSubjectDAO();</span><br><span class="line">        DefaultSessionStorageEvaluator defaultSessionStorageEvaluator = <span class="keyword">new</span> DefaultSessionStorageEvaluator();</span><br><span class="line">        defaultSessionStorageEvaluator.setSessionStorageEnabled(<span class="keyword">false</span>);</span><br><span class="line">        subjectDAO.setSessionStorageEvaluator(defaultSessionStorageEvaluator);</span><br><span class="line">        securityManager.setSubjectDAO(subjectDAO);</span><br><span class="line">        <span class="keyword">return</span> securityManager;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//shiro过滤器链的定义</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ShiroFilterChainDefinition <span class="title">shiroFilterChainDefinition</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DefaultShiroFilterChainDefinition chainDefinition = <span class="keyword">new</span> DefaultShiroFilterChainDefinition();</span><br><span class="line">        Map&lt;String, String&gt; filterMap = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line">        <span class="comment">//所有的链接都会经过我们jwt</span></span><br><span class="line">        filterMap.put(<span class="string">"/**"</span>, <span class="string">"jwt"</span>); <span class="comment">// 主要通过注解方式校验权限</span></span><br><span class="line">        chainDefinition.addPathDefinitions(filterMap);</span><br><span class="line">        <span class="keyword">return</span> chainDefinition;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span>(<span class="string">"shiroFilterFactoryBean"</span>)</span><br><span class="line">        <span class="function"><span class="keyword">public</span> ShiroFilterFactoryBean <span class="title">shiroFilterFactoryBean</span><span class="params">(SecurityManager securityManager,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                             ShiroFilterChainDefinition shiroFilterChainDefinition)</span> </span>&#123;</span><br><span class="line">        ShiroFilterFactoryBean shiroFilter = <span class="keyword">new</span> ShiroFilterFactoryBean();</span><br><span class="line">        shiroFilter.setSecurityManager(securityManager);</span><br><span class="line">        Map&lt;String, Filter&gt; filters = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        filters.put(<span class="string">"jwt"</span>, jwtFilter);</span><br><span class="line">        shiroFilter.setFilters(filters);</span><br><span class="line">        Map&lt;String, String&gt; filterMap = shiroFilterChainDefinition.getFilterChainMap();</span><br><span class="line">        shiroFilter.setFilterChainDefinitionMap(filterMap);</span><br><span class="line">        <span class="keyword">return</span> shiroFilter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 开启注解代理（默认好像已经开启，可以不要）</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AuthorizationAttributeSourceAdvisor <span class="title">authorizationAttributeSourceAdvisor</span><span class="params">(SecurityManager securityManager)</span></span>&#123;</span><br><span class="line">        AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor = <span class="keyword">new</span> AuthorizationAttributeSourceAdvisor();</span><br><span class="line">        authorizationAttributeSourceAdvisor.setSecurityManager(securityManager);</span><br><span class="line">        <span class="keyword">return</span> authorizationAttributeSourceAdvisor;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DefaultAdvisorAutoProxyCreator <span class="title">getDefaultAdvisorAutoProxyCreator</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DefaultAdvisorAutoProxyCreator creator = <span class="keyword">new</span> DefaultAdvisorAutoProxyCreator();</span><br><span class="line">        <span class="keyword">return</span> creator;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第三步：导入jwt工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.Claims;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.Jwts;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.SignatureAlgorithm;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * jwt工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"ryan.jwt"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JwtUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String secret;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> expire;</span><br><span class="line">    <span class="keyword">private</span> String header;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成jwt token</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">generateToken</span><span class="params">(<span class="keyword">long</span> userId)</span> </span>&#123;</span><br><span class="line">        Date nowDate = <span class="keyword">new</span> Date();</span><br><span class="line">        <span class="comment">//过期时间</span></span><br><span class="line">        Date expireDate = <span class="keyword">new</span> Date(nowDate.getTime() + expire * <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Jwts.builder()</span><br><span class="line">                .setHeaderParam(<span class="string">"typ"</span>, <span class="string">"JWT"</span>)</span><br><span class="line">                .setSubject(userId+<span class="string">""</span>)</span><br><span class="line">                .setIssuedAt(nowDate)</span><br><span class="line">                .setExpiration(expireDate)</span><br><span class="line">                .signWith(SignatureAlgorithm.HS512, secret)</span><br><span class="line">                .compact();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Claims <span class="title">getClaimByToken</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Jwts.parser()</span><br><span class="line">                    .setSigningKey(secret)</span><br><span class="line">                    .parseClaimsJws(token)</span><br><span class="line">                    .getBody();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            log.debug(<span class="string">"validate is token error "</span>, e);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * token是否过期</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>  true：过期</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isTokenExpired</span><span class="params">(Date expiration)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> expiration.before(<span class="keyword">new</span> Date());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第四步：编写jwtFilter类</p><ul><li><p>这个过滤器是我们的重点，这里我们继承的是Shiro内置的AuthenticatingFilter，一个可以内置了可以自动登录方法的的过滤器，有些同学继承BasicHttpAuthenticationFilter也是可以的。</p><p>我们需要重写几个方法：</p><ol><li>createToken：实现登录，我们需要生成我们自定义支持的JwtToken</li><li>onAccessDenied：拦截校验，当头部没有Authorization时候，我们直接通过，不需要自动登录；当带有的时候，首先我们校验jwt的有效性，没问题我们就直接执行executeLogin方法实现自动登录</li><li>onLoginFailure：登录异常时候进入的方法，我们直接把异常信息封装然后抛出</li><li>preHandle：拦截器的前置拦截，因为我们是前后端分析项目，项目中除了需要跨域全局配置之外，我们再拦截器中也需要提供跨域支持。这样，拦截器才不会在进入Controller之前就被限制了。</li></ol></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.json.JSONUtil;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.toolkit.StringUtils;</span><br><span class="line"><span class="keyword">import</span> com.ryan.common.lang.Result;</span><br><span class="line"><span class="keyword">import</span> com.ryan.utils.JwtUtils;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.Claims;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.ExpiredCredentialsException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.web.filter.authc.AuthenticatingFilter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义jwt的过滤器JwtFilter</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这个过滤器是我们的重点，这里我们继承的是Shiro内置的AuthenticatingFilter，</span></span><br><span class="line"><span class="comment">一个可以内置了可以自动登录方法的的过滤器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JwtFilter</span> <span class="keyword">extends</span> <span class="title">AuthenticatingFilter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    JwtUtils jwtUtils;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//实现登录，我们需要生成我们自定义支持的JwtToken</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthenticationToken <span class="title">createToken</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//获取Token</span></span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) servletRequest;</span><br><span class="line">        String jwt = request.getHeader(<span class="string">"Authorization"</span>);<span class="comment">//获取jwt，,jwt是放在header里面的</span></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(jwt))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;<span class="comment">//jwt为空的话就没必要登陆，直接跳过</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//有的话，封装成token</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> JwtToken(jwt);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        思考：这里的createToken有什么用呢？</span></span><br><span class="line"><span class="comment">            底层就是调用了subject.login(token)</span></span><br><span class="line"><span class="comment">            然后再交给realm进行处理</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//拦截校验，当头部没有Authorization时候，我们直接通过，不需要自动登录；</span></span><br><span class="line">    <span class="comment">// 当带有的时候，首先我们校验jwt的有效性，没问题我们就直接执行executeLogin方法实现自动登录</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">onAccessDenied</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) servletRequest;</span><br><span class="line">        String jwt = request.getHeader(<span class="string">"Authorization"</span>);<span class="comment">//获取jwt，,jwt是放在header里面的</span></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(jwt))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;<span class="comment">//没jwt，直接跳过，进入接口注解过滤</span></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//如果有，则需要校验jwt</span></span><br><span class="line">            Claims claim = jwtUtils.getClaimByToken(jwt);</span><br><span class="line">            <span class="comment">//如果claim为空或者token过期了，则抛出异常</span></span><br><span class="line">            <span class="keyword">if</span> (claim == <span class="keyword">null</span> || jwtUtils.isTokenExpired(claim.getExpiration()))&#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> ExpiredCredentialsException(<span class="string">"token已过期，请重新登录"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//执行登陆，接下来就是交给realm处理的</span></span><br><span class="line">            <span class="keyword">return</span> executeLogin(servletRequest,servletResponse);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//从executeLogin方法原码可以看到，登录异常时候进入onLoginFailure方法，我们直接把异常信息封装然后抛出</span></span><br><span class="line">    <span class="comment">//因为是前后端分离，当出现登陆异常时，我们应该封装结果集</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">onLoginFailure</span><span class="params">(AuthenticationToken token, AuthenticationException e, ServletRequest request, ServletResponse response)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        HttpServletResponse httpServletResponse = (HttpServletResponse) response;</span><br><span class="line">        Throwable throwable = e.getCause() == <span class="keyword">null</span> ? e : e.getCause();</span><br><span class="line">        Result result = Result.fail(throwable.getMessage());</span><br><span class="line">        String json = JSONUtil.toJsonStr(result);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            httpServletResponse.getWriter().print(json);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException ex) &#123;</span><br><span class="line">            ex.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第四步：新建一个jwtToken类</p><ul><li>shiro默认supports的是UsernamePasswordToken，而我们现在采用了jwt的方式，所以这里我们自定义一个JwtToken，来完成shiro的supports方法。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationToken;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JwtToken</span> <span class="keyword">implements</span> <span class="title">AuthenticationToken</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String token;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">JwtToken</span><span class="params">(String jwt)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.token = jwt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getPrincipal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> token;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getCredentials</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> token;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第五步：新建一个AccountProfile类</p><ul><li>而在AccountRealm我们还用到了AccountProfile，这是为了登录成功之后返回的一个用户信息的载体</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountProfile</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String avatar;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第六步：新建AccountRealm类</p><ul><li><p>AccountRealm是shiro进行登录或者权限校验的逻辑所在，算是核心了，我们需要重写3个方法，分别是</p><ul><li>supports：为了让realm支持jwt的凭证校验</li><li>doGetAuthorizationInfo：权限校验</li><li>doGetAuthenticationInfo：登录认证校验</li></ul></li><li><p>其实主要就是doGetAuthenticationInfo登录认证这个方法，可以看到我们通过jwt获取到用户信息，判断用户的状态，最后异常就抛出对应的异常信息，否者封装成SimpleAuthenticationInfo返回给shiro。 接下来我们逐步分析里面出现的新类：</p><p>1、shiro默认supports的是UsernamePasswordToken，而我们现在采用了jwt的方式，所以这里我们自定义一个JwtToken，来完成shiro的supports方法。</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.shiro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.bean.BeanUtil;</span><br><span class="line"><span class="keyword">import</span> com.ryan.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.ryan.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.ryan.utils.JwtUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.AuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.AuthorizingRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.PrincipalCollection;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountRealm</span>  <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    JwtUtils jwtUtils;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//需要声明支持什么token</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">supports</span><span class="params">(AuthenticationToken token)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> token <span class="keyword">instanceof</span> JwtToken;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principalCollection)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//登陆处理</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken token)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">        <span class="comment">//强转</span></span><br><span class="line">        JwtToken jwtToken = (JwtToken) token;</span><br><span class="line">        String userId = jwtUtils.getClaimByToken((String) jwtToken.getPrincipal()).getSubject();</span><br><span class="line">        User user = userService.getById(Long.valueOf(userId));</span><br><span class="line">        <span class="keyword">if</span>(user == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UnknownAccountException(<span class="string">"账户不存在"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (user.getStatus() == -<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> LockedAccountException(<span class="string">"账户已被锁定"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        AccountProfile profile = <span class="keyword">new</span> AccountProfile();</span><br><span class="line">        BeanUtil.copyProperties(user, profile);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SimpleAuthenticationInfo(profile, jwtToken.getCredentials(),getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>基本的校验的路线完成之后，我们需要少量的基本信息配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">shiro-redis:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">redis-manager:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:6379</span></span><br><span class="line"><span class="attr">ryan:</span></span><br><span class="line">  <span class="attr">jwt:</span></span><br><span class="line">    <span class="comment"># 加密秘钥</span></span><br><span class="line">    <span class="attr">secret:</span> <span class="string">f4e2e52034348f86b67cde581c0f9eb5</span></span><br><span class="line">    <span class="comment"># token有效时长，7天，单位秒</span></span><br><span class="line">    <span class="attr">expire:</span> <span class="number">604800</span></span><br><span class="line">    <span class="attr">header:</span> <span class="string">token</span></span><br></pre></td></tr></table></figure><p>另外，如果你项目有使用spring-boot-devtools，需要添加一个配置文件，在resources目录下新建文件夹META-INF，然后新建文件spring-devtools.properties，这样热重启时候才不会报错。</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">restart.include.shiro-redis</span>=<span class="string">/shiro-[\\w-\\.]+jar</span></span><br></pre></td></tr></table></figure><h4 id="6、全局异常处理"><a href="#6、全局异常处理" class="headerlink" title="6、全局异常处理"></a>6、全局异常处理</h4><p>新建一个exception包，然后新建一个全局异常处理的类GlobalExceptionHandler</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ryan.common.lang.Result;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.ShiroException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestControllerAdvice;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@RestControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalExceptionHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//除了runtime还有shiro</span></span><br><span class="line">    <span class="meta">@ResponseStatus</span>(HttpStatus.UNAUTHORIZED)<span class="comment">//未授权</span></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(value = ShiroException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">Result</span> <span class="title">handler</span>(<span class="title">ShiroException</span> <span class="title">e</span>)</span>&#123;</span><br><span class="line">        log.error(<span class="string">"运行时异常:----------------&#123;&#125;"</span>,e);</span><br><span class="line">        <span class="keyword">return</span> Result.fail(<span class="number">401</span>,e.getMessage(),<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//大异常RuntimeException</span></span><br><span class="line">    <span class="meta">@ResponseStatus</span>(HttpStatus.BAD_REQUEST)<span class="comment">//返回状态码，让前端知道</span></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(value = RuntimeException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">Result</span> <span class="title">handler</span>(<span class="title">RuntimeException</span> <span class="title">e</span>)</span>&#123;</span><br><span class="line">        log.error(<span class="string">"运行时异常:----------------&#123;&#125;"</span>,e);</span><br><span class="line">        <span class="keyword">return</span> Result.fail(e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接口添加一个要求认证后才能访问的注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequiresAuthentication</span></span><br></pre></td></tr></table></figure><p>测试：</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/IyKalkGZzoJqucf.png" alt="image-20200611140254230"></p><h4 id="7、实体校验"><a href="#7、实体校验" class="headerlink" title="7、实体校验"></a>7、实体校验</h4><p>当我们表单数据提交的时候，前端的校验我们可以使用一些类似于jQuery Validate等js插件实现，而后端我们可以使用Hibernate validatior来做校验。</p><p>我们使用springboot框架作为基础，那么就已经自动集成了Hibernate validatior。</p><p>那么用起来啥样子的呢？</p><p>第一步：首先在实体的属性上添加对应的校验规则，比如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@TableId</span>(value = <span class="string">"id"</span>, type = IdType.AUTO)</span><br><span class="line"><span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line"><span class="meta">@NotBlank</span>(message = <span class="string">"昵称不能为空"</span>)</span><br><span class="line"><span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String avatar;</span><br><span class="line"></span><br><span class="line"><span class="meta">@NotBlank</span>(message = <span class="string">"邮箱不能为空"</span>)</span><br><span class="line"><span class="meta">@Email</span>(message = <span class="string">"邮箱格式不正确"</span>)</span><br><span class="line"><span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Integer status;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> LocalDateTime created;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> LocalDateTime lastLogin;</span><br></pre></td></tr></table></figure><p>第二步 ：这里我们使用@Validated注解方式，如果实体不符合要求，系统会抛出异常，那么我们的异常处理中就捕获到MethodArgumentNotValidException。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/save"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">save</span><span class="params">(@Validated @RequestBody User user)</span></span>&#123;</span><br><span class="line">    <span class="comment">//@Validated注解方式，如果实体不符合要求，系统会抛出异常MethodArgumentNotValidException</span></span><br><span class="line">    <span class="comment">//这就要求我们需要在全局异常处理中捕捉他</span></span><br><span class="line">    <span class="keyword">return</span> Result.success(user);</span><br></pre></td></tr></table></figure><p>第三步：全局异常中处理实体校验异常</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ResponseStatus</span>(HttpStatus.UNAUTHORIZED)<span class="comment">//未授权</span></span><br><span class="line"><span class="meta">@ExceptionHandler</span>(value = MethodArgumentNotValidException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">Result</span> <span class="title">handler</span>(<span class="title">MethodArgumentNotValidException</span> <span class="title">e</span>)</span>&#123;</span><br><span class="line">    log.error(<span class="string">"实体校验异常:----------------&#123;&#125;"</span>,e);</span><br><span class="line">    ObjectError objectError = e.getBindingResult().getAllErrors().stream().findFirst().get();</span><br><span class="line">    <span class="keyword">return</span> Result.fail(objectError.getDefaultMessage());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第四步：使用postman测试下</p><p>实体校验出现异常时：</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/5lO1vaIVTQBjkxq.png" alt="image-20200611151212054"></p><p>实体校验成功时：</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/NmHfPayWdejLg7Z.png" alt="image-20200611151409504"></p><h4 id="8、解决跨域问题"><a href="#8、解决跨域问题" class="headerlink" title="8、解决跨域问题"></a>8、解决跨域问题</h4><p>因为是前后端分析，所以跨域问题是避免不了的，我们直接在后台进行全局跨域处理：</p><p>第一步：跨域配置CorsConfig</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.CorsRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 解决跨域问题</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CorsConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addMapping(<span class="string">"/**"</span>)</span><br><span class="line">                .allowedOrigins(<span class="string">"*"</span>)</span><br><span class="line">                .allowedMethods(<span class="string">"GET"</span>, <span class="string">"HEAD"</span>, <span class="string">"POST"</span>, <span class="string">"PUT"</span>, <span class="string">"DELETE"</span>, <span class="string">"OPTIONS"</span>)</span><br><span class="line">                .allowCredentials(<span class="keyword">true</span>)</span><br><span class="line">                .maxAge(<span class="number">3600</span>)</span><br><span class="line">                .allowedHeaders(<span class="string">"*"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二步：在jwtfilter中提供跨域的支持</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对跨域提供支持</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(ServletRequest request, ServletResponse response)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    HttpServletRequest httpServletRequest = WebUtils.toHttp(request);</span><br><span class="line">    HttpServletResponse httpServletResponse = WebUtils.toHttp(response);</span><br><span class="line">    httpServletResponse.setHeader(<span class="string">"Access-control-Allow-Origin"</span>, httpServletRequest.getHeader(<span class="string">"Origin"</span>));</span><br><span class="line">    httpServletResponse.setHeader(<span class="string">"Access-Control-Allow-Methods"</span>, <span class="string">"GET,POST,OPTIONS,PUT,DELETE"</span>);</span><br><span class="line">    httpServletResponse.setHeader(<span class="string">"Access-Control-Allow-Headers"</span>, httpServletRequest.getHeader(<span class="string">"Access-Control-Request-Headers"</span>));</span><br><span class="line">    <span class="comment">// 跨域时会首先发送一个OPTIONS请求，这里我们给OPTIONS请求直接返回正常状态</span></span><br><span class="line">    <span class="keyword">if</span> (httpServletRequest.getMethod().equals(RequestMethod.OPTIONS.name())) &#123;</span><br><span class="line">        httpServletResponse.setStatus(org.springframework.http.HttpStatus.OK.value());</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">super</span>.preHandle(request, response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9、登陆接口开发"><a href="#9、登陆接口开发" class="headerlink" title="9、登陆接口开发"></a>9、登陆接口开发</h4><p>登录的逻辑其实很简答，只需要接受账号密码，然后把用户的id生成jwt，返回给前段，为了后续的jwt的延期，所以我们把jwt放在header上。具体代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.map.MapUtil;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.crypto.SecureUtil;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.ryan.common.dto.LoginDto;</span><br><span class="line"><span class="keyword">import</span> com.ryan.common.lang.Result;</span><br><span class="line"><span class="keyword">import</span> com.ryan.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.ryan.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.ryan.utils.JwtUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.security.SecurityUtil;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.annotation.RequiresAuthentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.Assert;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.annotation.Validated;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 默认账号密码：ryan / 111111</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    JwtUtils jwtUtils;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/login"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">login</span><span class="params">(@Validated @RequestBody LoginDto loginDto, HttpServletResponse response)</span></span>&#123;</span><br><span class="line">        <span class="comment">//1.用户名验证</span></span><br><span class="line">        User user = userService.getOne(<span class="keyword">new</span> QueryWrapper&lt;User&gt;().eq(<span class="string">"username"</span>, loginDto.getUsername()));</span><br><span class="line">        <span class="comment">//断言username不为空</span></span><br><span class="line">        Assert.notNull(user, <span class="string">"用户不存在"</span>);</span><br><span class="line">        <span class="comment">//2.密码验证</span></span><br><span class="line">        <span class="keyword">if</span>(!user.getPassword().equals(SecureUtil.md5(loginDto.getPassword())))&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.fail(<span class="string">"密码不正确"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//3.生成jwt并放到header当中</span></span><br><span class="line">        String jwt = jwtUtils.generateToken(user.getId());</span><br><span class="line">        response.setHeader(<span class="string">"Authorization"</span>,jwt);</span><br><span class="line">        response.setHeader(<span class="string">"Access-control-Expose-Header"</span>,<span class="string">"Authorization"</span>);</span><br><span class="line">        <span class="comment">//4.返回用户信息</span></span><br><span class="line">        <span class="keyword">return</span> Result.success(MapUtil.builder()</span><br><span class="line">                .put(<span class="string">"id"</span>,user.getId())</span><br><span class="line">                .put(<span class="string">"username"</span>,user.getUsername())</span><br><span class="line">                .put(<span class="string">"avatar"</span>,user.getAvatar())</span><br><span class="line">                .put(<span class="string">"email"</span>,user.getEmail())</span><br><span class="line">                .map()</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequiresAuthentication</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/logout"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">logout</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SecurityUtils.getSubject().logout();</span><br><span class="line">        <span class="keyword">return</span> Result.success(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Assert.notNull(user, “用户不存在”);执行可能会抛出异常，需要在全局异常中处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ResponseStatus</span>(HttpStatus.UNAUTHORIZED)<span class="comment">//未授权</span></span><br><span class="line"><span class="meta">@ExceptionHandler</span>(value = IllegalArgumentException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">Result</span> <span class="title">handler</span>(<span class="title">IllegalArgumentException</span> <span class="title">e</span>)</span>&#123;</span><br><span class="line">    log.error(<span class="string">"Assert异常:----------------&#123;&#125;"</span>,e);</span><br><span class="line">    <span class="keyword">return</span> Result.fail(e.getMessage());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>10、博客接口开发</p><p>我们的骨架已经完成，接下来，我们就可以添加我们的业务接口了，下面我以一个简单的博客列表、博客详情页、博客编辑/新增、博客删除为例子开发：</p><p>第一步：写一个工具类ShiroUtil</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ryan.shiro.AccountProfile;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShiroUtil</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> AccountProfile <span class="title">getProfile</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (AccountProfile) SecurityUtils.getSubject().getPrincipal();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二步：接口开发</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.bean.BeanUtil;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.metadata.IPage;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line"><span class="keyword">import</span> com.ryan.common.lang.Result;</span><br><span class="line"><span class="keyword">import</span> com.ryan.entity.Blog;</span><br><span class="line"><span class="keyword">import</span> com.ryan.service.BlogService;</span><br><span class="line"><span class="keyword">import</span> com.ryan.utils.ShiroUtil;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.annotation.RequiresAuthentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.Assert;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.annotation.Validated;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> *  前端控制器</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Ryan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2020-06-11</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//详情（list）、detail（通过id）、编辑/新建、删除</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    BlogService blogService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/blogs"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">list</span><span class="params">(@RequestParam(defaultValue = <span class="string">"1"</span>)</span> Integer currentPage)</span>&#123;<span class="comment">//默认是第一页，确保不是空</span></span><br><span class="line">        Page page = <span class="keyword">new</span> Page(currentPage, <span class="number">5</span>);<span class="comment">//每页5条记录</span></span><br><span class="line">        IPage pageData = blogService.page(page, <span class="keyword">new</span> QueryWrapper&lt;Blog&gt;().orderByDesc(<span class="string">"created"</span>));</span><br><span class="line">        <span class="keyword">return</span> Result.success(pageData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/blog/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">detail</span><span class="params">(@PathVariable(value = <span class="string">"id"</span>)</span>Long id)</span>&#123;</span><br><span class="line">        Blog blog = blogService.getById(id);</span><br><span class="line">        <span class="comment">//blog不应该为空</span></span><br><span class="line">        Assert.notNull(blog, <span class="string">"该博客不存在或已被删除"</span>);</span><br><span class="line">        <span class="keyword">return</span> Result.success(blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequiresAuthentication</span><span class="comment">//需要认证才能编辑</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/blog/edit"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">edit</span><span class="params">(@Validated @RequestBody Blog blog)</span></span>&#123;</span><br><span class="line">        <span class="comment">//分为两种情况，编辑已有博客和新建博客</span></span><br><span class="line">        Blog temp = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(blog.getId() != <span class="keyword">null</span>)&#123;<span class="comment">//表示编辑已有博客</span></span><br><span class="line">            temp = blogService.getById(blog.getId());</span><br><span class="line">            <span class="comment">//注意，只能编辑自己的博客</span></span><br><span class="line">            Assert.isTrue(temp.getUserId().longValue() == ShiroUtil.getProfile().getId().longValue(), <span class="string">"抱歉，没有权限编辑他人的博客"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;<span class="comment">//表示新建博客</span></span><br><span class="line">            temp = <span class="keyword">new</span> Blog();</span><br><span class="line">            temp.setUserId(ShiroUtil.getProfile().getId());</span><br><span class="line">            temp.setCreated(LocalDateTime.now());</span><br><span class="line">            temp.setStatus(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        BeanUtil.copyProperties(blog, temp, <span class="string">"id"</span>,<span class="string">"userId"</span>,<span class="string">"created"</span>,<span class="string">"status"</span>);</span><br><span class="line">        blogService.saveOrUpdate(temp);</span><br><span class="line">        <span class="keyword">return</span> Result.success(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/blog/remove/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">delete</span><span class="params">(@PathVariable(value = <span class="string">"id"</span>)</span>Long id)</span>&#123;</span><br><span class="line">        blogService.removeById(id);</span><br><span class="line">        <span class="keyword">return</span> Result.success(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试：略</p><h2 id="前端技术栈："><a href="#前端技术栈：" class="headerlink" title="前端技术栈："></a>前端技术栈：</h2><ul><li>vue</li><li>element ui</li><li>axios</li><li>mavon-editor</li><li>markdown-it</li><li>github-markdown-css</li></ul><h3 id="前端开发步骤："><a href="#前端开发步骤：" class="headerlink" title="前端开发步骤："></a>前端开发步骤：</h3><h4 id="1、环境搭建"><a href="#1、环境搭建" class="headerlink" title="1、环境搭建"></a>1、环境搭建</h4><p>1.1、node.js：之前都安装过了，这里就不演示了</p><p>1.2、vue cli：为了vue可视化操作，我这里升级了vue3.6.3的版本，注意是3.6+的版本，不然会踩到一些坑，然后控制台输入vue cli即可弹出vue的可视化界面，在工程根目录下新建一个vueblog-vue项目</p><p>1.3、下一步中，项目文件夹中输入项目名称“vueblog-vue”，其他不用改，点击下一步，选择【手动】，再点击下一步，如图点击按钮，勾选上路由Router、状态管理Vuex，去掉js的校验。</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/NOqCHQb3vo8f5ah.png" alt="image-20200612172536970"></p><p>下一步中，也选上【Use history mode for router】，点击创建项目，然后弹窗中选择按钮【创建项目，不保存预设】，就进入项目创建啦。</p><p>稍等片刻之后，项目就初始化完成了。上面的步骤中，我们创建了一个vue项目，并且安装了Router、Vuex。这样我们后面就可以直接使用。</p><p>1.4、安装element-ui：略</p><p>1.5、安装axios：略</p><h4 id="2、页面路由"><a href="#2、页面路由" class="headerlink" title="2、页面路由"></a>2、页面路由</h4><p>接下来，我们先定义好路由和页面，因为我们只是做一个简单的博客项目，页面比较少，所以我们可以直接先定义好，然后在慢慢开发，这样需要用到链接的地方我们就可以直接可以使用：</p><p>我们在views文件夹下定义几个页面：</p><ul><li>BlogDetail.vue（博客详情页）</li><li>BlogEdit.vue（编辑博客）</li><li>Blogs.vue（博客列表）</li><li>Login.vue（登录页面）</li></ul><p>然后在路由中心配置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> Login <span class="keyword">from</span> <span class="string">"../views/Login"</span>;</span><br><span class="line"><span class="keyword">import</span> Blogs <span class="keyword">from</span> <span class="string">"../views/Blogs"</span>;</span><br><span class="line"><span class="keyword">import</span> Detail <span class="keyword">from</span> <span class="string">"../views/Detail"</span>;</span><br><span class="line"><span class="keyword">import</span> Edit <span class="keyword">from</span> <span class="string">"../views/Edit"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/'</span>,</span><br><span class="line">    name: <span class="string">'index'</span>,</span><br><span class="line">    component: Blogs</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    path: <span class="string">'/login'</span>,</span><br><span class="line">    name: <span class="string">'Login'</span>,</span><br><span class="line">    component: Login</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    path: <span class="string">'/blogs'</span>,</span><br><span class="line">    name: <span class="string">'Blogs'</span>,</span><br><span class="line">    component: Blogs</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    path: <span class="string">'/blog/add'</span>,</span><br><span class="line">    name: <span class="string">'Add'</span>,</span><br><span class="line">    meta: &#123;</span><br><span class="line">      requireAuth: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    component: Edit</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">  path: <span class="string">'/blog/:blogId/detail'</span>,</span><br><span class="line">  name: <span class="string">'Detail'</span>,</span><br><span class="line">  component: Detail</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">  path: <span class="string">'/blog/:blogId/edit'</span>,</span><br><span class="line">  name: <span class="string">'Edit'</span>,</span><br><span class="line">    meta: &#123;</span><br><span class="line">      requireAuth: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">  component: Edit</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  mode: <span class="string">'history'</span>,</span><br><span class="line">  base: process.env.BASE_URL,</span><br><span class="line">  routes</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p>接下来我们去开发我们的页面。其中，带有meta：requireAuth: true说明是需要登录字后才能访问的受限资源，后面我们路由权限拦截时候会用到。</p><h4 id="3、登陆页面"><a href="#3、登陆页面" class="headerlink" title="3、登陆页面"></a>3、登陆页面</h4><p>Login.vue</p><p>接下来，我们来搞一个登陆页面，表单组件我们直接在element-ui的官网上找就行了，登陆页面就两个输入框和一个提交按钮，相对简单，然后我们最好带页面的js校验。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;el-container&gt;</span><br><span class="line">            &lt;el-header&gt;</span><br><span class="line">                &lt;img class&#x3D;&quot;logo&quot; src&#x3D;&quot;https:&#x2F;&#x2F;www.markerhub.com&#x2F;dist&#x2F;images&#x2F;logo&#x2F;markerhub-logo.png&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">            &lt;&#x2F;el-header&gt;</span><br><span class="line">            &lt;el-main&gt;</span><br><span class="line">                &lt;el-form :model&#x3D;&quot;ruleForm&quot; :rules&#x3D;&quot;rules&quot; ref&#x3D;&quot;ruleForm&quot; label-width&#x3D;&quot;100px&quot; class&#x3D;&quot;demo-ruleForm&quot;&gt;</span><br><span class="line">                    &lt;el-form-item label&#x3D;&quot;用户名&quot; prop&#x3D;&quot;username&quot;&gt;</span><br><span class="line">                        &lt;el-input v-model&#x3D;&quot;ruleForm.username&quot;&gt;&lt;&#x2F;el-input&gt;</span><br><span class="line">                    &lt;&#x2F;el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item label&#x3D;&quot;密码&quot; prop&#x3D;&quot;password&quot;&gt;</span><br><span class="line">                        &lt;el-input type&#x3D;&quot;password&quot; v-model&#x3D;&quot;ruleForm.password&quot;&gt;&lt;&#x2F;el-input&gt;</span><br><span class="line">                    &lt;&#x2F;el-form-item&gt;</span><br><span class="line">                    &lt;el-form-item&gt;</span><br><span class="line">                        &lt;el-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;submitForm(&#39;ruleForm&#39;)&quot;&gt;立即登录&lt;&#x2F;el-button&gt;</span><br><span class="line">                        &lt;el-button @click&#x3D;&quot;resetForm(&#39;ruleForm&#39;)&quot;&gt;重置&lt;&#x2F;el-button&gt;</span><br><span class="line">                    &lt;&#x2F;el-form-item&gt;</span><br><span class="line">                &lt;&#x2F;el-form&gt;</span><br><span class="line">            &lt;&#x2F;el-main&gt;</span><br><span class="line">        &lt;&#x2F;el-container&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        name: &quot;Login&quot;,</span><br><span class="line">        data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                ruleForm: &#123;</span><br><span class="line">                    username: &#39;ryan&#39;,</span><br><span class="line">                    password: &#39;111111&#39;</span><br><span class="line">                &#125;,</span><br><span class="line">                rules: &#123;</span><br><span class="line">                    username: [</span><br><span class="line">                        &#123; required: true, message: &#39;请输入用户名&#39;, trigger: &#39;blur&#39; &#125;,</span><br><span class="line">                        &#123; min: 3, max: 15, message: &#39;长度在 3 到 15 个字符&#39;, trigger: &#39;blur&#39; &#125;</span><br><span class="line">                    ],</span><br><span class="line">                    password: [</span><br><span class="line">                        &#123; required: true, message: &#39;请输入密码&#39;, trigger: &#39;change&#39; &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            submitForm(formName) &#123;</span><br><span class="line">                this.$refs[formName].validate((valid) &#x3D;&gt; &#123;</span><br><span class="line">                    if (valid) &#123;</span><br><span class="line">                        const _this &#x3D; this;&#x2F;&#x2F;全局this对象</span><br><span class="line">                        &#x2F;&#x2F;为了降低耦合度，我们可全局配置url前缀</span><br><span class="line">                        this.axios.post(&quot;&#x2F;login&quot;, this.ruleForm).then(response &#x3D;&gt; &#123;</span><br><span class="line">                            const jwt &#x3D; response.headers[&quot;authorization&quot;]</span><br><span class="line">                            const userInfo &#x3D; response.data.data</span><br><span class="line">&#x2F;&#x2F;将token和用户信息存储起来，方便在其他地方用到（获取、认证等）</span><br><span class="line">                            _this.$store.commit(&quot;SET_TOKEN&quot;, jwt)</span><br><span class="line">                            _this.$store.commit(&quot;SET_USERINFO&quot;, userInfo)</span><br><span class="line"></span><br><span class="line">                            _this.$router.push(&quot;&#x2F;blogs&quot;)</span><br><span class="line">                            &#x2F;&#x2F;这是用户名密码正确的情况下的逻辑</span><br><span class="line">                            &#x2F;&#x2F;如果出现错误，我们应该弹窗才行，也就是拦截，不走这个逻辑，我们另外新建一个配置即可</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        console.log(&#39;error submit!!&#39;);</span><br><span class="line">                        return false;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;,</span><br><span class="line">            resetForm(formName) &#123;</span><br><span class="line">                this.$refs[formName].resetFields();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">    .logo&#123;</span><br><span class="line">        height: 60px;</span><br><span class="line">    &#125;</span><br><span class="line">    .el-header, .el-footer &#123;</span><br><span class="line">        background-color: #B3C0D1;</span><br><span class="line">        color: #333;</span><br><span class="line">        text-align: center;</span><br><span class="line">        line-height: 60px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .el-aside &#123;</span><br><span class="line">        background-color: #D3DCE6;</span><br><span class="line">        color: #333;</span><br><span class="line">        text-align: center;</span><br><span class="line">        line-height: 200px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .el-main &#123;</span><br><span class="line">        &#x2F;*background-color: #E9EEF3;*&#x2F;</span><br><span class="line">        color: #333;</span><br><span class="line">        text-align: center;</span><br><span class="line">        line-height: 160px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .demo-ruleForm &#123;</span><br><span class="line">        max-width: 500px;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    body &gt; .el-container &#123;</span><br><span class="line">        margin-bottom: 40px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .el-container:nth-child(5) .el-aside,</span><br><span class="line">    .el-container:nth-child(6) .el-aside &#123;</span><br><span class="line">        line-height: 260px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .el-container:nth-child(7) .el-aside &#123;</span><br><span class="line">        line-height: 320px;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><p>上面的代码主要做了两件事情：</p><ul><li>表单验证</li><li>登陆按钮点击登陆时间</li></ul><p>表单校验规则还好，比较固定写法，查一下element-ui的组件就知道了，我们来分析一下发起登录之后的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">_this.$store.commit(&quot;SET_TOKEN&quot;, jwt)</span><br><span class="line">_this.$store.commit(&quot;SET_USERINFO&quot;, userInfo)</span><br><span class="line"></span><br><span class="line">_this.$router.push(&quot;&#x2F;blogs&quot;)</span><br></pre></td></tr></table></figure><p>从返回的结果请求头中获取到token的信息，然后使用store提交token和用户信息的状态。完成操作之后，我们调整到了/blogs路由，即博客列表页面。</p><h5 id="3-1、token状态同步"><a href="#3-1、token状态同步" class="headerlink" title="3.1、token状态同步"></a>3.1、token状态同步</h5><p>需要在store/index.js中配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">  state: &#123;</span><br><span class="line">    token: <span class="string">""</span>,</span><br><span class="line">    userInfo: <span class="built_in">JSON</span>.parse(sessionStorage.getItem(<span class="string">"userInfo"</span>))<span class="comment">//反序列化</span></span><br><span class="line">  &#125;,</span><br><span class="line">  mutations: &#123;</span><br><span class="line">    <span class="comment">//相当于setter</span></span><br><span class="line">    SET_TOKEN: <span class="function">(<span class="params">state, token</span>) =&gt;</span> &#123;</span><br><span class="line">      state.token = token</span><br><span class="line">      localStorage.setItem(<span class="string">"token"</span>, token)</span><br><span class="line">    &#125;,</span><br><span class="line">    SET_USERINFO: <span class="function">(<span class="params">state, userInfo</span>) =&gt;</span> &#123;</span><br><span class="line">      state.userInfo = userInfo</span><br><span class="line">      sessionStorage.setItem(<span class="string">"userInfo"</span>, <span class="built_in">JSON</span>.stringify(userInfo))</span><br><span class="line">      <span class="comment">//说明：JSON.stringify()的作用是将 JavaScript 对象转换为 JSON 字符串，而JSON.parse()可以将JSON字符串转为一个对象。</span></span><br><span class="line">    &#125;,</span><br><span class="line">    REMOVE_INFO: <span class="function">(<span class="params">state</span>) =&gt;</span> &#123;</span><br><span class="line">      state.token = <span class="string">""</span></span><br><span class="line">      state.userInfo = &#123;&#125;</span><br><span class="line">      localStorage.setItem(<span class="string">"token"</span>,<span class="string">""</span>)</span><br><span class="line">      sessionStorage.setItem(<span class="string">"userInfo"</span>, <span class="built_in">JSON</span>.stringify(<span class="string">""</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  getters: &#123;</span><br><span class="line">    <span class="comment">//getter</span></span><br><span class="line">    getUser: <span class="function"><span class="params">state</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> state.userInfo</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  actions: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  modules: &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>存储token，我们用的是localStorage，存储用户信息，我们用的是sessionStorage。毕竟用户信息我们不需要长久保存，保存了token信息，我们随时都可以初始化用户信息。</p><h5 id="3-2、定义全局axios拦截器"><a href="#3-2、定义全局axios拦截器" class="headerlink" title="3.2、定义全局axios拦截器"></a>3.2、定义全局axios拦截器</h5><p>点击登录按钮发起登录请求，成功时候返回了数据，如果是密码错误，我们是不是也应该弹窗消息提示。为了让这个错误弹窗能运用到所有的地方，所以我对axios做了个后置拦截器，就是返回数据时候，如果结果的code或者status不正常，那么我对应弹窗提示。</p><p>src目录下新建一个axios.js文件（与main.js同级）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'element-ui'</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">"./store"</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">"./router"</span>;</span><br><span class="line"><span class="comment">//url前缀</span></span><br><span class="line">axios.defaults.baseURL = <span class="string">"http://localhost:8001"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//前置拦截</span></span><br><span class="line">axios.interceptors.request.use(<span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//后置拦截</span></span><br><span class="line">axios.interceptors.response.use(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> res = response.data;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"=========================="</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(res)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"=========================="</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (res.code === <span class="number">200</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;<span class="comment">//这是针对shiroException的情况，其他的属于报错了</span></span><br><span class="line">        <span class="comment">//因为此axios是要挂载到main.js中的，所以这里不能使用this.$message</span></span><br><span class="line">        ElementUI.Message.error(<span class="string">'密码错误，请重新输入'</span>, &#123;<span class="attr">duration</span>: <span class="number">3</span>*<span class="number">1000</span>&#125;);<span class="comment">//弹窗3秒后消失</span></span><br><span class="line">        <span class="comment">//同时我们要拦截Login.vue中的正确逻辑,并弹窗</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(response.data.msg)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line">    error =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">    <span class="keyword">if</span>(error.response.data)&#123;<span class="comment">//当返回的数据不为空的时候，就将msg赋值给error的message，给下面的弹窗使用</span></span><br><span class="line">    error.message = error.response.data.msg</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//报错的话我们应该重新跳转到登陆界面</span></span><br><span class="line">    <span class="keyword">if</span>(error.response.status === <span class="number">401</span>)&#123;</span><br><span class="line">    <span class="comment">//先清楚token和userInfo</span></span><br><span class="line">    store.commit(<span class="string">'REMOVE_INFO'</span>);<span class="comment">//注意store不要导错包了</span></span><br><span class="line">    router.push(<span class="string">"/login"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//除了401，我们直接弹窗即可</span></span><br><span class="line">    ElementUI.Message.error(error.message, &#123;<span class="attr">duration</span>: <span class="number">3</span>*<span class="number">1000</span>&#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error)</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>前置拦截，其实可以统一为所有需要权限的请求装配上header的token信息，这样不需要在使用是再配置，我的小项目比较小，所以，还是免了吧~</p><p>然后再main.js中导入axios.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'./axios.js'</span> <span class="comment">// 请求拦截</span></span><br></pre></td></tr></table></figure><p>后端因为返回的实体是Result，success时候code为200，fail时候返回的是400，所以可以根据这里判断结果是否是正常的。另外权限不足时候可以通过请求结果的状态码来判断结果是否正常。这里都做了简单的处理。</p><h4 id="4、博客列表"><a href="#4、博客列表" class="headerlink" title="4、博客列表"></a>4、博客列表</h4><p>登录完成之后直接进入博客列表页面，然后加载博客列表的数据渲染出来。同时页面头部我们需要把用户的信息展示出来，因为很多地方都用到这个模块，所以我们把页面头部的用户信息单独抽取出来作为一个组件。</p><h5 id="4-1、头部用户信息"><a href="#4-1、头部用户信息" class="headerlink" title="4.1、头部用户信息"></a>4.1、头部用户信息</h5><p>那么，我们先来完成头部的用户信息，应该包含三部分信息：id，头像、用户名，而这些信息我们是在登录之后就已经存在了sessionStorage。因此，我们可以通过store的getters获取到用户信息。</p><p>在component文件夹中新建Header.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;m-content&quot;&gt;</span><br><span class="line">        &lt;h3&gt;欢迎来到Ryan的博客&lt;&#x2F;h3&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;block&quot;&gt;</span><br><span class="line">            &lt;el-avatar :size&#x3D;&quot;50&quot; :src&#x3D;&quot;user.avatar&quot;&gt;&lt;&#x2F;el-avatar&gt;</span><br><span class="line">            &lt;div&gt;&#123;&#123;user.username&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;maction&quot;&gt;</span><br><span class="line">            &lt;span&gt;&lt;el-link href&#x3D;&quot;&#x2F;blogs&quot;&gt;主页&lt;&#x2F;el-link&gt;&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;el-divider direction&#x3D;&quot;vertical&quot;&gt;&lt;&#x2F;el-divider&gt;</span><br><span class="line">            &lt;span&gt;&lt;el-link href&#x3D;&quot;&#x2F;blog&#x2F;add&quot; type&#x3D;&quot;success&quot;&gt;编写博客&lt;&#x2F;el-link&gt;&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;!--根据是否登陆显示其中一个按钮--&gt;</span><br><span class="line">            &lt;el-divider direction&#x3D;&quot;vertical&quot;&gt;&lt;&#x2F;el-divider&gt;</span><br><span class="line">            &lt;span v-show&#x3D;&quot;!hasLogin&quot;&gt;&lt;el-link href&#x3D;&quot;&#x2F;login&quot; type&#x3D;&quot;primary&quot;&gt;登陆&lt;&#x2F;el-link&gt;&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;span v-show&#x3D;&quot;hasLogin&quot;&gt;&lt;el-link @click&#x3D;&quot;logout&quot; type&#x3D;&quot;danger&quot;&gt;退出&lt;&#x2F;el-link&gt;&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        name: &quot;Header&quot;,</span><br><span class="line">        data()&#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                user: &#123;</span><br><span class="line">                    username: &quot;请先登录&quot;,</span><br><span class="line">                    avatar: &quot;https:&#x2F;&#x2F;cube.elemecdn.com&#x2F;3&#x2F;7c&#x2F;3ea6beec64369c2642b92c6726f1epng.png&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                hasLogin: false&#x2F;&#x2F;默认为false</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            logout()&#123;</span><br><span class="line">                &#x2F;&#x2F;访问后端logout（清除信息）</span><br><span class="line">                const _this &#x3D; this</span><br><span class="line">                _this.axios.get(&quot;&#x2F;logout&quot;,&#123;</span><br><span class="line">                    headers: &#123;&#x2F;&#x2F;因为后端logout需要认证才能访问，所以需要携带token访问</span><br><span class="line">                        &quot;Authorization&quot;: localStorage.getItem(&quot;token&quot;)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;).then(res &#x3D;&gt; &#123;</span><br><span class="line">                    &#x2F;&#x2F;删除存储在浏览器的相关信息</span><br><span class="line">                    _this.$store.commit(&quot;REMOVE_INFO&quot;)</span><br><span class="line">                    &#x2F;&#x2F;然后跳转到登陆页面</span><br><span class="line">                    _this.$router.push(&quot;&#x2F;login&quot;)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F;信息回显，也就是header页面创建的时候就拉去相关信息（created钩子函数）</span><br><span class="line">        created() &#123;</span><br><span class="line">            if(this.$store.getters.getUser.username)&#123;&#x2F;&#x2F;表明已经登陆</span><br><span class="line">                this.user.username &#x3D; this.$store.getters.getUser.username</span><br><span class="line">                this.user.avatar &#x3D; this.$store.getters.getUser.avatar</span><br><span class="line">                &#x2F;&#x2F;此时hasLogin应为true</span><br><span class="line">                this.hasLogin &#x3D; true</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">     .m-content&#123;</span><br><span class="line">         max-width: 960px;</span><br><span class="line">         margin: 0 auto;</span><br><span class="line">         text-align: center;</span><br><span class="line">     &#125;</span><br><span class="line">    .maction&#123;</span><br><span class="line">        margin: 10px 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><p>然后需要头部用户信息的页面只需要几个步骤：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import Header from &quot;@&#x2F;components&#x2F;Header&quot;;</span><br><span class="line">data() &#123;</span><br><span class="line">  components: &#123;Header&#125;</span><br><span class="line">&#125;</span><br><span class="line"># 然后模板中调用组件</span><br><span class="line">&lt;Header&gt;&lt;&#x2F;Header&gt;</span><br></pre></td></tr></table></figure><h5 id="4-2、博客分页"><a href="#4-2、博客分页" class="headerlink" title="4.2、博客分页"></a>4.2、博客分页</h5><p>接下来就是列表页面，需要做分页，列表我们在element-ui中直接使用<strong>时间线</strong>组件来作为我们的列表样式，还是挺好看的。还有我们的分页组件。</p><p>需要几部分信息：</p><ul><li>分页信息</li><li>博客列表内容，包括id、标题、摘要、创建时间</li></ul><p>Blogs.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;Header&gt;&lt;&#x2F;Header&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;block&quot;&gt;</span><br><span class="line">            &lt;el-timeline&gt;</span><br><span class="line">                &lt;!--for循环遍历博客，绑定相关值，时间格式可以在后端的实体类中定义--&gt;</span><br><span class="line">                &lt;el-timeline-item :timestamp&#x3D;&quot;blog.created&quot; placement&#x3D;&quot;top&quot; v-for&#x3D;&quot;blog in blogs&quot;&gt;</span><br><span class="line">                    &lt;el-card&gt;</span><br><span class="line">                        &lt;h4&gt;</span><br><span class="line">                            &lt;router-link :to&#x3D;&quot;&#123;name:&#39;Detail&#39;, params:&#123;blogId: blog.id&#125;&#125;&quot;&gt;</span><br><span class="line">                                &#123;&#123;blog.title&#125;&#125;</span><br><span class="line">                            &lt;&#x2F;router-link&gt;</span><br><span class="line">                        &lt;&#x2F;h4&gt;</span><br><span class="line">                        &lt;p&gt;&#123;&#123;blog.description&#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">                    &lt;&#x2F;el-card&gt;</span><br><span class="line">                &lt;&#x2F;el-timeline-item&gt;</span><br><span class="line">            &lt;&#x2F;el-timeline&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;!--分页组件--&gt;</span><br><span class="line">        &lt;el-pagination class&#x3D;&quot;mpage&quot;</span><br><span class="line">                background</span><br><span class="line">                layout&#x3D;&quot;prev, pager, next&quot;</span><br><span class="line">                :total&#x3D;&quot;total&quot;</span><br><span class="line">                :page-size&#x3D;&quot;pageSize&quot;</span><br><span class="line">                :current-page&#x3D;&quot;currentPage&quot;</span><br><span class="line">                @current-change&#x3D;page&gt;</span><br><span class="line">        &lt;&#x2F;el-pagination&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    import Header from &quot;..&#x2F;components&#x2F;Header&quot;;</span><br><span class="line">    export default &#123;</span><br><span class="line">        name: &quot;Blogs&quot;,</span><br><span class="line">        components: &#123;Header&#125;,</span><br><span class="line">        data()&#123;</span><br><span class="line">            return&#123;</span><br><span class="line">                blogs: &#123;&#125;,</span><br><span class="line">                currentPage: 1,</span><br><span class="line">                total: 0,</span><br><span class="line">                pageSize: 5</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            page(currentPage)&#123;</span><br><span class="line">                const _this &#x3D; this;</span><br><span class="line">                _this.axios.get(&quot;&#x2F;blogs?currentPage&#x3D;&quot; + currentPage).then(res &#x3D;&gt; &#123;</span><br><span class="line">                    console.log(res)</span><br><span class="line">                    &#x2F;&#x2F;然后进行赋值，相关数据都可以在浏览器抓包的响应体中看到</span><br><span class="line">                    _this.blogs &#x3D; res.data.data.records;</span><br><span class="line">                    _this.currentPage &#x3D; res.data.data.current;</span><br><span class="line">                    _this.total &#x3D; res.data.data.total;</span><br><span class="line">                    _this.pageSize &#x3D; res.data.data.size;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        created(currentPage) &#123;</span><br><span class="line">            &#x2F;&#x2F;一开始渲染的时候就调用page方法,默认第1页</span><br><span class="line">            this.page(1)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">    .mpage&#123;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">        text-align: center;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><p>data()中直接定义博客列表blogs、以及一些分页信息。methods()中定义分页的调用接口page（currentPage），参数是需要调整的页码currentPage，得到结果之后直接赋值即可。然后初始化时候，直接在mounted()方法中调用第一页this.page(1)。</p><h4 id="5、博客编辑"><a href="#5、博客编辑" class="headerlink" title="5、博客编辑"></a>5、博客编辑</h4><p>我们点击发表博客链接调整到/blog/add页面，这里我们需要用到一个markdown编辑器，在vue组件中，比较好用的是mavon-editor，那么我们直接使用哈。先来安装mavon-editor相关组件：</p><p>安装mavon-editor</p><p>基于Vue的markdown编辑器mavon-editor</p><p><code>npm install mavon-editor --save</code></p><p>然后在main.js中全局注册:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mavonEditor <span class="keyword">from</span> <span class="string">'mavon-editor'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'mavon-editor/dist/css/index.css'</span></span><br><span class="line">Vue.use(mavonEditor);</span><br></pre></td></tr></table></figure><p>ok，那么我们去定义我们的博客表单：</p><p>Edit.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;Header&gt;&lt;&#x2F;Header&gt;</span><br><span class="line">        &lt;el-form :model&#x3D;&quot;ruleForm&quot; :rules&#x3D;&quot;rules&quot; ref&#x3D;&quot;ruleForm&quot; label-width&#x3D;&quot;100px&quot; class&#x3D;&quot;demo-ruleForm&quot;&gt;</span><br><span class="line">            &lt;el-form-item label&#x3D;&quot;标题&quot; prop&#x3D;&quot;title&quot;&gt;</span><br><span class="line">                &lt;el-input v-model&#x3D;&quot;ruleForm.title&quot;&gt;&lt;&#x2F;el-input&gt;</span><br><span class="line">            &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">            &lt;el-form-item label&#x3D;&quot;标题&quot; prop&#x3D;&quot;description&quot;&gt;</span><br><span class="line">                &lt;el-input v-model&#x3D;&quot;ruleForm.description&quot;&gt;&lt;&#x2F;el-input&gt;</span><br><span class="line">            &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!--文本编辑器--&gt;</span><br><span class="line">            &lt;el-form-item label&#x3D;&quot;内容&quot; prop&#x3D;&quot;content&quot;&gt;</span><br><span class="line">                &lt;mavon-editor v-model&#x3D;&quot;ruleForm.content&quot;&#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;el-form-item&gt;</span><br><span class="line"></span><br><span class="line">            &lt;el-form-item class&#x3D;&quot;msubmit&quot;&gt;</span><br><span class="line">                &lt;el-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;submitForm(&#39;ruleForm&#39;)&quot;&gt;提交&lt;&#x2F;el-button&gt;</span><br><span class="line">                &lt;el-button @click&#x3D;&quot;resetForm(&#39;ruleForm&#39;)&quot;&gt;清空&lt;&#x2F;el-button&gt;</span><br><span class="line">            &lt;&#x2F;el-form-item&gt;</span><br><span class="line">        &lt;&#x2F;el-form&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    import Header from &quot;..&#x2F;components&#x2F;Header&quot;;</span><br><span class="line">    export default &#123;</span><br><span class="line">        name: &quot;Edit&quot;,</span><br><span class="line">        components: &#123;Header&#125;,</span><br><span class="line">        data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                ruleForm: &#123;</span><br><span class="line">                    id: null,</span><br><span class="line">                    title: &#39;&#39;,</span><br><span class="line">                    description: &#39;&#39;,</span><br><span class="line">                    content: &#39;&#39;,</span><br><span class="line">                &#125;,</span><br><span class="line">                rules: &#123;</span><br><span class="line">                    title: [</span><br><span class="line">                        &#123; required: true, message: &#39;请输入标题&#39;, trigger: &#39;blur&#39; &#125;,</span><br><span class="line">                        &#123; min: 3, max: 15, message: &#39;长度在 3 到 15 个字符&#39;, trigger: &#39;blur&#39; &#125;</span><br><span class="line">                    ],</span><br><span class="line">                    description: [</span><br><span class="line">                        &#123; required: true, message: &#39;请输入摘要&#39;, trigger: &#39;blur&#39; &#125;,</span><br><span class="line">                        &#123; min: 3, max: 25, message: &#39;长度在 3 到 25 个字符&#39;, trigger: &#39;blur&#39; &#125;</span><br><span class="line">                    ],</span><br><span class="line">                    content: [</span><br><span class="line">                        &#123; required: true,  trigger: &#39;blur&#39; &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            submitForm(formName) &#123;</span><br><span class="line">                this.$refs[formName].validate((valid) &#x3D;&gt; &#123;</span><br><span class="line">                    if (valid) &#123;</span><br><span class="line">                        const _this &#x3D; this;</span><br><span class="line">                        this.axios.post(&quot;&#x2F;blog&#x2F;edit&quot;, this.ruleForm, &#123;&#x2F;&#x2F;内容是this.ruleForm(博客),然后需要携带令牌</span><br><span class="line">                            headers: &#123;&#x2F;&#x2F;因为后端logout需要认证才能访问，所以需要携带token访问</span><br><span class="line">                                &quot;Authorization&quot;: localStorage.getItem(&quot;token&quot;)</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;).then(res &#x3D;&gt; &#123;&#x2F;&#x2F;弹窗提示，并跳转到博客列表页面</span><br><span class="line">                            this.$alert(&#39;提交成功&#39;, &#39;提醒&#39;, &#123;</span><br><span class="line">                                confirmButtonText: &#39;确定&#39;,</span><br><span class="line">                                callback: action &#x3D;&gt; &#123;</span><br><span class="line">                                    this.$router.push(&quot;&#x2F;blogs&quot;)</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;);</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        console.log(&#39;error submit!!&#39;);</span><br><span class="line">                        return false;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;,</span><br><span class="line">            resetForm(formName) &#123;</span><br><span class="line">                this.$refs[formName].resetFields();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        created() &#123;&#x2F;&#x2F;消息回显</span><br><span class="line">            const blogId &#x3D; this.$route.params.blogId;</span><br><span class="line">            console.log(blogId);</span><br><span class="line">            const _this &#x3D; this;</span><br><span class="line">            if(blogId)&#123;&#x2F;&#x2F;通过id获取博客内容</span><br><span class="line">                this.axios.get(&quot;&#x2F;blog&#x2F;&quot; + blogId).then(res &#x3D;&gt; &#123;</span><br><span class="line">                    const blog &#x3D; res.data.data</span><br><span class="line">                    _this.ruleForm.id &#x3D; blog.id</span><br><span class="line">                    _this.ruleForm.title &#x3D; blog.title</span><br><span class="line">                    _this.ruleForm.description &#x3D; blog.description</span><br><span class="line">                    _this.ruleForm.content &#x3D; blog.content</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">    .msubmit&#123;</span><br><span class="line">        text-align: center;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><p>逻辑依然简单，校验表单，然后点击按钮提交表单，注意头部加上Authorization信息，返回结果弹窗提示操作成功，然后跳转到博客列表页面。</p><p>然后因为编辑和添加是同一个页面，所以有了create()方法，比如从编辑连接/blog/7/edit中获取blogId为7的这个id。然后回显博客信息。获取方式是const blogId = this.$route.params.blogId。</p><p>对了，mavon-editor因为已经全局注册，所以我们直接使用组件即可：</p><h4 id="6、博客详情"><a href="#6、博客详情" class="headerlink" title="6、博客详情"></a>6、博客详情</h4><p>博客详情中需要回显博客信息，然后有个问题就是，后端传过来的是博客内容是markdown格式的内容，我们需要进行渲染然后显示出来，这里我们使用一个插件markdown-it，用于解析md文档，然后导入github-markdown-c，所谓md的样式。</p><p>方法如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 用于解析md文档</span><br><span class="line">npm install markdown-it --save</span><br><span class="line"># md样式</span><br><span class="line">npm install github-markdown-css</span><br></pre></td></tr></table></figure><p>然后就可以在需要渲染的地方使用：</p><p>Detail.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;Header&gt;&lt;&#x2F;Header&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;mblog&quot;&gt;</span><br><span class="line">            &lt;h2&gt;&#123;&#123;blog.title&#125;&#125;&lt;&#x2F;h2&gt;</span><br><span class="line">            &lt;el-link icon&#x3D;&quot;el-icon-edit&quot; v-show&#x3D;&quot;isOWnBlog&quot;&gt;</span><br><span class="line">                &lt;router-link :to&#x3D;&quot;&#123;name: &#39;Edit&#39;, params:&#123;blogId: blog.id&#125;&#125;&quot;&gt;编辑&lt;&#x2F;router-link&gt;</span><br><span class="line">            &lt;&#x2F;el-link&gt;</span><br><span class="line">            &lt;el-divider direction&#x3D;&quot;vertical&quot; &gt;&lt;&#x2F;el-divider&gt;</span><br><span class="line">            &lt;el-link icon&#x3D;&quot;el-icon-delete&quot; v-show&#x3D;&quot;isOWnBlog&quot; @click&#x3D;&quot;&quot;&gt;</span><br><span class="line">                &lt;el-button type&#x3D;&quot;text&quot; @click&#x3D;&quot;open&quot;&gt;删除&lt;&#x2F;el-button&gt;</span><br><span class="line">            &lt;&#x2F;el-link&gt;</span><br><span class="line">            &lt;el-divider&gt;&lt;&#x2F;el-divider&gt;</span><br><span class="line">            &lt;!--别忘了添加class&#x3D;&quot;markdown-body&quot;，否则没法渲染--&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;markdown-body&quot; v-html&#x3D;&quot;blog.content&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    import Header from &quot;..&#x2F;components&#x2F;Header&quot;;</span><br><span class="line">    import &quot;github-markdown-css&#x2F;github-markdown.css&quot;</span><br><span class="line">    export default &#123;</span><br><span class="line">        name: &quot;Detail&quot;,</span><br><span class="line">        components: &#123;Header&#125;,</span><br><span class="line">        data()&#123;</span><br><span class="line">            return&#123;</span><br><span class="line">                blog : &#123;</span><br><span class="line">                    id : null,</span><br><span class="line">                    title: &quot;&quot;,</span><br><span class="line">                    description: &quot;&quot;,</span><br><span class="line">                    content: &quot;&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                isOWnBlog: false</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            open() &#123;</span><br><span class="line">                this.$confirm(&#39;确定要删除此条博客吗&#39;, &#39;提示&#39;, &#123;</span><br><span class="line">                    confirmButtonText: &#39;确定&#39;,</span><br><span class="line">                    cancelButtonText: &#39;取消&#39;,</span><br><span class="line">                    type: &#39;warning&#39;</span><br><span class="line">                &#125;).then(() &#x3D;&gt; &#123;</span><br><span class="line">                    const blogId &#x3D; this.$route.params.blogId;</span><br><span class="line">                    console.log(blogId);</span><br><span class="line">                    const _this &#x3D; this;</span><br><span class="line">                    if(blogId)&#123;</span><br><span class="line">                        this.axios.get(&quot;&#x2F;blog&#x2F;remove&#x2F;&quot; + blogId).then(res &#x3D;&gt; &#123;</span><br><span class="line">                            this.$alert(&#39;删除成功&#39;, &#39;提醒&#39;, &#123;</span><br><span class="line">                                confirmButtonText: &#39;确定&#39;,</span><br><span class="line">                                callback: action &#x3D;&gt; &#123;</span><br><span class="line">                                    this.$router.push(&quot;&#x2F;blogs&quot;);</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;);</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        created() &#123;&#x2F;&#x2F;数据回显</span><br><span class="line">            const blogId &#x3D; this.$route.params.blogId;</span><br><span class="line">            console.log(blogId);</span><br><span class="line">            const _this &#x3D; this;</span><br><span class="line">            if(blogId)&#123;&#x2F;&#x2F;通过id获取博客内容</span><br><span class="line">                this.axios.get(&quot;&#x2F;blog&#x2F;&quot; + blogId).then(res &#x3D;&gt; &#123;</span><br><span class="line">                    const blog &#x3D; res.data.data;</span><br><span class="line">                    _this.blog.id &#x3D; blog.id;</span><br><span class="line">                    _this.blog.title &#x3D; blog.title;</span><br><span class="line">                    &#x2F;&#x2F;正文我们需要markdown解析，然后再使用github的css样式</span><br><span class="line">                    var MarkdownIt &#x3D; require(&#39;markdown-it&#39;);</span><br><span class="line">                    var md &#x3D; MarkdownIt();</span><br><span class="line">                    var result &#x3D; md.render(blog.content);</span><br><span class="line">                    _this.blog.content &#x3D; result</span><br><span class="line">                    _this.isOWnBlog &#x3D; (blog.userId &#x3D;&#x3D;&#x3D; _this.$store.getters.getUser.id)&#x2F;&#x2F;只有自己的博客才可以编辑，别人是编辑不了的</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">    .mblog &#123;</span><br><span class="line">        box-shadow: 0 2px 4px rgba(0, 0, 0, .12), 0 0 6px rgba(0, 0, 0, .04);</span><br><span class="line">        width: 100%;</span><br><span class="line">        min-height: 700px;</span><br><span class="line">        padding: 20px 15px;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><p>具体逻辑还是挺简单，初始化create()方法中调用getBlog()方法，请求博客详情接口，返回的博客详情content通过markdown-it工具进行渲染。同时还添加了“编辑”和“删除”两个按钮</p><p>别忘了导入github的样式哦</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">"github-markdown-css/github-markdown.css"</span></span><br></pre></td></tr></table></figure><p>另外标题下添加了个小小的编辑按钮，通过isOwnBlog （判断博文作者与登录用户是否同一人）来判断按钮是否显示出来。</p><h4 id="7、路由权限拦截"><a href="#7、路由权限拦截" class="headerlink" title="7、路由权限拦截"></a>7、路由权限拦截</h4><p>页面已经开发完毕之后，我们来控制一下哪些页面是需要登录之后才能跳转的，如果未登录访问就直接重定向到登录页面，因此我们在src目录下定义一个js文件：</p><p>permission.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">"./router"</span>;</span><br><span class="line"><span class="comment">// 路由判断登录 根据路由配置文件的参数</span></span><br><span class="line">router.beforeEach(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (to.matched.some(<span class="function"><span class="params">record</span> =&gt;</span> record.meta.requireAuth)) &#123; <span class="comment">// 判断该路由是否需要登录权限</span></span><br><span class="line">        <span class="keyword">const</span> token = localStorage.getItem(<span class="string">"token"</span>)</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"------------"</span> + token)</span><br><span class="line">        <span class="keyword">if</span> (token) &#123; <span class="comment">// 判断当前的token是否存在 ； 登录存入的token</span></span><br><span class="line">            <span class="keyword">if</span> (to.path === <span class="string">'/login'</span>) &#123;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                next()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            next(&#123;</span><br><span class="line">                path: <span class="string">'/login'</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        next()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>通过之前我们再定义页面路由时候的的meta信息，指定requireAuth: true，需要登录才能访问，因此这里我们在每次路由之前（router.beforeEach）判断token的状态，觉得是否需要跳转到登录页面。</p><p>然后我们再main.js中import我们的permission.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'./permission.js'</span> <span class="comment">// 路由拦截</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;确定技术栈&quot;&gt;&lt;a href=&quot;#确定技术栈&quot; class=&quot;headerlink&quot; title=&quot;确定技术栈&quot;&gt;&lt;/a&gt;确定技术栈&lt;/h1&gt;&lt;h2 id=&quot;后端技术栈：&quot;&gt;&lt;a href=&quot;#后端技术栈：&quot; class=&quot;headerlink&quot; title=&quot;后
      
    
    </summary>
    
    
      <category term="前后端分离" scheme="http://yoursite.com/categories/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="springboot" scheme="http://yoursite.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>RabbitMQ入门+整合springboot</title>
    <link href="http://yoursite.com/2020/06/24/bbitMQ%E5%85%A5%E9%97%A8-%E6%95%B4%E5%90%88springboot/"/>
    <id>http://yoursite.com/2020/06/24/bbitMQ%E5%85%A5%E9%97%A8-%E6%95%B4%E5%90%88springboot/</id>
    <published>2020-06-24T08:47:00.000Z</published>
    <updated>2020-06-24T08:51:04.282Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="什么是RabbitMQ？"><a href="#什么是RabbitMQ？" class="headerlink" title="什么是RabbitMQ？"></a>什么是RabbitMQ？</h2><p><code>MQ</code>(Message Quene) :  翻译为 <code>消息队列</code>,通过典型的 <code>生产者</code>和<code>消费者</code>模型,生产者不断向消息队列中生产消息，消费者不断的从队列中获取消息。因为消息的生产和消费都是异步的，而且只关心消息的发送和接收，没有业务逻辑的侵入,轻松的实现系统间解耦。别名为 <code>消息中间件</code>    通过利用高效可靠的消息传递机制进行平台无关的数据交流，并基于数据通信来进行分布式系统的集成。</p><h2 id="常见的MQ"><a href="#常见的MQ" class="headerlink" title="常见的MQ"></a>常见的MQ</h2><p>老牌的<code>ActiveMQ</code>、<code>RabbitMQ</code>，当下流行的<code>Kafka</code>，阿里巴巴自主开发<code>RocketMQ</code>等。</p><p>不同MQ特点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.ActiveMQ</span></span><br><span class="line">ActiveMQ 是Apache出品，最流行的，能力强劲的开源消息总线。它是一个完全支持JMS规范的的消息中间件。丰富的API,多种集群架构模式让ActiveMQ在业界成为老牌的消息中间件,在中小型企业颇受欢迎!</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.Kafka</span></span><br><span class="line">Kafka是LinkedIn开源的分布式发布-订阅消息系统，目前归属于Apache顶级项目。Kafka主要特点是基于Pull的模式来处理消息消费，追求高吞吐量，一开始的目的就是用于日志收集和传输。0.8版本开始支持复制，不支持事务，对消息的重复、丢失、错误没有严格要求，适合产生大量数据的互联网服务的数据收集业务。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.RocketMQ</span></span><br><span class="line">RocketMQ是阿里开源的消息中间件，它是纯Java开发，具有高吞吐量、高可用性、适合大规模分布式系统应用的特点。RocketMQ思路起</span><br><span class="line">源于Kafka，但并不是Kafka的一个Copy，它对消息的可靠传输及事务性做了优化，目前在阿里集团被广泛应用于交易、充值、流计算、消息推送、日志流式处理、binglog分发等场景。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.RabbitMQ</span></span><br><span class="line">RabbitMQ是使用Erlang语言开发的开源消息队列系统，基于AMQP协议来实现。AMQP的主要特征是面向消息、队列、路由（包括点对点和</span><br><span class="line">发布/订阅）、可靠性、安全。AMQP协议更多用在企业系统内对数据一致性、稳定性和可靠性要求很高的场景，对性能和吞吐量的要求还在其次。</span><br></pre></td></tr></table></figure><p>为什么要学习rabbitmq呢？</p><p>RabbitMQ比Kafka可靠，Kafka更适合IO高吞吐的处理，一般应用在大数据日志处理或对实时性（少量延迟），可靠性（少量丢数据）要求稍低的场景使用，比如ELK日志收集。</p><h1 id="RabbitMQ"><a href="#RabbitMQ" class="headerlink" title="RabbitMQ"></a>RabbitMQ</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>基于<code>AMQP</code>协议，erlang语言开发，是部署最广泛的开源消息中间件,是最受欢迎的开源消息中间件之一。</p><p>AMQP协议：</p><p>AMQP（advanced message queuing protocol）`在2003年时被提出，最早用于解决金融领不同平台之间的消息传递交互问题。顾名思义，AMQP是一种协议，更准确的说是一种binary wire-level protocol（链接协议）。这是其和JMS的本质差别，AMQP不从API层进行限定，而是直接定义网络交换的数据格式。这使得实现了AMQP的provider天然性就是跨平台的。以下是AMQP协议模型:</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/lzqrFsGP5ARfE6u.png" alt="image-20200621130819101"></p><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p>因为我这里是部署到远程服务器中，所以这里只讲linux安装运行哈</p><p>下载直接从官网下载即可，这里就不详细说明了，如果想要资源的话也可以直接私信我</p><p>这里下载了三个包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 因为rabbitmq是使用erlang语言写的，所以需要安装erlang</span></span><br><span class="line">erlang-22.0.7-1.el7.x86_64.rpm</span><br><span class="line"><span class="comment"># 安装rabbitmq需要的依赖</span></span><br><span class="line">socat-1.7.3.2-2.el7.x86_64。rpm</span><br><span class="line"><span class="comment"># rabbitmq服务</span></span><br><span class="line">rabbitmq-server-3.7.18-1.el7.noarch.rpm</span><br></pre></td></tr></table></figure><p>然后使用命令行安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh erlang-22.0.7-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh socat-1.7.3.2-2.el7.x86_64.rpm</span><br><span class="line">rpm -ivh rabbitmq-server-3.7.18-1.el7.noarch.rpm</span><br></pre></td></tr></table></figure><p>都安装完成后，会在以下目录生成配置文件模板</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ryan rabbitmq]<span class="comment"># find / -name rabbitmq.config.example</span></span><br><span class="line">/usr/share/doc/rabbitmq-server-3.7.18/rabbitmq.config.example</span><br></pre></td></tr></table></figure><p>我们需要将次配置文件模板复制到/etc/rabbitmq/目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@ryan rabbitmq]<span class="comment"># cp /usr/share/doc/rabbitmq-server-3.7.18/rabbitmq.config.example /etc/rabbitmq</span></span><br><span class="line">[root@ryan rabbitmq]<span class="comment"># cd /etc/rabbitmq</span></span><br><span class="line">[root@ryan rabbitmq]<span class="comment"># ls</span></span><br><span class="line">rabbitmq.config</span><br></pre></td></tr></table></figure><p>进入编辑模式，开发来宾模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ryan rabbitmq]<span class="comment"># vim rabbitmq.config</span></span><br><span class="line"><span class="comment"># 删除下图中这一行的注释（百分号）和最后的逗号即可</span></span><br><span class="line"><span class="comment"># 来宾账户密码都是guest</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/K5AXI7TLNcrWwlf.png" alt="image-20200621131549420"></p><p>启动rabbitmq中的插件管理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmq-plugins <span class="built_in">enable</span> rabbitmq_management</span><br></pre></td></tr></table></figure><p>最后启动rabbitmq服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ryan rabbitmq]<span class="comment"># systemctl start rabbitmq-server</span></span><br><span class="line"><span class="comment"># 如果是重启则是restart</span></span><br></pre></td></tr></table></figure><p>可通过命令行查看rabbitmq的服务状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ryan rabbitmq]<span class="comment"># systemctl status rabbitmq-server</span></span><br></pre></td></tr></table></figure><p>如果看到Active：active则说明启动成功，如果Active：dead则说明没有启动成功</p><p>如果还没关闭服务器防火墙的一定要先关闭防火墙哦</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭防火墙服务</span></span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><p>最后就可以访问rabbitmq的web后台管理界面了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 访问地址,rabbitmq的默认端口号是15672</span></span><br><span class="line">远程服务器主机名:15672</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/ezoKLPMvbiFC4nH.png" alt="image-20200621132923335"></p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/smyRVqKZr4czEMo.png" alt="image-20200621132947517"></p><h2 id="相关配置"><a href="#相关配置" class="headerlink" title="相关配置"></a>相关配置</h2><p>命令行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.服务启动相关</span></span><br><span class="line">systemctl start|restart|stop|status rabbitmq-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.管理命令行  用来在不使用web管理界面情况下命令操作RabbitMQ</span></span><br><span class="line">rabbitmqctl  <span class="built_in">help</span>  <span class="comment"># 可以查看更多命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.插件管理命令行</span></span><br><span class="line">rabbitmq-plugins <span class="built_in">enable</span>|list|<span class="built_in">disable</span></span><br></pre></td></tr></table></figure><p>web界面简单介绍</p><ul><li><p>verview概览</p></li><li><p>connections：无论生产者还是消费者，都需要与RabbitMQ建立连接后才可以完成消息的生产和消费，在这里可以查看连接情况</p></li><li><p>channels：通道，建立连接后，会形成通道，消息的投递获取依赖通道。</p></li><li><p>Exchanges：交换机，用来实现消息的路由</p></li><li><p>Queues：队列，即消息队列，消息存放在队列中，等待消费，消费后被移除队列。</p></li></ul><h1 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h1><p>从rabbitmq官网可以看到由多种模型</p><h2 id="helloworld"><a href="#helloworld" class="headerlink" title="helloworld"></a>helloworld</h2><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/eikFpVSQ1E75YUy.png" alt="image-20200621151754848"></p><p>在上图的模型中，有以下概念：</p><ul><li>P：生产者，也就是要发送消息的程序</li><li>C：消费者：消息的接受者，会一直等待消息到来。</li><li>queue：消息队列，图中红色部分。类似一个邮箱，可以缓存消息；生产者向其中投递消息，消费者从其中取出消息。</li></ul><h3 id="1、创建1个mave项目，导入相关依赖"><a href="#1、创建1个mave项目，导入相关依赖" class="headerlink" title="1、创建1个mave项目，导入相关依赖"></a>1、创建1个mave项目，导入相关依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- amqp-client --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.rabbitmq<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>amqp-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- junit --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--slf4j--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2、编写工具类"><a href="#2、编写工具类" class="headerlink" title="2、编写工具类"></a>2、编写工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">/获取连接工具类</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RabbitMQUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ConnectionFactory connectionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        connectionFactory = <span class="keyword">new</span> ConnectionFactory();</span><br><span class="line">        <span class="comment">//设置连接rabbitmq主机</span></span><br><span class="line">        connectionFactory.setHost(<span class="string">"203.195.160.231"</span>);</span><br><span class="line">        <span class="comment">//设置端口号（不是http端口号）</span></span><br><span class="line">        connectionFactory.setPort(<span class="number">5672</span>);</span><br><span class="line">        <span class="comment">//设置连接哪个虚拟主机</span></span><br><span class="line">        connectionFactory.setVirtualHost(<span class="string">"/ems"</span>);</span><br><span class="line">        <span class="comment">//设置访问虚拟主机的用户名和密码</span></span><br><span class="line">        connectionFactory.setUsername(<span class="string">"ems"</span>);</span><br><span class="line">        connectionFactory.setPassword(<span class="string">"123"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取连接对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> connectionFactory.newConnection();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (TimeoutException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭连接</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">closeChannelAndConnection</span><span class="params">(Channel channel, Connection connection)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(channel != <span class="keyword">null</span>) channel.close();</span><br><span class="line">            <span class="keyword">if</span>(connection != <span class="keyword">null</span>) connection.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (TimeoutException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、编写生产者类"><a href="#3、编写生产者类" class="headerlink" title="3、编写生产者类"></a>3、编写生产者类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//生产者</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Provider</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSendMessage</span><span class="params">()</span> <span class="keyword">throws</span> IOException, TimeoutException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取连接对象</span></span><br><span class="line">        Connection connection = RabbitMQUtil.getConnection();</span><br><span class="line">        <span class="comment">//获取连接通道</span></span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line">        <span class="comment">//通道绑定对应的消息队列</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 参数1：queue队列名称，如果不存在会自动创建</span></span><br><span class="line"><span class="comment">         * 参数2：durable用来定义队列是否要持久化，如果为false不持久化，在关闭rabbitmq服务器之后，队列会丢失</span></span><br><span class="line"><span class="comment">         *        如果为true持久化，那么rabbitmq重启后队列会恢复，当然消息不一定回复（需要在发布消息时设置）</span></span><br><span class="line"><span class="comment">         * 参数3：exclusive是否独占队列,如果为true，表明只有当前通道能使用该队列，当然我们一般都是为false</span></span><br><span class="line"><span class="comment">         * 参数4：autoDelete是否在消费完成后自动删除队列（需要消费线程断开之后才会被删除）</span></span><br><span class="line"><span class="comment">         * 参数5：arguments额外附加参数</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        channel.queueDeclare(<span class="string">"hello"</span>, <span class="keyword">true</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//发布消息</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 参数1：交换机名称，此例子不经过交换机</span></span><br><span class="line"><span class="comment">         * 参数2：队列名称</span></span><br><span class="line"><span class="comment">         * 参数3：传递消息额外设置，可设置消息是否持久化，null表示不持久化，MessageProperties.PERSISTENT_TEXT_PLAIN表示持久化消息</span></span><br><span class="line"><span class="comment">         * 参数4：消息的具体内容</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        channel.basicPublish(<span class="string">""</span>, <span class="string">"hello"</span>, MessageProperties.PERSISTENT_TEXT_PLAIN, <span class="string">"hello,rabbitmq"</span>.getBytes());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//关闭通道和连接</span></span><br><span class="line">        RabbitMQUtil.closeChannelAndConnection(channel, connection);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、运行"><a href="#4、运行" class="headerlink" title="4、运行"></a>4、运行</h3><p>然后可以在rabbitmq管理界面看到queue刷新到了消息，再运行一次则会多一条消息</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/glJeSuQ1G5Bosw6.png" alt="image-20200621144919835"></p><h3 id="5、编写消费者"><a href="#5、编写消费者" class="headerlink" title="5、编写消费者"></a>5、编写消费者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//消费者</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Consumer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, TimeoutException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取连接对象</span></span><br><span class="line">        Connection connection = RabbitMQUtil.getConnection();</span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line">        channel.queueDeclare(<span class="string">"hello"</span>, <span class="keyword">true</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">        <span class="comment">//消费消息</span></span><br><span class="line">        channel.basicConsume(<span class="string">"hello"</span>, <span class="keyword">true</span>, <span class="keyword">new</span> DefaultConsumer(channel)&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleDelivery</span><span class="params">(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, <span class="keyword">byte</span>[] body)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"body=&gt;"</span> + <span class="keyword">new</span> String(body));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//消费者我们一般会让他去一直监听着消息队列，所以一般不会去关闭他</span></span><br><span class="line">        <span class="comment">//运行之后，发现队列中的消息全都消费了，每消费一条消息，都会触发handleDelivery方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>控制台信息：</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/G2F5StkBbXxJWl3.png" alt="image-20200621160207958"></p><h2 id="work-queue"><a href="#work-queue" class="headerlink" title="work queue"></a>work queue</h2><p><code>Work queues</code>，工作队列，也被称为（<code>Task queues</code>），任务模型。当消息处理比较耗时的时候，可能生产消息的速度会远远大于消息的消费速度。长此以往，消息就会堆积越来越多，无法及时处理。此时就可以使用work 模型：<strong>让多个消费者绑定到一个队列，共同消费队列中的消息</strong>。队列中的消息一旦消费，就会消失，因此任务是不会被重复执行的。</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/k4n937HwyjpLP1G.png" alt="image-20200621164516014"></p><p>角色：</p><ul><li>P：生产者：任务的发布者</li><li>C1：消费者-1，领取任务并且完成任务</li><li>C2：消费者-2：领取任务并完成任务</li></ul><p>开发生产者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Porvider</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Connection connection = RabbitMQUtil.getConnection();</span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line">        channel.queueDeclare(<span class="string">"work queue"</span>, <span class="keyword">true</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            channel.basicPublish(<span class="string">""</span>, <span class="string">"work queue"</span>, MessageProperties.PERSISTENT_TEXT_PLAIN, (i + <span class="string">" hello,work queue"</span>).getBytes());</span><br><span class="line">        &#125;</span><br><span class="line">        RabbitMQUtil.closeChannelAndConnection(channel, connection);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>消费者1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Consumer1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Connection connection = RabbitMQUtil.getConnection();</span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line">        channel.queueDeclare(<span class="string">"work queue"</span>, <span class="keyword">true</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">        channel.basicConsume(<span class="string">"work queue"</span>, <span class="keyword">true</span>, <span class="keyword">new</span> DefaultConsumer(channel)&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleDelivery</span><span class="params">(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, <span class="keyword">byte</span>[] body)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"消费者1=&gt;"</span> + <span class="keyword">new</span> String(body) );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>消费者2</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Consumer2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Connection connection = RabbitMQUtil.getConnection();</span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line">        channel.queueDeclare(<span class="string">"work queue"</span>, <span class="keyword">true</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);</span><br><span class="line">        channel.basicConsume(<span class="string">"work queue"</span>, <span class="keyword">true</span>, <span class="keyword">new</span> DefaultConsumer(channel)&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleDelivery</span><span class="params">(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, <span class="keyword">byte</span>[] body)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"消费者2=&gt;"</span> + <span class="keyword">new</span> String(body) );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先将两个消费者运行起来，最后运行生产者，发现两个消费者是平均小费的</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/c6ARrMhS9YBJu57.png" alt="image-20200621164710692"></p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/ioGUpqwjlMykXVR.png" alt="image-20200621164721181"></p><p>小结：默认情况下，RabbitMQ将按顺序将每个消息发送给下一个使用者。平均而言，每个消费者都会收到相同数量的消息。这种分发消息的方式称为循环。</p><p>思考1：循环模式，是从队列中一下子分配消息给消费者的，比如每个消费者5个，消费者1在消费第3个消息的时候，宕机了怎么办？这时候剩下的消息就会丢失，那怎么防止这种现象的出现呢？</p><p>思考2：如果一个消费者效率比较快，另一个效率稍微慢一点，怎么实现消费者多劳多得呢？</p><p>其实这两个问题都跟一个消息确认机制有关，目前我们都是开着自动确认消息的：也就是下面的参数2</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">channel.basicConsume(<span class="string">"work queue"</span>, <span class="keyword">true</span>, <span class="keyword">new</span> DefaultConsumer(channel)</span><br></pre></td></tr></table></figure><p>如果我们不想一下子直接平均分配给每个消费者的话，我们应该关闭消息自动确认机制，并且管道需要告知队列每次只消费1个消息</p><p>同时为了体现其中一个消费者效率比较慢，我们让啊消费者1睡2秒</p><p>最后手动确认消息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">channel.basicQos(<span class="number">1</span>);<span class="comment">//每次只消费1条消息</span></span><br><span class="line"> channel.basicConsume(<span class="string">"work queue"</span>, <span class="keyword">false</span>, <span class="keyword">new</span> DefaultConsumer(channel)&#123;<span class="comment">//参数2：false，关闭自动确认消息</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleDelivery</span><span class="params">(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, <span class="keyword">byte</span>[] body)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    TimeUnit.SECONDS.sleep(<span class="number">2</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println(<span class="string">"消费者1=&gt;"</span> + <span class="keyword">new</span> String(body) );</span><br><span class="line">                channel.basicAck(envelope.getDeliveryTag(), <span class="keyword">false</span>);<span class="comment">//手动确认消息</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><p>测试：发现消费者1只消费了1条消息，其他的由消费者消费</p><h2 id="fanout"><a href="#fanout" class="headerlink" title="fanout"></a>fanout</h2><p>也称广播</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/TbPuJ2qcyrGvjhQ.png" alt="image-20200621183031098"></p><p>在广播模式下，消息发送流程是这样的：</p><ul><li>可以有多个消费者</li><li>每个<strong>消费者有自己的queue</strong>（队列）</li><li>每个<strong>队列都要绑定到Exchange</strong>（交换机）</li><li><strong>生产者发送的消息，只能发送到交换机</strong>，交换机来决定要发给哪个队列，生产者无法决定。</li><li>交换机把消息发送给绑定过的所有队列</li><li>队列的消费者都能拿到消息。实现一条消息被多个消费者消费</li></ul><p>生产者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Provider</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Connection connection = RabbitMQUtil.getConnection();</span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line">        <span class="comment">//通道绑定交换机</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 参数：交换机名称，不存在的话会自动创建</span></span><br><span class="line"><span class="comment">         * 参数2：交换机类型，注意名称是固定的</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        channel.exchangeDeclare(<span class="string">"logs"</span>, <span class="string">"fanout"</span>);</span><br><span class="line">        <span class="comment">//生产者只需要绑定交换机即可，其他的不需要管的</span></span><br><span class="line">        <span class="comment">//生产消息</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 参数1：交换机名称</span></span><br><span class="line"><span class="comment">         * 参数2：路由，在此类型基本没什么用，所以可以空着</span></span><br><span class="line"><span class="comment">         * 参数3：是否持久化消息</span></span><br><span class="line"><span class="comment">         * 参数4：消息体</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        channel.basicPublish(<span class="string">"logs"</span>, <span class="string">""</span>, <span class="keyword">null</span>, <span class="string">"hello,fanout"</span>.getBytes());</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        RabbitMQUtil.closeChannelAndConnection(channel, connection);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>消费者1/2</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Consumer1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Connection connection = RabbitMQUtil.getConnection();</span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line">        <span class="comment">//通道绑定交换机</span></span><br><span class="line">        channel.exchangeDeclare(<span class="string">"logs"</span>, <span class="string">"fanout"</span>);</span><br><span class="line">        <span class="comment">//获取临时队列</span></span><br><span class="line">        String queueName = channel.queueDeclare().getQueue();</span><br><span class="line">        <span class="comment">//绑定交换机和队列</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 参数1：临时队列名称</span></span><br><span class="line"><span class="comment">         * 参数2：交换机名称</span></span><br><span class="line"><span class="comment">         * 参数3：路由，在此没什么用，空着</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        channel.queueBind(queueName, <span class="string">"logs"</span>, <span class="string">""</span>);</span><br><span class="line">        <span class="comment">//消费消息</span></span><br><span class="line">        channel.basicConsume(queueName, <span class="keyword">true</span>, <span class="keyword">new</span> DefaultConsumer(channel)&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleDelivery</span><span class="params">(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, <span class="keyword">byte</span>[] body)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"消费者1=&gt;"</span> + <span class="keyword">new</span> String(body));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试：生产者生产消息后，每个消费者都收到了同一条消息</p><h2 id="Routing-direct"><a href="#Routing-direct" class="headerlink" title="Routing-direct"></a>Routing-direct</h2><p>在Fanout模式中，一条消息，会被所有订阅的队列都消费。但是，在某些场景下，我们希望不同的消息被不同的队列消费。这时就要用到Direct类型的Exchange。</p><p>在Direct模型下：</p><ul><li>队列与交换机的绑定，不能是任意绑定了，而是要指定一个<code>RoutingKey</code>（路由key）</li><li>消息的发送方在 向 Exchange发送消息时，也必须指定消息的 <code>RoutingKey</code>。</li><li>Exchange不再把消息交给每一个绑定的队列，而是根据消息的<code>Routing Key</code>进行判断，只有队列的<code>Routingkey</code>与消息的 <code>Routing key</code>完全一致，才会接收到消息</li></ul><p>流程：</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/C9OQGPhF7L1zftH.png" alt="image-20200621190545988"></p><p>图解：</p><ul><li>P：生产者，向Exchange发送消息，发送消息时，会指定一个routing key。</li><li>X：Exchange（交换机），接收生产者的消息，然后把消息递交给 与routing key完全匹配的队列</li><li>C1：消费者，其所在队列指定了需要routing key 为 error 的消息</li><li>C2：消费者，其所在队列指定了需要routing key 为 info、error、warning 的消息</li></ul><p>生产者：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Provider</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Connection connection = RabbitMQUtil.getConnection();</span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line">        <span class="comment">//声明交换机</span></span><br><span class="line">        String exchange = <span class="string">"logs_direct"</span>;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 参数1：交换机名称</span></span><br><span class="line"><span class="comment">         * 参数2：交换机类型，固定的</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        channel.exchangeDeclare(exchange, <span class="string">"direct"</span>);</span><br><span class="line">        <span class="comment">//声明路由key</span></span><br><span class="line">        String routeKey = <span class="string">"error"</span>;</span><br><span class="line">        <span class="comment">//发布消息</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 参数1：交换机名称</span></span><br><span class="line"><span class="comment">         * 参数2：路由key</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        channel.basicPublish(exchange, routeKey, <span class="keyword">null</span>, (<span class="string">"direct类型，路由key为"</span> + routeKey +<span class="string">"发来的消息"</span>).getBytes());</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        RabbitMQUtil.closeChannelAndConnection(channel, connection);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>消费者1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Consumer1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Connection connection = RabbitMQUtil.getConnection();</span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line">        <span class="comment">//绑定路由</span></span><br><span class="line">        String exchange = <span class="string">"logs_direct"</span>;</span><br><span class="line">        channel.exchangeDeclare(exchange, <span class="string">"direct"</span>);</span><br><span class="line">        <span class="comment">//临时队列</span></span><br><span class="line">        String queue = channel.queueDeclare().getQueue();</span><br><span class="line">        <span class="comment">//绑定队列和交换机</span></span><br><span class="line">        channel.queueBind(queue, exchange, <span class="string">"error"</span>);</span><br><span class="line">        channel.queueBind(queue, exchange, <span class="string">"info"</span>);</span><br><span class="line">        <span class="comment">//消费队列</span></span><br><span class="line">        channel.basicConsume(queue, <span class="keyword">true</span>, <span class="keyword">new</span> DefaultConsumer(channel)&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleDelivery</span><span class="params">(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, <span class="keyword">byte</span>[] body)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"消费者1=&gt;"</span> + <span class="keyword">new</span> String(body));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>消费者2：只绑定了info</p><p>测试：生产者绑定路由“error”发消息后，只有消费者1消费了</p><h2 id="Routing-topic"><a href="#Routing-topic" class="headerlink" title="Routing-topic"></a>Routing-topic</h2><p><code>Topic</code>类型的<code>Exchange</code>与<code>Direct</code>相比，都是可以根据<code>RoutingKey</code>把消息路由到不同的队列。只不过<code>Topic</code>类型<code>Exchange</code>可以让队列在绑定<code>Routing key</code> 的时候使用通配符！这种模型<code>Routingkey</code> 一般都是由一个或多个单词组成，多个单词之间以”.”分割，例如： <code>item.insert</code></p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/6JySzND4LBIR9Zs.png" alt="image-20200621201750295"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 统配符</span><br><span class="line">* (star) can substitute for exactly one word.匹配不多不少恰好1个词</span><br><span class="line"># (hash) can substitute for zero or more words.匹配一个或多个词</span><br><span class="line"># 如:</span><br><span class="line">audit.#  匹配audit.irs.corporate或者 audit.irs 等</span><br><span class="line">audit.*  只能匹配 audit.irs</span><br></pre></td></tr></table></figure><p>生产者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Provider</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Connection connection = RabbitMQUtil.getConnection();</span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line">        channel.exchangeDeclare(<span class="string">"topics"</span>, <span class="string">"topic"</span>);</span><br><span class="line">        String roteKey = <span class="string">"user.save"</span>;</span><br><span class="line">        channel.basicPublish(<span class="string">"topics"</span>, roteKey, <span class="keyword">null</span>, <span class="string">"topics发布的消息来了"</span>.getBytes());</span><br><span class="line">        RabbitMQUtil.closeChannelAndConnection(channel, connection);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>消费者1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Consumer1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Connection connection = RabbitMQUtil.getConnection();</span><br><span class="line">        Channel channel = connection.createChannel();</span><br><span class="line">        channel.exchangeDeclare(<span class="string">"topics"</span>, <span class="string">"topic"</span>);</span><br><span class="line">        String queue = channel.queueDeclare().getQueue();</span><br><span class="line">        channel.queueBind(queue, <span class="string">"topics"</span>, <span class="string">"*.user"</span>);</span><br><span class="line">        channel.basicConsume(queue, <span class="keyword">true</span>, <span class="keyword">new</span> DefaultConsumer(channel)&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleDelivery</span><span class="params">(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, <span class="keyword">byte</span>[] body)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"消费者1=&gt;"</span> + <span class="keyword">new</span> String(body));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>消费者2</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">channel.queueBind(queue, <span class="string">"topics"</span>, <span class="string">"user.#"</span>);</span><br></pre></td></tr></table></figure><p>测试：因为只有消费者2的通配符符合条件，所以最终只有2消费了消息</p><h1 id="Springboot整合RabbitMQ"><a href="#Springboot整合RabbitMQ" class="headerlink" title="Springboot整合RabbitMQ"></a>Springboot整合RabbitMQ</h1><h2 id="helloworld-1"><a href="#helloworld-1" class="headerlink" title="helloworld"></a>helloworld</h2><p>1、新建springboot项目，导入相关依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ryan<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-rabbitmq<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-rabbitmq<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.amqp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-rabbit-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、配置yml文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">springboot-rabbitmq</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">rabbitmq:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">203.195</span><span class="number">.160</span><span class="number">.231</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">ems</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123</span></span><br><span class="line">    <span class="attr">virtual-host:</span> <span class="string">/ems</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">5672</span></span><br></pre></td></tr></table></figure><p>3、编写生产者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testHello</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//注意，如果没有对应的消费者，即使执行了生产者，是不会新建队列的</span></span><br><span class="line">    rabbitTemplate.convertAndSend(<span class="string">"hello"</span>, <span class="string">"hello发来的信息"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、消费者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Consumer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//监听队列，声明队列，可以是单个值，也可以是数组</span></span><br><span class="line">    <span class="meta">@RabbitListener</span>(queuesToDeclare = <span class="meta">@Queue</span>(<span class="string">"hello"</span>))</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"message=&gt;"</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试：message=&gt;hello发来的信息</p><p>==<strong>springboot就是舒服</strong>==</p><h2 id="work-queue-1"><a href="#work-queue-1" class="headerlink" title="work queue"></a>work queue</h2><p>1、生产者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testWork</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        rabbitTemplate.convertAndSend(<span class="string">"work"</span>,<span class="string">"work queue发来的消息"</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、消费者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WorkConsumer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitListener</span>(queuesToDeclare = <span class="meta">@Queue</span>(value = <span class="string">"work"</span>))</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive1</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"message1=&gt;"</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitListener</span>(queuesToDeclare = <span class="meta">@Queue</span>(value = <span class="string">"work"</span>))</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive2</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"message2=&gt;"</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试：略</p><h2 id="fanout-1"><a href="#fanout-1" class="headerlink" title="fanout"></a>fanout</h2><p>1、生产者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testFanout</span><span class="params">()</span></span>&#123;</span><br><span class="line">    rabbitTemplate.convertAndSend(<span class="string">"logs"</span>, <span class="string">""</span>, <span class="string">"fanout发来的消息"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、消费者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FanoutConsumer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitListener</span>(bindings = <span class="meta">@QueueBinding</span>(</span><br><span class="line">            value = <span class="meta">@Queue</span>,<span class="comment">//空表示临时队列</span></span><br><span class="line">            exchange = <span class="meta">@Exchange</span>(value = <span class="string">"logs"</span>, type = <span class="string">"fanout"</span>)<span class="comment">//交换机名称及类型</span></span><br><span class="line">    ))</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive1</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"message1=&gt;"</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitListener</span>(bindings = <span class="meta">@QueueBinding</span>(</span><br><span class="line">            value = <span class="meta">@Queue</span>,<span class="comment">//空表示临时队列</span></span><br><span class="line">            exchange = <span class="meta">@Exchange</span>(value = <span class="string">"logs"</span>, type = <span class="string">"fanout"</span>)<span class="comment">//交换机名称及类型</span></span><br><span class="line">    ))</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive2</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"message2=&gt;"</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试：略</p><h2 id="Routing-direct-1"><a href="#Routing-direct-1" class="headerlink" title="Routing-direct"></a>Routing-direct</h2><p>1、生产者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testDirect</span><span class="params">()</span></span>&#123;</span><br><span class="line">    rabbitTemplate.convertAndSend(<span class="string">"route_direct"</span>, <span class="string">"info"</span>, <span class="string">"direct交换器传来的消息"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、消费者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DirectConsumer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitListener</span>(bindings = <span class="meta">@QueueBinding</span>(</span><br><span class="line">            value = <span class="meta">@Queue</span>,</span><br><span class="line">            exchange = <span class="meta">@Exchange</span>(value = <span class="string">"route_direct"</span>, type = <span class="string">"direct"</span>),</span><br><span class="line">            key = &#123;<span class="string">"info"</span>, <span class="string">"error"</span>&#125;</span><br><span class="line">    ))</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive1</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"message1=&gt;"</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitListener</span>(bindings = <span class="meta">@QueueBinding</span>(</span><br><span class="line">            value = <span class="meta">@Queue</span>,</span><br><span class="line">            exchange = <span class="meta">@Exchange</span>(value = <span class="string">"route_direct"</span>, type = <span class="string">"direct"</span>),</span><br><span class="line">            key = &#123;<span class="string">"error"</span>&#125;</span><br><span class="line">    ))</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive2</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"message2=&gt;"</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试：略</p><h2 id="Routing-topics"><a href="#Routing-topics" class="headerlink" title="Routing-topics"></a>Routing-topics</h2><p>1、生产者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testTopics</span><span class="params">()</span></span>&#123;</span><br><span class="line">    rabbitTemplate.convertAndSend(<span class="string">"route_topics"</span>, <span class="string">"user.save"</span>, <span class="string">"topics交换器发来的消息"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、消费者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TopicsConsumer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitListener</span>(bindings = <span class="meta">@QueueBinding</span>(</span><br><span class="line">            value = <span class="meta">@Queue</span>,</span><br><span class="line">            key = &#123;<span class="string">"*.save"</span>&#125;,</span><br><span class="line">            exchange = <span class="meta">@Exchange</span>(value = <span class="string">"route_topics"</span>, type = <span class="string">"topic"</span>)</span><br><span class="line">    ))</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive1</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"message1=&gt;"</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitListener</span>(bindings = <span class="meta">@QueueBinding</span>(</span><br><span class="line">            value = <span class="meta">@Queue</span>,</span><br><span class="line">            key = &#123;<span class="string">"user.#"</span>&#125;,</span><br><span class="line">            exchange = <span class="meta">@Exchange</span>(value = <span class="string">"route_topics"</span>, type = <span class="string">"topic"</span>)</span><br><span class="line">    ))</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receive2</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"message2=&gt;"</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="MQ的应用场景"><a href="#MQ的应用场景" class="headerlink" title="MQ的应用场景"></a>MQ的应用场景</h1><h2 id="1、异步处理"><a href="#1、异步处理" class="headerlink" title="1、异步处理"></a>1、异步处理</h2><p>场景说明：用户注册后，需要发注册邮件和注册短信,传统的做法有两种 1.串行的方式 ：</p><p>将注册信息写入数据库后,发送注册邮件,再发送注册短信,以上三个任务全部完成后才返回给客户端。 这有一个问题是,邮件,短信并不是必须的,它只是一个通知,而这种做法让客户端等待没有必要等待的东西. </p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/3VLeQBFjuyznKSO.png" alt="image-20200621215957020"></p><p>2.并行的方式：</p><p>将注册信息写入数据库后,发送邮件的同时,发送短信,以上三个任务完成后,返回给客户端,并行的方式能提高处理的时间。</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/gHDX7F5nsmkAlZ4.png" alt="image-20200621220017037"></p><ul><li>消息队列:假设三个业务节点分别使用50ms,串行方式使用时间150ms,并行使用时间100ms。虽然并行已经提高的处理时间,但是,前面说过,邮件和短信对我正常的使用网站没有任何影响，客户端没有必要等着其发送完成才显示注册成功,应该是写入数据库后就返回.  </li><li>引入<code>消息队列</code>后，把发送邮件,短信不是必须的业务逻辑异步处理 </li></ul><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/c7fG2QMqyYVprBm.png" alt="image-20200621220135495"></p><p>由此可以看出,引入消息队列后，用户的响应时间就等于写入数据库的时间+写入消息队列的时间(可以忽略不计),引入消息队列后处理后,响应时间是串行的3倍,是并行的2倍</p><h2 id="2、应用解耦"><a href="#2、应用解耦" class="headerlink" title="2、应用解耦"></a>2、应用解耦</h2><p>场景：双11是购物狂节,用户下单后,订单系统需要通知库存系统,传统的做法就是订单系统调用库存系统的接口. </p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/cv3QjdubsJwpyEk.png" alt="image-20200621220216652"></p><p>这种做法有一个缺点:</p><p>当库存系统出现故障时,订单就会失败。 订单系统和库存系统高耦合.  </p><p>引入消息队列 ：</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/WXqPkys8fNDd7vU.png" alt="image-20200621220240887"></p><ul><li><p><code>订单系统:</code>用户下单后,订单系统完成持久化处理,将消息写入消息队列,返回用户订单下单成功。</p></li><li><p><code>库存系统:</code>订阅下单的消息,获取下单消息,进行库操作。  就算库存系统出现故障,消息队列也能保证消息的可靠投递,不会导致消息丢失.</p></li></ul><h2 id="3、流量削峰"><a href="#3、流量削峰" class="headerlink" title="3、流量削峰"></a>3、流量削峰</h2><p>场景：秒杀活动，一般会因为流量过大，导致应用挂掉,为了解决这个问题，一般在应用前端加入消息队列。  </p><p>作用：</p><ul><li>可以控制活动人数，超过此一定阀值的订单直接丢弃(我为什么秒杀一次都没有成功过呢^^) </li><li>可以缓解短时间的高流量压垮应用(应用程序按自己的最大处理能力获取订单) </li></ul><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/NJMdFbEt2C9eVlG.png" alt="image-20200621220349231"></p><p>1.用户的请求,服务器收到之后,首先写入消息队列,加入消息队列长度超过最大值,则直接抛弃用户请求或跳转到错误页面.  </p><p>2.秒杀业务根据消息队列中的请求信息，再做后续处理.</p><h1 id="RabbitMQ的集群"><a href="#RabbitMQ的集群" class="headerlink" title="RabbitMQ的集群"></a>RabbitMQ的集群</h1><h2 id="集群架构"><a href="#集群架构" class="headerlink" title="集群架构"></a>集群架构</h2><h3 id="普通集群（副本集群）"><a href="#普通集群（副本集群）" class="headerlink" title="普通集群（副本集群）"></a>普通集群（副本集群）</h3><p>默认情况下:RabbitMQ代理操作所需的所有数据/状态都将跨所有节点复制。这方面的一个例外是消息队列，默认情况下，消息队列位于一个节点上，尽管它们可以从所有节点看到和访问。</p><p>所以当主节点宕机之后，其他节点队列中的信息也会随之丢失</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/AZ9ePLgfmlqvUXN.png" alt="image-20200621230922243"></p><p>核心解决问题:  <code>当集群中某一时刻master节点宕机,可以对Quene中信息,进行备份</code>，说白了就是位了解决高可用的问题，需要用到下面的镜像集群</p><p>集群搭建步骤：略</p><h3 id="镜像集群"><a href="#镜像集群" class="headerlink" title="镜像集群"></a>镜像集群</h3><p>镜像队列机制就是将队列在三个节点之间设置主从关系，消息会在三个节点之间进行自动同步，且如果其中一个节点不可用，并不会导致消息丢失或服务不可用的情况，提升MQ集群的整体高可用性。</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/K5Tkr4DE6wgCQcI.png" alt="image-20200621231229243"></p><h5 id="配置集群架构"><a href="#配置集群架构" class="headerlink" title="配置集群架构"></a>配置集群架构</h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 0.策略说明</span></span><br><span class="line"><span class="code">rabbitmqctl set_policy [-p &lt;vhost&gt;] [--priority &lt;priority&gt;] [--apply-to &lt;apply-to&gt;] &lt;name&gt; &lt;pattern&gt;  &lt;definition&gt;</span></span><br><span class="line"><span class="code">-p Vhost： 可选参数，针对指定vhost下的queue进行设置</span></span><br><span class="line"><span class="code">Name:     policy的名称</span></span><br><span class="line"><span class="code">Pattern: queue的匹配模式(正则表达式)</span></span><br><span class="line"><span class="code">Definition：镜像定义，包括三个部分ha-mode, ha-params, ha-sync-mode</span></span><br><span class="line"><span class="code">           ha-mode:指明镜像队列的模式，有效值为 all/exactly/nodes</span></span><br><span class="line"><span class="code">                        all：表示在集群中所有的节点上进行镜像</span></span><br><span class="line"><span class="code">                        exactly：表示在指定个数的节点上进行镜像，节点的个数由ha-params指定</span></span><br><span class="line"><span class="code">                        nodes：表示在指定的节点上进行镜像，节点名称通过ha-params指定</span></span><br><span class="line"><span class="code">             ha-params：ha-mode模式需要用到的参数</span></span><br><span class="line"><span class="code">                ha-sync-mode：进行队列中消息的同步方式，有效值为automatic和manual</span></span><br><span class="line"><span class="code">                priority：可选参数，policy的优先级</span></span><br><span class="line"><span class="code">                </span></span><br><span class="line"><span class="code">                 </span></span><br><span class="line"><span class="section"># 1.查看当前策略</span></span><br><span class="line"><span class="code">rabbitmqctl list_policies</span></span><br><span class="line"></span><br><span class="line"><span class="section"># 2.添加策略</span></span><br><span class="line"><span class="code">rabbitmqctl set_policy ha-all '^hello' '&#123;"ha-mode":"all","ha-sync-mode":"automatic"&#125;' </span></span><br><span class="line"><span class="code">说明:策略正则表达式为 “^” 表示所有匹配所有队列名称  ^hello:匹配hello开头队列</span></span><br><span class="line"></span><br><span class="line"><span class="section"># 3.删除策略</span></span><br><span class="line"><span class="code">rabbitmqctl clear_policy ha-all</span></span><br><span class="line"></span><br><span class="line"><span class="section"># 4.测试集群</span></span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;h2 id=&quot;什么是RabbitMQ？&quot;&gt;&lt;a href=&quot;#什么是RabbitMQ？&quot; class=&quot;headerlink&quot; title=&quot;什
      
    
    </summary>
    
    
      <category term="中间件" scheme="http://yoursite.com/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
      <category term="大数据" scheme="http://yoursite.com/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="rabbitmq" scheme="http://yoursite.com/tags/rabbitmq/"/>
    
  </entry>
  
  <entry>
    <title>ElasticSearch入门+整合springboot</title>
    <link href="http://yoursite.com/2020/06/24/asticSearch%E5%85%A5%E9%97%A8-%E6%95%B4%E5%90%88springboot/"/>
    <id>http://yoursite.com/2020/06/24/asticSearch%E5%85%A5%E9%97%A8-%E6%95%B4%E5%90%88springboot/</id>
    <published>2020-06-24T08:45:00.000Z</published>
    <updated>2020-06-24T08:48:28.152Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>学习ElasticSearch之前，建议大家可以百度一下他的诞生背景，会更加有利于你对这门技术的了解，这里就不展开描述了，直接入门学习</p><h1 id="ElasticSearch安装"><a href="#ElasticSearch安装" class="headerlink" title="ElasticSearch安装"></a>ElasticSearch安装</h1><p>注意：因为ElasticSearch的底层是java开发的，需要jdk环境，而jdk环境最低要求是jdk1.8及以上的，所以需要确保这个环境是ok的</p><blockquote><p>下载</p></blockquote><p>直接官网下载即可，迅雷下载的速度还是挺快的</p><p><a href="https://www.elastic.co/cn/" target="_blank" rel="noopener">https://www.elastic.co/cn/</a></p><blockquote><p>安装</p></blockquote><p>解压即用</p><p>解压完毕后运行bin目录下的elasticsearch.bat文件，等待运行完毕后，在浏览器运行127.0.0.1:9200即可，出现以下界面说明安装成功</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/ersC5ihNPytgoqm.png" alt="image-20200619110430555"></p><blockquote><p>安装ES的图形化界面插件客户端——elasticsearch-head</p></blockquote><p>注意：安装此插件需要node.js环境，没有的需要提前安装好，否则是安装不了elasticsearch-head的，具体怎么安装的在vue笔记中有说明，可以去看下</p><p>下载地址：<a href="https://github.com/mobz/elasticsearch-head" target="_blank" rel="noopener">https://github.com/mobz/elasticsearch-head</a></p><p>克隆到本地</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git://github.com/mobz/elasticsearch-head.git</span><br></pre></td></tr></table></figure><p>然后按照文档的说明来安装即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> elasticsearch-head</span><br><span class="line">npm install <span class="comment"># 如果比较慢也可以使用cnpm</span></span><br><span class="line">npm run start</span><br></pre></td></tr></table></figure><p>最后运行开始在浏览器运行<a href="http://localhost:9100/" target="_blank" rel="noopener">http://localhost:9100/</a></p><p>因为涉及到跨域问题，没法直接通信的，所以需要到elasticsearch的config目录下的elasticsearch.yml配置文件中配置一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 跨域配置</span></span><br><span class="line">http.cors.enabled: <span class="literal">true</span></span><br><span class="line">http.cors.allow-origin: <span class="string">"*"</span></span><br></pre></td></tr></table></figure><p>最后重启elasticsearch，发现elasticsearch-head会自动访问到</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/l1xu34WHionDJKZ.png" alt="image-20200619111059820"></p><blockquote><p>kibana</p></blockquote><p>通过 Kibana，您可以对自己的 Elasticsearch 进行可视化，还可以在 Elastic Stack 中进行导航，这样您便可以进行各种操作了，从跟踪查询负载，到理解请求如何流经您的整个应用，都能轻松完成。</p><p>下载地址：<a href="https://www.elastic.co/cn/kibana" target="_blank" rel="noopener">https://www.elastic.co/cn/kibana</a></p><p>注意：kibana的版本要和elasticsearch的版本保持一致</p><p>下载完毕后解压即用，运行bin目录下的kibana.bat文件，运行完毕后在浏览器中运行<a href="http://localhost:5601，kibana会自动去访问9200，也就elasticsearch的端口号（当然elasticsearch这个时候必须启动着），然后就可以使用kibana了！">http://localhost:5601，kibana会自动去访问9200，也就elasticsearch的端口号（当然elasticsearch这个时候必须启动着），然后就可以使用kibana了！</a></p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/2U6kXpJLqxBmhCf.png" alt="image-20200619113022178"></p><p>全英文看不懂？放心，kibana自带汉化功能，找到kibana的config目录下的kibana.yml文件，配置如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i18n.locale: <span class="string">"zh-CN"</span></span><br></pre></td></tr></table></figure><p>然后重启kibana就会变成中文版的了</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/gw2viNKhGZzW6Qk.png" alt="image-20200619113630600"></p><h1 id="ES核心概念"><a href="#ES核心概念" class="headerlink" title="ES核心概念"></a>ES核心概念</h1><blockquote><p>概述</p></blockquote><p>在前面的学习中，我们已经掌握了es是什么，同时也把es的服务已经安装启动，那么es是如何去存储数据，数据结构是什么，又是如何实现搜索的呢？我们先来聊聊ElasticSearch的相关概念吧！</p><p>集群，节点，索引，类型，文档，分片，映射是什么？</p><blockquote><p>elasticsearch是面向文档，关系行数据库 和 elasticsearch 客观的对比！</p></blockquote><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/QBW5ou7LMdVmItg.png" alt="image-20200619123708610"></p><p>elasticsearch(集群)中可以包含多个索引(数据库)，每个索引中可以包含多个类型(表)，每个类型下又包含多 个文档(行)，每个文档中又包含多个字段(列)。</p><p><strong>物理设计：</strong></p><p>elasticsearch 在后台把每个索引划分成多个分片，每分分片可以在集群中的不同服务器间迁移</p><p><strong>逻辑设计：</strong></p><p>一个索引类型中，包含多个文档，比如说文档1，文档2。 当我们索引一篇文档时，可以通过这样的一各顺序找到 它: 索引 ▷ 类型 ▷ 文档ID ，通过这个组合我们就能索引到某个具体的文档。 注意:ID不必是整数，实际上它是个字 符串。</p><blockquote><p>文档</p></blockquote><p>之前说elasticsearch是面向文档的，那么就意味着索引和搜索数据的最小单位是文档，elasticsearch中，文档有几个 重要属性 :</p><ul><li>自我包含，一篇文档同时包含字段和对应的值，也就是同时包含key:value！</li><li>可以是层次型的，一个文档中包含自文档，复杂的逻辑实体就是这么来的！</li><li>灵活的结构，文档不依赖预先定义的模式，我们知道关系型数据库中，要提前定义字段才能使用，在elasticsearch中，对于字段是非常灵活的，有时候，我们可以忽略该字段，或者动态的添加一个新的字段。</li></ul><p>尽管我们可以随意的新增或者忽略某个字段，但是，每个字段的类型非常重要，比如一个年龄字段类型，可以是字符 串也可以是整形。因为elasticsearch会保存字段和类型之间的映射及其他的设置。这种映射具体到每个映射的每种类型，这也是为什么在elasticsearch中，类型有时候也称为映射类型。</p><blockquote><p>类型</p></blockquote><p>类型是文档的逻辑容器，就像关系型数据库一样，表格是行的容器。 类型中对于字段的定义称为映射，比如 name 映 射为字符串类型。 我们说文档是无模式的，它们不需要拥有映射中所定义的所有字段，比如新增一个字段，那么elasticsearch是怎么做的呢?elasticsearch会自动的将新字段加入映射，但是这<br>个字段的不确定它是什么类型，elasticsearch就开始猜，如果这个值是18，那么elasticsearch会认为它是整形。 但是elasticsearch也可能猜不对， 所以最安全的方式就是提前定义好所需要的映射，这点跟关系型数据库殊途同归了，先定义好字段，然后再使用，别 整什么幺蛾子。</p><blockquote><p>索引</p></blockquote><p>索引是映射类型的容器，elasticsearch中的索引是一个非常大的文档集合。索引存储了映射类型的字段和其他设置。 然后它们被存储到了各个分片上了。 我们来研究下分片是如何工作的。</p><p><strong>物理设计：节点和分片 如何工作</strong></p><p>一个集群至少有一个节点，而一个节点就是一个elasricsearch进程，节点可以有多个索引默认的，如果你创建索引，那么索引将会有个5个分片 ( primary shard ,又称主分片 ) 构成的，每一个主分片会有一个副本 ( replica shard ,又称复制分片 )</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/x43kDnzvaQ2T5FJ.png" alt="image-20200619124017880"></p><p>上图是一个有3个节点的集群，可以看到主分片和对应的复制分片都不会在同一个节点内，这样有利于某个节点挂掉 了，数据也不至于丢失。 实际上，一个分片是一个Lucene索引，一个包含倒排索引的文件目录，倒排索引的结构使 得elasticsearch在不扫描全部文档的情况下，就能告诉你哪些文档包含特定的<br>关键字。 不过，等等，倒排索引是什 么鬼?</p><blockquote><p>倒排索引</p></blockquote><p>elasticsearch使用的是一种称为倒排索引的结构，采用Lucene倒排索作为底层。这种结构适用于快速的全文搜索， 一个索引由文档中所有不重复的列表构成，对于每一个词，都有一个包含它的文档列表。 例如，现在有两个文档， 每个文档包含如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Study every day, good good up to forever <span class="comment"># 文档1包含的内容</span></span><br><span class="line">To forever, study every day, good good up <span class="comment"># 文档2包含的内容</span></span><br></pre></td></tr></table></figure><p>为了创建倒排索引，我们首先要将每个文档拆分成独立的词(或称为词条或者tokens)，然后创建一个包含所有不重 复的词条的排序列表，然后列出每个词条出现在哪个文档 :</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/xyajBX2YzLfeUtV.png" alt="image-20200619124122808"></p><p>现在，我们试图搜索 to forever，只需要查看包含每个词条的文档</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/t8Y1svuOENTayGM.png" alt="image-20200619124136575"></p><p>两个文档都匹配，但是第一个文档比第二个匹配程度更高。如果没有别的条件，现在，这两个包含关键字的文档都将返回。</p><p>再来看一个示例，比如我们通过博客标签来搜索博客文章。那么倒排索引列表就是这样的一个结构 :</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/fUS2WTMOg6mFQXE.png" alt="image-20200619124158293"></p><p>如果要搜索含有 python 标签的文章，那相对于查找所有原始数据而言，查找倒排索引后的数据将会快的多。只需要 查看标签这一栏，然后获取相关的文章ID即可。</p><p>elasticsearch的索引和Lucene的索引对比</p><p>在elasticsearch中， 索引 这个词被频繁使用，这就是术语的使用。 在elasticsearch中，索引被分为多个分片，每份 分片是一个Lucene的索引。所以一个elasticsearch索引是由多个Lucene索引组成的。别问为什么，谁让elasticsearch使用Lucene作为底层呢! 如无特指，说起索引都是指elasticsearch的索引。</p><p>接下来的一切操作都在kibana中Dev Tools下的Console里完成。基础操作！</p><h1 id="ES基础操作"><a href="#ES基础操作" class="headerlink" title="ES基础操作"></a>ES基础操作</h1><h2 id="IK分词器插件"><a href="#IK分词器插件" class="headerlink" title="IK分词器插件"></a>IK分词器插件</h2><blockquote><p>什么是ik分词器</p></blockquote><p>分词：即把一段中文或者别的划分成一个个的关键字，我们在搜索时候会把自己的信息进行分词，会把数据库中或者索引库中的数据进行分词，然后进行一个匹配操作，默认的中文分词是将每个字看成一个词，比如 “我爱狂神” 会被分为”我”,”爱”,”狂”,”神”，这显然是不符合要求的，所以我们需要安装中文分词<br>器ik来解决这个问题。</p><p>IK提供了两个分词算法：ik_smart 和 ik_max_word，其中 ik_smart 为最少切分，ik_max_word为最细粒度划分！一会我们测试！</p><blockquote><p>安装ik分词器</p></blockquote><p>下载地址：<a href="https://github.com/medcl/elasticsearch-analysis-ik/releases" target="_blank" rel="noopener">https://github.com/medcl/elasticsearch-analysis-ik/releases</a></p><p>注意：版本也要和es版本对应</p><p>下载完成后解压即用，注意是解压到elasticsearch安装目录下的plugins目录（插件目录）</p><p>然后重启所有服务即可</p><p>测试：</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/JnarkWKHc9UDpOB.png" alt="image-20200619140252083"></p><p>发现这是一个拆分的词语，如果想要系统识别“狂神说”这个词语，只需要配置一下即可</p><p>步骤：</p><ul><li>进入config目录，新建my.dic文件，并输入狂神说</li><li>打开IKAnalyzer.cfg.xml，将刚刚自定义的字典导入</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">properties</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"http://java.sun.com/dtd/properties.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">comment</span>&gt;</span>IK Analyzer 扩展配置<span class="tag">&lt;/<span class="name">comment</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--用户可以在这里配置自己的扩展字典 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"ext_dict"</span>&gt;</span>my.dic<span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--用户可以在这里配置自己的扩展停止词字典--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"ext_stopwords"</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--用户可以在这里配置远程扩展字典 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;entry key="remote_ext_dict"&gt;words_location&lt;/entry&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--用户可以在这里配置远程扩展停止词字典--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;entry key="remote_ext_stopwords"&gt;words_location&lt;/entry&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><p>再次测试，“狂神说”就是一个词语了</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/o6h2nBpQv7yKjuw.png" alt="image-20200619140531657"></p><h2 id="Rest风格说明"><a href="#Rest风格说明" class="headerlink" title="Rest风格说明"></a>Rest风格说明</h2><p>一种软件架构风格，而不是标准，只是提供了一组设计原则和约束条件。它主要用于客户端和服务器交互类的软件。基于这个风格设计的软件可以更简洁，更有层次，更易于实现缓存等机制。</p><p>基本命令说明</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/9vT3Lwidfzmo76y.png" alt="image-20200619151047135"></p><blockquote><p>代码测试</p></blockquote><p>put命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PUT /ryan/user/1</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"牛排"</span>,</span><br><span class="line">  <span class="string">"age"</span>: <span class="string">"18"</span>,</span><br><span class="line">  <span class="string">"desc"</span>: <span class="string">"帅"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PUT /ryan/user/2</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"羊排"</span>,</span><br><span class="line">  <span class="string">"age"</span>: <span class="string">"11"</span>,</span><br><span class="line">  <span class="string">"desc"</span>: <span class="string">"骚"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PUT /ryan/user/3</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"小明"</span>,</span><br><span class="line">  <span class="string">"age"</span>: <span class="string">"15"</span>,</span><br><span class="line">  <span class="string">"desc"</span>: <span class="string">"丑"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/hRdL8E1KXek2u4g.png" alt="image-20200619155113387"></p><p>get命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 简单的搜索（如果直接get ryan 是获取索引信息的）</span></span><br><span class="line">GET /ryan/user/2</span><br><span class="line"><span class="comment"># 返回</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"ryan"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"user"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : 2,</span><br><span class="line">  <span class="string">"_seq_no"</span> : 2,</span><br><span class="line">  <span class="string">"_primary_term"</span> : 1,</span><br><span class="line">  <span class="string">"found"</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"_source"</span> : &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"羊排"</span>,</span><br><span class="line">    <span class="string">"age"</span> : <span class="string">"11"</span>,</span><br><span class="line">    <span class="string">"desc"</span> : <span class="string">"骚"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>post _update，推荐的更新操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST /ryan/user/1/_update</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"doc"</span>:&#123;</span><br><span class="line">    <span class="string">"desc"</span>: <span class="string">"高富帅"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>条件查询</p><p>简单的查询，我们上面已经不知不觉的使用熟悉了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /ryan/user/2</span><br></pre></td></tr></table></figure><p>我们来学习下条件查询 _search?q=</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /ryan/user/_search?q=name:牛排</span><br></pre></td></tr></table></figure><p>返回：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 1,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 1,</span><br><span class="line">    <span class="string">"successful"</span> : 1,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : &#123;</span><br><span class="line">      <span class="string">"value"</span> : 2,</span><br><span class="line">      <span class="string">"relation"</span> : <span class="string">"eq"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"max_score"</span> : 1.89712,</span><br><span class="line">    <span class="string">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"ryan"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"user"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 1.89712,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"name"</span> : <span class="string">"牛排"</span>,</span><br><span class="line">          <span class="string">"age"</span> : <span class="string">"18"</span>,</span><br><span class="line">          <span class="string">"desc"</span> : <span class="string">"高富帅"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"ryan"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"user"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 0.6931471,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"name"</span> : <span class="string">"羊排"</span>,</span><br><span class="line">          <span class="string">"age"</span> : <span class="string">"11"</span>,</span><br><span class="line">          <span class="string">"desc"</span> : <span class="string">"骚"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现上面的结果没有小明，然后我搜牛排，羊排也查出来了，是因为他也有一定的匹配度_score，匹配度越高，分值越高</p><blockquote><p>构建查询</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET ryan/user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>:&#123;</span><br><span class="line">    <span class="string">"match"</span>: &#123;</span><br><span class="line">      <span class="string">"name"</span>: <span class="string">"牛排"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 4,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 1,</span><br><span class="line">    <span class="string">"successful"</span> : 1,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : &#123;</span><br><span class="line">      <span class="string">"value"</span> : 2,</span><br><span class="line">      <span class="string">"relation"</span> : <span class="string">"eq"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"max_score"</span> : 1.89712,</span><br><span class="line">    <span class="string">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"ryan"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"user"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 1.89712,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"name"</span> : <span class="string">"牛排"</span>,</span><br><span class="line">          <span class="string">"age"</span> : <span class="string">"18"</span>,</span><br><span class="line">          <span class="string">"desc"</span> : <span class="string">"高富帅"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"ryan"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"user"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 0.6931471,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"name"</span> : <span class="string">"羊排"</span>,</span><br><span class="line">          <span class="string">"age"</span> : <span class="string">"11"</span>,</span><br><span class="line">          <span class="string">"desc"</span> : <span class="string">"骚"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>除此之外，还可以查询全部</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET ryan/user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>:&#123;</span><br><span class="line">    <span class="string">"match_all"</span>: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>match_all的值为空，表示没有查询条件，就像select * from table_name一样。</p><p>返回结果：全部查询出来了！</p><p>如果有个需求，我们仅是需要查看 name 1个属性，其他的不要怎么办?</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GET ryan/user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>:&#123;</span><br><span class="line">    <span class="string">"match_all"</span>: &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"_source"</span>: [<span class="string">"name"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如上例所示，在查询中，通过 _source 来控制仅返回 name 和 age 属性。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 2,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 1,</span><br><span class="line">    <span class="string">"successful"</span> : 1,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : &#123;</span><br><span class="line">      <span class="string">"value"</span> : 3,</span><br><span class="line">      <span class="string">"relation"</span> : <span class="string">"eq"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"max_score"</span> : 1.0,</span><br><span class="line">    <span class="string">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"ryan"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"user"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 1.0,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"name"</span> : <span class="string">"牛排"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"ryan"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"user"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 1.0,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"name"</span> : <span class="string">"羊排"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"ryan"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"user"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"3"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 1.0,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"name"</span> : <span class="string">"小明"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>一般的，我们推荐使用构建查询，以后在与程序交互时的查询等也是使用构建查询方式处理查询条件，因为该方 式可以构建更加复杂的查询条件，也更加一目了然</strong>。</p><blockquote><p>排序查询</p></blockquote><p>我们说到排序 有人就会想到：正序 或 倒序 那么我们先来倒序：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">GET ryan/user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>:&#123;</span><br><span class="line">    <span class="string">"match_all"</span>: &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"sort"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"age"</span>: &#123;</span><br><span class="line">        <span class="string">"order"</span>: <span class="string">"desc"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>正序的话是asc</p><p>注意:在排序的过程中，只能使用可排序的属性进行排序。那么可以排序的属性有哪些呢?</p><ul><li>数字</li><li>日期</li><li>ID</li></ul><p>其他的都不行</p><blockquote><p>分页查询</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET ryan/user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>:&#123;</span><br><span class="line">    <span class="string">"match_all"</span>: &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"from"</span>: 0, <span class="comment"># 从第n条开始</span></span><br><span class="line">  <span class="string">"size"</span>: 1 <span class="comment"># 返回几条数据</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就返回了一条数据 是从第0条开始的返回一条数据 。可以再测试！</p><blockquote><p>布尔查询</p></blockquote><p>先增加一条数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PUT ryan/user/4</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"牛排"</span>,</span><br><span class="line">  <span class="string">"age"</span>: 3,</span><br><span class="line">  <span class="string">"desc"</span>: <span class="string">"我是3岁的牛排"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>must（相当于and）</p><p>我要查询所有name属性为牛排的数据,且年龄为3岁</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">GET ryan/user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"bool"</span>: &#123;</span><br><span class="line">      <span class="string">"must"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"match"</span>: &#123;</span><br><span class="line">            <span class="string">"name"</span>: <span class="string">"牛排"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"match"</span>: &#123;</span><br><span class="line">            <span class="string">"age"</span>: <span class="string">"3"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 31,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 1,</span><br><span class="line">    <span class="string">"successful"</span> : 1,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : &#123;</span><br><span class="line">      <span class="string">"value"</span> : 1,</span><br><span class="line">      <span class="string">"relation"</span> : <span class="string">"eq"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"max_score"</span> : 2.8007593,</span><br><span class="line">    <span class="string">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"ryan"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"user"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"4"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 2.8007593,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"name"</span> : <span class="string">"牛排"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 3,</span><br><span class="line">          <span class="string">"desc"</span> : <span class="string">"我是3岁的牛排"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们通过在 bool 属性内使用 must 来作为查询条件！看结果，是不是 有点像 and 的感觉，里面的条件需要都满足！</p><p>should（相当于or）</p><p>我要查询所有name属性为牛排的数据,或者年龄为3岁</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">GET ryan/user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"bool"</span>: &#123;</span><br><span class="line">      <span class="string">"should"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"match"</span>: &#123;</span><br><span class="line">            <span class="string">"name"</span>: <span class="string">"牛排"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"match"</span>: &#123;</span><br><span class="line">            <span class="string">"age"</span>: <span class="string">"3"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 2,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 1,</span><br><span class="line">    <span class="string">"successful"</span> : 1,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : &#123;</span><br><span class="line">      <span class="string">"value"</span> : 3,</span><br><span class="line">      <span class="string">"relation"</span> : <span class="string">"eq"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"max_score"</span> : 2.8007593,</span><br><span class="line">    <span class="string">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"ryan"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"user"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"4"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 2.8007593,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"name"</span> : <span class="string">"牛排"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 3,</span><br><span class="line">          <span class="string">"desc"</span> : <span class="string">"我是3岁的牛排"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"ryan"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"user"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 1.4144652,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"name"</span> : <span class="string">"牛排"</span>,</span><br><span class="line">          <span class="string">"age"</span> : <span class="string">"18"</span>,</span><br><span class="line">          <span class="string">"desc"</span> : <span class="string">"高富帅"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"ryan"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"user"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 0.53899646,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"name"</span> : <span class="string">"羊排"</span>,</span><br><span class="line">          <span class="string">"age"</span> : <span class="string">"11"</span>,</span><br><span class="line">          <span class="string">"desc"</span> : <span class="string">"骚"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>must_not (not)</strong></p><p>我想要查询 年龄不是 3 的 数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">GET ryan/user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"bool"</span>: &#123;</span><br><span class="line">      <span class="string">"must_not"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"match"</span>: &#123;</span><br><span class="line">            <span class="string">"age"</span>: <span class="string">"3"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 1,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 1,</span><br><span class="line">    <span class="string">"successful"</span> : 1,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : &#123;</span><br><span class="line">      <span class="string">"value"</span> : 3,</span><br><span class="line">      <span class="string">"relation"</span> : <span class="string">"eq"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"max_score"</span> : 0.0,</span><br><span class="line">    <span class="string">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"ryan"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"user"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 0.0,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"name"</span> : <span class="string">"牛排"</span>,</span><br><span class="line">          <span class="string">"age"</span> : <span class="string">"18"</span>,</span><br><span class="line">          <span class="string">"desc"</span> : <span class="string">"高富帅"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"ryan"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"user"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 0.0,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"name"</span> : <span class="string">"羊排"</span>,</span><br><span class="line">          <span class="string">"age"</span> : <span class="string">"11"</span>,</span><br><span class="line">          <span class="string">"desc"</span> : <span class="string">"骚"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"ryan"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"user"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"3"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 0.0,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"name"</span> : <span class="string">"小明"</span>,</span><br><span class="line">          <span class="string">"age"</span> : <span class="string">"15"</span>,</span><br><span class="line">          <span class="string">"desc"</span> : <span class="string">"丑"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Filtter</strong></p><p>我要查询name为牛排的，aget大于3岁的数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">GET ryan/user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"bool"</span>: &#123;</span><br><span class="line">      <span class="string">"must"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"match"</span>: &#123;</span><br><span class="line">            <span class="string">"name"</span>: <span class="string">"牛排"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="string">"filter"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"range"</span>: &#123;</span><br><span class="line">            <span class="string">"age"</span>: &#123;</span><br><span class="line">              <span class="string">"gt"</span>: 3</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里就用到了 filter 条件过滤查询，过滤条件的范围用 range 表示， gt 表示大于。其余操作如下 :</p><ul><li>gt表示大于</li><li>gte表示大于等于</li><li>lt表示小于</li><li>lte表示小于等于</li></ul><p>以上可组合查询</p><blockquote><p>高亮显示</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">GET ryan/user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"match"</span>: &#123;</span><br><span class="line">      <span class="string">"name"</span>: <span class="string">"小明"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"highlight"</span>: &#123;</span><br><span class="line">    <span class="string">"fields"</span>: &#123;</span><br><span class="line">      <span class="string">"name"</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 2,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 1,</span><br><span class="line">    <span class="string">"successful"</span> : 1,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : &#123;</span><br><span class="line">      <span class="string">"value"</span> : 1,</span><br><span class="line">      <span class="string">"relation"</span> : <span class="string">"eq"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"max_score"</span> : 1.7509375,</span><br><span class="line">    <span class="string">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"ryan"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"user"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"3"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 1.7509375,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"name"</span> : <span class="string">"小明"</span>,</span><br><span class="line">          <span class="string">"age"</span> : <span class="string">"15"</span>,</span><br><span class="line">          <span class="string">"desc"</span> : <span class="string">"丑"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"highlight"</span> : &#123;</span><br><span class="line">          <span class="string">"name"</span> : [</span><br><span class="line">            <span class="string">"&lt;em&gt;小&lt;/em&gt;&lt;em&gt;明&lt;/em&gt;"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以看到查询结果已经帮我们加了标签<em></em></p><p>我们可以自定义样式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">GET ryan/user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"match"</span>: &#123;</span><br><span class="line">      <span class="string">"name"</span>: <span class="string">"小明"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"highlight"</span>: &#123;</span><br><span class="line">    <span class="string">"pre_tags"</span>: <span class="string">"&lt;p class='key' style='color:red'"</span>,</span><br><span class="line">    <span class="string">"post_tags"</span>: <span class="string">"&lt;/p&gt;"</span>, </span><br><span class="line">    <span class="string">"fields"</span>: &#123;</span><br><span class="line">      <span class="string">"name"</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 2,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 1,</span><br><span class="line">    <span class="string">"successful"</span> : 1,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : &#123;</span><br><span class="line">      <span class="string">"value"</span> : 1,</span><br><span class="line">      <span class="string">"relation"</span> : <span class="string">"eq"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"max_score"</span> : 1.7509375,</span><br><span class="line">    <span class="string">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"ryan"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"user"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"3"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 1.7509375,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"name"</span> : <span class="string">"小明"</span>,</span><br><span class="line">          <span class="string">"age"</span> : <span class="string">"15"</span>,</span><br><span class="line">          <span class="string">"desc"</span> : <span class="string">"丑"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"highlight"</span> : &#123;</span><br><span class="line">          <span class="string">"name"</span> : [</span><br><span class="line">            <span class="string">"&lt;p class='key' style='color:red'小&lt;/p&gt;&lt;p class='key' style='color:red'明&lt;/p&gt;"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意的是:自定义标签中属性或样式中的逗号一律用英文状态的单引号表示，应该与外部 es 语法 的双引号区分开。</p><blockquote><p>说明：Deprecation</p></blockquote><p>注意 elasticsearch 在第一个版本的开始 每个文档都储存在一个索引中，并分配一个 映射类型，映射类型用于表示被索引的文档或者实体的类型，这样带来了一些问题, 导致后来在 elasticsearch6.0.0 版本中一个文档只能包含一个映射类型，而在 7.0.0 中，映 射类型则将被弃用，到了 8.0.0 中则将完全被删除。</p><p>只要记得，一个索引下面只能创建一个类型就行了，其中各字段都具有唯一性，如果在创建映射的时候，如果没有指定文档类型，那么该索引的默认索引类型是_doc ，不指定文档id则会内部帮我们生成一个id字符串。</p><h1 id="SpringBoot整合es"><a href="#SpringBoot整合es" class="headerlink" title="SpringBoot整合es"></a>SpringBoot整合es</h1><p>1、创建项目/模块时，勾选相应的nosql</p><p>2、导入相关依赖，注意系统默认导入的es版本比较低，要确保和自己下载的es版本一直</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">elasticsearch.version</span>&gt;</span>7.8.0<span class="tag">&lt;/<span class="name">elasticsearch.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、配置es</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ElasticSearchClientConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//我们使用的是高级客户端</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestHighLevelClient <span class="title">restHighLevelClient</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//对象可以在官网中找到</span></span><br><span class="line">        RestHighLevelClient client = <span class="keyword">new</span> RestHighLevelClient(</span><br><span class="line">                RestClient.builder(</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"localhost"</span>, <span class="number">9200</span>, <span class="string">"http"</span>)));<span class="comment">//可配置多个节点，我们这里只有一个</span></span><br><span class="line">        <span class="keyword">return</span> client;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试索引操作"><a href="#测试索引操作" class="headerlink" title="测试索引操作"></a>测试索引操作</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DemoApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestHighLevelClient restHighLevelClient;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建索引测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//创建索引请求</span></span><br><span class="line">        CreateIndexRequest request = <span class="keyword">new</span> CreateIndexRequest(<span class="string">"ryan_index"</span>);</span><br><span class="line">        <span class="comment">//客户端执行请求</span></span><br><span class="line">        CreateIndexResponse index = restHighLevelClient.indices().create(request, RequestOptions.DEFAULT);</span><br><span class="line">        System.out.println(index);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取索引测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//new一个获取索引请求</span></span><br><span class="line">        GetIndexRequest getIndexRequest = <span class="keyword">new</span> GetIndexRequest(<span class="string">"ryan_index"</span>);</span><br><span class="line">        <span class="comment">//客户端执行,看是否存在</span></span><br><span class="line">        <span class="keyword">boolean</span> exists = restHighLevelClient.indices().exists(getIndexRequest, RequestOptions.DEFAULT);</span><br><span class="line">        System.out.println(exists);<span class="comment">//true,表示存在</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//测试删除索引</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//new一个删除索引请求</span></span><br><span class="line">        DeleteIndexRequest request = <span class="keyword">new</span> DeleteIndexRequest(<span class="string">"ryan_index"</span>);</span><br><span class="line">        <span class="comment">//客户端执行</span></span><br><span class="line">        AcknowledgedResponse delete = restHighLevelClient.indices().delete(request, RequestOptions.DEFAULT);</span><br><span class="line">        System.out.println(delete.isAcknowledged());<span class="comment">//删除状态为true，到后台看到也删除了</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>小结：步骤基本是一样的</p><ul><li>new一个请求</li><li>客户端执行请求</li></ul><h2 id="测试文档操作"><a href="#测试文档操作" class="headerlink" title="测试文档操作"></a>测试文档操作</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//文档的增删改查</span></span><br><span class="line"><span class="comment">//测试添加文档记录</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User(<span class="string">"ryan"</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="comment">//创建索引对象请求</span></span><br><span class="line">    IndexRequest request = <span class="keyword">new</span> IndexRequest(<span class="string">"ryan_index"</span>);</span><br><span class="line">    request.id(<span class="string">"1"</span>);<span class="comment">//设置id</span></span><br><span class="line">    request.timeout(<span class="string">"1s"</span>);<span class="comment">//设置超时时间</span></span><br><span class="line">    <span class="comment">//利用fastJSON将user对象转换为json格式，然后放到索引中，参数XContentType.JSON是告诉es为json数据</span></span><br><span class="line">    request.source(JSON.toJSONString(user), XContentType.JSON);</span><br><span class="line">    <span class="comment">//发送请求</span></span><br><span class="line">    IndexResponse indexResponse = restHighLevelClient.index(request, RequestOptions.DEFAULT);</span><br><span class="line">    System.out.println(indexResponse.status());<span class="comment">//CREATED，说明添加成功</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试获取文档</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test5</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//注意，文档操作是new GetRequest，而不是getIndexRequest（索引操作）</span></span><br><span class="line">    GetRequest getRequest = <span class="keyword">new</span> GetRequest(<span class="string">"ryan_index"</span>, <span class="string">"1"</span>);</span><br><span class="line">    <span class="keyword">boolean</span> exists = restHighLevelClient.exists(getRequest, RequestOptions.DEFAULT);</span><br><span class="line">    <span class="comment">//判断此id下的文档记录是否存在</span></span><br><span class="line">    System.out.println(exists);<span class="comment">//true，表明存在</span></span><br><span class="line">    <span class="comment">//存在的话尝试获取相关信息</span></span><br><span class="line">    GetResponse getResponse = restHighLevelClient.get(getRequest, RequestOptions.DEFAULT);</span><br><span class="line">    System.out.println(getResponse);<span class="comment">//获取到所有信息</span></span><br><span class="line">    System.out.println(getResponse.getSourceAsString());<span class="comment">//将source内容以字符串的形式打印出来</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试更新文档记录</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test6</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    UpdateRequest updateRequest = <span class="keyword">new</span> UpdateRequest(<span class="string">"ryan_index"</span>, <span class="string">"1"</span>);</span><br><span class="line">    <span class="comment">//规则</span></span><br><span class="line">    updateRequest.timeout(<span class="string">"1s"</span>);</span><br><span class="line">    <span class="comment">//需要更新的数据</span></span><br><span class="line">    User user = <span class="keyword">new</span> User(<span class="string">"ryan自学elasticsearch"</span>, <span class="number">20</span>);</span><br><span class="line">    updateRequest.doc(JSON.toJSONString(user), XContentType.JSON);</span><br><span class="line">    <span class="comment">//客户端执行请求</span></span><br><span class="line">    UpdateResponse updateResponse = restHighLevelClient.update(updateRequest, RequestOptions.DEFAULT);</span><br><span class="line">    System.out.println(updateResponse);</span><br><span class="line">    System.out.println(updateResponse.status());<span class="comment">//ok，表示更新成功</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除文档记录</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test7</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    DeleteRequest deleteRequest = <span class="keyword">new</span> DeleteRequest(<span class="string">"ryan_index"</span>, <span class="string">"1"</span>);</span><br><span class="line">    deleteRequest.timeout(<span class="string">"1s"</span>);</span><br><span class="line">    DeleteResponse deleteResponse = restHighLevelClient.delete(deleteRequest, RequestOptions.DEFAULT);</span><br><span class="line">    System.out.println(deleteResponse);</span><br><span class="line">    System.out.println(deleteResponse.status());<span class="comment">//ok，表明删除成功</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//还可以批量增删改查</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test8</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    BulkRequest bulkRequest = <span class="keyword">new</span> BulkRequest();</span><br><span class="line">    <span class="comment">//设置超时时间，如果数据量比较大，时间可以给多一点</span></span><br><span class="line">    bulkRequest.timeout(<span class="string">"3s"</span>);</span><br><span class="line">    <span class="comment">//创建一个数组存放数据</span></span><br><span class="line">    List&lt;User&gt; userList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    userList.add(<span class="keyword">new</span> User(<span class="string">"java"</span>, <span class="number">1</span>));</span><br><span class="line">    userList.add(<span class="keyword">new</span> User(<span class="string">"php"</span>, <span class="number">1</span>));</span><br><span class="line">    userList.add(<span class="keyword">new</span> User(<span class="string">"go"</span>, <span class="number">1</span>));</span><br><span class="line">    userList.add(<span class="keyword">new</span> User(<span class="string">"java2"</span>, <span class="number">1</span>));</span><br><span class="line">    userList.add(<span class="keyword">new</span> User(<span class="string">"php1"</span>, <span class="number">1</span>));</span><br><span class="line">    userList.add(<span class="keyword">new</span> User(<span class="string">"go2"</span>, <span class="number">1</span>));</span><br><span class="line">    <span class="comment">//for循环操作</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; userList.size(); i++) &#123;</span><br><span class="line">        bulkRequest.add(<span class="keyword">new</span> IndexRequest(<span class="string">"ryan_index"</span>)</span><br><span class="line">                .id(<span class="string">""</span> + (i + <span class="number">1</span>))</span><br><span class="line">                .source(JSON.toJSONString(userList.get(i)), XContentType.JSON)</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//客户端执行请求</span></span><br><span class="line">    BulkResponse bulkResponse = restHighLevelClient.bulk(bulkRequest, RequestOptions.DEFAULT);</span><br><span class="line">    System.out.println(bulkResponse);</span><br><span class="line">    System.out.println(bulkResponse.status());<span class="comment">//ok,表明添加成功</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//其他删改查的操作基本就和上面异常，就不一一测试了，准备实战：仿京东搜索，在这之前需要简单学习以下爬虫</span></span><br></pre></td></tr></table></figure><h1 id="仿京东搜索实战"><a href="#仿京东搜索实战" class="headerlink" title="仿京东搜索实战"></a>仿京东搜索实战</h1><h2 id="后端："><a href="#后端：" class="headerlink" title="后端："></a>后端：</h2><p>1、新建项目，导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- thymeleaf --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- jsoup --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jsoup<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsoup<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.13.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、编写springboot配置文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">server.port</span>=<span class="string">9090</span></span><br><span class="line"><span class="meta">spring.thymeleaf.cache</span>=<span class="string">false</span></span><br></pre></td></tr></table></figure><p>3、编写ElasticSearchClientConfig配置文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ElasticSearchClientConfig</span> </span>&#123;</span><br><span class="line">    <span class="comment">//我们使用的是高级客户端</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestHighLevelClient <span class="title">restHighLevelClient</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//对象可以在官网中找到</span></span><br><span class="line">        RestHighLevelClient client = <span class="keyword">new</span> RestHighLevelClient(</span><br><span class="line">                RestClient.builder(</span><br><span class="line">                        <span class="keyword">new</span> HttpHost(<span class="string">"localhost"</span>, <span class="number">9200</span>, <span class="string">"http"</span>)));<span class="comment">//可配置多个节点，我们这里只有一个</span></span><br><span class="line">        <span class="keyword">return</span> client;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、编写网站分析工具类HtmlParseUtil（爬虫）</p><ul><li>获取相关数据</li><li>封装对象</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HtmlParseUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//测试一下下面的方法</span></span><br><span class="line">    <span class="comment">/*public static void main(String[] args) throws Exception &#123;</span></span><br><span class="line"><span class="comment">        new HtmlParseUtil().parseJD("vue").forEach(System.out::println);</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Content&gt; <span class="title">parseJD</span><span class="params">(String keywords)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//jsoup不能抓取ajax的请求，除非自己模拟浏览器进行请求</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1 https://search.jd.com/Search?keyword=java</span></span><br><span class="line">        String url = <span class="string">"https://search.jd.com/Search?keyword="</span> + keywords;</span><br><span class="line">        <span class="comment">//2 解析网页，并设置超时时间</span></span><br><span class="line">        Document document = Jsoup.parse(<span class="keyword">new</span> URL(url), <span class="number">30000</span>);</span><br><span class="line">        <span class="comment">//System.out.println(document);//测试已经可以分析此网页了</span></span><br><span class="line">        <span class="comment">//3 抓取搜索到的数据</span></span><br><span class="line">        <span class="comment">//document就是我们js中的document对象，你可以看到很多js语法</span></span><br><span class="line">        Element element = document.getElementById(<span class="string">"J_goodsList"</span>);</span><br><span class="line">        <span class="comment">//System.out.println(element.html());</span></span><br><span class="line">        <span class="comment">//4 找到所有的li元素</span></span><br><span class="line">        Elements elements = element.getElementsByTag(<span class="string">"li"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5 提前准备好一个容器准备放获取到的数据</span></span><br><span class="line">        List&lt;Content&gt; goodsList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取京东的商品信息</span></span><br><span class="line">        <span class="keyword">for</span> (Element el : elements) &#123;</span><br><span class="line">            <span class="comment">//获取图片、价格、标题相关属性，每个获取第一个即可</span></span><br><span class="line">            String img = el.getElementsByTag(<span class="string">"img"</span>).eq(<span class="number">0</span>).attr(<span class="string">"src"</span>);</span><br><span class="line">            String price = el.getElementsByClass(<span class="string">"p-price"</span>).eq(<span class="number">0</span>).text();</span><br><span class="line">            String title = el.getElementsByClass(<span class="string">"p-name"</span>).eq(<span class="number">0</span>).text();</span><br><span class="line">            <span class="comment">//测试获取出来的信息</span></span><br><span class="line">            <span class="comment">/*System.out.println(img);</span></span><br><span class="line"><span class="comment">            System.out.println(price);</span></span><br><span class="line"><span class="comment">            System.out.println(title);*/</span></span><br><span class="line">            <span class="comment">//封装对象</span></span><br><span class="line">            Content content = <span class="keyword">new</span> Content();</span><br><span class="line">            content.setImg(img);</span><br><span class="line">            content.setPrice(price);</span><br><span class="line">            content.setTitle(title);</span><br><span class="line">            <span class="comment">//放到集合中</span></span><br><span class="line">            goodsList.add(content);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> goodsList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5、编写service层</p><ul><li>调用工具类获取到封装的对象，并将对象放到索引中</li><li>搜索（查询索引中的数据）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContentService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestHighLevelClient restHighLevelClient;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1 将解析的数据放到索引中</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">parseContent</span><span class="params">(String keyword)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        List&lt;Content&gt; contents = <span class="keyword">new</span> HtmlParseUtil().parseJD(keyword);</span><br><span class="line">        BulkRequest bulkRequest = <span class="keyword">new</span> BulkRequest();</span><br><span class="line">        bulkRequest.timeout(<span class="string">"2m"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; contents.size(); i++) &#123;</span><br><span class="line">            bulkRequest.add(<span class="keyword">new</span> IndexRequest(<span class="string">"jd_goods"</span>)</span><br><span class="line">                    .source(JSON.toJSONString(contents.get(i)), XContentType.JSON)</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        BulkResponse bulk = restHighLevelClient.bulk(bulkRequest, RequestOptions.DEFAULT);</span><br><span class="line">        <span class="keyword">return</span> !bulk.hasFailures();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2 查询索引中的数据</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&lt;String, Object&gt;&gt; searchPage(String keyword, <span class="keyword">int</span> pageNo, <span class="keyword">int</span> pageSize) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">if</span> (pageNo &lt;= <span class="number">1</span>)&#123;</span><br><span class="line">            pageNo = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//条件搜索</span></span><br><span class="line">        SearchRequest searchRequest = <span class="keyword">new</span> SearchRequest(<span class="string">"jd_goods"</span>);</span><br><span class="line">        SearchSourceBuilder searchSourceBuilder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//分页</span></span><br><span class="line">        searchSourceBuilder.from(pageNo);</span><br><span class="line">        searchSourceBuilder.size(pageSize);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//精准匹配</span></span><br><span class="line">        TermQueryBuilder termQueryBuilder = QueryBuilders.termQuery(<span class="string">"title"</span>, keyword);</span><br><span class="line">        searchSourceBuilder.query(termQueryBuilder);</span><br><span class="line">        searchSourceBuilder.timeout(<span class="keyword">new</span> TimeValue(<span class="number">60</span>, TimeUnit.SECONDS));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//解决高亮问题</span></span><br><span class="line">        HighlightBuilder highlightBuilder = <span class="keyword">new</span> HighlightBuilder();</span><br><span class="line">        highlightBuilder.field(<span class="string">"title"</span>);<span class="comment">//想要的高亮字段</span></span><br><span class="line">        highlightBuilder.preTags(<span class="string">"&lt;span style='color:red'&gt;"</span>);<span class="comment">//前缀</span></span><br><span class="line">        highlightBuilder.postTags(<span class="string">"&lt;/span&gt;"</span>);<span class="comment">//后缀</span></span><br><span class="line">        searchSourceBuilder.highlighter(highlightBuilder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//执行搜索</span></span><br><span class="line">        searchRequest.source(searchSourceBuilder);</span><br><span class="line">        SearchResponse searchResponse = restHighLevelClient.search(searchRequest, RequestOptions.DEFAULT);</span><br><span class="line">        <span class="comment">//解析结果</span></span><br><span class="line">        List&lt;Map&lt;String, Object&gt;&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : searchResponse.getHits().getHits()) &#123;</span><br><span class="line">            <span class="comment">//获取高亮属性,这里如果看过kibana中的高亮的返回结果的话应该很好理解</span></span><br><span class="line">            Map&lt;String, HighlightField&gt; highlightFields = hit.getHighlightFields();</span><br><span class="line">            HighlightField title = highlightFields.get(<span class="string">"title"</span>);</span><br><span class="line">            Map&lt;String, Object&gt; sourceAsMap = hit.getSourceAsMap();<span class="comment">//原来的结果</span></span><br><span class="line">            <span class="comment">//解析高亮的字段，将原来的字段换位我们高亮的字段即可</span></span><br><span class="line">            <span class="keyword">if</span>(title != <span class="keyword">null</span>)&#123;</span><br><span class="line">                Text[] fragments = title.fragments();</span><br><span class="line">                String n_title = <span class="string">""</span>;</span><br><span class="line">                <span class="keyword">for</span> (Text text : fragments) &#123;</span><br><span class="line">                    n_title += text;</span><br><span class="line">                &#125;</span><br><span class="line">                sourceAsMap.put(<span class="string">"title"</span>, n_title);</span><br><span class="line">            &#125;</span><br><span class="line">            list.add(sourceAsMap);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6、编写controller层我</p><ul><li>IndexController</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"index"</span>;<span class="comment">//别忘了添加thymeleaf依赖</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>ContentController</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContentController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    RestHighLevelClient restHighLevelClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ContentService contentService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/parse/&#123;keyword&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">parse</span><span class="params">(@PathVariable(<span class="string">"keyword"</span>)</span> String keyword) <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> contentService.parseContent(keyword);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取这些数据实现搜索功能</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/search/&#123;keyword&#125;/&#123;pageNo&#125;/&#123;pageSize&#125;"</span>)</span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&lt;String, Object&gt;&gt; searchPage(<span class="meta">@PathVariable</span>(<span class="string">"keyword"</span>) String keyword,</span><br><span class="line">                                                <span class="meta">@PathVariable</span>(<span class="string">"pageNo"</span>)<span class="keyword">int</span> pageNo,</span><br><span class="line">                                                <span class="meta">@PathVariable</span>(<span class="string">"pageSize"</span>)<span class="keyword">int</span> pageSize</span><br><span class="line">                                                ) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">return</span> contentService.searchPage(keyword, pageNo, pageSize);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>小结：</p><ul><li>找到自己想要爬取数据的网站，使用jsoup解析网站，并封装成对象</li><li>service层主要是es的增+查，也就是将封装好的对象放到es的索引中，以及搜索相关的数据</li><li>最后controller调用service即可</li></ul><h2 id="前端："><a href="#前端：" class="headerlink" title="前端："></a>前端：</h2><p>1、导入相关静态资源：略</p><p>2、编写页面：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>京东<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/style.css&#125;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">"pg"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"page"</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"mallPage"</span> <span class="attr">class</span>=<span class="string">" mallist tmall- page-not-market "</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 头部搜索 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"header"</span> <span class="attr">class</span>=<span class="string">" header-list-app"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"headerLayout"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"headerCon "</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- Logo --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"mallLogo"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/images/jdlogo.png&#125;"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header-extra"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                        <span class="comment">&lt;!-- 搜索 --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"mallSearch"</span> <span class="attr">class</span>=<span class="string">"mall-search"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">"searchTop"</span> <span class="attr">class</span>=<span class="string">"mallSearch-form clearfix"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">legend</span>&gt;</span>京东搜索<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mallSearch-input clearfix"</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"s-combobox"</span> <span class="attr">id</span>=<span class="string">"s-combobox-685"</span>&gt;</span></span><br><span class="line">                                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"s-combobox-input-wrap"</span>&gt;</span></span><br><span class="line">                                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"keyword"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span> <span class="attr">value</span>=<span class="string">"dd"</span></span></span><br><span class="line"><span class="tag">                                                       <span class="attr">id</span>=<span class="string">"mq"</span></span></span><br><span class="line"><span class="tag">                                                       <span class="attr">class</span>=<span class="string">"s-combobox-input"</span> <span class="attr">aria-haspopup</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">                                                        &gt;</span></span><br><span class="line">                                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> @<span class="attr">click.prevent</span>=<span class="string">"searchKey"</span> <span class="attr">id</span>=<span class="string">"searchbtn"</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 商品详情页面 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">&lt;!-- 排序规则 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"filter clearfix"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"fSort fSort-cur"</span>&gt;</span>综合<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"f-ico-arrow-d"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"fSort"</span>&gt;</span>人气<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"f-ico-arrow-d"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"fSort"</span>&gt;</span>新品<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"f-ico-arrow-d"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"fSort"</span>&gt;</span>销量<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"f-ico-arrow-d"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"fSort"</span>&gt;</span>价格<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"f-ico-triangle-mt"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"f-ico-triangle-mb"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">&lt;!-- 商品详情 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"view grid-nosku"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product"</span> <span class="attr">v-for</span>=<span class="string">"result in results"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"product-iWrap"</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!-- 商品封面 --&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"productImg-wrap"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"productImg"</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"result.img"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!-- 价格 --&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"productPrice"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">em</span>&gt;</span>&#123;&#123;result.price&#125;&#125;<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!-- 标题 --&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"productTitle"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-html</span>=<span class="string">"result.title"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!-- 评价数量 --&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"productCommit"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">span</span>&gt;</span>1.2w+条评价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!-- 成交信息 --&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"productStatus"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">span</span>&gt;</span>月成交 <span class="tag">&lt;<span class="name">em</span>&gt;</span>999笔<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">span</span>&gt;</span>评价 <span class="tag">&lt;<span class="name">a</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--导入axios和vue依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/vue.min.js&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/axios.min.js&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">"#app"</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="actionscript">            keyword: <span class="string">""</span>,</span></span><br><span class="line">            results: []</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            searchKey()&#123;</span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> keyword = <span class="keyword">this</span>.keyword;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(keyword);</span></span><br><span class="line"><span class="javascript">                axios.get(<span class="string">"search/"</span> + keyword + <span class="string">"/1/30"</span>).then(<span class="function"><span class="params">response</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(response);</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.results = response.data;<span class="comment">//双向绑定</span></span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>小结：</p><ul><li>前后端分离，主要使用thymeleaf + vue + axios调用后端接口，然后渲染到前端页面</li></ul><p>成果：</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/UieQ8m4kTuvEWbB.png" alt="image-20200620123902662"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言：&quot;&gt;&lt;a href=&quot;#前言：&quot; class=&quot;headerlink&quot; title=&quot;前言：&quot;&gt;&lt;/a&gt;前言：&lt;/h1&gt;&lt;p&gt;学习ElasticSearch之前，建议大家可以百度一下他的诞生背景，会更加有利于你对这门技术的了解，这里就不展开描述了，直接入门学
      
    
    </summary>
    
    
    
      <category term="elastisearch" scheme="http://yoursite.com/tags/elastisearch/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB入门+整合springboot</title>
    <link href="http://yoursite.com/2020/06/24/ngoDB%E5%85%A5%E9%97%A8-%E6%95%B4%E5%90%88springboot/"/>
    <id>http://yoursite.com/2020/06/24/ngoDB%E5%85%A5%E9%97%A8-%E6%95%B4%E5%90%88springboot/</id>
    <published>2020-06-24T08:43:00.000Z</published>
    <updated>2020-06-24T08:46:38.247Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是MongoDB？"><a href="#什么是MongoDB？" class="headerlink" title="什么是MongoDB？"></a>什么是MongoDB？</h2><p>MongoDB 是由C++语言编写的，是一个基于分布式文件存储的开源数据库系统。</p><p>在高负载的情况下，添加更多的节点，可以保证服务器性能。</p><p>MongoDB 旨在为WEB应用提供可扩展的高性能数据存储解决方案。</p><p>MongoDB 将数据存储为一个文档，数据结构由键值(key=&gt;value)对组成。MongoDB 文档类似于 JSON 对象。字段值可以包含其他文档，数组及文档数组。</p><p><img src= "/img/loading.gif" data-src="https://www.runoob.com/wp-content/uploads/2013/10/crud-annotated-document.png" alt="img"></p><h2 id="主要特点"><a href="#主要特点" class="headerlink" title="主要特点"></a>主要特点</h2><ul><li>MongoDB 是一个面向文档存储的数据库，操作起来比较简单和容易。</li><li>你可以在MongoDB记录中设置任何属性的索引 (如：FirstName=”Sameer”,Address=”8 Gandhi Road”)来实现更快的排序。</li><li>你可以通过本地或者网络创建数据镜像，这使得MongoDB有更强的扩展性。</li><li>如果负载的增加（需要更多的存储空间和更强的处理能力） ，它可以分布在计算机网络中的其他节点上这就是所谓的分片。</li><li>Mongo支持丰富的查询表达式。查询指令使用JSON形式的标记，可轻易查询文档中内嵌的对象及数组。</li><li>MongoDb 使用update()命令可以实现替换完成的文档（数据）或者一些指定的数据字段 。</li><li>Mongodb中的Map/reduce主要是用来对数据进行批量处理和聚合操作。</li><li>Map和Reduce。Map函数调用emit(key,value)遍历集合中所有的记录，将key与value传给Reduce函数进行处理。</li><li>Map函数和Reduce函数是使用Javascript编写的，并可以通过db.runCommand或mapreduce命令来执行MapReduce操作。</li><li>GridFS是MongoDB中的一个内置功能，可以用于存放大量小文件。</li><li>MongoDB允许在服务端执行脚本，可以用Javascript编写某个函数，直接在服务端执行，也可以把函数的定义存储在服务端，下次直接调用即可。</li><li>MongoDB支持各种编程语言:RUBY，PYTHON，JAVA，C++，PHP，C#等多种语言。</li><li>MongoDB安装简单。</li></ul><h2 id="windows安装"><a href="#windows安装" class="headerlink" title="windows安装"></a>windows安装</h2><p>官网下载安装文件或者压缩包即可</p><p>安装有两种方式：</p><p>方式一：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在安装路径的bin同级目录下新建两级文件夹:data/db</span><br><span class="line">然后进入bin目录打开命令窗口，输入命令</span><br><span class="line">mongod --dbpath ..\data\db</span><br></pre></td></tr></table></figure><p>方式二：</p><p>首先在bin同级目录下新建config文件夹中新建mongod.conf配置文件，编辑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">storage:</span><br><span class="line">    dbPath: D:\environment\MongoDB\data\db</span><br></pre></td></tr></table></figure><p>然后到bin目录下打开命令窗口，输入以下命令行启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod -f ..\config\mongod.conf</span><br></pre></td></tr></table></figure><p>完成启动，发现mongodb的默认端口号是27017</p><p>开启了mongodb服务之后，该怎么连接呢，连接也有两种方式</p><p>方式一：</p><p>打开bin目录下的mongo.exe，直接输入以下命令就可以连接（甚至自动连接）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo</span><br></pre></td></tr></table></figure><p>测试是否连接成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; show dbs</span><br><span class="line">admin   0.000GB</span><br><span class="line">config  0.000GB</span><br><span class="line"><span class="built_in">local</span>   0.000GB</span><br></pre></td></tr></table></figure><p>方式二：</p><p>可通过可视化工具来连接，需要下载compass，在官网下载解压即用，运行compass.exe文件，然后conect即可</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/Iumf28kPVKlaMGW.png" alt="image-20200620155614140"></p><h2 id="Linux安装"><a href="#Linux安装" class="headerlink" title="Linux安装"></a>Linux安装</h2><p>官网下载linux版本的mongodb</p><p>将压缩包放到linux系统中的usr/local/mongodb文件夹中，解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/mongodb</span><br><span class="line">tar -xvf mongodb-linux-x86_64-4.0.10.tgz</span><br></pre></td></tr></table></figure><p>新家几个目录，分别用来存储数据、日志和配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/<span class="built_in">local</span>/mongodb/data</span><br><span class="line">mkdir -p /usr/<span class="built_in">local</span>/mongodb/<span class="built_in">log</span></span><br></pre></td></tr></table></figure><p>在bin目录下新建并修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/<span class="built_in">local</span>/mongodbmongodb-linux-x86_64-4.0.19/bin/mongod.conf</span><br></pre></td></tr></table></figure><p>内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">systemLog:</span><br><span class="line">  <span class="comment">#MongoDB发送所有日志输出的目标指定为文件</span></span><br><span class="line">  destination: file</span><br><span class="line">  path: <span class="string">"/usr/local/mongodb/log/mongod.log"</span></span><br><span class="line">  <span class="comment"># 当mongoos或mongod实例重新启动时，会将新条目附加到先有日志文件的末尾</span></span><br><span class="line">  logAppend: <span class="literal">true</span></span><br><span class="line">storage:</span><br><span class="line">  <span class="comment">#mongod实例存储其数据的目录</span></span><br><span class="line">  dbPath: <span class="string">"/usr/local/mongodb/data/db"</span></span><br><span class="line">  journal:</span><br><span class="line">    <span class="comment">#启用或禁用持久性日志以确保数据文件保持有效和可恢复。 </span></span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">processManagement: </span><br><span class="line">   <span class="comment">#启用在后台运行mongos或mongod进程的守护进程模式。 </span></span><br><span class="line">   fork: <span class="literal">true</span></span><br><span class="line">net:</span><br><span class="line">   <span class="comment">#服务实例绑定的IP，默认是localhost </span></span><br><span class="line">   bindIp: localhost,172.16.0.17</span><br><span class="line">   port: 27017</span><br></pre></td></tr></table></figure><p>启动MongoDB服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./mongod -f ./mongod.conf</span><br></pre></td></tr></table></figure><p>启动成功</p><p>测试是否启动成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef|grep mongod</span><br></pre></td></tr></table></figure><p>最后通过可视化界面来检测我们的mongodb，这时候不再是localhost了，而是要连接到我们的远程服务器上，需要填写远程服务器的主机名</p><p>连接成功</p><p>最后看下怎么关闭服务</p><p>方式一：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> -2 进程id</span><br></pre></td></tr></table></figure><p>方式二：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mongo --port 27017 </span><br><span class="line">//<span class="comment">#切换到admin库 </span></span><br><span class="line">use admin </span><br><span class="line">//关闭服务 </span><br><span class="line">db.shutdownServer()</span><br></pre></td></tr></table></figure><h2 id="数据库的创建和删除"><a href="#数据库的创建和删除" class="headerlink" title="数据库的创建和删除"></a>数据库的创建和删除</h2><p>存放文章评论的数据存放到MongoDB中，数据结构参考如下：</p><p>数据库：articledb</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/ZVUdEjtaXPoNlBR.png" alt="image-20200620211946625"></p><h4 id="选择和创建数据库"><a href="#选择和创建数据库" class="headerlink" title="选择和创建数据库"></a>选择和创建数据库</h4><p>如果数据库不存在则自动创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use articledb</span><br></pre></td></tr></table></figure><h4 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h4><p>查看有权限查看的所有的数据库命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show dbs</span><br></pre></td></tr></table></figure><p>注意：如果是空的db是不会显示出来的，例如刚刚创建的articledb，因为刚创建还没数据，也就是还没持久化到磁盘中，暂存在内存中</p><p>查看正在使用的数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db</span><br></pre></td></tr></table></figure><h4 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h4><p>MongoDB 删除数据库的语法格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.dropDatabase()</span><br></pre></td></tr></table></figure><p>提示：主要用来删除已经持久化的数据库</p><h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><h3 id="创建集合"><a href="#创建集合" class="headerlink" title="创建集合"></a>创建集合</h3><p>集合，类似关系型数据库中的表。 可以显示的创建，也可以隐式的创建</p><h4 id="显式创建、查看、删除"><a href="#显式创建、查看、删除" class="headerlink" title="显式创建、查看、删除"></a>显式创建、查看、删除</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.createCollection(<span class="string">"my"</span>)</span><br><span class="line">&#123; <span class="string">"ok"</span> : 1 &#125;</span><br><span class="line">&gt; show collections <span class="comment"># 查看集合</span></span><br><span class="line">my</span><br><span class="line">&gt; db.my.drop()</span><br><span class="line"><span class="literal">true</span></span><br><span class="line">&gt; show collections</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>集合的命名规范：</p><ul><li>集合名不能是空字符串””。</li><li>集合名不能含有\0字符（空字符)，这个字符表示集合名的结尾。</li><li>集合名不能以”system.”开头，这是为系统集合保留的前缀。</li><li>用户创建的集合名字不能含有保留字符。有些驱动程序的确支持在集合名里面包含，这是因为某些系统生成的集合中包含该字符。除 非你要访问这种系统创建的集合，否则千万不要在名字里出现$。</li></ul><h3 id="隐式创建"><a href="#隐式创建" class="headerlink" title="隐式创建"></a>隐式创建</h3><p>当向一个集合中插入一个文档的时候，如果集合不存在，则会自动创建集合,通常我们使用隐式创建文档即可</p><h3 id="文档操作"><a href="#文档操作" class="headerlink" title="文档操作"></a>文档操作</h3><p>文档（document）的数据结构和 JSON 基本一样。 所有存储在集合中的数据都是 BSON 格式</p><h4 id="插入文档"><a href="#插入文档" class="headerlink" title="插入文档"></a>插入文档</h4><p>跟mysql一样既可以单条插入，也可以多条执行</p><h5 id="单条插入"><a href="#单条插入" class="headerlink" title="单条插入"></a>单条插入</h5><p>使用insert() 或 save() 方法向集合中插入文档，语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">db.collection.insert( </span><br><span class="line">    &lt;document or array of documents&gt;, </span><br><span class="line">    &#123; </span><br><span class="line">    writeConcern: &lt;document&gt;, </span><br><span class="line">    ordered: &lt;boolean&gt; </span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>参数：</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/vXDhTeliLktyw8g.png" alt="image-20200620214516387"></p><p>示例：</p><p>要想comment的集合中插入一条测试数据（隐式插入）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.comment.insert(&#123;</span><br><span class="line">...     <span class="string">"articleid"</span>: <span class="string">"100000"</span>,</span><br><span class="line">...     <span class="string">"content"</span>: <span class="string">"今天天气真好，阳光明 媚"</span>,</span><br><span class="line">...     <span class="string">"userid"</span>: <span class="string">"1001"</span>,</span><br><span class="line">...     <span class="string">"nickname"</span>: <span class="string">"Rose"</span>,</span><br><span class="line">...     <span class="string">"createdatetime"</span>: new Date(),</span><br><span class="line">...     <span class="string">"likenum"</span>: NumberInt(10),</span><br><span class="line">...     <span class="string">"state"</span>: null</span><br><span class="line">... &#125;)</span><br><span class="line">WriteResult(&#123; <span class="string">"nInserted"</span> : 1 &#125;) <span class="comment"># 表明插入成功</span></span><br><span class="line">&gt; show collections</span><br><span class="line">comment</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>提示：</p><ul><li>comment集合如果不存在，则会隐式创建</li><li>mongo中的数字，默认double类型，如要存整型，必须使用函数NumberInt，否则取出来就有问题了。</li><li>插入当前日期使用 new Date()</li><li>插入的数据没有指定 _id ，会自动生成主键值</li><li>如果某字段没值，可以赋值为null，或不写该字段。</li></ul><p>注意：</p><ol><li>文档中的键/值对是有序的。</li><li>文档中的值不仅可以是在双引号里面的字符串，还可以是其他几种数据类型（甚至可以是整个嵌入的文档)。</li><li>MongoDB区分类型和大小写。</li><li>MongoDB的文档不能有重复的键。</li><li>文档的键是字符串。除了少数例外情况，键可以使用任意UTF-8字符。</li></ol><p>文档键命名规范：</p><ul><li>键不能含有\0 (空字符)。这个字符用来表示键的结尾。</li><li>.和$有特别的意义，只有在特定环境下才能使用。</li><li>以下划线”_”开头的键是保留的(不是严格要求的)</li></ul><h5 id="批量插入"><a href="#批量插入" class="headerlink" title="批量插入"></a>批量插入</h5><p>语法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.collection.insertMany(</span><br><span class="line">    [ &lt;document 1&gt; , &lt;document 2&gt;, ... ], </span><br><span class="line">    &#123; writeConcern: &lt;document&gt;, ordered: &lt;boolean&gt; &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.comment.insertMany([&#123;</span><br><span class="line">...     <span class="string">"_id"</span>: <span class="string">"1"</span>,</span><br><span class="line">...     <span class="string">"articleid"</span>: <span class="string">"100001"</span>,</span><br><span class="line">...     <span class="string">"content"</span>: <span class="string">"我们不应该把清晨浪费在手机上，健康很重要，一杯温水幸福你我 他。"</span>,</span><br><span class="line">...     <span class="string">"userid"</span>: <span class="string">"1002"</span>,</span><br><span class="line">...     <span class="string">"nickname"</span>: <span class="string">"相忘于江湖"</span>,</span><br><span class="line">...     <span class="string">"createdatetime"</span>: new Date(<span class="string">"2019-08- 05T22:08:15.522Z"</span>),</span><br><span class="line">...     <span class="string">"likenum"</span>: NumberInt(1000),</span><br><span class="line">...     <span class="string">"state"</span>: <span class="string">"1"</span></span><br><span class="line">... &#125;,</span><br><span class="line">... &#123;</span><br><span class="line">...     <span class="string">"_id"</span>: <span class="string">"2"</span>,</span><br><span class="line">...     <span class="string">"articleid"</span>: <span class="string">"100001"</span>,</span><br><span class="line">...     <span class="string">"content"</span>: <span class="string">"我夏天空腹喝凉开水，冬天喝温开水"</span>,</span><br><span class="line">...     <span class="string">"userid"</span>: <span class="string">"1005"</span>,</span><br><span class="line">...     <span class="string">"nickname"</span>: <span class="string">"伊人憔 悴"</span>,</span><br><span class="line">...     <span class="string">"createdatetime"</span>: new Date(<span class="string">"2019-08-05T23:58:51.485Z"</span>),</span><br><span class="line">...     <span class="string">"likenum"</span>: NumberInt(888),</span><br><span class="line">...     <span class="string">"state"</span>: <span class="string">"1"</span></span><br><span class="line">... &#125;,</span><br><span class="line">... &#123;</span><br><span class="line">...     <span class="string">"_id"</span>: <span class="string">"3"</span>,</span><br><span class="line">...     <span class="string">"articleid"</span>: <span class="string">"100001"</span>,</span><br><span class="line">...     <span class="string">"content"</span>: <span class="string">"我一直喝凉开水，冬天夏天都喝。"</span>,</span><br><span class="line">...     <span class="string">"userid"</span>: <span class="string">"1004"</span>,</span><br><span class="line">...     <span class="string">"nickname"</span>: <span class="string">"杰克船 长"</span>,</span><br><span class="line">...     <span class="string">"createdatetime"</span>: new Date(<span class="string">"2019-08-06T01:05:06.321Z"</span>),</span><br><span class="line">...     <span class="string">"likenum"</span>: NumberInt(666),</span><br><span class="line">...     <span class="string">"state"</span>: <span class="string">"1"</span></span><br><span class="line">... &#125;,</span><br><span class="line">... &#123;</span><br><span class="line">...     <span class="string">"_id"</span>: <span class="string">"4"</span>,</span><br><span class="line">...     <span class="string">"articleid"</span>: <span class="string">"100001"</span>,</span><br><span class="line">...     <span class="string">"content"</span>: <span class="string">"专家说不能空腹吃饭，影响健康。"</span>,</span><br><span class="line">...     <span class="string">"userid"</span>: <span class="string">"1003"</span>,</span><br><span class="line">...     <span class="string">"nickname"</span>: <span class="string">"凯 撒"</span>,</span><br><span class="line">...     <span class="string">"createdatetime"</span>: new Date(<span class="string">"2019-08-06T08:18:35.288Z"</span>),</span><br><span class="line">...     <span class="string">"likenum"</span>: NumberInt(2000),</span><br><span class="line">...     <span class="string">"state"</span>: <span class="string">"1"</span></span><br><span class="line">... &#125;,</span><br><span class="line">... &#123;</span><br><span class="line">...     <span class="string">"_id"</span>: <span class="string">"5"</span>,</span><br><span class="line">...     <span class="string">"articleid"</span>: <span class="string">"100001"</span>,</span><br><span class="line">...     <span class="string">"content"</span>: <span class="string">"研究表明，刚烧开的水千万不能喝，因为烫 嘴。"</span>,</span><br><span class="line">...     <span class="string">"userid"</span>: <span class="string">"1003"</span>,</span><br><span class="line">...     <span class="string">"nickname"</span>: <span class="string">"凯撒"</span>,</span><br><span class="line">...     <span class="string">"createdatetime"</span>: new Date(<span class="string">"2019-08- 06T11:01:02.521Z"</span>),</span><br><span class="line">...     <span class="string">"likenum"</span>: NumberInt(3000),</span><br><span class="line">...     <span class="string">"state"</span>: <span class="string">"1"</span></span><br><span class="line">... &#125;]);</span><br><span class="line">&#123;</span><br><span class="line">        <span class="string">"acknowledged"</span> : <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"insertedIds"</span> : [</span><br><span class="line">                <span class="string">"1"</span>,</span><br><span class="line">                <span class="string">"2"</span>,</span><br><span class="line">                <span class="string">"3"</span>,</span><br><span class="line">                <span class="string">"4"</span>,</span><br><span class="line">                <span class="string">"5"</span></span><br><span class="line">        ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>提示：</p><p>插入时指定了 _id ，则主键就是该值。</p><p>如果某条数据插入失败，将会终止插入，但已经插入成功的数据不会回滚掉。</p><p>因为批量插入由于数据较多容易出现失败，因此，可以使用try catch进行异常捕捉处理，测试的时候可以不处理。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">try &#123;  </span><br><span class="line">    db.comment.insertMany([&#123;</span><br><span class="line">    <span class="string">"_id"</span>: <span class="string">"1"</span>,</span><br><span class="line">    <span class="string">"articleid"</span>: <span class="string">"100001"</span>,</span><br><span class="line">    <span class="string">"content"</span>: <span class="string">"我们不应该把清晨浪费在手机上，健康很重要"</span>,</span><br><span class="line">    <span class="string">"userid"</span>: <span class="string">"1002"</span>,</span><br><span class="line">    <span class="string">"nickname"</span>: <span class="string">"相忘于江湖"</span>,</span><br><span class="line">    <span class="string">"createdatetime"</span>: new Date(<span class="string">"2019-08- 05T22:08:15.522Z"</span>),</span><br><span class="line">    <span class="string">"likenum"</span>: NumberInt(1000),</span><br><span class="line">    <span class="string">"state"</span>: <span class="string">"1"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"_id"</span>: <span class="string">"2"</span>,</span><br><span class="line">        <span class="string">"articleid"</span>: <span class="string">"100001"</span>,</span><br><span class="line">        <span class="string">"content"</span>: <span class="string">"我夏天空腹喝凉开水，冬天喝温开水"</span>,</span><br><span class="line">        <span class="string">"userid"</span>: <span class="string">"1005"</span>,</span><br><span class="line">        <span class="string">"nickname"</span>: <span class="string">"伊人憔 悴"</span>,</span><br><span class="line">        <span class="string">"createdatetime"</span>: new Date(<span class="string">"2019-08-05T23:58:51.485Z"</span>),</span><br><span class="line">        <span class="string">"likenum"</span>: NumberInt(888),</span><br><span class="line">        <span class="string">"state"</span>: <span class="string">"1"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"_id"</span>: <span class="string">"3"</span>,</span><br><span class="line">        <span class="string">"articleid"</span>: <span class="string">"100001"</span>,</span><br><span class="line">        <span class="string">"content"</span>: <span class="string">"我一直喝凉开水，冬天夏天都喝。"</span>,</span><br><span class="line">        <span class="string">"userid"</span>: <span class="string">"1004"</span>,</span><br><span class="line">        <span class="string">"nickname"</span>: <span class="string">"杰克船 长"</span>,</span><br><span class="line">        <span class="string">"createdatetime"</span>: new Date(<span class="string">"2019-08-06T01:05:06.321Z"</span>),</span><br><span class="line">        <span class="string">"likenum"</span>: NumberInt(666),</span><br><span class="line">        <span class="string">"state"</span>: <span class="string">"1"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"_id"</span>: <span class="string">"4"</span>,</span><br><span class="line">        <span class="string">"articleid"</span>: <span class="string">"100001"</span>,</span><br><span class="line">        <span class="string">"content"</span>: <span class="string">"专家说不能空腹吃饭，影响健康。"</span>,</span><br><span class="line">        <span class="string">"userid"</span>: <span class="string">"1003"</span>,</span><br><span class="line">        <span class="string">"nickname"</span>: <span class="string">"凯 撒"</span>,</span><br><span class="line">        <span class="string">"createdatetime"</span>: new Date(<span class="string">"2019-08-06T08:18:35.288Z"</span>),</span><br><span class="line">        <span class="string">"likenum"</span>: NumberInt(2000),</span><br><span class="line">        <span class="string">"state"</span>: <span class="string">"1"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"_id"</span>: <span class="string">"5"</span>,</span><br><span class="line">        <span class="string">"articleid"</span>: <span class="string">"100001"</span>,</span><br><span class="line">        <span class="string">"content"</span>: <span class="string">"研究表明，刚烧开的水千万不能喝，因为烫 嘴。"</span>,</span><br><span class="line">        <span class="string">"userid"</span>: <span class="string">"1003"</span>,</span><br><span class="line">        <span class="string">"nickname"</span>: <span class="string">"凯撒"</span>,</span><br><span class="line">        <span class="string">"createdatetime"</span>: new Date(<span class="string">"2019-08- 06T11:01:02.521Z"</span>),</span><br><span class="line">        <span class="string">"likenum"</span>: NumberInt(3000),</span><br><span class="line">        <span class="string">"state"</span>: <span class="string">"1"</span></span><br><span class="line">    &#125;]);</span><br><span class="line">&#125; catch (e) &#123; </span><br><span class="line">    <span class="built_in">print</span> (e); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="查询文档"><a href="#查询文档" class="headerlink" title="查询文档"></a>查询文档</h4><p>查询数据的语法格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(&lt;query&gt;, [projection])</span><br></pre></td></tr></table></figure><p>参数：</p><table><thead><tr><th><strong>Parameter</strong></th><th><strong>Type</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td>query</td><td>document</td><td>可选。使用查询运算符指定选择筛选器。若要返回集合中的所有文档，请省略此参数或传递空文档 ({})</td></tr><tr><td>projection</td><td>document</td><td>可选。指定要在与查询筛选器匹配的文档中返回的字段（投影）。若要返回匹配文档中的所有字段，</td></tr></tbody></table><p>示例：</p><h5 id="查询所有"><a href="#查询所有" class="headerlink" title="查询所有"></a><strong>查询所有</strong></h5><p>如果我们要查询集合的所有文档，我们输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.comment.find() </span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line">db.comment.find(&#123;&#125;)</span><br></pre></td></tr></table></figure><p>这里你会发现每条文档会有一个叫_id的字段，这个相当于我们原来关系数据库中表的主键，当你在插入文档记录时没有指定该字段， MongoDB会自动创建，其类型是ObjectID类型。 如果我们在插入文档记录时指定该字段也可以，其类型可以是ObjectID类型，也可以是MongoDB支持的任意类型.</p><p>如果我想按一定条件来查询，比如我想查询userid为1003的记录，怎么办？很简单！只 要在fifind()中添加参数即可，参数也是json格式，如 下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.comment.find(&#123;userid:&quot;1003&quot;&#125;)</span><br><span class="line">&#123; &quot;_id&quot; : &quot;4&quot;, &quot;articleid&quot; : &quot;100001&quot;, &quot;content&quot; : &quot;专家说不能空腹吃饭，影响健康。&quot;, &quot;userid&quot; : &quot;1003&quot;, &quot;nickname&quot; : &quot;凯 撒&quot;, &quot;createdatetime&quot; : ISODate(&quot;2019-08-06T08:18:35.288Z&quot;), &quot;likenum&quot; : 2000, &quot;state&quot; : &quot;1&quot; &#125;</span><br><span class="line">&#123; &quot;_id&quot; : &quot;5&quot;, &quot;articleid&quot; : &quot;100001&quot;, &quot;content&quot; : &quot;研究表明，刚烧开的水千万不能喝，因为烫 嘴。&quot;, &quot;userid&quot; : &quot;1003&quot;, &quot;nickname&quot; : &quot;凯撒&quot;, &quot;createdatetime&quot; : ISODate(&quot;1970-01-01T00:00:00Z&quot;), &quot;likenum&quot; : 3000, &quot;state&quot; : &quot;1&quot; &#125;</span><br></pre></td></tr></table></figure><h5 id="查询单条"><a href="#查询单条" class="headerlink" title="查询单条"></a><strong>查询单条</strong></h5><p>如果你只需要返回符合条件的第一条数据，我们可以使用fifindOne命令来实现，语法和fifind一样。</p><p>如：查询用户编号是1003的记录，但只最多返回符合条件的第一条记录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.comment.findOne(&#123;userid:<span class="string">"1003"</span>&#125;)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"4"</span>,</span><br><span class="line">        <span class="string">"articleid"</span> : <span class="string">"100001"</span>,</span><br><span class="line">        <span class="string">"content"</span> : <span class="string">"专家说不能空腹吃饭，影响健康。"</span>,</span><br><span class="line">        <span class="string">"userid"</span> : <span class="string">"1003"</span>,</span><br><span class="line">        <span class="string">"nickname"</span> : <span class="string">"凯 撒"</span>,</span><br><span class="line">        <span class="string">"createdatetime"</span> : ISODate(<span class="string">"2019-08-06T08:18:35.288Z"</span>),</span><br><span class="line">        <span class="string">"likenum"</span> : 2000,</span><br><span class="line">        <span class="string">"state"</span> : <span class="string">"1"</span></span><br><span class="line">&#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><h5 id="投影查询"><a href="#投影查询" class="headerlink" title="投影查询"></a><strong>投影查询</strong></h5><p>如果要查询结果返回部分字段，则需要使用投影查询（不显示所有字段，只显示指定的字段）。</p><p>如：查询结果只显示 _id、userid、nickname :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.comment.find(&#123;userid:<span class="string">"1003"</span>&#125;,&#123;userid:1,nickname:1&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"4"</span>, <span class="string">"userid"</span> : <span class="string">"1003"</span>, <span class="string">"nickname"</span> : <span class="string">"凯 撒"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"5"</span>, <span class="string">"userid"</span> : <span class="string">"1003"</span>, <span class="string">"nickname"</span> : <span class="string">"凯撒"</span> &#125;</span><br></pre></td></tr></table></figure><p>如：查询结果只显示 、userid、nickname ，不显示 _id ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.comment.find(&#123;userid:<span class="string">"1003"</span>&#125;,&#123;userid:1,nickname:1,_id:0&#125;)</span><br><span class="line">&#123; <span class="string">"userid"</span> : <span class="string">"1003"</span>, <span class="string">"nickname"</span> : <span class="string">"凯 撒"</span> &#125;</span><br><span class="line">&#123; <span class="string">"userid"</span> : <span class="string">"1003"</span>, <span class="string">"nickname"</span> : <span class="string">"凯撒"</span> &#125;</span><br></pre></td></tr></table></figure><p>再例如：查询所有数据，但只显示 _id、userid、nickname :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.comment.find(&#123;&#125;,&#123;userid:1,nickname:1&#125;)</span><br></pre></td></tr></table></figure><h5 id="统计查询"><a href="#统计查询" class="headerlink" title="统计查询"></a><strong>统计查询</strong></h5><p>语法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.count(query, options)</span><br></pre></td></tr></table></figure><p>参数：</p><table><thead><tr><th><strong>Parameter</strong></th><th><strong>Type</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td>query</td><td>document</td><td>查询选择条件。</td></tr><tr><td>options</td><td>document</td><td>可选。用于修改计数的额外选项。</td></tr></tbody></table><p>示例：</p><p>统计comment集合的所有的记录数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.comment.count()</span><br><span class="line">6</span><br><span class="line">&gt; db.comment.count(&#123;userid:<span class="string">"1003"</span>&#125;)</span><br><span class="line">2</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><h5 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a><strong>分页查询</strong></h5><p>可以使用limit()方法来读取指定数量的数据，使用skip()方法来跳过指定数量的数据</p><p>基本语法如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.COLLECTION_NAME.find().<span class="built_in">limit</span>(NUMBER).skip(NUMBER)</span><br></pre></td></tr></table></figure><p>如果你想返回指定条数的记录，可以在fifind方法后调用limit来返回结果(TopN)，默认值20，例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.comment.find().<span class="built_in">limit</span>(3)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5eee1393b9ba7b116ffa7823"</span>), <span class="string">"articleid"</span> : <span class="string">"100000"</span>, <span class="string">"content"</span> : <span class="string">"今天天气真好，阳光明 媚"</span>, <span class="string">"userid"</span> : <span class="string">"1001"</span>, <span class="string">"nickname"</span> : <span class="string">"Rose"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"2020-06-20T13:48:03.665Z"</span>), <span class="string">"likenum"</span> : 10, <span class="string">"state"</span> : null &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"1"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"我们不应该把清晨浪费在手机上，健康很重要，一杯温水幸福你我 他。"</span>, <span class="string">"userid"</span> : <span class="string">"1002"</span>, <span class="string">"nickname"</span> : <span class="string">"相忘于江湖"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"1970-01-01T00:00:00Z"</span>), <span class="string">"likenum"</span> : 1000, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"2"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"我夏天空腹喝凉开水，冬天喝温开水"</span>, <span class="string">"userid"</span> : <span class="string">"1005"</span>, <span class="string">"nickname"</span> : <span class="string">"伊人憔 悴"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"2019-08-05T23:58:51.485Z"</span>), <span class="string">"likenum"</span> : 888, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>skip方法同样接受一个数字参数作为跳过的记录条数。（前N个不要）,默认值是0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.comment.find().skip(3)</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"3"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"我一直喝凉开水，冬天夏天都喝。"</span>, <span class="string">"userid"</span> : <span class="string">"1004"</span>, <span class="string">"nickname"</span> : <span class="string">"杰克船 长"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"2019-08-06T01:05:06.321Z"</span>), <span class="string">"likenum"</span> : 666, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"4"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"专家说不能空腹吃饭，影响健康。"</span>, <span class="string">"userid"</span> : <span class="string">"1003"</span>, <span class="string">"nickname"</span> : <span class="string">"凯 撒"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"2019-08-06T08:18:35.288Z"</span>), <span class="string">"likenum"</span> : 2000, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"5"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"研究表明，刚烧开的水千万不能喝，因为烫 嘴。"</span>, <span class="string">"userid"</span> : <span class="string">"1003"</span>, <span class="string">"nickname"</span> : <span class="string">"凯撒"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"1970-01-01T00:00:00Z"</span>), <span class="string">"likenum"</span> : 3000, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br></pre></td></tr></table></figure><h5 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a><strong>排序查询</strong></h5><p>sort() 方法对数据进行排序，sort() 方法可以通过参数指定排序的字段，并使用 1 和 -1 来指定排序的方式，其中 1 为升序排列，而 -1 是用 于降序排列</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.COLLECTION_NAME.find().sort(&#123;KEY:1&#125;)</span><br></pre></td></tr></table></figure><p>例如：</p><p>对userid降序排列，并对访问量进行升序排列</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.comment.find().sort(&#123;userid:-1,likenum:1&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"2"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"我夏天空腹喝凉开水，冬天喝温开水"</span>, <span class="string">"userid"</span> : <span class="string">"1005"</span>, <span class="string">"nickname"</span> : <span class="string">"伊人憔 悴"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"2019-08-05T23:58:51.485Z"</span>), <span class="string">"likenum"</span> : 888, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"3"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"我一直喝凉开水，冬天夏天都喝。"</span>, <span class="string">"userid"</span> : <span class="string">"1004"</span>, <span class="string">"nickname"</span> : <span class="string">"杰克船 长"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"2019-08-06T01:05:06.321Z"</span>), <span class="string">"likenum"</span> : 666, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"4"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"专家说不能空腹吃饭，影响健康。"</span>, <span class="string">"userid"</span> : <span class="string">"1003"</span>, <span class="string">"nickname"</span> : <span class="string">"凯 撒"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"2019-08-06T08:18:35.288Z"</span>), <span class="string">"likenum"</span> : 2000, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"5"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"研究表明，刚烧开的水千万不能喝，因为烫 嘴。"</span>, <span class="string">"userid"</span> : <span class="string">"1003"</span>, <span class="string">"nickname"</span> : <span class="string">"凯撒"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"1970-01-01T00:00:00Z"</span>), <span class="string">"likenum"</span> : 3000, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"1"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"我们不应该把清晨浪费在手机上，健康很重要，一杯温水幸福你我 他。"</span>, <span class="string">"userid"</span> : <span class="string">"1002"</span>, <span class="string">"nickname"</span> : <span class="string">"相忘于江湖"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"1970-01-01T00:00:00Z"</span>), <span class="string">"likenum"</span> : 1000, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5eee1393b9ba7b116ffa7823"</span>), <span class="string">"articleid"</span> : <span class="string">"100000"</span>, <span class="string">"content"</span> : <span class="string">"今天天气真好，阳光明 媚"</span>, <span class="string">"userid"</span> : <span class="string">"1001"</span>, <span class="string">"nickname"</span> : <span class="string">"Rose"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"2020-06-20T13:48:03.665Z"</span>), <span class="string">"likenum"</span> : 10, <span class="string">"state"</span> : null &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>提示：</p><p>skip(), limilt(), sort()三个放在一起执行的时候，执行的顺序是先 sort(), 然后是 skip()，最后是显示的 limit()，和命令编写顺序无关。</p><h5 id="正则查询"><a href="#正则查询" class="headerlink" title="正则查询"></a><strong>正则查询</strong></h5><p>MongoDB的模糊查询是通过<strong>正则表达式</strong>的方式实现的。格式为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(&#123;field:/正则表达式/&#125;)</span><br></pre></td></tr></table></figure><p>提示：正则表达式是js的语法，直接量的写法。</p><p>例如，我要查询评论内容包含“开水”的所有文档，代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.comment.find(&#123;content:/空腹/&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"2"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"我夏天空腹喝凉开水，冬天喝温开水"</span>, <span class="string">"userid"</span> : <span class="string">"1005"</span>, <span class="string">"nickname"</span> : <span class="string">"伊人憔 悴"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"2019-08-05T23:58:51.485Z"</span>), <span class="string">"likenum"</span> : 888, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"4"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"专家说不能空腹吃饭，影响健康。"</span>, <span class="string">"userid"</span> : <span class="string">"1003"</span>, <span class="string">"nickname"</span> : <span class="string">"凯 撒"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"2019-08-06T08:18:35.288Z"</span>), <span class="string">"likenum"</span> : 2000, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&gt; db.comment.find(&#123;content:/^我们/&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"1"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"我们不应该把清晨浪费在手机上，健康很重要，一杯温水幸福你我 他。"</span>, <span class="string">"userid"</span> : <span class="string">"1002"</span>, <span class="string">"nickname"</span> : <span class="string">"相忘于江湖"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"1970-01-01T00:00:00Z"</span>), <span class="string">"likenum"</span> : 1000, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><h5 id="比较查询"><a href="#比较查询" class="headerlink" title="比较查询"></a>比较查询</h5><p>&lt;, &lt;=, &gt;, &gt;= 这个操作符也是很常用的，格式如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">db.集合名称.find(&#123; <span class="string">"field"</span> : &#123; <span class="variable">$gt</span>: value &#125;&#125;) // 大于: field &gt; value </span><br><span class="line">db.集合名称.find(&#123; <span class="string">"field"</span> : &#123; <span class="variable">$lt</span>: value &#125;&#125;) // 小于: field &lt; value </span><br><span class="line">db.集合名称.find(&#123; <span class="string">"field"</span> : &#123; <span class="variable">$gte</span>: value &#125;&#125;) // 大于等于: field &gt;= value </span><br><span class="line">db.集合名称.find(&#123; <span class="string">"field"</span> : &#123; <span class="variable">$lte</span>: value &#125;&#125;) // 小于等于: field &lt;= value </span><br><span class="line">db.集合名称.find(&#123; <span class="string">"field"</span> : &#123; <span class="variable">$ne</span>: value &#125;&#125;) // 不等于: field != value</span><br></pre></td></tr></table></figure><p>示例：查询评论点赞数量大于700的记录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.comment.find(&#123;likenum:&#123;<span class="variable">$gt</span>:NumberInt(700)&#125;&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"1"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"我们不应该把清晨浪费在手机上，健康很重要，一杯温水幸福你我 他。"</span>, <span class="string">"userid"</span> : <span class="string">"1002"</span>, <span class="string">"nickname"</span> : <span class="string">"相忘于江湖"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"1970-01-01T00:00:00Z"</span>), <span class="string">"likenum"</span> : 1000, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"2"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"我夏天空腹喝凉开水，冬天喝温开水"</span>, <span class="string">"userid"</span> : <span class="string">"1005"</span>, <span class="string">"nickname"</span> : <span class="string">"伊人憔 悴"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"2019-08-05T23:58:51.485Z"</span>), <span class="string">"likenum"</span> : 888, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"4"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"专家说不能空腹吃饭，影响健康。"</span>, <span class="string">"userid"</span> : <span class="string">"1003"</span>, <span class="string">"nickname"</span> : <span class="string">"凯 撒"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"2019-08-06T08:18:35.288Z"</span>), <span class="string">"likenum"</span> : 2000, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"5"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"研究表明，刚烧开的水千万不能喝，因为烫 嘴。"</span>, <span class="string">"userid"</span> : <span class="string">"1003"</span>, <span class="string">"nickname"</span> : <span class="string">"凯撒"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"1970-01-01T00:00:00Z"</span>), <span class="string">"likenum"</span> : 3000, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><h5 id="包含查询"><a href="#包含查询" class="headerlink" title="包含查询"></a>包含查询</h5><p>包含使用$in操作符。 示例：查询评论的集合中userid字段包含1003或1004的文档</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.comment.find(&#123;userid:&#123;<span class="variable">$in</span>:[<span class="string">"1003"</span>,<span class="string">"1004"</span>]&#125;&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"3"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"我一直喝凉开水，冬天夏天都喝。"</span>, <span class="string">"userid"</span> : <span class="string">"1004"</span>, <span class="string">"nickname"</span> : <span class="string">"杰克船 长"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"2019-08-06T01:05:06.321Z"</span>), <span class="string">"likenum"</span> : 666, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"4"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"专家说不能空腹吃饭，影响健康。"</span>, <span class="string">"userid"</span> : <span class="string">"1003"</span>, <span class="string">"nickname"</span> : <span class="string">"凯 撒"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"2019-08-06T08:18:35.288Z"</span>), <span class="string">"likenum"</span> : 2000, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"5"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"研究表明，刚烧开的水千万不能喝，因为烫 嘴。"</span>, <span class="string">"userid"</span> : <span class="string">"1003"</span>, <span class="string">"nickname"</span> : <span class="string">"凯撒"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"1970-01-01T00:00:00Z"</span>), <span class="string">"likenum"</span> : 3000, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><h5 id="条件连接查询"><a href="#条件连接查询" class="headerlink" title="条件连接查询"></a>条件连接查询</h5><p>我们如果需要查询同时满足两个以上条件，需要使用$and操作符将条件进行关联。 格式为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$and</span>:[ &#123; &#125;,&#123; &#125;,&#123; &#125; ]</span><br></pre></td></tr></table></figure><p>示例：查询评论集合中likenum大于等于700 并且小于2000的文档：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.comment.find(&#123;<span class="variable">$and</span>:[&#123;likenum:&#123;<span class="variable">$gte</span>:NumberInt(700)&#125;&#125;,&#123;likenum:&#123;<span class="variable">$lt</span>:NumberInt(2000)&#125;&#125;]&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"1"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"我们不应该把清晨浪费在手机上，健康很重要，一杯温水幸福你我 他。"</span>, <span class="string">"userid"</span> : <span class="string">"1002"</span>, <span class="string">"nickname"</span> : <span class="string">"相忘于江湖"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"1970-01-01T00:00:00Z"</span>), <span class="string">"likenum"</span> : 1000, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"2"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"我夏天空腹喝凉开水，冬天喝温开水"</span>, <span class="string">"userid"</span> : <span class="string">"1005"</span>, <span class="string">"nickname"</span> : <span class="string">"伊人憔 悴"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"2019-08-05T23:58:51.485Z"</span>), <span class="string">"likenum"</span> : 888, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>如果两个以上条件之间是或者的关系，我们使用 操作符进行关联，与前面 and的使用方式相同 格式为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$or</span>:[ &#123; &#125;,&#123; &#125;,&#123; &#125; ]</span><br></pre></td></tr></table></figure><h4 id="修改文档"><a href="#修改文档" class="headerlink" title="修改文档"></a>修改文档</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">db.collection.update(query, update, options) </span><br><span class="line">或 </span><br><span class="line">db.collection.update( </span><br><span class="line">    &lt;query&gt;, </span><br><span class="line">    &lt;update&gt;, </span><br><span class="line">    &#123; </span><br><span class="line">        upsert: &lt;boolean&gt;, </span><br><span class="line">        multi: &lt;boolean&gt;, </span><br><span class="line">        writeConcern: &lt;document&gt;, </span><br><span class="line">        collation: &lt;document&gt;, </span><br><span class="line">        arrayFilters: [ &lt;filterdocument1&gt;, ... ], </span><br><span class="line">        hint: &lt;document|string&gt; // Available starting <span class="keyword">in</span> MongoDB 4.2 </span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h5 id="覆盖修改"><a href="#覆盖修改" class="headerlink" title="覆盖修改"></a>覆盖修改</h5><p>如果我们想修改_id为1的记录，点赞量为1001，输入以下语句：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.comment.update(&#123;_id:<span class="string">"1"</span>&#125;,&#123;likenum:NumberInt(1001)&#125;)</span><br><span class="line">WriteResult(&#123; <span class="string">"nMatched"</span> : 1, <span class="string">"nUpserted"</span> : 0, <span class="string">"nModified"</span> : 1 &#125;)</span><br><span class="line">&gt; db.comment.findOne(&#123;_id:<span class="string">"1"</span>&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"1"</span>, <span class="string">"likenum"</span> : 1001 &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>执行后，我们会发现，这条文档除了likenum字段其它字段都不见了</p><h5 id="局部修改"><a href="#局部修改" class="headerlink" title="局部修改"></a>局部修改</h5><p>为了解决这个问题，我们需要使用修改器$set来实现，命令如下：</p><p>我们想修改_id为2的记录，浏览量为889，输入以下语句：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.comment.update(&#123;_id:<span class="string">"2"</span>&#125;,&#123;<span class="variable">$set</span>:&#123;likenum:NumberInt(889)&#125;&#125;)</span><br><span class="line">WriteResult(&#123; <span class="string">"nMatched"</span> : 1, <span class="string">"nUpserted"</span> : 0, <span class="string">"nModified"</span> : 1 &#125;)</span><br><span class="line">&gt; db.comment.findOne(&#123;_id:<span class="string">"2"</span>&#125;)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">        <span class="string">"articleid"</span> : <span class="string">"100001"</span>,</span><br><span class="line">        <span class="string">"content"</span> : <span class="string">"我夏天空腹喝凉开水，冬天喝温开水"</span>,</span><br><span class="line">        <span class="string">"userid"</span> : <span class="string">"1005"</span>,</span><br><span class="line">        <span class="string">"nickname"</span> : <span class="string">"伊人憔 悴"</span>,</span><br><span class="line">        <span class="string">"createdatetime"</span> : ISODate(<span class="string">"2019-08-05T23:58:51.485Z"</span>),</span><br><span class="line">        <span class="string">"likenum"</span> : 889,</span><br><span class="line">        <span class="string">"state"</span> : <span class="string">"1"</span></span><br><span class="line">&#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><h5 id="批量修改"><a href="#批量修改" class="headerlink" title="批量修改"></a>批量修改</h5><p>更新所有用户为 1003 的用户的昵称为 凯撒大帝 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.comment.update(&#123;userid:<span class="string">"1003"</span>&#125;,&#123;<span class="variable">$set</span>:&#123;nickname:<span class="string">"凯撒2"</span>&#125;&#125;)</span><br><span class="line">WriteResult(&#123; <span class="string">"nMatched"</span> : 1, <span class="string">"nUpserted"</span> : 0, <span class="string">"nModified"</span> : 1 &#125;)</span><br><span class="line">&gt; db.comment.find(&#123;userid:<span class="string">"1003"</span>&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"4"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"专家说不能空腹吃饭，影响健康。"</span>, <span class="string">"userid"</span> : <span class="string">"1003"</span>, <span class="string">"nickname"</span> : <span class="string">"凯撒2"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"2019-08-06T08:18:35.288Z"</span>), <span class="string">"likenum"</span> : 2000, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"5"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"研究表明，刚烧开的水千万不能喝，因为烫 嘴。"</span>, <span class="string">"userid"</span> : <span class="string">"1003"</span>, <span class="string">"nickname"</span> : <span class="string">"凯撒"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"1970-01-01T00:00:00Z"</span>), <span class="string">"likenum"</span> : 3000, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&gt; db.comment.update(&#123;userid:<span class="string">"1003"</span>&#125;,&#123;<span class="variable">$set</span>:&#123;nickname:<span class="string">"凯撒大帝"</span>&#125;&#125;,&#123;multi:<span class="literal">true</span>&#125;)</span><br><span class="line">WriteResult(&#123; <span class="string">"nMatched"</span> : 2, <span class="string">"nUpserted"</span> : 0, <span class="string">"nModified"</span> : 2 &#125;)</span><br><span class="line">&gt;  db.comment.find(&#123;userid:<span class="string">"1003"</span>&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"4"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"专家说不能空腹吃饭，影响健康。"</span>, <span class="string">"userid"</span> : <span class="string">"1003"</span>, <span class="string">"nickname"</span> : <span class="string">"凯撒大帝"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"2019-08-06T08:18:35.288Z"</span>), <span class="string">"likenum"</span> : 2000, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : <span class="string">"5"</span>, <span class="string">"articleid"</span> : <span class="string">"100001"</span>, <span class="string">"content"</span> : <span class="string">"研究表明，刚烧开的水千万不能喝，因为烫 嘴。"</span>, <span class="string">"userid"</span> : <span class="string">"1003"</span>, <span class="string">"nickname"</span> : <span class="string">"凯撒大帝"</span>, <span class="string">"createdatetime"</span> : ISODate(<span class="string">"1970-01-01T00:00:00Z"</span>), <span class="string">"likenum"</span> : 3000, <span class="string">"state"</span> : <span class="string">"1"</span> &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>提示：如果不加后面的参数，则只更新符合条件的第一条记录</p><h5 id="列值增长的修改"><a href="#列值增长的修改" class="headerlink" title="列值增长的修改"></a>列值增长的修改</h5><p>如果我们想实现对某列值在原有值的基础上进行增加或减少，可以使用 $inc 运算符来实现。</p><p>需求：对3号数据的点赞数，每次递增1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.comment.update(&#123;_id:<span class="string">"3"</span>&#125;,&#123;<span class="variable">$inc</span>:&#123;likenum:Number(1)&#125;&#125;)</span><br><span class="line">WriteResult(&#123; <span class="string">"nMatched"</span> : 1, <span class="string">"nUpserted"</span> : 0, <span class="string">"nModified"</span> : 1 &#125;)</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><h4 id="删除文档"><a href="#删除文档" class="headerlink" title="删除文档"></a>删除文档</h4><p>删除文档的语法结构：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.集合名称.remove(条件)</span><br></pre></td></tr></table></figure><p>以下语句可以将数据全部删除，请慎用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.comment.remove(&#123;&#125;)</span><br></pre></td></tr></table></figure><p>如果删除_id=1的记录，输入以下语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.comment.remove(&#123;_id:<span class="string">"1"</span>&#125;)</span><br><span class="line">WriteResult(&#123; <span class="string">"nRemoved"</span> : 1 &#125;)</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><h3 id="常用命令小结"><a href="#常用命令小结" class="headerlink" title="常用命令小结"></a>常用命令小结</h3><p>选择切换数据库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use articledb</span><br></pre></td></tr></table></figure><p>插入数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.comment.insert(&#123;bson数据&#125;)</span><br></pre></td></tr></table></figure><p>查询所有数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.comment.find()</span><br></pre></td></tr></table></figure><p>条件查询数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.comment.find(&#123;条件&#125;)</span><br></pre></td></tr></table></figure><p>查询符合条件的第一条记录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.comment.findOne(&#123;条件&#125;)</span><br></pre></td></tr></table></figure><p>查询符合条件的前几条记录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.comment.find(&#123;条件&#125;).limit(条数)</span><br></pre></td></tr></table></figure><p>查询符合条件的跳过的记录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.comment.find(&#123;条件&#125;).skip(条数)</span><br></pre></td></tr></table></figure><p>修改数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.comment.update(&#123;条件&#125;,&#123;修改后的数据&#125;) </span><br><span class="line">或</span><br><span class="line">db.comment.update(&#123;条件&#125;,&#123;$set:&#123;要修改部分的字段:数据&#125;)</span><br></pre></td></tr></table></figure><p>修改数据并自增某字段值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.comment.update(&#123;条件&#125;,&#123;$inc:&#123;自增的字段:步进值&#125;&#125;)</span><br></pre></td></tr></table></figure><p>删除数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.comment.remove(&#123;条件&#125;)</span><br></pre></td></tr></table></figure><p>统计查询：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.comment.count(&#123;条件&#125;)</span><br></pre></td></tr></table></figure><p>模糊查询：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.comment.find(&#123;字段名:&#x2F;正则表达式&#x2F;&#125;)</span><br></pre></td></tr></table></figure><p>条件比较运算：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.comment.find(&#123;字段名:&#123;$gt:值&#125;&#125;)</span><br></pre></td></tr></table></figure><p>包含查询：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.comment.find(&#123;字段名:&#123;$in:[值1，值2]&#125;&#125;)</span><br><span class="line">或</span><br><span class="line">db.comment.find(&#123;字段名:&#123;$nin:[值1，值2]&#125;&#125;)</span><br></pre></td></tr></table></figure><p>条件连接查询：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.comment.find(&#123;$and:[&#123;条件1&#125;,&#123;条件2&#125;]&#125;)</span><br><span class="line">或</span><br><span class="line">db.comment.find(&#123;$or:[&#123;条件1&#125;,&#123;条件2&#125;]&#125;)</span><br></pre></td></tr></table></figure><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><p>索引支持在MongoDB中高效地执行查询。如果没有索引，MongoDB必须执行全集合扫描，即扫描集合中的每个文档，以选择与查询语句匹配的文档。这种扫描全集合的查询效率是非常低的，特别在处理大量的数据时，查询可以要花费几十秒甚至几分钟，这对网站的性能是非常致命的。</p><p>如果查询存在适当的索引，MongoDB可以使用该索引限制必须检查的文档数。</p><p>索引是特殊的数据结构，它以易于遍历的形式存储集合数据集的一小部分。索引存储特定字段或一组字段的值，按字段值排序。索引项的排序支持有效的相等匹配和基于范围的查询操作。此外，MongoDB还可以使用索引中的排序返回排序结果。</p><p>官网文档：<a href="https://docs.mongodb.com/manual/indexes/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/indexes/</a></p><p>MongoDB索引使用B树数据结构（确切的说是B-Tree，MySQL是B+Tree）</p><h4 id="索引的类型"><a href="#索引的类型" class="headerlink" title="索引的类型"></a>索引的类型</h4><h5 id="单字段索引"><a href="#单字段索引" class="headerlink" title="单字段索引"></a>单字段索引</h5><p>MongoDB支持在文档的单个字段上创建用户定义的升序/降序索引，称为单字段索引（Single Field Index）。</p><p>对于单个字段索引和排序操作，索引键的排序顺序（即升序或降序）并不重要，因为MongoDB可以在任何方向上遍历索引。</p><h5 id="复合索引"><a href="#复合索引" class="headerlink" title="复合索引"></a>复合索引</h5><p>MongoDB还支持多个字段的用户定义索引，即复合索引（Compound Index）。</p><p>复合索引中列出的字段顺序具有重要意义。例如，如果复合索引由 { userid: 1, score: -1 } 组成，则索引首先按userid正序排序，然后在每个userid的值内，再在按score倒序排序</p><h5 id="其他索引"><a href="#其他索引" class="headerlink" title="其他索引"></a>其他索引</h5><p>地理空间索引（Geospatial Index）、文本索引（Text Indexes）、哈希索引（Hashed Indexes）。</p><h5 id="地理空间索引"><a href="#地理空间索引" class="headerlink" title="地理空间索引"></a>地理空间索引</h5><p>为了支持对地理空间坐标数据的有效查询，MongoDB提供了两种特殊的索引：返回结果时使用平面几何的二维索引和返回结果时使用球面 几何的二维球面索引。</p><h5 id="文本索引"><a href="#文本索引" class="headerlink" title="文本索引"></a>文本索引</h5><p>MongoDB提供了一种文本索引类型，支持在集合中搜索字符串内容。这些文本索引不存储特定于语言的停止词（例如“the”、“a”、“or”），而将集合中的词作为词干，只存储根词。</p><h5 id="哈希索引"><a href="#哈希索引" class="headerlink" title="哈希索引"></a>哈希索引</h5><p>为了支持基于散列的分片，MongoDB提供了散列索引类型，它对字段值的散列进行索引。这些索引在其范围内的值分布更加随机，但只支 持相等匹配，不支持基于范围的查询。</p><h4 id="索引管理"><a href="#索引管理" class="headerlink" title="索引管理"></a>索引管理</h4><h5 id="查询索引"><a href="#查询索引" class="headerlink" title="查询索引"></a>查询索引</h5><p>返回一个集合中的所有索引的数组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.comment.getIndexes()</span><br><span class="line">[</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="string">"v"</span> : 2, <span class="comment"># 索引引擎版本</span></span><br><span class="line">                <span class="string">"key"</span> : &#123;</span><br><span class="line">                        <span class="string">"_id"</span> : 1 <span class="comment"># 索引对应的字段：1代表升序</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">"name"</span> : <span class="string">"_id_"</span>, <span class="comment"># 索引名称</span></span><br><span class="line">                <span class="string">"ns"</span> : <span class="string">"test.comment"</span></span><br><span class="line">        &#125;</span><br><span class="line">]</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>结果中显示的是默认 _id 索引。</p><p>默认_id索引：</p><p>MongoDB在创建集合的过程中，在 _id 字段上创建一个唯一的索引，默认名字为 <em>id</em> ，该索引可防止客户端插入两个具有相同值的文 档，您不能在_id字段上删除此索引。</p><p>注意：该索引是唯一索引，因此值不能重复，即 _id 值不能重复的。在分片集群中，通常使用 _id 作为片键</p><h5 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h5><p>在集合上创建索引。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.createIndex(keys, options)</span><br></pre></td></tr></table></figure><p>在集合上创建索引。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.createIndex(keys, options)</span><br></pre></td></tr></table></figure><p>参数：</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/sPwtMWju7JhIecg.png" alt="image-20200620230719986"></p><p>options（更多选项）列表：</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/eGxf6kBcRX5tO9M.png" alt="image-20200620230736005"></p><p>提示：</p><p>注意在 3.0.0 版本前创建索引方法为 db.collection.ensureIndex() ，之后的版本使用了 db.collection.createIndex() 方法， ensureIndex() 还能用，但只是createIndex() 的别名。</p><p>【示例】</p><p>（1）单字段索引示例：对 userid 字段建立索引：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">db.comment.createIndex(&#123;userid:1&#125;) </span><br><span class="line">&#123; </span><br><span class="line"><span class="string">"createdCollectionAutomatically"</span> : <span class="literal">false</span>, </span><br><span class="line"><span class="string">"numIndexesBefore"</span> : 1, </span><br><span class="line"><span class="string">"numIndexesAfter"</span> : 2, </span><br><span class="line"><span class="string">"ok"</span> : 1 </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（2）复合索引：对 userid 和 nickname 同时建立复合（Compound）索引：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">db.comment.createIndex(&#123;userid:1,nickname:-1&#125;) </span><br><span class="line">&#123; </span><br><span class="line"><span class="string">"createdCollectionAutomatically"</span> : <span class="literal">false</span>, </span><br><span class="line"><span class="string">"numIndexesBefore"</span> : 2, </span><br><span class="line"><span class="string">"numIndexesAfter"</span> : 3, </span><br><span class="line"><span class="string">"ok"</span> : 1 </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="索引的移除"><a href="#索引的移除" class="headerlink" title="索引的移除"></a>索引的移除</h5><p>可以移除指定的索引，或移除所有索引</p><p>移除指定索引：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.dropIndex(index)</span><br></pre></td></tr></table></figure><p>移除所有索引：</p><p>注意：_id的索引是不会被删除的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.dropIndexes()</span><br></pre></td></tr></table></figure><h3 id="索引的使用"><a href="#索引的使用" class="headerlink" title="索引的使用"></a>索引的使用</h3><h5 id="执行计划"><a href="#执行计划" class="headerlink" title="执行计划"></a>执行计划</h5><p>分析查询性能（Analyze Query Performance）通常使用执行计划（解释计划、Explain Plan）来查看查询的情况，如查询耗费的时间、是否基于索引查询等。</p><p>那么，通常，我们想知道，建立的索引是否有效，效果如何，都需要通过执行计划查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(query,options).explain(options)</span><br></pre></td></tr></table></figure><p>示例：</p><p>查看根据userid查询数据的情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.comment.find(&#123;userid:<span class="string">"1003"</span>&#125;).explain()</span><br><span class="line">&#123;</span><br><span class="line">        <span class="string">"queryPlanner"</span> : &#123;</span><br><span class="line">                <span class="string">"plannerVersion"</span> : 1,</span><br><span class="line">                <span class="string">"namespace"</span> : <span class="string">"test.comment"</span>,</span><br><span class="line">                <span class="string">"indexFilterSet"</span> : <span class="literal">false</span>,</span><br><span class="line">                <span class="string">"parsedQuery"</span> : &#123;</span><br><span class="line">                        <span class="string">"userid"</span> : &#123;</span><br><span class="line">                                <span class="string">"<span class="variable">$eq</span>"</span> : <span class="string">"1003"</span></span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">"winningPlan"</span> : &#123;</span><br><span class="line">                        <span class="string">"stage"</span> : <span class="string">"COLLSCAN"</span>,</span><br><span class="line">                        <span class="string">"filter"</span> : &#123;</span><br><span class="line">                                <span class="string">"userid"</span> : &#123;</span><br><span class="line">                                        <span class="string">"<span class="variable">$eq</span>"</span> : <span class="string">"1003"</span></span><br><span class="line">                                &#125;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="string">"direction"</span> : <span class="string">"forward"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">"rejectedPlans"</span> : [ ]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"serverInfo"</span> : &#123;</span><br><span class="line">                <span class="string">"host"</span> : <span class="string">"ryan"</span>,</span><br><span class="line">                <span class="string">"port"</span> : 27017,</span><br><span class="line">                <span class="string">"version"</span> : <span class="string">"4.0.19"</span>,</span><br><span class="line">                <span class="string">"gitVersion"</span> : <span class="string">"7e28f4296a04d858a2e3dd84a1e79c9ba59a9568"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"ok"</span> : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关键点看： “stage” : “COLLSCAN”, 表示全集合扫描，也就是全部5条数据都要查一遍，再选择符合条件的，这个查询方式就比较低了</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/8vSuM2BiZyoJ496.png" alt="image-20200620231717152"></p><p>我们尝试给userid加上索引，再查一下看看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.comment.createIndex(&#123;userid:1&#125;)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="string">"createdCollectionAutomatically"</span> : <span class="literal">false</span>,</span><br><span class="line">        <span class="string">"numIndexesBefore"</span> : 1,</span><br><span class="line">        <span class="string">"numIndexesAfter"</span> : 2,</span><br><span class="line">        <span class="string">"ok"</span> : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/Q5PREg1lSsNO2IL.png" alt="image-20200620231911938"></p><p>再次查看执行计划,关键点看： “stage” : “IXSCAN” ,基于索引的扫描，然后抓取fetch</p><p>这时候会先去索引库中扫描数据，再抓取符合条件的数据，总共才查了2条数据，对比没有索引的，效率肯定是提高了，如果是大数据，就会非常明显</p><h5 id="涵盖的查询"><a href="#涵盖的查询" class="headerlink" title="涵盖的查询"></a>涵盖的查询</h5><p>当查询条件和查询的投影仅包含索引字段时，MongoDB直接从索引返回结果，而不扫描任何文档或将文档带入内存，这些覆盖的查询非常高效</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/hrBLuvI4FOxERVl.png" alt="image-20200620232450122"></p><p>示例：</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/tTpaP6oSi8YFRKh.png" alt="image-20200620232634793"></p><h2 id="springboot整合MongoDB"><a href="#springboot整合MongoDB" class="headerlink" title="springboot整合MongoDB"></a>springboot整合MongoDB</h2><p>主要结合springboot-mangodb对数据的操作</p><p>表结构分析</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/Tmb8RgdnAt2JQal.png" alt="image-20200620233306607"></p><p>技术选型</p><p>SpringDataMongoDB</p><p>实战：</p><h3 id="1、创建项目，导入依赖"><a href="#1、创建项目，导入依赖" class="headerlink" title="1、创建项目，导入依赖"></a>1、创建项目，导入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ryan<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mongodb-study<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-mongodb --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-mongodb<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- this is needed or IntelliJ gives junit.jar or junit-platform-launcher:1.3.2 not found errors --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.platform<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-platform-launcher<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2、配置yml文件"><a href="#2、配置yml文件" class="headerlink" title="2、配置yml文件"></a>2、配置yml文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment"># 数据源配置</span></span><br><span class="line">  <span class="attr">data:</span></span><br><span class="line">    <span class="attr">mongodb:</span></span><br><span class="line">      <span class="comment"># 主机地址</span></span><br><span class="line">      <span class="attr">host:</span> <span class="number">203.195</span><span class="number">.160</span><span class="number">.231</span></span><br><span class="line">      <span class="comment"># 数据库</span></span><br><span class="line">      <span class="attr">database:</span> <span class="string">test</span></span><br><span class="line">      <span class="comment"># 默认端口号：27017</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">27017</span></span><br></pre></td></tr></table></figure><h3 id="3、编写主启动类"><a href="#3、编写主启动类" class="headerlink" title="3、编写主启动类"></a>3、编写主启动类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArticleApplication</span> </span>&#123;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">           SpringApplication.run(ArticleApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、编写实体类"><a href="#4、编写实体类" class="headerlink" title="4、编写实体类"></a>4、编写实体类</h3><p>注意：由于是非关系型数据库，所以实体类属性和mongodb数据库中已经存在的字段不需要不一定要保持一致</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@Document</span>(collection = <span class="string">"comment"</span>)<span class="comment">//指定对应的集合</span></span><br><span class="line"><span class="meta">@CompoundIndex</span>(def = <span class="string">"&#123;'userid':1, 'nickname':-1&#125;"</span>)<span class="comment">//也可以在类上添加索引</span></span><br><span class="line"><span class="meta">@Accessors</span>(chain = <span class="keyword">true</span>)<span class="comment">//支持链式编程</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Comment</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//@Id</span></span><br><span class="line">    <span class="keyword">private</span> String id;<span class="comment">//主键，_id，如果属性名时id，可以省略注解@Id</span></span><br><span class="line">    <span class="meta">@Field</span>(<span class="string">"content"</span>)</span><br><span class="line">    <span class="keyword">private</span> String content;<span class="comment">//如果属性名称和集合中的字段名字不一样，可以像这样添加注解</span></span><br><span class="line">    <span class="keyword">private</span> Date publishtime;</span><br><span class="line">    <span class="meta">@Indexed</span></span><br><span class="line">    <span class="keyword">private</span> String userid;<span class="comment">//添加索引，一般会通过命令行去添加索引</span></span><br><span class="line">    <span class="keyword">private</span> String nickname;</span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createdatetime;</span><br><span class="line">    <span class="keyword">private</span> Integer likenum;</span><br><span class="line">    <span class="keyword">private</span> Integer replynum;</span><br><span class="line">    <span class="keyword">private</span> String parentid;</span><br><span class="line">    <span class="keyword">private</span> String articleid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5、编写dao层"><a href="#5、编写dao层" class="headerlink" title="5、编写dao层"></a>5、编写dao层</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//评论的持久层接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CommentDao</span> <span class="keyword">extends</span> <span class="title">MongoRepository</span>&lt;<span class="title">Comment</span>, <span class="title">String</span>&gt; </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//继承MongoRepository之后已经继承了很多crud方法，具体可以点进去查看</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//如果想要实现分页查询，我们需要另增方法，注意方法名格式是有要求的，findBy+字段名</span></span><br><span class="line">    <span class="function">Page&lt;Comment&gt; <span class="title">findByUserid</span><span class="params">(String userid, Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6、编写service层"><a href="#6、编写service层" class="headerlink" title="6、编写service层"></a>6、编写service层</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommentService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CommentDao commentDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MongoTemplate mongoTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//调用dao的方法，都是通过dao继承MongoRepository过来的</span></span><br><span class="line">    <span class="comment">//增</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveComment</span><span class="params">(Comment comment)</span></span>&#123;</span><br><span class="line">        commentDao.save(comment);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//更新</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateComment</span><span class="params">(Comment comment)</span></span>&#123;</span><br><span class="line">        commentDao.save(comment);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据id删除</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteCommentById</span><span class="params">(String id)</span></span>&#123;</span><br><span class="line">        commentDao.deleteById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除所有</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteAllComments</span><span class="params">()</span></span>&#123;</span><br><span class="line">        commentDao.deleteAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据id查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Comment <span class="title">findById</span><span class="params">(String id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> commentDao.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询所有</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Comment&gt; <span class="title">findAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> commentDao.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//分页查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Comment&gt; <span class="title">findByPage</span><span class="params">(String userid, <span class="keyword">int</span> pageNo, <span class="keyword">int</span> pageSize)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> commentDao.findByUserid(userid, PageRequest.of(pageNo,pageSize));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//实现点赞+1</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateCommentLikenum</span><span class="params">(String id)</span></span>&#123;</span><br><span class="line">        <span class="comment">//查询条件</span></span><br><span class="line">        Query query = Query.query(Criteria.where(<span class="string">"_id"</span>).is(id));<span class="comment">//查询的条件，如果是多个条件，可以在后面addCriteria</span></span><br><span class="line">        <span class="comment">//更新条件</span></span><br><span class="line">        Update update = <span class="keyword">new</span> Update();</span><br><span class="line">        update.inc(<span class="string">"likenum"</span>);<span class="comment">//自增1</span></span><br><span class="line">        <span class="comment">//执行更新</span></span><br><span class="line">        mongoTemplate.updateFirst(query, update, Comment<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>7、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArticleApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> CommentService commentService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Comment comment = <span class="keyword">new</span> Comment();</span><br><span class="line">        comment.setContent(<span class="string">"ryan自学java"</span>)</span><br><span class="line">                .setPublishtime(<span class="keyword">new</span> Date())</span><br><span class="line">                .setUserid(<span class="string">"10086"</span>)</span><br><span class="line">                .setNickname(<span class="string">"牛排"</span>)</span><br><span class="line">                .setCreatedatetime(LocalDateTime.now())</span><br><span class="line">                .setLikenum(<span class="number">999</span>)</span><br><span class="line">                .setReplynum(<span class="number">40</span>)</span><br><span class="line">                .setArticleid(<span class="string">"9527"</span>);</span><br><span class="line">        commentService.saveComment(comment);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//其他的crud方法就不一一测试了</span></span><br><span class="line">    <span class="comment">//如果想要实现分页查询，可以通过在dao层自定义一个方法查询</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//另外如果想通过mongodb实现点赞数+1的话，原生的+1方法效率比较低，这时候我们可以通过MongoTemplate来实现</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">testAddLikenum</span><span class="params">()</span></span>&#123;</span><br><span class="line">        commentService.updateCommentLikenum(<span class="string">"2"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>测试前，别忘了开mongodb的服务哦，我这里是将mongodb部署到远程服务上的</li><li>另外可以结合可视化工具compass方便查看数据哦</li></ul><p>以上是mongodb的简单入门，先写到这里，后续会再进一步学习mongodb</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;什么是MongoDB？&quot;&gt;&lt;a href=&quot;#什么是MongoDB？&quot; class=&quot;headerlink&quot; title=&quot;什么是MongoDB？&quot;&gt;&lt;/a&gt;什么是MongoDB？&lt;/h2&gt;&lt;p&gt;MongoDB 是由C++语言编写的，是一个基于分布式文件存储的开源
      
    
    </summary>
    
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mongodb" scheme="http://yoursite.com/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>Linux入门教程</title>
    <link href="http://yoursite.com/2020/06/24/nux%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2020/06/24/nux%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/</id>
    <published>2020-06-24T08:40:00.000Z</published>
    <updated>2020-06-24T08:43:27.662Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><p>提醒：这里是基于java全栈开发Linux，而不是运维级别的</p><p>什么为什么要在这个时间学习Linux？java全栈开发的我们要掌握哪些知识？需要准备什么工作？</p><p>因为java进阶的一些技能，譬如springcloud、消息队列、缓存、搜索引擎、集群分布式（需要购买多台服务器，如果没有服务器我们就只能使用虚拟机）</p><p>这里是基于CentOS 7版本的学习</p><p>Linux一切皆文件：文件的读、写（权限）</p><p>学习方式：</p><ol><li>认识Linux</li><li>基本的命令（重点）</li><li>软件的安装和部署</li></ol><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>为什么要学习Linux？</p><p>因为一般大型项目都是部署在Linux上的， 而且找工作的时候，一般招聘上都有要求掌握Linux的基本操作</p><p>简介：</p><p>Linux 内核最初只是由芬兰人林纳斯·托瓦兹（Linus Torvalds）在赫尔辛基大学上学时出于个人爱好而编写的。</p><p>Linux 是一套免费使用和自由传播的类 Unix 操作系统，是一个基于 POSIX（可移植操作系统接口） 和 UNIX 的多用户、多任务、支持多线程和多 CPU 的操作系统。</p><p>Linux 能运行主要的 UNIX 工具软件、应用程序和网络协议。它支持 32 位和 64 位硬件。Linux 继承了 Unix 以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。</p><p>Linux 发行版</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/IzlgJxRQj7nL4K2.png" alt="image-20200530142115949"></p><p>目前企业中用的比较多的都是CentOS 7</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol><li>下载安装Linux，在这里，我买的是腾讯云1年服务器，就不需要另外下载镜像安装系统了（这也是比较推荐的，在实际开发中一般也都是使用云服务器）</li><li>重置自己账户密码</li><li>添加安全组，自定义开发的端口</li><li>下载安装ssh，这里直接在网上找破解版的</li><li>打开ssh，新建连接登陆腾讯云（公网ip+账户密码）</li><li>进入linux系统</li></ol><h3 id="走进Linux系统"><a href="#走进Linux系统" class="headerlink" title="走进Linux系统"></a>走进Linux系统</h3><blockquote><p>开机登陆</p></blockquote><p>开机会启动许多程序。它们在Windows叫做”服务”（service），在Linux就叫做”守护进程”（daemon）。</p><p>开机成功后，它会显示一个文本登录界面，这个界面就是我们经常看到的登录界面，在这个登录界面中会提示用户输入用户名，而用户输入的用户将作为参数传给login程序来验证用户的身份，密码是不显示的，输完回车即可！</p><p>一般来说，用户的登录方式有三种：</p><ul><li>命令行登陆</li><li>ssh登陆</li><li>图形界面登陆</li></ul><p>最高权限账户为root，可以操作一切</p><blockquote><p>关机</p></blockquote><p>在linux领域内大多用在服务器上，很少遇到关机的操作。毕竟服务器上跑一个服务是永无止境的，除非特殊情况下，不得已才会关机。</p><p>关机指令为：shutdown ；（==不要演示==）</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">sync</span> <span class="comment"># 将数据由内存同步到硬盘中。</span></span><br><span class="line"></span><br><span class="line"><span class="string">shutdown</span> <span class="comment"># 关机指令，你可以man shutdown 来看一下帮助文档。例如你可以运行如下命令关机：</span></span><br><span class="line"></span><br><span class="line"><span class="string">shutdown</span> <span class="string">–h</span> <span class="number">10</span> <span class="comment"># 这个命令告诉大家，计算机将在10分钟后关机</span></span><br><span class="line"></span><br><span class="line"><span class="string">shutdown</span> <span class="string">–h</span> <span class="string">now</span> <span class="comment"># 立马关机</span></span><br><span class="line"></span><br><span class="line"><span class="string">shutdown</span> <span class="string">–h</span> <span class="number">20</span><span class="string">:25</span> <span class="comment"># 系统会在今天20:25关机</span></span><br><span class="line"></span><br><span class="line"><span class="string">shutdown</span> <span class="string">–h</span> <span class="string">+10</span> <span class="comment"># 十分钟后关机</span></span><br><span class="line"></span><br><span class="line"><span class="string">shutdown</span> <span class="string">–r</span> <span class="string">now</span> <span class="comment"># 系统立马重启</span></span><br><span class="line"></span><br><span class="line"><span class="string">shutdown</span> <span class="string">–r</span> <span class="string">+10</span> <span class="comment"># 系统十分钟后重启</span></span><br><span class="line"></span><br><span class="line"><span class="string">reboot</span> <span class="comment"># 就是重启，等同于 shutdown –r now</span></span><br><span class="line"></span><br><span class="line"><span class="string">halt</span> <span class="comment"># 关闭系统，等同于shutdown –h now 和 poweroff</span></span><br></pre></td></tr></table></figure><p>最后总结一下，不管是重启系统还是关闭系统，首先要运行 <strong>sync</strong> 命令，把内存中的数据写到磁盘中。</p><blockquote><p>系统目录结构</p></blockquote><p>登录系统后，在当前命令窗口下输入命令：</p><p>ls /</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/DUOnsjkY7uzvToH.png" alt="image-20200530175013352"></p><p>树状目录结构：（Linux的一切资源都挂载在这个 / 根节点下）</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/vDJCuVRKatUFXcs.png" alt="image-20200530175045676"></p><p><strong>以下是对这些目录的解释：</strong></p><ul><li><strong>/bin</strong>：bin是Binary的缩写, 这个目录存放着最经常使用的命令。</li><li><strong>/boot：</strong> 这里存放的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件。（不要动）</li><li><strong>/dev ：</strong> dev是Device(设备)的缩写, 存放的是Linux的外部设备，在Linux中访问设备的方式和访问文件的方式是相同的。</li><li>==<strong>/etc：</strong> 这个目录用来存放所有的系统管理所需要的配置文件和子目录。==</li><li>==<strong>/home</strong>：用户的主目录，在Linux中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的。==</li><li><strong>/lib</strong>：这个目录里存放着系统最基本的动态连接共享库，其作用类似于Windows里的DLL文件。（不要动）</li><li><strong>/lost+found</strong>：这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。（存放突然关机的一些文件）</li><li><strong>/media</strong>：linux系统会自动识别一些设备，例如U盘、光驱等等，当识别后，linux会把识别的设备挂载到这个目录下。</li><li><strong>/mnt</strong>：系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在/mnt/上，然后进入该目录就可以查看光驱里的内容了。（我们后面会把一些本地文件挂载在这个目录下）</li><li>==/opt：这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个目录下。默认是空的。**==</li><li><strong>/proc</strong>：这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。（不用管）</li><li>==/root：该目录为系统管理员，也称作超级权限者的用户主目录。==</li><li><strong>/sbin</strong>：s就是Super User的意思，这里存放的是系统管理员使用的系统管理程序。</li><li><strong>/srv</strong>：该目录存放一些服务启动之后需要提取的数据。</li><li><strong>/sys</strong>：这是linux2.6内核的一个很大的变化。该目录下安装了2.6内核中新出现的一个文件系统 sysfs 。</li><li>==<strong>/tmp</strong>：这个目录是用来存放一些临时文件的。用完即丢的文件，可以放在这个目录下，例如安装包==</li><li>==<strong>/usr</strong>：这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于windows下的program files目录。==</li><li><strong>/usr/bin：</strong> 系统用户使用的应用程序。</li><li><strong>/usr/sbin：</strong> 超级用户使用的比较高级的管理程序和系统守护程序。</li><li><strong>/usr/src：</strong> 内核源代码默认的放置目录。</li><li>==<strong>/var</strong>：这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。==</li><li><strong>/run</strong>：是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。</li><li>/www：存放服务网站相关的资源，环境，网站的项目</li></ul><h2 id="常用的基本命令"><a href="#常用的基本命令" class="headerlink" title="常用的基本命令"></a>常用的基本命令</h2><h3 id="目录管理"><a href="#目录管理" class="headerlink" title="目录管理"></a>目录管理</h3><blockquote><p>了解绝对路径和相对路径</p></blockquote><p>我们知道Linux的目录结构为树状结构，最顶级的目录为根目录 /。</p><p>其他目录通过挂载可以将它们添加到树中，通过解除挂载可以移除它们。</p><p><strong>绝对路径：</strong></p><p>路径的写法，由根目录 / 写起，例如：/usr/share/doc 这个目录。</p><p><strong>相对路径：</strong></p><p>路径的写法，不是由 / 写起，例如由 /usr/share/doc 要到 /usr/share/man 底下时，可以写成：cd ../man 这就是相对路径的写法啦！</p><blockquote><p>处理目录的常用命令</p></blockquote><p>接下来我们就来看几个常见的处理目录的命令吧</p><ul><li>ls：列出目录</li><li>cd ：切换目录</li><li>pwd：现实目前的目录</li><li>mkdir：创建一个新的目录</li><li>rmdir：移除一个空的目录</li><li>cp：复制文件或目录</li><li>rm：移除文件或目录</li><li>mv：移动文件与目录或修改文件与目录的名称</li></ul><p>你可以使用 <em>man [命令]</em> 来查看各个命令的使用文档，如 ：man cp。</p><blockquote><p>ls列出目录</p></blockquote><p>在Linux系统当中， ls 命令可能是最常被运行的</p><p>选项与参数：</p><ul><li>-a ：全部的文件，连同隐藏文件( 开头为 . 的文件) 一起列出来(常用)</li><li>-l ：长数据串列出，包含文件的属性与权限等等数据；(常用)</li></ul><p>同时还可以组合使用，将目录下的所有文件列出来(含属性与隐藏档)</p><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_17_centos &#x2F;]# ls</span><br><span class="line">bin   data  etc   lib    lost+found  mnt  proc  run   srv  tmp  var</span><br><span class="line">boot  dev   home  lib64  media       opt  root  sbin  sys  usr</span><br><span class="line">[root@VM_0_17_centos &#x2F;]# ls -a</span><br><span class="line">.   bin   data  etc   lib    lost+found  mnt  proc  run   srv  tmp  var</span><br><span class="line">..  boot  dev   home  lib64  media       opt  root  sbin  sys  usr</span><br><span class="line">[root@VM_0_17_centos &#x2F;]# ls -l</span><br><span class="line">total 64</span><br><span class="line">lrwxrwxrwx.  1 root root     7 Aug  8  2018 bin -&gt; usr&#x2F;bin</span><br><span class="line">dr-xr-xr-x.  5 root root  4096 May 30 14:57 boot</span><br><span class="line">drwxr-xr-x   2 root root  4096 Jan 21  2019 data</span><br><span class="line">drwxr-xr-x  19 root root  2980 May 30 15:40 dev</span><br><span class="line">drwxr-xr-x. 85 root root  4096 May 30 15:40 etc</span><br><span class="line">drwxr-xr-x.  2 root root  4096 May 30 17:20 home</span><br><span class="line">lrwxrwxrwx.  1 root root     7 Aug  8  2018 lib -&gt; usr&#x2F;lib</span><br><span class="line">lrwxrwxrwx.  1 root root     9 Aug  8  2018 lib64 -&gt; usr&#x2F;lib64</span><br><span class="line">drwx------.  2 root root 16384 Aug  8  2018 lost+found</span><br><span class="line">drwxr-xr-x.  2 root root  4096 Apr 11  2018 media</span><br><span class="line">drwxr-xr-x.  2 root root  4096 Apr 11  2018 mnt</span><br><span class="line">drwxr-xr-x.  3 root root  4096 Aug  8  2018 opt</span><br><span class="line">dr-xr-xr-x  84 root root     0 May 30 15:40 proc</span><br><span class="line">dr-xr-x---.  6 root root  4096 May 30 14:57 root</span><br><span class="line">drwxr-xr-x  23 root root   800 May 30 15:41 run</span><br><span class="line">lrwxrwxrwx.  1 root root     8 Aug  8  2018 sbin -&gt; usr&#x2F;sbin</span><br><span class="line">drwxr-xr-x.  2 root root  4096 Apr 11  2018 srv</span><br><span class="line">dr-xr-xr-x  13 root root     0 May 30 15:40 sys</span><br><span class="line">drwxrwxrwt.  8 root root  4096 May 30 17:20 tmp</span><br><span class="line">drwxr-xr-x. 13 root root  4096 Aug  8  2018 usr</span><br><span class="line">drwxr-xr-x. 19 root root  4096 Jan 21  2019 var</span><br><span class="line">[root@VM_0_17_centos &#x2F;]# ls -al</span><br><span class="line">total 72</span><br><span class="line">dr-xr-xr-x. 19 root root  4096 May 30 20:59 .</span><br><span class="line">dr-xr-xr-x. 19 root root  4096 May 30 20:59 ..</span><br><span class="line">lrwxrwxrwx.  1 root root     7 Aug  8  2018 bin -&gt; usr&#x2F;bin</span><br><span class="line">dr-xr-xr-x.  5 root root  4096 May 30 14:57 boot</span><br><span class="line">drwxr-xr-x   2 root root  4096 Jan 21  2019 data</span><br><span class="line">drwxr-xr-x  19 root root  2980 May 30 15:40 dev</span><br><span class="line">drwxr-xr-x. 85 root root  4096 May 30 15:40 etc</span><br><span class="line">drwxr-xr-x.  2 root root  4096 May 30 17:20 home</span><br><span class="line">lrwxrwxrwx.  1 root root     7 Aug  8  2018 lib -&gt; usr&#x2F;lib</span><br><span class="line">lrwxrwxrwx.  1 root root     9 Aug  8  2018 lib64 -&gt; usr&#x2F;lib64</span><br><span class="line">drwx------.  2 root root 16384 Aug  8  2018 lost+found</span><br><span class="line">drwxr-xr-x.  2 root root  4096 Apr 11  2018 media</span><br><span class="line">drwxr-xr-x.  2 root root  4096 Apr 11  2018 mnt</span><br><span class="line">drwxr-xr-x.  3 root root  4096 Aug  8  2018 opt</span><br><span class="line">dr-xr-xr-x  84 root root     0 May 30 15:40 proc</span><br><span class="line">dr-xr-x---.  6 root root  4096 May 30 14:57 root</span><br><span class="line">drwxr-xr-x  23 root root   800 May 30 15:41 run</span><br><span class="line">lrwxrwxrwx.  1 root root     8 Aug  8  2018 sbin -&gt; usr&#x2F;sbin</span><br><span class="line">drwxr-xr-x.  2 root root  4096 Apr 11  2018 srv</span><br><span class="line">dr-xr-xr-x  13 root root     0 May 30 20:58 sys</span><br><span class="line">drwxrwxrwt.  8 root root  4096 May 30 17:20 tmp</span><br><span class="line">drwxr-xr-x. 13 root root  4096 Aug  8  2018 usr</span><br><span class="line">drwxr-xr-x. 19 root root  4096 Jan 21  2019 var</span><br></pre></td></tr></table></figure><blockquote><p>切换目录</p></blockquote><p>cd是Change Directory的缩写，这是用来变换工作目录的命令。</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 切换到用户目录下</span><br><span class="line">[root@kuangshen &#x2F;]# cd home  </span><br><span class="line"></span><br><span class="line"># 使用 mkdir 命令创建 kuangstudy 目录</span><br><span class="line">[root@kuangshen home]# mkdir kuangstudy</span><br><span class="line"></span><br><span class="line"># 进入 kuangstudy 目录</span><br><span class="line">[root@kuangshen home]# cd kuangstudy</span><br><span class="line"></span><br><span class="line"># 回到上一级</span><br><span class="line">[root@kuangshen kuangstudy]# cd ..</span><br><span class="line"></span><br><span class="line"># 回到根目录</span><br><span class="line">[root@kuangshen kuangstudy]# cd &#x2F;</span><br><span class="line"></span><br><span class="line"># 表示回到自己的家目录，亦即是 &#x2F;root 这个目录</span><br><span class="line">[root@kuangshen kuangstudy]# cd ~</span><br></pre></td></tr></table></figure><blockquote><p>pwd ( 显示目前所在的目录 )</p></blockquote><p>pwd 是 <strong>Print Working Directory</strong> 的缩写，也就是显示目前所在目录的命令。</p><p>选项与参数：<strong>-P</strong> ：显示出确实的路径，而非使用连接(link) 路径。</p><p>测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 单纯显示出目前的工作目录</span><br><span class="line">[root@kuangshen ~]# pwd</span><br><span class="line">&#x2F;root</span><br><span class="line"></span><br><span class="line"># 如果是链接，要显示真实地址，可以使用 -P参数</span><br><span class="line">[root@kuangshen &#x2F;]# cd bin</span><br><span class="line">[root@kuangshen bin]# pwd -P</span><br><span class="line">&#x2F;usr&#x2F;bin</span><br></pre></td></tr></table></figure><blockquote><p>mkdir 创建新目录</p></blockquote><p>选项与参数：</p><ul><li>-m ：配置文件的权限喔！直接配置，不需要看默认权限 (umask) 的脸色～</li><li>-p ：帮助你直接将所需要的目录(包含上一级目录)递归创建起来！</li></ul><p>测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 进入我们用户目录下</span><br><span class="line">[root@kuangshen &#x2F;]# cd &#x2F;home</span><br><span class="line"></span><br><span class="line"># 创建一个 test 文件夹</span><br><span class="line">[root@kuangshen home]# mkdir test</span><br><span class="line"></span><br><span class="line"># 创建多层级目录</span><br><span class="line">[root@kuangshen home]# mkdir test1&#x2F;test2&#x2F;test3&#x2F;test4</span><br><span class="line">mkdir: cannot create directory ‘test1&#x2F;test2&#x2F;test3&#x2F;test4’:</span><br><span class="line">No such file or directory  # &lt;&#x3D;&#x3D; 没办法直接创建此目录啊！</span><br><span class="line"></span><br><span class="line"># 加了这个 -p 的选项，可以自行帮你创建多层目录！</span><br><span class="line">[root@kuangshen home]# mkdir -p test1&#x2F;test2&#x2F;test3&#x2F;test4</span><br><span class="line"></span><br><span class="line"># 创建权限为 rwx--x--x 的目录。</span><br><span class="line">[root@kuangshen home]# mkdir -m 711 test2</span><br><span class="line">[root@kuangshen home]# ls -l</span><br><span class="line">drwxr-xr-x 2 root root  4096 Mar 12 21:55 test</span><br><span class="line">drwxr-xr-x 3 root root  4096 Mar 12 21:56 test1</span><br><span class="line">drwx--x--x 2 root root  4096 Mar 12 21:58 test2</span><br></pre></td></tr></table></figure><blockquote><p>rmdir 删除空的目录</p></blockquote><p>选项与参数：<strong>-p ：</strong>连同上一级『空的』目录也一起删除</p><p>测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 看看有多少目录存在？</span><br><span class="line">[root@kuangshen home]# ls -l</span><br><span class="line">drwxr-xr-x 2 root root  4096 Mar 12 21:55 test</span><br><span class="line">drwxr-xr-x 3 root root  4096 Mar 12 21:56 test1</span><br><span class="line">drwx--x--x 2 root root  4096 Mar 12 21:58 test2</span><br><span class="line"></span><br><span class="line"># 可直接删除掉，没问题</span><br><span class="line">[root@kuangshen home]# rmdir test</span><br><span class="line"></span><br><span class="line"># 因为尚有内容，所以无法删除！</span><br><span class="line">[root@kuangshen home]# rmdir test1</span><br><span class="line">rmdir: failed to remove ‘test1’: Directory not empty</span><br><span class="line"></span><br><span class="line"># 利用 -p 这个选项，立刻就可以将 test1&#x2F;test2&#x2F;test3&#x2F;test4 依次删除。</span><br><span class="line">[root@kuangshen home]# rmdir -p test1&#x2F;test2&#x2F;test3&#x2F;test4</span><br></pre></td></tr></table></figure><p>注意：这个 rmdir 仅能删除空的目录，你可以使用 rm 命令来删除非空目录，后面我们会讲</p><blockquote><p>cp 复制文件或目录</p></blockquote><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@www ~]# cp [-adfilprsu] 来源档(source) 目标档(destination)</span><br><span class="line">[root@www ~]# cp [options] source1 source2 source3 .... directory</span><br></pre></td></tr></table></figure><p>选项与参数：</p><ul><li><strong>-a：</strong>相当於 -pdr 的意思，至於 pdr 请参考下列说明；(常用)</li><li><strong>-p：</strong>连同文件的属性一起复制过去，而非使用默认属性(备份常用)；</li><li><strong>-d：</strong>若来源档为连结档的属性(link file)，则复制连结档属性而非文件本身；</li><li><strong>-r：</strong>递归持续复制，用於目录的复制行为；(常用)</li><li><strong>-f：</strong>为强制(force)的意思，若目标文件已经存在且无法开启，则移除后再尝试一次；</li><li><strong>-i：</strong>若目标档(destination)已经存在时，在覆盖时会先询问动作的进行(常用)</li><li><strong>-l：</strong>进行硬式连结(hard link)的连结档创建，而非复制文件本身。</li><li><strong>-s：</strong>复制成为符号连结档 (symbolic link)，亦即『捷径』文件；</li><li><strong>-u：</strong>若 destination 比 source 旧才升级 destination ！</li></ul><p>测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 找一个有文件的目录，我这里找到 root目录</span><br><span class="line">[root@kuangshen home]# cd &#x2F;root</span><br><span class="line">[root@kuangshen ~]# ls</span><br><span class="line">install.sh</span><br><span class="line">[root@kuangshen ~]# cd &#x2F;home</span><br><span class="line"></span><br><span class="line"># 复制 root目录下的install.sh 到 home目录下</span><br><span class="line">[root@kuangshen home]# cp &#x2F;root&#x2F;install.sh &#x2F;home</span><br><span class="line">[root@kuangshen home]# ls</span><br><span class="line">install.sh</span><br><span class="line"></span><br><span class="line"># 再次复制，加上-i参数，增加覆盖询问？</span><br><span class="line">[root@kuangshen home]# cp -i &#x2F;root&#x2F;install.sh &#x2F;home</span><br><span class="line">cp: overwrite ‘&#x2F;home&#x2F;install.sh’? y # n不覆盖，y为覆盖</span><br></pre></td></tr></table></figure><blockquote><p>rm 移除文件或目录</p></blockquote><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm [-fir] 文件或目录</span><br></pre></td></tr></table></figure><p>选项与参数：</p><ul><li>-f ：就是 force 的意思，忽略不存在的文件，不会出现警告信息；</li><li>-i ：互动模式，在删除前会询问使用者是否动作</li><li>-r ：递归删除啊！最常用在目录的删除了！这是非常危险的选项！！！</li></ul><p>测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 将刚刚在 cp 的实例中创建的 install.sh删除掉！</span><br><span class="line">[root@kuangshen home]# rm -i install.sh</span><br><span class="line">rm: remove regular file ‘install.sh’? y</span><br><span class="line"># 如果加上 -i 的选项就会主动询问喔，避免你删除到错误的档名！</span><br><span class="line"></span><br><span class="line"># 尽量不要在服务器上使用 rm -rf &#x2F;</span><br></pre></td></tr></table></figure><blockquote><p>mv 移除文件与目录，或修改名称</p></blockquote><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@www ~]# mv [-fiu] source destination</span><br><span class="line">[root@www ~]# mv [options] source1 source2 source3 .... directory</span><br></pre></td></tr></table></figure><p>选项与参数：</p><ul><li>-f ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖；</li><li>-i ：若目标文件 (destination) 已经存在时，就会询问是否覆盖！</li><li>-u ：若目标文件已经存在，且 source 比较新，才会升级 (update)</li></ul><p>测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 复制一个文件到当前目录</span><br><span class="line">[root@kuangshen home]# cp &#x2F;root&#x2F;install.sh &#x2F;home</span><br><span class="line"></span><br><span class="line"># 创建一个文件夹 test</span><br><span class="line">[root@kuangshen home]# mkdir test</span><br><span class="line"></span><br><span class="line"># 将复制过来的文件移动到我们创建的目录，并查看</span><br><span class="line">[root@kuangshen home]# mv install.sh test</span><br><span class="line">[root@kuangshen home]# ls</span><br><span class="line">test</span><br><span class="line">[root@kuangshen home]# cd test</span><br><span class="line">[root@kuangshen test]# ls</span><br><span class="line">install.sh</span><br><span class="line"></span><br><span class="line"># 将文件夹重命名，然后再次查看！</span><br><span class="line">[root@kuangshen test]# cd ..</span><br><span class="line">[root@kuangshen home]# mv test mvtest</span><br><span class="line">[root@kuangshen home]# ls</span><br><span class="line">mvtest</span><br></pre></td></tr></table></figure><h3 id="基本属性"><a href="#基本属性" class="headerlink" title="基本属性"></a>基本属性</h3><blockquote><p>看懂文件属性</p></blockquote><p>Linux系统是一种典型的多用户系统，不同的用户处于不同的地位，拥有不同的权限。为了保护系统的安全性，Linux系统对不同的用户访问同一文件（包括目录文件）的权限做了不同的规定。</p><p>在Linux中我们可以使用<code>ll</code>或者<code>ls –l</code>命令来显示一个文件的属性以及文件所属的用户和组，如：</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/SQtbTOaZkcCpi2e.png" alt="image-20200530215513609"></p><p>实例中，boot文件的第一个属性用”d”表示。”d”在Linux中代表该文件是一个目录文件。</p><p>在Linux中第一个字符代表这个文件是目录、文件或链接文件等等：</p><ul><li>当为[ <strong>d</strong> ]则是目录</li><li>当为[ <strong>-</strong> ]则是文件；</li><li>若是[ <strong>l</strong> ]则表示为链接文档 ( link file )；</li><li>若是[ <strong>b</strong> ]则表示为装置文件里面的可供储存的接口设备 ( 可随机存取装置 )；</li><li>若是[ <strong>c</strong> ]则表示为装置文件里面的串行端口设备，例如键盘、鼠标 ( 一次性读取装置 )。</li></ul><p>接下来的字符中，以三个为一组，且均为『rwx』 的三个参数的组合。</p><p>其中，[ r ]代表可读(read)、[ w ]代表可写(write)、[ x ]代表可执行(execute)。</p><p>要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号[ - ]而已。</p><p>每个文件的属性由左边第一部分的10个字符来确定（如下图）：</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/qFrxYTsbMC5opGL.png" alt="image-20200530215625082"></p><p>从左至右用0-9这些数字来表示。</p><p>第0位确定文件类型，第1-3位确定属主（该文件的所有者）拥有该文件的权限。第4-6位确定属组（所有者的同组用户）拥有该文件的权限，第7-9位确定其他用户拥有该文件的权限。</p><p>其中：</p><p>第1、4、7位表示读权限，如果用”r”字符表示，则有读权限，如果用”-“字符表示，则没有读权限；</p><p>第2、5、8位表示写权限，如果用”w”字符表示，则有写权限，如果用”-“字符表示没有写权限；</p><p>第3、6、9位表示可执行权限，如果用”x”字符表示，则有执行权限，如果用”-“字符表示，则没有执行权限。</p><p>对于文件来说，它都有一个特定的所有者，也就是对该文件具有所有权的用户。</p><p>同时，在Linux系统中，用户是按组分类的，一个用户属于一个或多个组。</p><p>文件所有者以外的用户又可以分为文件所有者的同组用户和其他用户。</p><p>因此，Linux系统按文件所有者、文件所有者同组用户和其他用户来规定了不同的文件访问权限。</p><p>在以上实例中，boot 文件是一个目录文件，属主和属组都为 root。</p><blockquote><p>修改文件属性</p></blockquote><p>1、chgrp：更改文件属组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chgrp [-R] 属组名 文件名</span><br></pre></td></tr></table></figure><p>-R：递归更改文件属组，就是在更改某个目录文件的属组时，如果加上-R的参数，那么该目录下的所有文件的属组都会更改。</p><p>2、chown：更改文件属主，也可以同时更改文件属组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown [–R] 属主名 文件名</span><br><span class="line">chown [-R] 属主名：属组名 文件名</span><br></pre></td></tr></table></figure><p>3、chmod：更改文件9个属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod [-R] xyz 文件或目录</span><br></pre></td></tr></table></figure><p>Linux文件属性有两种设置方法，一种是数字，一种是符号。</p><p>Linux文件的基本权限就有九个，分别是owner/group/others三种身份各有自己的read/write/execute权限。</p><p>先复习一下刚刚上面提到的数据：文件的权限字符为：『-rwxrwxrwx』， 这九个权限是三个三个一组的！其中，我们可以使用数字来代表各个权限，各权限的分数对照表如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r:4     w:2         x:1</span><br></pre></td></tr></table></figure><p>每种身份(owner/group/others)各自的三个权限(r/w/x)分数是需要累加的，例如当权限为：[-rwxrwx—] 分数则是：</p><ul><li>owner = rwx = 4+2+1 = 7</li><li>group = rwx = 4+2+1 = 7</li><li>others= — = 0+0+0 = 0</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 770 filename</span><br></pre></td></tr></table></figure><p>可以自己下去多进行测试！</p><h3 id="文件内容查看"><a href="#文件内容查看" class="headerlink" title="文件内容查看"></a>文件内容查看</h3><blockquote><p>概述</p></blockquote><p>Linux系统中使用以下命令来查看文件的内容</p><ul><li>cat：由第一行开始显示文件内容</li><li>tac：从最后一行开始显示，可以看出tac是cat的倒着写</li><li>nl：显示的时候，顺道输出行号</li><li>more：一页一页的现实文件内容</li><li>less与more类似，但是比more更好的是，他可以往前翻页</li><li>head只看头几行</li><li>tail只看尾巴几行</li></ul><p>你可以使用man[命令]来查看各个命令的使用文档，如：map cp</p><blockquote><p>cat：由第一行开始显示文件内容</p></blockquote><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat [-AbEnTv]</span><br></pre></td></tr></table></figure><p>选项与参数：</p><ul><li>-A ：相当於 -vET 的整合选项，可列出一些特殊字符而不是空白而已；</li><li>-b ：列出行号，仅针对非空白行做行号显示，空白行不标行号！</li><li>-E ：将结尾的断行字节 $ 显示出来；</li><li>-n ：列印出行号，连同空白行也会有行号，与 -b 的选项不同；</li><li>-T ：将 [tab] 按键以 ^I 显示出来；</li><li>-v ：列出一些看不出来的特殊字符</li></ul><p>测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 查看网络配置: 文件地址 &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;</span><br><span class="line">[root@kuangshen ~]# cat &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eth0</span><br><span class="line">DEVICE&#x3D;eth0</span><br><span class="line">BOOTPROTO&#x3D;dhcp</span><br><span class="line">ONBOOT&#x3D;yes</span><br></pre></td></tr></table></figure><blockquote><p>tac</p></blockquote><p>tac与cat命令刚好相反，文件内容从最后一行开始显示，可以看出 tac 是 cat 的倒着写！如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@kuangshen ~]# tac &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eth0</span><br><span class="line">ONBOOT&#x3D;yes</span><br><span class="line">BOOTPROTO&#x3D;dhcp</span><br><span class="line">DEVICE&#x3D;eth0</span><br></pre></td></tr></table></figure><blockquote><p>nl 现实行号</p></blockquote><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nl [-bnw] 文件</span><br></pre></td></tr></table></figure><p>选项与参数：</p><ul><li>-b ：指定行号指定的方式，主要有两种：-b a ：表示不论是否为空行，也同样列出行号(类似 cat -n)；-b t ：如果有空行，空的那一行不要列出行号(默认值)；</li><li>-n ：列出行号表示的方法，主要有三种：-n ln ：行号在荧幕的最左方显示；-n rn ：行号在自己栏位的最右方显示，且不加 0 ；-n rz ：行号在自己栏位的最右方显示，且加 0 ；</li><li>-w ：行号栏位的占用的位数。</li></ul><p>测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@kuangshen ~]# nl &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eth0</span><br><span class="line">1DEVICE&#x3D;eth0</span><br><span class="line">2BOOTPROTO&#x3D;dhcp</span><br><span class="line">3ONBOOT&#x3D;yes</span><br></pre></td></tr></table></figure><blockquote><p>more 一页一页翻动</p></blockquote><p>在 more 这个程序的运行过程中，你有几个按键可以按的：</p><ul><li>空白键 (space)：代表向下翻一页；</li><li>Enter   ：代表向下翻『一行』；</li><li>/字串   ：代表在这个显示的内容当中，向下搜寻『字串』这个关键字；</li><li>:f    ：立刻显示出档名以及目前显示的行数；</li><li>q    ：代表立刻离开 more ，不再显示该文件内容。</li><li>b 或 [ctrl]-b ：代表往回翻页，不过这动作只对文件有用，对管线无用。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@kuangshen etc]# more &#x2F;etc&#x2F;csh.login</span><br><span class="line">....(中间省略)....</span><br><span class="line">--More--(28%) # 重点在这一行喔！你的光标也会在这里等待你的命令</span><br></pre></td></tr></table></figure><blockquote><p>less 一页一页翻动，以下实例输出/etc/man.config文件的内容：</p></blockquote><p>less运行时可以输入的命令有：</p><ul><li>空白键  ：向下翻动一页；</li><li>[pagedown]：向下翻动一页；</li><li>[pageup] ：向上翻动一页；</li><li>/字串  ：向下搜寻『字串』的功能；</li><li>?字串  ：向上搜寻『字串』的功能；</li><li>n   ：重复前一个搜寻 (与 / 或 ? 有关！)</li><li>N   ：反向的重复前一个搜寻 (与 / 或 ? 有关！)</li><li>q   ：离开 less 这个程序；</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@kuangshen etc]# more &#x2F;etc&#x2F;csh.login</span><br><span class="line">....(中间省略)....</span><br><span class="line">:   # 这里可以等待你输入命令！</span><br></pre></td></tr></table></figure><blockquote><p>head 取出文件前面几行</p></blockquote><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head [-n number] 文件</span><br></pre></td></tr></table></figure><p>选项与参数：<strong>-n</strong> 后面接数字，代表显示几行的意思！</p><p>默认的情况中，显示前面 10 行！若要显示前 20 行，就得要这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kuangshen etc]# head -n 20 &#x2F;etc&#x2F;csh.login</span><br></pre></td></tr></table></figure><blockquote><p>tail 取出文件后面几行</p></blockquote><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail [-n number] 文件</span><br></pre></td></tr></table></figure><p>选项与参数：</p><ul><li>-n ：后面接数字，代表显示几行的意思</li></ul><p>默认的情况中，显示最后 10 行！若要显示最后 20 行，就得要这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kuangshen etc]# tail -n 20 &#x2F;etc&#x2F;csh.login</span><br></pre></td></tr></table></figure><blockquote><p>拓展：Linux连接概念</p></blockquote><p>Linux 链接分两种，一种被称为硬链接（Hard Link），另一种被称为符号链接（Symbolic Link）。</p><p>语法：</p><blockquote><p><strong>ln</strong> 命令产生硬链接。</p></blockquote><p><strong>硬连接</strong></p><p>硬连接指通过索引节点来进行连接。在 Linux 的文件系统中，保存在磁盘分区中的文件不管是什么类型都给它分配一个编号，称为索引节点号(Inode Index)。在 Linux 中，多个文件名指向同一索引节点是存在的。比如：A 是 B 的硬链接（A 和 B 都是文件名），则 A 的目录项中的 inode 节点号与 B 的目录项中的 inode 节点号相同，即一个 inode 节点对应两个不同的文件名，两个文件名指向同一个文件，A 和 B 对文件系统来说是完全平等的。删除其中任何一个都不会影响另外一个的访问。</p><p>硬连接的作用是允许一个文件拥有多个有效路径名，这样用户就可以建立硬连接到重要文件，以防止“误删”的功能。其原因如上所述，因为对应该目录的索引节点有一个以上的连接。只删除一个连接并不影响索引节点本身和其它的连接，只有当最后一个连接被删除后，文件的数据块及目录的连接才会被释放。也就是说，文件真正删除的条件是与之相关的所有硬连接文件均被删除。</p><p><strong>软连接</strong></p><p>另外一种连接称之为符号连接（Symbolic Link），也叫软连接。软链接文件有类似于 Windows 的快捷方式。它实际上是一个特殊的文件。在符号连接中，文件实际上是一个文本文件，其中包含的有另一文件的位置信息。比如：A 是 B 的软链接（A 和 B 都是文件名），A 的目录项中的 inode 节点号与 B 的目录项中的 inode 节点号不相同，A 和 B 指向的是两个不同的 inode，继而指向两块不同的数据块。但是 A 的数据块中存放的只是 B 的路径名（可以根据这个找到 B 的目录项）。A 和 B 之间是“主从”关系，如果 B 被删除了，A 仍然存在（因为两个是不同的文件），但指向的是一个无效的链接。</p><p><strong>测试：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@kuangshen &#x2F;]# cd &#x2F;home</span><br><span class="line">[root@kuangshen home]# touch f1 # 创建一个测试文件f1</span><br><span class="line">[root@kuangshen home]# ls</span><br><span class="line">f1</span><br><span class="line">[root@kuangshen home]# ln f1 f2     # 创建f1的一个硬连接文件f2</span><br><span class="line">[root@kuangshen home]# ln -s f1 f3   # 创建f1的一个符号连接文件f3</span><br><span class="line">[root@kuangshen home]# ls -li       # -i参数显示文件的inode节点信息</span><br><span class="line">397247 -rw-r--r-- 2 root root     0 Mar 13 00:50 f1</span><br><span class="line">397247 -rw-r--r-- 2 root root     0 Mar 13 00:50 f2</span><br><span class="line">397248 lrwxrwxrwx 1 root root     2 Mar 13 00:50 f3 -&gt; f1</span><br></pre></td></tr></table></figure><p>从上面的结果中可以看出，硬连接文件 f2 与原文件 f1 的 inode 节点相同，均为 397247，然而符号连接文件的 inode 节点不同。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># echo 字符串输出 &gt;&gt; f1 输出到 f1文件</span><br><span class="line">[root@kuangshen home]# echo &quot;I am f1 file&quot; &gt;&gt;f1</span><br><span class="line">[root@kuangshen home]# cat f1</span><br><span class="line">I am f1 file</span><br><span class="line">[root@kuangshen home]# cat f2</span><br><span class="line">I am f1 file</span><br><span class="line">[root@kuangshen home]# cat f3</span><br><span class="line">I am f1 file</span><br><span class="line">[root@kuangshen home]# rm -f f1</span><br><span class="line">[root@kuangshen home]# cat f2</span><br><span class="line">I am f1 file</span><br><span class="line">[root@kuangshen home]# cat f3</span><br><span class="line">cat: f3: No such file or directory</span><br></pre></td></tr></table></figure><p>通过上面的测试可以看出：当删除原始文件 f1 后，硬连接 f2 不受影响，但是符号连接 f1 文件无效；</p><p>依此您可以做一些相关的测试，可以得到以下全部结论：</p><ul><li>删除符号连接f3,对f1,f2无影响；</li><li>删除硬连接f2，对f1,f3也无影响；</li><li>删除原文件f1，对硬连接f2没有影响，导致符号连接f3失效；</li><li>同时删除原文件f1,硬连接f2，整个文件会真正的被删除。</li></ul><h3 id="Vim编辑器"><a href="#Vim编辑器" class="headerlink" title="Vim编辑器"></a>Vim编辑器</h3><blockquote><p>什么是Vim编辑器</p></blockquote><p>Vim是从 vi 发展出来的一个文本编辑器。代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。</p><p>简单的来说， vi 是老式的字处理器，不过功能已经很齐全了，但是还是有可以进步的地方。</p><p>vim 则可以说是程序开发者的一项很好用的工具。</p><p>所有的 Unix Like 系统都会内建 vi 文书编辑器，其他的文书编辑器则不一定会存在。</p><p>连 vim 的官方网站 (<a href="http://www.vim.org" target="_blank" rel="noopener">http://www.vim.org</a>) 自己也说 vim 是一个程序开发工具而不是文字处理软件。</p><p>vim 键盘图：</p><p><img src= "/img/loading.gif" data-src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1590863334742&di=32f9cc659c4e989b941d4f5d31eb2b93&imgtype=0&src=http%3A%2F%2Fs3.51cto.com%2Fwyfs02%2FM02%2F91%2FA1%2FwKioL1j3HxihWc--AAG1plD9ZH4595.jpg" alt="img"></p><blockquote><p>三种使用模式</p></blockquote><p>基本上 vi/vim 共分为三种模式，分别是<strong>命令模式（Command mode）</strong>，<strong>输入模式（Insert mode）</strong>和<strong>底线命令模式（Last line mode）</strong>。这三种模式的作用分别是：</p><p><strong>命令模式：</strong></p><p>用户刚刚启动 vi/vim，便进入了命令模式。</p><p>此状态下敲击键盘动作会被Vim识别为命令，而非输入字符。比如我们此时按下i，并不会输入一个字符，i被当作了一个命令。</p><p>以下是常用的几个命令：</p><ul><li><strong>i</strong> 切换到输入模式，以输入字符。</li><li><strong>x</strong> 删除当前光标所在处的字符。</li><li><strong>:</strong> 切换到底线命令模式，以在最底一行输入命令。</li></ul><p>若想要编辑文本：启动Vim，进入了命令模式，按下i，切换到输入模式。</p><p>命令模式只有一些最基本的命令，因此仍要依靠底线命令模式输入更多命令。</p><p><strong>输入模式：</strong></p><p>在命令模式下按下i就进入了输入模式。</p><p>在输入模式中，可以使用以下按键：</p><ul><li><strong>字符按键以及Shift组合</strong>，输入字符</li><li><strong>ENTER</strong>，回车键，换行</li><li><strong>BACK SPACE</strong>，退格键，删除光标前一个字符</li><li><strong>DEL</strong>，删除键，删除光标后一个字符</li><li><strong>方向键</strong>，在文本中移动光标</li><li><strong>HOME</strong>/<strong>END</strong>，移动光标到行首/行尾</li><li><strong>Page Up</strong>/<strong>Page Down</strong>，上/下翻页</li><li><strong>Insert</strong>，切换光标为输入/替换模式，光标将变成竖线/下划线</li><li><strong>ESC</strong>，退出输入模式，切换到命令模式</li></ul><p><strong>底线命令模式</strong></p><p>在命令模式下按下:（英文冒号）就进入了底线命令模式。</p><p>底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。</p><p>在底线命令模式中，基本的命令有（已经省略了冒号）：</p><ul><li>q 退出程序</li><li>w 保存文件</li></ul><p>按ESC键可随时退出底线命令模式。</p><p>简单的说，我们可以将这三个模式想成底下的图标来表示：</p><p><img src= "/img/loading.gif" data-src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1590863438242&di=7bc3e7e95ab7de9c667078b9875c62be&imgtype=0&src=http%3A%2F%2Fimg4.imgtn.bdimg.com%2Fit%2Fu%3D50605784%2C4264977334%26fm%3D214%26gp%3D0.jpg" alt="img"></p><blockquote><p>上手体验一下，在home目录下测试</p></blockquote><p>如果你想要使用 vi 来建立一个名为 kuangstudy.txt 的文件时，你可以这样做：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kuangshen home]# vim kuangstudy.txt</span><br></pre></td></tr></table></figure><p>然后就会进入文件编辑器</p><p>注意：如果该文件不存在就新建一个文件，如果该文件已经存在，就是修改文件</p><p><strong>按下 i 进入输入模式(也称为编辑模式)，开始编辑文字</strong></p><p>在一般模式之中，只要按下 i, o, a 等字符就可以进入输入模式了！</p><p>在编辑模式当中，你可以发现在左下角状态栏中会出现 –INSERT- 的字样，那就是可以输入任意字符的提示。</p><p>这个时候，键盘上除了 <strong>Esc</strong> 这个按键之外，其他的按键都可以视作为一般的输入按钮了，所以你可以进行任何的编辑。</p><p><strong>按下 ESC 按钮回到一般模式</strong></p><p>好了，假设我已经按照上面的样式给他编辑完毕了，那么应该要如何退出呢？是的！没错！就是给他按下 <strong>Esc</strong> 这个按钮即可！马上你就会发现画面左下角的 – INSERT – 不见了！</p><p>在一般模式中按下 <strong>:wq</strong> 储存后离开 vim！</p><p>OK! 这样我们就成功创建了一个 kuangstudy.txt 的文件。</p><blockquote><p>Vim 按键说明</p></blockquote><p>除了上面简易范例的 i, Esc, :wq 之外，其实 vim 还有非常多的按键可以使用。</p><p><strong>第一部分：一般模式可用的光标移动、复制粘贴、搜索替换等</strong></p><table><thead><tr><th align="left">移动光标的方法</th><th></th></tr></thead><tbody><tr><td align="left">h 或 向左箭头键(←)</td><td>光标向左移动一个字符</td></tr><tr><td align="left">j 或 向下箭头键(↓)</td><td>光标向下移动一个字符</td></tr><tr><td align="left">k 或 向上箭头键(↑)</td><td>光标向上移动一个字符</td></tr><tr><td align="left">l 或 向右箭头键(→)</td><td>光标向右移动一个字符</td></tr><tr><td align="left">[Ctrl] + [f]</td><td>屏幕『向下』移动一页，相当于 [Page Down]按键 (常用)</td></tr><tr><td align="left">[Ctrl] + [b]</td><td>屏幕『向上』移动一页，相当于 [Page Up] 按键 (常用)</td></tr><tr><td align="left">[Ctrl] + [d]</td><td>屏幕『向下』移动半页</td></tr><tr><td align="left">[Ctrl] + [u]</td><td>屏幕『向上』移动半页</td></tr><tr><td align="left">+</td><td>光标移动到非空格符的下一行</td></tr><tr><td align="left">-</td><td>光标移动到非空格符的上一行</td></tr><tr><td align="left">数字&lt; space&gt;</td><td>那个 n 表示『数字』，例如 20 。按下数字后再按空格键，光标会向右移动这一行的 n 个字符。</td></tr><tr><td align="left">0 或功能键[Home]</td><td>这是数字『 0 』：移动到这一行的最前面字符处 (常用)</td></tr><tr><td align="left">$ 或功能键[End]</td><td>移动到这一行的最后面字符处(常用)</td></tr><tr><td align="left">H</td><td>光标移动到这个屏幕的最上方那一行的第一个字符</td></tr><tr><td align="left">M</td><td>光标移动到这个屏幕的中央那一行的第一个字符</td></tr><tr><td align="left">L</td><td>光标移动到这个屏幕的最下方那一行的第一个字符</td></tr><tr><td align="left">G</td><td>移动到这个档案的最后一行(常用)</td></tr><tr><td align="left">nG</td><td>n 为数字。移动到这个档案的第 n 行。例如 20G 则会移动到这个档案的第 20 行(可配合 :set nu)</td></tr><tr><td align="left">gg</td><td>移动到这个档案的第一行，相当于 1G 啊！(常用)</td></tr><tr><td align="left">数字&lt; Enter&gt;</td><td>n 为数字。光标向下移动 n 行(常用)</td></tr></tbody></table><table><thead><tr><th align="left">搜索替换</th><th align="left"></th></tr></thead><tbody><tr><td align="left">/word</td><td align="left">向光标之下寻找一个名称为 word 的字符串。例如要在档案内搜寻 vbird 这个字符串，就输入 /vbird 即可！(常用)</td></tr><tr><td align="left">?word</td><td align="left">向光标之上寻找一个字符串名称为 word 的字符串。</td></tr><tr><td align="left">n</td><td align="left">这个 n 是英文按键。代表重复前一个搜寻的动作。举例来说， 如果刚刚我们执行 /vbird 去向下搜寻 vbird 这个字符串，则按下 n 后，会向下继续搜寻下一个名称为 vbird 的字符串。如果是执行 ?vbird 的话，那么按下 n 则会向上继续搜寻名称为 vbird 的字符串！</td></tr><tr><td align="left">N</td><td align="left">这个 N 是英文按键。与 n 刚好相反，为『反向』进行前一个搜寻动作。例如 /vbird 后，按下 N 则表示『向上』搜寻 vbird 。</td></tr></tbody></table><table><thead><tr><th align="left">删除、复制与粘贴</th><th></th></tr></thead><tbody><tr><td align="left">x, X</td><td>在一行字当中，x 为向后删除一个字符 (相当于 [del] 按键)， X 为向前删除一个字符(相当于 [backspace] 亦即是退格键) (常用)</td></tr><tr><td align="left">nx</td><td>n 为数字，连续向后删除 n 个字符。举例来说，我要连续删除 10 个字符， 『10x』。</td></tr><tr><td align="left">dd</td><td>删除游标所在的那一整行(常用)</td></tr><tr><td align="left">ndd</td><td>n 为数字。删除光标所在的向下 n 行，例如 20dd 则是删除 20 行 (常用)</td></tr><tr><td align="left">d1G</td><td>删除光标所在到第一行的所有数据</td></tr><tr><td align="left">dG</td><td>删除光标所在到最后一行的所有数据</td></tr><tr><td align="left">d$</td><td>删除游标所在处，到该行的最后一个字符</td></tr><tr><td align="left">d0</td><td>那个是数字的 0 ，删除游标所在处，到该行的最前面一个字符</td></tr><tr><td align="left">yy</td><td>复制游标所在的那一行(常用)</td></tr><tr><td align="left">nyy</td><td>n 为数字。复制光标所在的向下 n 行，例如 20yy 则是复制 20 行(常用)</td></tr><tr><td align="left">y1G</td><td>复制游标所在行到第一行的所有数据</td></tr><tr><td align="left">yG</td><td>复制游标所在行到最后一行的所有数据</td></tr><tr><td align="left">y0</td><td>复制光标所在的那个字符到该行行首的所有数据</td></tr><tr><td align="left">y$</td><td>复制光标所在的那个字符到该行行尾的所有数据</td></tr><tr><td align="left">p, P</td><td>p 为将已复制的数据在光标下一行贴上，P 则为贴在游标上一行！举例来说，我目前光标在第 20 行，且已经复制了 10 行数据。则按下 p 后， 那 10 行数据会贴在原本的 20 行之后，亦即由 21 行开始贴。但如果是按下 P 呢？那么原本的第 20 行会被推到变成 30 行。(常用)</td></tr><tr><td align="left">J</td><td>将光标所在行与下一行的数据结合成同一行</td></tr><tr><td align="left">c</td><td>重复删除多个数据，例如向下删除 10 行，[ 10cj ]</td></tr><tr><td align="left">u</td><td>复原前一个动作。(常用)</td></tr><tr><td align="left">[Ctrl]+r</td><td>重做上一个动作。(常用)</td></tr></tbody></table><p><strong>第二部分：一般模式切换到编辑模式的可用的按钮说明</strong></p><table><thead><tr><th align="left">进入输入或取代的编辑模式</th><th></th></tr></thead><tbody><tr><td align="left">i, I</td><td>进入输入模式(Insert mode)：i 为『从目前光标所在处输入』， I 为『在目前所在行的第一个非空格符处开始输入』。(常用)</td></tr><tr><td align="left">a, A</td><td>进入输入模式(Insert mode)：a 为『从目前光标所在的下一个字符处开始输入』， A 为『从光标所在行的最后一个字符处开始输入』。(常用)</td></tr><tr><td align="left">o, O</td><td>进入输入模式(Insert mode)：这是英文字母 o 的大小写。o 为『在目前光标所在的下一行处输入新的一行』；O 为在目前光标所在处的上一行输入新的一行！(常用)</td></tr><tr><td align="left">r, R</td><td>进入取代模式(Replace mode)：r 只会取代光标所在的那一个字符一次；R会一直取代光标所在的文字，直到按下 ESC 为止；(常用)</td></tr><tr><td align="left">[Esc]</td><td>退出编辑模式，回到一般模式中(常用)</td></tr></tbody></table><p><strong>第三部分：一般模式切换到指令行模式的可用的按钮说明</strong></p><table><thead><tr><th align="left">指令行的储存、离开等指令</th><th></th></tr></thead><tbody><tr><td align="left">:w</td><td>将编辑的数据写入硬盘档案中(常用)</td></tr><tr><td align="left">:w!</td><td>若文件属性为『只读』时，强制写入该档案。不过，到底能不能写入， 还是跟你对该档案的档案权限有关啊！</td></tr><tr><td align="left">:q</td><td>离开 vi (常用)</td></tr><tr><td align="left">:q!</td><td>若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。</td></tr><tr><td align="left">注意一下啊，那个惊叹号 (!) 在 vi 当中，常常具有『强制』的意思～</td><td></td></tr><tr><td align="left">:wq</td><td>储存后离开，若为 :wq! 则为强制储存后离开 (常用)</td></tr><tr><td align="left">ZZ</td><td>这是大写的 Z 喔！若档案没有更动，则不储存离开，若档案已经被更动过，则储存后离开！</td></tr><tr><td align="left">:w [filename]</td><td>将编辑的数据储存成另一个档案（类似另存新档）</td></tr><tr><td align="left">:r [filename]</td><td>在编辑的数据中，读入另一个档案的数据。亦即将 『filename』 这个档案内容加到游标所在行后面</td></tr><tr><td align="left">:n1,n2 w [filename]</td><td>将 n1 到 n2 的内容储存成 filename 这个档案。</td></tr><tr><td align="left">:! command</td><td>暂时离开 vi 到指令行模式下执行 command 的显示结果！例如 『:! ls /home』即可在 vi 当中看 /home 底下以 ls 输出的档案信息！</td></tr><tr><td align="left">:set nu</td><td>显示行号，设定之后，会在每一行的前缀显示该行的行号</td></tr><tr><td align="left">:set nonu</td><td>与</td></tr></tbody></table><h3 id="账户管理"><a href="#账户管理" class="headerlink" title="账户管理"></a>账户管理</h3><blockquote><p>简介</p></blockquote><p>Linux系统是一个多用户多任务的分时操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统。</p><p>用户的账号一方面可以帮助系统管理员对使用系统的用户进行跟踪，并控制他们对系统资源的访问；另一方面也可以帮助用户组织文件，并为用户提供安全性保护。</p><p>每个用户账号都拥有一个唯一的用户名和各自的口令。</p><p>用户在登录时键入正确的用户名和口令后，就能够进入系统和自己的主目录。</p><p>实现用户账号的管理，要完成的工作主要有如下几个方面：</p><ul><li>用户账号的添加、删除与修改。</li><li>用户口令的管理。</li><li>用户组的管理。</li></ul><blockquote><p>用户账号的管理</p></blockquote><p>用户账号的管理工作主要涉及到用户账号的添加、修改和删除。</p><p>添加用户账号就是在系统中创建一个新账号，然后为新账号分配用户号、用户组、主目录和登录Shell等资源。</p><blockquote><p>添加账号 useradd</p></blockquote><p>参数说明：</p><ul><li><p>选项 :</p></li><li><ul><li>-c comment 指定一段注释性描述。</li><li>-d 目录 指定用户主目录，如果此目录不存在，则同时使用-m选项，可以创建主目录。</li><li>-g 用户组 指定用户所属的用户组。</li><li>-G 用户组，用户组 指定用户所属的附加组。</li><li>-m　使用者目录如不存在则自动建立。</li><li>-s Shell文件 指定用户的登录Shell。</li><li>-u 用户号 指定用户的用户号，如果同时有-o选项，则可以重复使用其他用户的标识号。</li></ul></li><li><p>用户名 :</p></li><li><ul><li>指定新账号的登录名。</li></ul></li></ul><p>测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 此命令创建了一个用户kuangshen，其中-m选项用来为登录名kuangshen产生一个主目录 &#x2F;home&#x2F;kuangshen</span><br><span class="line">[root@kuangshen home]# useradd -m kuangshen</span><br></pre></td></tr></table></figure><p>增加用户账号就是在/etc/passwd文件中为新用户增加一条记录，同时更新其他系统文件如/etc/shadow, /etc/group等。</p><blockquote><p>Linux下如何切换用户</p></blockquote><p>1.切换用户的命令为：su username 【username是你的用户名哦】</p><p>2.从普通用户切换到root用户，还可以使用命令：sudo su</p><p>3.在终端输入exit或logout或使用快捷方式ctrl+d，可以退回到原来用户，其实ctrl+d也是执行的exit命令</p><p>4.在切换用户时，如果想在切换用户之后使用新用户的工作环境，可以在su和username之间加-，例如：【su - root】</p><p>$表示普通用户</p><p>#表示超级用户，也就是root用户</p><blockquote><p>删除账号</p></blockquote><p>如果一个用户的账号不再使用，可以从系统中删除。</p><p>删除用户账号就是要将/etc/passwd等系统文件中的该用户记录删除，必要时还删除用户的主目录。</p><p>删除一个已有的用户账号使用userdel命令，其格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userdel 选项 用户名</span><br></pre></td></tr></table></figure><p>常用的选项是 <strong>-r</strong>，它的作用是把用户的主目录一起删除。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kuangshen home]# userdel -r kuangshen</span><br></pre></td></tr></table></figure><p>此命令删除用户kuangshen在系统文件中（主要是/etc/passwd, /etc/shadow, /etc/group等）的记录，同时删除用户的主目录。</p><blockquote><p>修改账号</p></blockquote><p>修改用户账号就是根据实际情况更改用户的有关属性，如用户号、主目录、用户组、登录Shell等。</p><p>修改已有用户的信息使用usermod命令，其格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod 选项 用户名</span><br></pre></td></tr></table></figure><p>常用的选项包括-c, -d, -m, -g, -G, -s, -u以及-o等，这些选项的意义与useradd命令中的选项一样，可以为用户指定新的资源值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># usermod -s &#x2F;bin&#x2F;ksh -d &#x2F;home&#x2F;z –g developer kuangshen</span><br></pre></td></tr></table></figure><p>此命令将用户kuangshen的登录Shell修改为ksh，主目录改为/home/z，用户组改为developer。</p><blockquote><p>用户口令的管理</p></blockquote><p>户管理的一项重要内容是用户口令的管理。用户账号刚创建时没有口令，但是被系统锁定，无法使用，必须为其指定口令后才可以使用，即使是指定空口令。</p><p>指定和修改用户口令的Shell命令是passwd。超级用户可以为自己和其他用户指定口令，普通用户只能用它修改自己的口令。</p><p>命令的格式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd 选项 用户名</span><br></pre></td></tr></table></figure><p>可使用的选项：</p><ul><li>-l 锁定口令，即禁用账号。</li><li>-u 口令解锁。</li><li>-d 使账号无口令。</li><li>-f 强迫用户下次登录时修改口令。</li></ul><p>如果默认用户名，则修改当前用户的口令。</p><p>例如，假设当前用户是kuangshen，则下面的命令修改该用户自己的口令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ passwd </span><br><span class="line">Old password:******</span><br><span class="line">New password:*******</span><br><span class="line">Re-enter new password:*******</span><br></pre></td></tr></table></figure><p>如果是超级用户，可以用下列形式指定任何用户的口令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># passwd kuangshen</span><br><span class="line">New password:*******</span><br><span class="line">Re-enter new password:*******</span><br></pre></td></tr></table></figure><p>普通用户修改自己的口令时，passwd命令会先询问原口令，验证后再要求用户输入两遍新口令，如果两次输入的口令一致，则将这个口令指定给用户；而超级用户为用户指定口令时，就不需要知道原口令。</p><p>为了系统安全起见，用户应该选择比较复杂的口令，例如最好使用8位长的口令，口令中包含有大写、小写字母和数字，并且应该与姓名、生日等不相同。</p><p>为用户指定空口令时，执行下列形式的命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># passwd -d kuangshen</span><br></pre></td></tr></table></figure><p>此命令将用户 kuangshen的口令删除，这样用户 kuangshen下一次登录时，系统就不再允许该用户登录了。</p><p>passwd 命令还可以用 -l(lock) 选项锁定某一用户，使其不能登录，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># passwd -l kuangshen</span><br></pre></td></tr></table></figure><h3 id="用户组管理"><a href="#用户组管理" class="headerlink" title="用户组管理"></a>用户组管理</h3><p>每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。不同Linux 系统对用户组的规定有所不同，如Linux下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建。</p><p>用户组的管理涉及用户组的添加、删除和修改。组的增加、删除和修改实际上就是对/etc/group文件的更新。</p><blockquote><p>增加一个新的用户组使用groupadd命令</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd 选项 用户组</span><br></pre></td></tr></table></figure><p>可以使用的选项有：</p><ul><li>-g GID 指定新用户组的组标识号（GID）。</li><li>-o 一般与-g选项同时使用，表示新用户组的GID可以与系统已有用户组的GID相同。</li></ul><p>实例1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># groupadd group1</span><br></pre></td></tr></table></figure><p>此命令向系统中增加了一个新组group1，新组的组标识号是在当前已有的最大组标识号的基础上加1。</p><p>实例2：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># groupadd -g 101 group2</span><br></pre></td></tr></table></figure><p>此命令向系统中增加了一个新组group2，同时指定新组的组标识号是101。</p><blockquote><p>如果要删除一个已有的用户组，使用groupdel命令</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupdel 用户组</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># groupdel group1</span><br></pre></td></tr></table></figure><p>此命令从系统中删除组group1。</p><blockquote><p>修改用户组的属性使用groupmod命令</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupmod 选项 用户组</span><br></pre></td></tr></table></figure><p>常用的选项有：</p><ul><li>-g GID 为用户组指定新的组标识号。</li><li>-o 与-g选项同时使用，用户组的新GID可以与系统已有用户组的GID相同。</li><li>-n新用户组 将用户组的名字改为新名字</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 此命令将组group2的组标识号修改为102。</span><br><span class="line">groupmod -g 102 group2</span><br><span class="line"></span><br><span class="line"># 将组group2的标识号改为10000，组名修改为group3。</span><br><span class="line">groupmod –g 10000 -n group3 group2</span><br></pre></td></tr></table></figure><blockquote><p>切换组</p></blockquote><p>如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限。</p><p>用户可以在登录后，使用命令newgrp切换到其他用户组，这个命令的参数就是目的用户组。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ newgrp root</span><br></pre></td></tr></table></figure><p>这条命令将当前用户切换到root用户组，前提条件是root用户组确实是该用户的主组或附加组。</p><blockquote><p>/etc/passwd</p></blockquote><p>完成用户管理的工作有许多种方法，但是每一种方法实际上都是对有关的系统文件进行修改。</p><p>与用户和用户组相关的信息都存放在一些系统文件中，这些文件包括/etc/passwd, /etc/shadow, /etc/group等。</p><p>下面分别介绍这些文件的内容。</p><p><strong>/etc/passwd文件是用户管理工作涉及的最重要的一个文件。</strong></p><p>Linux系统中的每个用户都在/etc/passwd文件中有一个对应的记录行，它记录了这个用户的一些基本属性。</p><p>这个文件对所有用户都是可读的。它的内容类似下面的例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">＃ cat &#x2F;etc&#x2F;passwd</span><br><span class="line"></span><br><span class="line">root:x:0:0:Superuser:&#x2F;:</span><br><span class="line">daemon:x:1:1:System daemons:&#x2F;etc:</span><br><span class="line">bin:x:2:2:Owner of system commands:&#x2F;bin:</span><br><span class="line">sys:x:3:3:Owner of system files:&#x2F;usr&#x2F;sys:</span><br><span class="line">adm:x:4:4:System accounting:&#x2F;usr&#x2F;adm:</span><br><span class="line">uucp:x:5:5:UUCP administrator:&#x2F;usr&#x2F;lib&#x2F;uucp:</span><br><span class="line">auth:x:7:21:Authentication administrator:&#x2F;tcb&#x2F;files&#x2F;auth:</span><br><span class="line">cron:x:9:16:Cron daemon:&#x2F;usr&#x2F;spool&#x2F;cron:</span><br><span class="line">listen:x:37:4:Network daemon:&#x2F;usr&#x2F;net&#x2F;nls:</span><br><span class="line">lp:x:71:18:Printer administrator:&#x2F;usr&#x2F;spool&#x2F;lp:</span><br></pre></td></tr></table></figure><p>从上面的例子我们可以看到，/etc/passwd中一行记录对应着一个用户，每行记录又被冒号(:)分隔为7个字段，其格式和具体含义如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录Shell</span><br></pre></td></tr></table></figure><p>1）”用户名”是代表用户账号的字符串。</p><p>通常长度不超过8个字符，并且由大小写字母和/或数字组成。登录名中不能有冒号(:)，因为冒号在这里是分隔符。</p><p>为了兼容起见，登录名中最好不要包含点字符(.)，并且不使用连字符(-)和加号(+)打头。</p><p>2）“口令”一些系统中，存放着加密后的用户口令字。</p><p>虽然这个字段存放的只是用户口令的加密串，不是明文，但是由于/etc/passwd文件对所有用户都可读，所以这仍是一个安全隐患。因此，现在许多Linux 系统（如SVR4）都使用了shadow技术，把真正的加密后的用户口令字存放到/etc/shadow文件中，而在/etc/passwd文件的口令字段中只存放一个特殊的字符，例如“x”或者“*”。</p><p>3）“用户标识号”是一个整数，系统内部用它来标识用户。</p><p>一般情况下它与用户名是一一对应的。如果几个用户名对应的用户标识号是一样的，系统内部将把它们视为同一个用户，但是它们可以有不同的口令、不同的主目录以及不同的登录Shell等。</p><p>通常用户标识号的取值范围是0～65 535。0是超级用户root的标识号，1～99由系统保留，作为管理账号，普通用户的标识号从100开始。在Linux系统中，这个界限是500。</p><p>4）“组标识号”字段记录的是用户所属的用户组。</p><p>它对应着/etc/group文件中的一条记录。</p><p>5)“注释性描述”字段记录着用户的一些个人情况。</p><p>例如用户的真实姓名、电话、地址等，这个字段并没有什么实际的用途。在不同的Linux 系统中，这个字段的格式并没有统一。在许多Linux系统中，这个字段存放的是一段任意的注释性描述文字，用作finger命令的输出。</p><p>6)“主目录”，也就是用户的起始工作目录。</p><p>它是用户在登录到系统之后所处的目录。在大多数系统中，各用户的主目录都被组织在同一个特定的目录下，而用户主目录的名称就是该用户的登录名。各用户对自己的主目录有读、写、执行（搜索）权限，其他用户对此目录的访问权限则根据具体情况设置。</p><p>7)用户登录后，要启动一个进程，负责将用户的操作传给内核，这个进程是用户登录到系统后运行的命令解释器或某个特定的程序，即Shell。</p><p>Shell是用户与Linux系统之间的接口。Linux的Shell有许多种，每种都有不同的特点。常用的有sh(Bourne Shell), csh(C Shell), ksh(Korn Shell), tcsh(TENEX/TOPS-20 type C Shell), bash(Bourne Again Shell)等。</p><p>系统管理员可以根据系统情况和用户习惯为用户指定某个Shell。如果不指定Shell，那么系统使用sh为默认的登录Shell，即这个字段的值为/bin/sh。</p><p>用户的登录Shell也可以指定为某个特定的程序（此程序不是一个命令解释器）。</p><p>利用这一特点，我们可以限制用户只能运行指定的应用程序，在该应用程序运行结束后，用户就自动退出了系统。有些Linux 系统要求只有那些在系统中登记了的程序才能出现在这个字段中。</p><p>8)系统中有一类用户称为伪用户（pseudo users）。</p><p>这些用户在/etc/passwd文件中也占有一条记录，但是不能登录，因为它们的登录Shell为空。它们的存在主要是方便系统管理，满足相应的系统进程对文件属主的要求。</p><p>常见的伪用户如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">伪 用 户 含 义</span><br><span class="line">bin 拥有可执行的用户命令文件</span><br><span class="line">sys 拥有系统文件</span><br><span class="line">adm 拥有帐户文件</span><br><span class="line">uucp UUCP使用</span><br><span class="line">lp lp或lpd子系统使用</span><br><span class="line">nobody NFS使用</span><br></pre></td></tr></table></figure><blockquote><p>/etc/shadow</p></blockquote><p><strong>1、除了上面列出的伪用户外，还有许多标准的伪用户，例如：audit, cron, mail, usenet等，它们也都各自为相关的进程和文件所需要。</strong></p><p>由于/etc/passwd文件是所有用户都可读的，如果用户的密码太简单或规律比较明显的话，一台普通的计算机就能够很容易地将它破解，因此对安全性要求较高的Linux系统都把加密后的口令字分离出来，单独存放在一个文件中，这个文件是/etc/shadow文件。有超级用户才拥有该文件读权限，这就保证了用户密码的安全性。</p><p><strong>2、/etc/shadow中的记录行与/etc/passwd中的一一对应，它由pwconv命令根据/etc/passwd中的数据自动产生</strong></p><p>它的文件格式与/etc/passwd类似，由若干个字段组成，字段之间用”:”隔开。这些字段是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志</span><br></pre></td></tr></table></figure><ol><li>“登录名”是与/etc/passwd文件中的登录名相一致的用户账号</li><li>“口令”字段存放的是加密后的用户口令字，长度为13个字符。如果为空，则对应用户没有口令，登录时不需要口令；如果含有不属于集合 { ./0-9A-Za-z }中的字符，则对应的用户不能登录。</li><li>“最后一次修改时间”表示的是从某个时刻起，到用户最后一次修改口令时的天数。时间起点对不同的系统可能不一样。例如在SCO Linux 中，这个时间起点是1970年1月1日。</li><li>“最小时间间隔”指的是两次修改口令之间所需的最小天数。</li><li>“最大时间间隔”指的是口令保持有效的最大天数。</li><li>“警告时间”字段表示的是从系统开始警告用户到用户密码正式失效之间的天数。</li><li>“不活动时间”表示的是用户没有登录活动但账号仍能保持有效的最大天数。</li><li>“失效时间”字段给出的是一个绝对的天数，如果使用了这个字段，那么就给出相应账号的生存期。期满后，该账号就不再是一个合法的账号，也就不能再用来登录了。</li></ol><blockquote><p>/etc/group</p></blockquote><p>用户组的所有信息都存放在/etc/group文件中。</p><p>将用户分组是Linux 系统中对用户进行管理及控制访问权限的一种手段。</p><p>每个用户都属于某个用户组；一个组中可以有多个用户，一个用户也可以属于不同的组。</p><p>当一个用户同时是多个组中的成员时，在/etc/passwd文件中记录的是用户所属的主组，也就是登录时所属的默认组，而其他组称为附加组。</p><p>用户要访问属于附加组的文件时，必须首先使用newgrp命令使自己成为所要访问的组中的成员。</p><p>用户组的所有信息都存放在/etc/group文件中。此文件的格式也类似于/etc/passwd文件，由冒号(:)隔开若干个字段，这些字段有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">组名:口令:组标识号:组内用户列表</span><br></pre></td></tr></table></figure><ol><li>“组名”是用户组的名称，由字母或数字构成。与/etc/passwd中的登录名一样，组名不应重复。</li><li>“口令”字段存放的是用户组加密后的口令字。一般Linux 系统的用户组都没有口令，即这个字段一般为空，或者是*。</li><li>“组标识号”与用户标识号类似，也是一个整数，被系统内部用来标识组。</li><li>“组内用户列表”是属于这个组的所有用户的列表/b]，不同用户之间用逗号(,)分隔。这个用户组可能是用户的主组，也可能是附加组。</li></ol><h3 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h3><blockquote><p>概述</p></blockquote><p>Linux磁盘管理好坏直接关系到整个系统的性能问题。</p><p>Linux磁盘管理常用命令为 df、du。</p><ul><li>df ：列出文件系统的整体磁盘使用量</li><li>du：检查磁盘空间使用量</li></ul><blockquote><p>df</p></blockquote><p>df命令参数功能：检查文件系统的磁盘空间占用情况。可以利用该命令来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df [-ahikHTm] [目录或文件名]</span><br></pre></td></tr></table></figure><p>选项与参数：</p><ul><li>-a ：列出所有的文件系统，包括系统特有的 /proc 等文件系统；</li><li>-k ：以 KBytes 的容量显示各文件系统；</li><li>-m ：以 MBytes 的容量显示各文件系统；</li><li>-h ：以人们较易阅读的 GBytes, MBytes, KBytes 等格式自行显示；</li><li>-H ：以 M=1000K 取代 M=1024K 的进位方式；</li><li>-T ：显示文件系统类型, 连同该 partition 的 filesystem 名称 (例如 ext3) 也列出；</li><li>-i ：不用硬盘容量，而以 inode 的数量来显示</li></ul><p>测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 将系统内所有的文件系统列出来！</span><br><span class="line"># 在 Linux 底下如果 df 没有加任何选项</span><br><span class="line"># 那么默认会将系统内所有的 (不含特殊内存内的文件系统与 swap) 都以 1 Kbytes 的容量来列出来！</span><br><span class="line">[root@kuangshen &#x2F;]# df</span><br><span class="line">Filesystem     1K-blocks   Used Available Use% Mounted on</span><br><span class="line">devtmpfs          889100       0    889100   0% &#x2F;dev</span><br><span class="line">tmpfs             899460     704    898756   1% &#x2F;dev&#x2F;shm</span><br><span class="line">tmpfs             899460     496    898964   1% &#x2F;run</span><br><span class="line">tmpfs             899460       0    899460   0% &#x2F;sys&#x2F;fs&#x2F;cgroup</span><br><span class="line">&#x2F;dev&#x2F;vda1       41152812 6586736  32662368  17% &#x2F;</span><br><span class="line">tmpfs             179896       0    179896   0% &#x2F;run&#x2F;user&#x2F;0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 将容量结果以易读的容量格式显示出来</span><br><span class="line">[root@kuangshen &#x2F;]# df -h</span><br><span class="line">Filesystem     Size Used Avail Use% Mounted on</span><br><span class="line">devtmpfs       869M     0 869M   0% &#x2F;dev</span><br><span class="line">tmpfs           879M 708K 878M   1% &#x2F;dev&#x2F;shm</span><br><span class="line">tmpfs           879M 496K 878M   1% &#x2F;run</span><br><span class="line">tmpfs           879M     0 879M   0% &#x2F;sys&#x2F;fs&#x2F;cgroup</span><br><span class="line">&#x2F;dev&#x2F;vda1       40G  6.3G   32G  17% &#x2F;</span><br><span class="line">tmpfs           176M     0 176M   0% &#x2F;run&#x2F;user&#x2F;0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"># 将系统内的所有特殊文件格式及名称都列出来</span><br><span class="line">[root@kuangshen &#x2F;]# df -aT</span><br><span class="line">Filesystem     Type       1K-blocks   Used Available Use% Mounted on</span><br><span class="line">sysfs         sysfs               0       0         0    - &#x2F;sys</span><br><span class="line">proc           proc                0       0         0    - &#x2F;proc</span><br><span class="line">devtmpfs       devtmpfs       889100       0    889100   0% &#x2F;dev</span><br><span class="line">securityfs     securityfs          0       0         0    - &#x2F;sys&#x2F;kernel&#x2F;security</span><br><span class="line">tmpfs         tmpfs          899460     708    898752   1% &#x2F;dev&#x2F;shm</span><br><span class="line">devpts         devpts              0       0         0    - &#x2F;dev&#x2F;pts</span><br><span class="line">tmpfs         tmpfs          899460     496    898964   1% &#x2F;run</span><br><span class="line">tmpfs         tmpfs          899460       0    899460   0% &#x2F;sys&#x2F;fs&#x2F;cgroup</span><br><span class="line">cgroup         cgroup              0       0         0    - &#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;systemd</span><br><span class="line">pstore         pstore              0       0         0    - &#x2F;sys&#x2F;fs&#x2F;pstore</span><br><span class="line">cgroup         cgroup              0       0         0    - &#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;freezer</span><br><span class="line">cgroup         cgroup              0       0         0    - &#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;cpuset</span><br><span class="line">cgroup         cgroup              0       0         0    - &#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;hugetlb</span><br><span class="line">cgroup         cgroup              0       0         0    - &#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;blkio</span><br><span class="line">cgroup         cgroup              0       0         0    - &#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;net_cls,net_prio</span><br><span class="line">cgroup         cgroup              0       0         0    - &#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;memory</span><br><span class="line">cgroup         cgroup              0       0         0    - &#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;pids</span><br><span class="line">cgroup         cgroup              0       0         0    - &#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;cpu,cpuacct</span><br><span class="line">cgroup         cgroup              0       0         0    - &#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;devices</span><br><span class="line">cgroup         cgroup              0       0         0    - &#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;perf_event</span><br><span class="line">configfs       configfs            0       0         0    - &#x2F;sys&#x2F;kernel&#x2F;config</span><br><span class="line">&#x2F;dev&#x2F;vda1     ext4         41152812 6586748  32662356  17% &#x2F;</span><br><span class="line">systemd-1      -                   -       -         -    - &#x2F;proc&#x2F;sys&#x2F;fs&#x2F;binfmt_misc</span><br><span class="line">mqueue         mqueue              0       0         0    - &#x2F;dev&#x2F;mqueue</span><br><span class="line">debugfs       debugfs             0       0         0    - &#x2F;sys&#x2F;kernel&#x2F;debug</span><br><span class="line">hugetlbfs     hugetlbfs           0       0         0    - &#x2F;dev&#x2F;hugepages</span><br><span class="line">tmpfs         tmpfs          179896       0    179896   0% &#x2F;run&#x2F;user&#x2F;0</span><br><span class="line">binfmt_misc   binfmt_misc         0       0         0    - &#x2F;proc&#x2F;sys&#x2F;fs&#x2F;binfmt_misc</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 将 &#x2F;etc 底下的可用的磁盘容量以易读的容量格式显示</span><br><span class="line"></span><br><span class="line">[root@kuangshen &#x2F;]# df -h &#x2F;etc</span><br><span class="line">Filesystem     Size Used Avail Use% Mounted on</span><br><span class="line">&#x2F;dev&#x2F;vda1       40G  6.3G   32G  17% &#x2F;</span><br></pre></td></tr></table></figure><blockquote><p>du</p></blockquote><p>Linux du命令也是查看使用空间的，但是与df命令不同的是Linux du命令是对文件和目录磁盘使用的空间的查看，还是和df命令有一些区别的，这里介绍Linux du命令。</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du [-ahskm] 文件或目录名称</span><br></pre></td></tr></table></figure><p>选项与参数：</p><ul><li>-a ：列出所有的文件与目录容量，因为默认仅统计目录底下的文件量而已。</li><li>-h ：以人们较易读的容量格式 (G/M) 显示；</li><li>-s ：列出总量而已，而不列出每个各别的目录占用容量；</li><li>-S ：不包括子目录下的总计，与 -s 有点差别。</li><li>-k ：以 KBytes 列出容量显示；</li><li>-m ：以 MBytes 列出容量显示；</li></ul><p>测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 只列出当前目录下的所有文件夹容量（包括隐藏文件夹）:</span><br><span class="line"># 直接输入 du 没有加任何选项时，则 du 会分析当前所在目录的文件与目录所占用的硬盘空间。</span><br><span class="line">[root@kuangshen home]# du</span><br><span class="line">16.&#x2F;redis</span><br><span class="line">8.&#x2F;www&#x2F;.oracle_jre_usage  # 包括隐藏文件的目录</span><br><span class="line">24.&#x2F;www</span><br><span class="line">48.                        # 这个目录(.)所占用的总量</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 将文件的容量也列出来</span><br><span class="line">[root@kuangshen home]# du -a</span><br><span class="line">4.&#x2F;redis&#x2F;.bash_profile</span><br><span class="line">4.&#x2F;redis&#x2F;.bash_logout    </span><br><span class="line">....中间省略....</span><br><span class="line">4.&#x2F;kuangstudy.txt # 有文件的列表了</span><br><span class="line">48.</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 检查根目录底下每个目录所占用的容量</span><br><span class="line">[root@kuangshen home]# du -sm &#x2F;*</span><br><span class="line">0&#x2F;bin</span><br><span class="line">146&#x2F;boot</span><br><span class="line">.....中间省略....</span><br><span class="line">0&#x2F;proc</span><br><span class="line">.....中间省略....</span><br><span class="line">1&#x2F;tmp</span><br><span class="line">3026&#x2F;usr  # 系统初期最大就是他了啦！</span><br><span class="line">513&#x2F;var</span><br><span class="line">2666&#x2F;www</span><br></pre></td></tr></table></figure><p>通配符 * 来代表每个目录。</p><p>与 df 不一样的是，du 这个命令其实会直接到文件系统内去搜寻所有的文件数据。</p><blockquote><p>磁盘挂载与卸除</p></blockquote><p>根文件系统之外的其他文件要想能够被访问，都必须通过“关联”至根文件系统上的某个目录来实现，此关联操作即为“挂载”，此目录即为“挂载点”,解除此关联关系的过程称之为“卸载”</p><p>Linux 的磁盘挂载使用mount命令，卸载使用umount命令。</p><p>磁盘挂载语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount [-t 文件系统] [-L Label名] [-o 额外选项] [-n] 装置文件名 挂载点</span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 将 &#x2F;dev&#x2F;hdc6 挂载到 &#x2F;mnt&#x2F;hdc6 上面！</span><br><span class="line">[root@www ~]# mkdir &#x2F;mnt&#x2F;hdc6</span><br><span class="line">[root@www ~]# mount &#x2F;dev&#x2F;hdc6 &#x2F;mnt&#x2F;hdc6</span><br><span class="line">[root@www ~]# df</span><br><span class="line">Filesystem           1K-blocks     Used Available Use% Mounted on</span><br><span class="line">&#x2F;dev&#x2F;hdc6              1976312     42072   1833836   3% &#x2F;mnt&#x2F;hdc6</span><br></pre></td></tr></table></figure><p>磁盘卸载命令 umount 语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount [-fn] 装置文件名或挂载点</span><br></pre></td></tr></table></figure><p>选项与参数：</p><ul><li>-f ：强制卸除！可用在类似网络文件系统 (NFS) 无法读取到的情况下；</li><li>-n ：不升级 /etc/mtab 情况下卸除。</li></ul><p>卸载/dev/hdc6</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@www ~]# umount &#x2F;dev&#x2F;hdc6</span><br></pre></td></tr></table></figure><h3 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h3><p>对于我们开发人员来说，其实Linux更多偏向于使用即可！</p><blockquote><p>基本概念</p></blockquote><p>1、在Linux中，每一个程序都是有自己的一个进程，每一个进程都有一个id号</p><p>2、每一个进程，都有一个父进程</p><p>3、进程可以有两种存在方式：前台和后台执行</p><p>4、一般的话服务都是后台执行的，基本的程序都是前台执行的</p><blockquote><p>命令</p></blockquote><p>ps 查看当前系统中正在执行的各种进程的信息</p><p>ps-xx</p><ul><li>-a 显示当前终端运行的所有的进程信息</li><li>-u 以用户的信息显示进程</li><li>-x 显示后台运行进程的参数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># ps -aux 查看所有的进程</span><br><span class="line">ps -aux|grep mysql</span><br><span class="line"># | 在linux这个叫做管道符</span><br><span class="line"># grep查找文件中符合条件的字符串</span><br></pre></td></tr></table></figure><p>对于我们来说，这里目前只需要记住一个命令即可，ps -xx|grep 进程名字！过滤进程信息</p><p>ps-ef:可以查看到父进程的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ps -ef|grep mysql #看父进程我们一般可以通过目录树结构来查看</span><br><span class="line">pstree -pu</span><br><span class="line">-p 显示父id</span><br><span class="line">-u 显示用户组</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/FznuBexTkK3vDRg.png" alt="image-20200531100543121"></p><p>结束进程：</p><p>kill</p><p>​    -9 强行结束进程</p><h3 id="安装和部署"><a href="#安装和部署" class="headerlink" title="安装和部署"></a>安装和部署</h3><h3 id="jdk安装（rpm安装）"><a href="#jdk安装（rpm安装）" class="headerlink" title="jdk安装（rpm安装）"></a>jdk安装（rpm安装）</h3><p>1、rpm下载地址<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a></p><p>2、如果有安装openjdk 则卸载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@kuangshen ~]# java -version</span><br><span class="line">java version &quot;1.8.0_121&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_121-b13)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)</span><br><span class="line"># 检查</span><br><span class="line">[root@kuangshen ~]# rpm -qa|grep jdk</span><br><span class="line">jdk1.8.0_121-1.8.0_121-fcs.x86_64</span><br><span class="line"># 卸载 -e --nodeps 强制删除</span><br><span class="line">[root@kuangshen ~]# rpm -e --nodeps jdk1.8.0_121-1.8.0_121-fcs.x86_64</span><br><span class="line">[root@kuangshen ~]# java -version</span><br><span class="line">-bash: &#x2F;usr&#x2F;bin&#x2F;java: No such file or directory  # OK</span><br></pre></td></tr></table></figure><p>3、安装JDK</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 安装java rpm</span><br><span class="line">[root@kuangshen kuangshen]# rpm -ivh jdk-8u221-linux-x64.rpm</span><br><span class="line"></span><br><span class="line"># 安装完成后配置环境变量 文件：&#x2F;etc&#x2F;profile</span><br><span class="line">JAVA_HOME&#x3D;&#x2F;usr&#x2F;java&#x2F;jdk1.8.0_221-amd64</span><br><span class="line">CLASSPATH&#x3D;%JAVA_HOME%&#x2F;lib:%JAVA_HOME%&#x2F;jre&#x2F;lib</span><br><span class="line">PATH&#x3D;$PATH:$JAVA_HOME&#x2F;bin:$JAVA_HOME&#x2F;jre&#x2F;bin</span><br><span class="line">export PATH CLASSPATH JAVA_HOME</span><br><span class="line"># 保存退出</span><br><span class="line"></span><br><span class="line"># 让新增的环境变量生效！</span><br><span class="line">source &#x2F;etc&#x2F;profile</span><br><span class="line"></span><br><span class="line"># 测试 java -version</span><br><span class="line">[root@kuangshen java]# java -version</span><br><span class="line">java version &quot;1.8.0_221&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_221-b11)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.221-b11, mixed mode)</span><br></pre></td></tr></table></figure><h3 id="Tomcat安装（解压缩安装）"><a href="#Tomcat安装（解压缩安装）" class="headerlink" title="Tomcat安装（解压缩安装）"></a>Tomcat安装（解压缩安装）</h3><p>1、安装好了Java环境后我们可以测试下Tomcat！准备好Tomcat的安装包！</p><p>2、将文件移动到/usr/tomcat/下，并解压！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@kuangshen kuangshen]# mv apache-tomcat-9.0.22.tar.gz &#x2F;usr</span><br><span class="line">[root@kuangshen kuangshen]# cd &#x2F;usr</span><br><span class="line">[root@kuangshen usr]# ls</span><br><span class="line">apache-tomcat-9.0.22.tar.gz</span><br><span class="line">[root@kuangshen usr]# tar -zxvf apache-tomcat-9.0.22.tar.gz   # 解压</span><br></pre></td></tr></table></figure><p>3、运行Tomcat，进入bin目录，和我们以前在Windows下看的都是一样的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 执行：startup.sh --&gt;启动tomcat</span><br><span class="line"># 执行：shutdown.sh --&gt;关闭tomcat</span><br><span class="line">.&#x2F;startup.sh</span><br><span class="line">.&#x2F;shutdown.sh</span><br></pre></td></tr></table></figure><p>4、确保Linux的防火墙端口是开启的，如果是阿里云，需要保证阿里云的安全组策略是开放的！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 查看firewall服务状态</span><br><span class="line">systemctl status firewalld</span><br><span class="line"></span><br><span class="line"># 开启、重启、关闭、firewalld.service服务</span><br><span class="line"># 开启</span><br><span class="line">service firewalld start</span><br><span class="line"># 重启</span><br><span class="line">service firewalld restart</span><br><span class="line"># 关闭</span><br><span class="line">service firewalld stop</span><br><span class="line"></span><br><span class="line"># 查看防火墙规则</span><br><span class="line">firewall-cmd --list-all    # 查看全部信息</span><br><span class="line">firewall-cmd --list-ports  # 只看端口信息</span><br><span class="line"></span><br><span class="line"># 开启端口</span><br><span class="line">开端口命令：firewall-cmd --zone&#x3D;public --add-port&#x3D;80&#x2F;tcp --permanent</span><br><span class="line">重启防火墙：systemctl restart firewalld.service</span><br><span class="line"></span><br><span class="line">命令含义：</span><br><span class="line">--zone #作用域</span><br><span class="line">--add-port&#x3D;80&#x2F;tcp  #添加端口，格式为：端口&#x2F;通讯协议</span><br><span class="line">--permanent   #永久生效，没有此参数重启后失效</span><br></pre></td></tr></table></figure><h3 id="安装Docker（yum安装）"><a href="#安装Docker（yum安装）" class="headerlink" title="安装Docker（yum安装）"></a>安装Docker（yum安装）</h3><blockquote><p>基于 CentOS 7 安装</p></blockquote><ol><li><p>官网安装参考手册：<a href="https://docs.docker.com/install/linux/docker-ce/centos/" target="_blank" rel="noopener">https://docs.docker.com/install/linux/docker-ce/centos/</a></p></li><li><p>确定你是CentOS7及以上版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@192 Desktop]# cat &#x2F;etc&#x2F;redhat-release</span><br><span class="line">CentOS Linux release 7.2.1511 (Core)</span><br></pre></td></tr></table></figure></li><li><p>yum安装gcc相关（需要确保 虚拟机可以上外网 ）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc</span><br><span class="line">yum -y install gcc-c++</span><br></pre></td></tr></table></figure></li><li><p>卸载旧版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum -y remove docker docker-common docker-selinux docker-engine</span><br><span class="line"># 官网版本</span><br><span class="line">yum remove docker \</span><br><span class="line">          docker-client \</span><br><span class="line">          docker-client-latest \</span><br><span class="line">          docker-common \</span><br><span class="line">          docker-latest \</span><br><span class="line">          docker-latest-logrotate \</span><br><span class="line">          docker-logrotate \</span><br><span class="line">          docker-engine</span><br></pre></td></tr></table></figure></li><li><p>安装需要的软件包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure></li><li><p>设置stable镜像仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 错误</span><br><span class="line">yum-config-manager --add-repo https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo</span><br><span class="line">## 报错</span><br><span class="line">[Errno 14] curl#35 - TCP connection reset by peer</span><br><span class="line">[Errno 12] curl#35 - Timeout</span><br><span class="line"></span><br><span class="line"># 正确推荐使用国内的</span><br><span class="line">yum-config-manager --add-repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo</span><br></pre></td></tr></table></figure></li><li><p>更新yum软件包索引</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum makecache fast</span><br></pre></td></tr></table></figure></li><li><p>安装Docker CE</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure></li><li><p>启动docker</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker version</span><br><span class="line"></span><br><span class="line">docker run hello-world</span><br><span class="line"></span><br><span class="line">docker images</span><br></pre></td></tr></table></figure></li></ol><h3 id="宝塔面板安装"><a href="#宝塔面板安装" class="headerlink" title="宝塔面板安装"></a>宝塔面板安装</h3><p><a href="https://www.bilibili.com/video/av91821322" target="_blank" rel="noopener">https://www.bilibili.com/video/av91821322</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Linux&quot;&gt;&lt;a href=&quot;#Linux&quot; class=&quot;headerlink&quot; title=&quot;Linux&quot;&gt;&lt;/a&gt;Linux&lt;/h1&gt;&lt;p&gt;提醒：这里是基于java全栈开发Linux，而不是运维级别的&lt;/p&gt;
&lt;p&gt;什么为什么要在这个时间学习Linux？j
      
    
    </summary>
    
    
      <category term="操作系统" scheme="http://yoursite.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>MybatisPlus入门+实战</title>
    <link href="http://yoursite.com/2020/06/24/ybatisPlus%E5%85%A5%E9%97%A8-%E5%AE%9E%E6%88%98/"/>
    <id>http://yoursite.com/2020/06/24/ybatisPlus%E5%85%A5%E9%97%A8-%E5%AE%9E%E6%88%98/</id>
    <published>2020-06-24T08:36:00.000Z</published>
    <updated>2020-06-24T08:38:42.621Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MybatisPlus"><a href="#MybatisPlus" class="headerlink" title="MybatisPlus"></a>MybatisPlus</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h3 id="mybatisplus是什么？"><a href="#mybatisplus是什么？" class="headerlink" title="mybatisplus是什么？"></a><strong>mybatisplus是什么？</strong></h3><p><a href="https://github.com/baomidou/mybatis-plus" target="_blank" rel="noopener">MyBatis-Plus</a>（简称 MP）是一个 <a href="http://www.mybatis.org/mybatis-3/" target="_blank" rel="noopener">MyBatis</a> 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/1PLdsr2jIZWqf47.png" alt="image-20200608115434396"></p><h3 id="mybatisplus特性："><a href="#mybatisplus特性：" class="headerlink" title="mybatisplus特性："></a><strong>mybatisplus特性：</strong></h3><ul><li><strong>无侵入</strong>：只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑</li><li><strong>损耗小</strong>：启动即会自动注入基本 CURD，性能基本无损耗，直接面向对象操作</li><li><strong>强大的 CRUD 操作</strong>：内置通用 Mapper、通用 Service，仅仅通过少量配置即可实现单表大部分 CRUD 操作，更有强大的条件构造器，满足各类使用需求</li><li><strong>支持 Lambda 形式调用</strong>：通过 Lambda 表达式，方便的编写各类查询条件，无需再担心字段写错</li><li><strong>支持主键自动生成</strong>：支持多达 4 种主键策略（内含分布式唯一 ID 生成器 - Sequence），可自由配置，完美解决主键问题</li><li><strong>支持 ActiveRecord 模式</strong>：支持 ActiveRecord 形式调用，实体类只需继承 Model 类即可进行强大的 CRUD 操作</li><li><strong>支持自定义全局通用操作</strong>：支持全局通用方法注入（ Write once, use anywhere ）</li><li><strong>内置代码生成器</strong>：采用代码或者 Maven 插件可快速生成 Mapper 、 Model 、 Service 、 Controller 层代码，支持模板引擎，更有超多自定义配置等您来使用</li><li><strong>内置分页插件</strong>：基于 MyBatis 物理分页，开发者无需关心具体操作，配置好插件之后，写分页等同于普通 List 查询</li><li><strong>分页插件支持多种数据库</strong>：支持 MySQL、MariaDB、Oracle、DB2、H2、HSQL、SQLite、Postgre、SQLServer 等多种数据库</li><li><strong>内置性能分析插件</strong>：可输出 Sql 语句以及其执行时间，建议开发测试时启用该功能，能快速揪出慢查询</li><li><strong>内置全局拦截插件</strong>：提供全表 delete 、 update 操作智能分析阻断，也可自定义拦截规则，预防误操作</li></ul><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><ol><li><p>搭建数据库</p><ul><li>新建表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="keyword">user</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">BIGINT</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'主键ID'</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'姓名'</span>,</span><br><span class="line">age <span class="built_in">INT</span>(<span class="number">11</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'年龄'</span>,</span><br><span class="line">email <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'邮箱'</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="keyword">id</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>插入数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">user</span> (<span class="keyword">id</span>, <span class="keyword">name</span>, age, email) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">'Jone'</span>, <span class="number">18</span>, <span class="string">'test1@baomidou.com'</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">'Jack'</span>, <span class="number">20</span>, <span class="string">'test2@baomidou.com'</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">'Tom'</span>, <span class="number">28</span>, <span class="string">'test3@baomidou.com'</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="string">'Sandy'</span>, <span class="number">21</span>, <span class="string">'test4@baomidou.com'</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="string">'Billie'</span>, <span class="number">24</span>, <span class="string">'test5@baomidou.com'</span>);</span><br></pre></td></tr></table></figure></li><li><p>新建一个springboot工程，导入mybatisplus依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mybatis-plus,可以先使用低版本的，可以体验原生态的一些功能--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mysql--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--lombok--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置yml文件(数据库)</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">1227</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis_plus?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=UTC</span></span><br></pre></td></tr></table></figure></li><li><p>编写实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写mapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//继承BaseMapper&lt;User&gt;，实体类为泛型</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> <span class="keyword">extends</span> <span class="title">BaseMapper</span>&lt;<span class="title">User</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>主启动类中开启扫描mapper接口包</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan</span>(<span class="string">"com.ryan.mapper"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisPlusApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MybatisPlusApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    List&lt;User&gt; users = userMapper.selectList(<span class="keyword">null</span>);</span><br><span class="line">    <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/6bh9is3OpFg4umG.png" alt="image-20200608122609052"></p></li></ol><p>思考：</p><ul><li>我们全程没配置mybatis，也没写sql语句，这些都是谁帮我们做了？</li></ul><p>小结：</p><p>通过以上几个简单的步骤，我们就实现了 User 表的 CRUD 功能，甚至连 XML 文件都不用编写！</p><p>从以上步骤中，我们可以看到集成<code>MyBatis-Plus</code>非常的简单，只需要引入 starter 工程，并配置 mapper 扫描路径即可。</p><p>但 MyBatis-Plus 的强大远不止这些功能，想要详细了解 MyBatis-Plus 的强大功能？那就继续往下看吧！</p><h2 id="配置日志"><a href="#配置日志" class="headerlink" title="配置日志"></a>配置日志</h2><p>我们所有的sql现在都是不可见的，我们希望知道他是怎么执行的，所以我们必须看日志</p><p>配置日志实现：这里使用系统的，如果使用其他的还要导入对应依赖</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span> <span class="comment"># 这里使用系统的日志实现</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/ausUQOpjIK9Ndr1.png" alt="image-20200608123903007"></p><h2 id="CRUD扩展"><a href="#CRUD扩展" class="headerlink" title="CRUD扩展"></a>CRUD扩展</h2><h3 id="插入操作"><a href="#插入操作" class="headerlink" title="插入操作"></a>插入操作</h3><blockquote><p>测试数据插入</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setName(<span class="string">"ryan"</span>);</span><br><span class="line">    user.setAge(<span class="number">3</span>);</span><br><span class="line">    user.setEmail(<span class="string">"123@124.com"</span>);</span><br><span class="line">    <span class="keyword">int</span> result = userMapper.insert(user);</span><br><span class="line">    System.out.println(result);</span><br><span class="line">    <span class="comment">//注意这里没有手动设置id，看看插入后的id是怎样的</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/p2DEnCXhfur5JVo.png" alt="image-20200608125908834"></p><h3 id="主键生成策略"><a href="#主键生成策略" class="headerlink" title="主键生成策略"></a>主键生成策略</h3><p>我们本身没有收到设置id的生成策略，但是我们插入没有id的数据时，发现最后还是生成了id，说明mybatis-plus帮我们做了这一点，他的生成策略是雪花算法</p><p>如果我们想要自定义id生成策略的话，可以在实体类中添加注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableId</span>(type = IdType.AUTO)</span><br><span class="line"><span class="keyword">private</span> Long id;</span><br></pre></td></tr></table></figure><p>点进注解可以看到，有多种策略可以选择</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> IdType &#123;</span><br><span class="line">    AUTO(<span class="number">0</span>),<span class="comment">//自增，注意如果这里设置了自增，数据库也一定要设置，否则会报错</span></span><br><span class="line">    NONE(<span class="number">1</span>),<span class="comment">//未设置主键</span></span><br><span class="line">    INPUT(<span class="number">2</span>),<span class="comment">//手动输入</span></span><br><span class="line">    ID_WORKER(<span class="number">3</span>),<span class="comment">//默认的全局唯一id</span></span><br><span class="line">    UUID(<span class="number">4</span>),<span class="comment">//全局唯一id，uuid</span></span><br><span class="line">    ID_WORKER_STR(<span class="number">5</span>);<span class="comment">//ID_WORKER的字符串表示法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>感兴趣的可以自己去测试一下，这里就不一一测试了</p><h3 id="更新操作"><a href="#更新操作" class="headerlink" title="更新操作"></a>更新操作</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">1269856358531420162L</span>);</span><br><span class="line">    user.setName(<span class="string">"ryan"</span>);</span><br><span class="line">    user.setAge(<span class="number">25</span>);</span><br><span class="line">    user.setEmail(<span class="string">"635726567@qq.com"</span>);</span><br><span class="line">    <span class="keyword">int</span> result = userMapper.updateById(user);<span class="comment">//注意虽然方法名是byId，但是参数是一个对象</span></span><br><span class="line">    System.out.println(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/EMFeijurcwQkWzJ.png" alt="image-20200608135916856"></p><p>从结果来看，mybatis-plus还可以我们拼接动态sql，这是一个非常强大的功能</p><h3 id="自动填充"><a href="#自动填充" class="headerlink" title="自动填充"></a>自动填充</h3><p>创建时间、修改时间，这些操作一般都是自动化完成的，我们不需要手动更新</p><p>阿里巴巴开发手册：所有的数据库表：gmt_create、gmt_modified几乎所有的表都要配置上</p><blockquote><p>方式一：数据库级别（工作中不允许你修改数据库）</p></blockquote><ol><li>在表中添加字段create_time,update_time两个字段，默认值为CURRENT_TIMESTAMP</li></ol><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/EH3xCPqS5Nli6Ow.png" alt="image-20200608153746263"></p><ol start="2"><li><p>在实体来添加对应的属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自动填充</span></span><br><span class="line"><span class="keyword">private</span> Date createTime;</span><br><span class="line"><span class="keyword">private</span> Date updateTime;</span><br></pre></td></tr></table></figure></li><li><p>再次插入一条数据，查看结果</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/XOYF4fHgBxatmQN.png" alt="image-20200608153915626"></p></li></ol><blockquote><p>方式二：代码级别</p></blockquote><ol><li><p>删除数据库的默认值，更新操作</p></li><li><p>实体类字段添加注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自动填充</span></span><br><span class="line"><span class="meta">@TableField</span>(fill = FieldFill.INSERT)</span><br><span class="line"><span class="keyword">private</span> Date createTime;</span><br><span class="line"><span class="meta">@TableField</span>(fill = FieldFill.INSERT_UPDATE)</span><br><span class="line"><span class="keyword">private</span> Date updateTime;</span><br></pre></td></tr></table></figure></li><li><p>编写处理器来处理这个注解即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title">MetaObjectHandler</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"start execute insert fill"</span>);</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">"createTime"</span>,<span class="keyword">new</span> Date(),metaObject);</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">"updateTime"</span>,<span class="keyword">new</span> Date(),metaObject);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"start execute update fill"</span>);</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">"updateTime"</span>,<span class="keyword">new</span> Date(),metaObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>再测试插入和更新操作，注意时间的变化</p></li></ol><p>小结：</p><ul><li>mybatis-plus已经帮忙我们实现了自动填充功能，并且匹配时间格式</li><li>但是要注意，时区要设置东八区的时间：serverTimezone=GMT%2B8</li></ul><h3 id="乐观锁（保留）"><a href="#乐观锁（保留）" class="headerlink" title="乐观锁（保留）"></a>乐观锁（保留）</h3><h3 id="查询操作"><a href="#查询操作" class="headerlink" title="查询操作"></a>查询操作</h3><p>mybatis-plus中除了单个查询还可以多个查询，以及条件查询</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询操作</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = userMapper.selectById(<span class="number">1</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//除了查询单个记录，还可以通过id查询多条记录</span></span><br><span class="line">    List&lt;User&gt; users = userMapper.selectBatchIds(Arrays.asList(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>));</span><br><span class="line">    <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//结果三条记录都查出来了，牛逼</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test5</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//还可以通过map进行我条件查询</span></span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="comment">//自定义要查询</span></span><br><span class="line">    map.put(<span class="string">"name"</span>,<span class="string">"Tom"</span>);</span><br><span class="line">    map.put(<span class="string">"age"</span>,<span class="number">28</span>);</span><br><span class="line">    List&lt;User&gt; users = userMapper.selectByMap(map);</span><br><span class="line">    <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h3><p>以前大家都是用limit或者pagehelper分页插件</p><p>其实mybatisplus也内置了分页查询功能</p><blockquote><p>mybatisplus分页使用步骤</p></blockquote><p>springboot配置mybatisplus分页插件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan</span>(<span class="string">"com.ryan.mapper"</span>)<span class="comment">//扫描mapper的注解可从主启动类转移到配置类中</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisPlusConfig</span> </span>&#123;</span><br><span class="line">    <span class="comment">//配置分页插件</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PaginationInterceptor <span class="title">paginationInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> PaginationInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试，直接调用selectPage方法即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test6</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//参数为查询第几页，每页大小</span></span><br><span class="line">    IPage&lt;User&gt; page = <span class="keyword">new</span> Page&lt;&gt;(<span class="number">2</span>, <span class="number">5</span>);</span><br><span class="line">    userMapper.selectPage(page,<span class="keyword">null</span>);</span><br><span class="line">    <span class="comment">//从结果来看确实按照分页查询了，看sql语句，底层本质上还是使用了limit</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除操作"><a href="#删除操作" class="headerlink" title="删除操作"></a>删除操作</h3><p>删除操作非常简单，和上面操作都差不多，也支持单个删除、批量删除和map删除</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除操作</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test7</span><span class="params">()</span></span>&#123;</span><br><span class="line">    userMapper.deleteById(<span class="number">7L</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test8</span><span class="params">()</span></span>&#123;</span><br><span class="line">    userMapper.deleteBatchIds(Arrays.asList(<span class="number">8</span>,<span class="number">9</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test9</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">"name"</span>,<span class="string">"bb"</span>);</span><br><span class="line">    userMapper.deleteByMap(map);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="逻辑删除"><a href="#逻辑删除" class="headerlink" title="逻辑删除"></a>逻辑删除</h3><p>逻辑删除的本质是<strong>修改操作</strong>，所谓的逻辑删除其实并不是真正的删除，而是在表中将对应的是否删除标识（is_delete）或者说是状态字段（status）做修改操作。比如0是未删除，1是删除。在逻辑上数据是被删除的，但数据本身依然存在库中。</p><blockquote><p>逻辑删除使用步骤</p></blockquote><ol><li><p>在数据库中添加字段is_delete，并且默认值为0</p></li><li><p>在实体类中添加对应的属性，并添加注解@TableLogic</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//逻辑删除字段</span></span><br><span class="line"><span class="meta">@TableLogic</span></span><br><span class="line"><span class="keyword">private</span> Integer isDelete;</span><br></pre></td></tr></table></figure></li><li><p>配置类中添加逻辑删除组件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//逻辑删除组件</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ISqlInjector <span class="title">iSqlInjector</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> LogicSqlInjector();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>yml配置文件中配置逻辑删除默认值</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span> <span class="comment"># 这里使用系统的日志实现</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">logic-delete-value:</span> <span class="number">1</span> <span class="comment"># 逻辑已删除值(默认为 1)</span></span><br><span class="line">      <span class="attr">logic-not-delete-value:</span> <span class="number">0</span> <span class="comment"># 逻辑未删除值(默认为 0)</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//逻辑删除，类似回收站，注意逻辑删除本质上是更新操作，将deleted字段的值修改</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test10</span><span class="params">()</span></span>&#123;</span><br><span class="line">    userMapper.deleteById(<span class="number">2L</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从结果来看，本质上走更新操作，将is_delete的值更新为1</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/VpAoxWQSUEItHMc.png" alt="image-20200609103333744"></p><p>然后再看看是否还可以查询到，经测试发现查不到了，因为此时会自动添加过滤操作</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/qvrPWFORnfUoeZb.png" alt="image-20200609103457850"></p></li></ol><h3 id="性能分析插件"><a href="#性能分析插件" class="headerlink" title="性能分析插件"></a>性能分析插件</h3><p>性能分析拦截器，用于输出每条 SQL 语句及其执行时间，便于将一些慢sql揪出来修改以提高性能</p><p>该插件 <code>3.2.0</code> 以上版本移除推荐使用第三方扩展</p><blockquote><p>性能分析插件使用步骤</p></blockquote><ol><li><p>添加bean组件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//性能分析插件</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@Profile</span>(&#123;<span class="string">"dev"</span>,<span class="string">"test"</span>&#125;)<span class="comment">// 设置 dev test 环境开启</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PerformanceInterceptor <span class="title">performanceInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    PerformanceInterceptor performanceInterceptor = <span class="keyword">new</span> PerformanceInterceptor();</span><br><span class="line">    performanceInterceptor.setMaxTime(<span class="number">100</span>);<span class="comment">//设置sql执行最大时间为100毫秒，超过这个时间就会报错</span></span><br><span class="line">    performanceInterceptor.setFormat(<span class="keyword">true</span>);<span class="comment">//是否格式话sql语句</span></span><br><span class="line">    <span class="keyword">return</span> performanceInterceptor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置yml，当前环境为dev或者test</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">profiles:</span></span><br><span class="line">  <span class="attr">active:</span> <span class="string">dev</span> <span class="comment">#当前环境为开发环境</span></span><br></pre></td></tr></table></figure></li><li><p>测试使用</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/o2sYn67cf1Det3M.png" alt="image-20200609104800231"></p></li></ol><p>注意！参数说明：</p><ul><li>参数：maxTime SQL 执行最大时长，超过自动停止运行，有助于发现问题。</li><li>参数：format SQL SQL是否格式化，默认false。</li><li>该插件只用于开发环境，不建议生产环境使用。</li></ul><h3 id="条件构造器"><a href="#条件构造器" class="headerlink" title="条件构造器"></a>条件构造器</h3><p>通过wrapper构造查询条件，然后传到查询方法即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//name和email不为空，且年龄小于等于24岁的</span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.isNotNull(<span class="string">"name"</span>)</span><br><span class="line">            .isNotNull(<span class="string">"email"</span>)</span><br><span class="line">            .le(<span class="string">"age"</span>,<span class="number">24</span>);</span><br><span class="line">    List&lt;User&gt; users = userMapper.selectList(wrapper);</span><br><span class="line">    <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//写了一个之后，你会发现其实跟map差不多</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/A62YNEkwHDxM8ZJ.png" alt="image-20200609122742874"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//查询年龄在21-28之间的</span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.between(<span class="string">"age"</span>,<span class="number">21</span>,<span class="number">28</span>);</span><br><span class="line">    List&lt;User&gt; users = userMapper.selectList(wrapper);</span><br><span class="line">    <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/gCETaOYucQBPGSq.png" alt="image-20200609122842785"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test3</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//查询名字有a的</span></span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.like(<span class="string">"name"</span>,<span class="string">"a"</span>);</span><br><span class="line">    List&lt;User&gt; users = userMapper.selectList(wrapper);</span><br><span class="line">    <span class="keyword">for</span> (User user : users) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/xGdNrLvVKqwOBsA.png" alt="image-20200609123105505"></p><p>…….就不一一测了</p><h3 id="代码生成器"><a href="#代码生成器" class="headerlink" title="代码生成器"></a>代码生成器</h3><p>AutoGenerator 是 MyBatis-Plus 的代码生成器，通过 AutoGenerator 可以快速生成 Entity、Mapper、Mapper XML、Service、Controller 等各个模块的代码，极大的提升了开发效率。</p><blockquote><p>代码生成器使用步骤</p></blockquote><ol><li><p>导入相关依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--mybatis-plus,可以先使用低版本的，可以体验原生态的一些功能--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--代码自动生成器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--模板引擎（默认）--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity-engine-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--mysql--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--lombok--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--springfox-swagger2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--springfox-swagger-ui --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写代码自动生成类并配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RyanCode</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//需要构建一个代码自动生成器对象</span></span><br><span class="line">        AutoGenerator mpg = <span class="keyword">new</span> AutoGenerator();</span><br><span class="line">        <span class="comment">//配置策略</span></span><br><span class="line">        <span class="comment">//1.全局配置</span></span><br><span class="line">        GlobalConfig gc = <span class="keyword">new</span> GlobalConfig();</span><br><span class="line">        String projectPath = System.getProperty(<span class="string">"user.dir"</span>);<span class="comment">//获取当前项目的路径</span></span><br><span class="line">        gc.setOutputDir(projectPath + <span class="string">"/src/main/java"</span>);</span><br><span class="line">        gc.setAuthor(<span class="string">"Ryan"</span>);</span><br><span class="line">        gc.setOpen(<span class="keyword">false</span>);</span><br><span class="line">        gc.setFileOverride(<span class="keyword">false</span>);<span class="comment">//是否覆盖</span></span><br><span class="line">        gc.setServiceName(<span class="string">"%sService"</span>);<span class="comment">//去Service的I前缀</span></span><br><span class="line">        gc.setIdType(IdType.ID_WORKER);</span><br><span class="line">        gc.setDateType(DateType.ONLY_DATE);</span><br><span class="line">        gc.setSwagger2(<span class="keyword">true</span>);</span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line">        <span class="comment">//2.设置数据源</span></span><br><span class="line">        DataSourceConfig dsc = <span class="keyword">new</span> DataSourceConfig();</span><br><span class="line">        dsc.setUrl(<span class="string">"jdbc:mysql://localhost:3306/mybatis_plus?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=GMT%2B8"</span>);</span><br><span class="line">        dsc.setDriverName(<span class="string">"com.mysql.cj.jdbc.Driver"</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">"root"</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">"123456"</span>);</span><br><span class="line">        dsc.setDbType(DbType.MYSQL);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line">        <span class="comment">//3.包的配置</span></span><br><span class="line">        PackageConfig pc = <span class="keyword">new</span> PackageConfig();</span><br><span class="line">        pc.setParent(<span class="string">"com.ryan"</span>);</span><br><span class="line">        pc.setEntity(<span class="string">"entity"</span>);</span><br><span class="line">        pc.setMapper(<span class="string">"mapper"</span>);</span><br><span class="line">        pc.setService(<span class="string">"service"</span>);</span><br><span class="line">        pc.setController(<span class="string">"controller"</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line">        <span class="comment">//4.策略配置</span></span><br><span class="line">        StrategyConfig sc = <span class="keyword">new</span> StrategyConfig();</span><br><span class="line">        sc.setInclude(<span class="string">"user"</span>);<span class="comment">//需要映射的表，可变长参数，可以同时映射多个表</span></span><br><span class="line">        sc.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        sc.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">//sc.setSuperEntityClass("你自己的父类实体，没有就不用设置");</span></span><br><span class="line">        sc.setEntityLombokModel(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//sc.setRestControllerStyle(true);</span></span><br><span class="line">        sc.setLogicDeleteFieldName(<span class="string">"is_delete"</span>);</span><br><span class="line">        <span class="comment">//看到逻辑删除，需要想到自动填充策略</span></span><br><span class="line">        TableFill createTime = <span class="keyword">new</span> TableFill(<span class="string">"create_time"</span>, FieldFill.INSERT);</span><br><span class="line">        TableFill updateTime = <span class="keyword">new</span> TableFill(<span class="string">"update_time"</span>,FieldFill.INSERT_UPDATE);</span><br><span class="line">        List&lt;TableFill&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(createTime);</span><br><span class="line">        list.add(updateTime);</span><br><span class="line">        sc.setTableFillList(list);</span><br><span class="line">        <span class="comment">//乐观锁；略</span></span><br><span class="line">        <span class="comment">//还有关于controller的一些策略</span></span><br><span class="line">        sc.setRestControllerStyle(<span class="keyword">true</span>);</span><br><span class="line">        sc.setControllerMappingHyphenStyle(<span class="keyword">true</span>);<span class="comment">//例如localhost:8080/hello_id_2</span></span><br><span class="line">        mpg.setStrategy(sc);</span><br><span class="line"></span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>启动测试，发现都很多包和代码都帮我们自动生成了，如果还需要生成其他的（映射的表），只需要修改sc.setInclude(“user”);就可以了，非常方便</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/W1yNK9FLHGY3RQ8.png" alt="image-20200609135422778"></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;MybatisPlus&quot;&gt;&lt;a href=&quot;#MybatisPlus&quot; class=&quot;headerlink&quot; title=&quot;MybatisPlus&quot;&gt;&lt;/a&gt;MybatisPlus&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="后端" scheme="http://yoursite.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="mybatis" scheme="http://yoursite.com/tags/mybatis/"/>
    
      <category term="mybatis plus" scheme="http://yoursite.com/tags/mybatis-plus/"/>
    
  </entry>
  
  <entry>
    <title>Springboot入门+实战</title>
    <link href="http://yoursite.com/2020/06/24/ringboot%E5%85%A5%E9%97%A8-%E5%AE%9E%E6%88%98/"/>
    <id>http://yoursite.com/2020/06/24/ringboot%E5%85%A5%E9%97%A8-%E5%AE%9E%E6%88%98/</id>
    <published>2020-06-24T08:33:00.000Z</published>
    <updated>2020-06-24T08:36:09.528Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、SpringBoot"><a href="#1、SpringBoot" class="headerlink" title="1、SpringBoot"></a>1、SpringBoot</h2><h3 id="回顾下什么是Spring？"><a href="#回顾下什么是Spring？" class="headerlink" title="回顾下什么是Spring？"></a>回顾下什么是Spring？</h3><p>Spring是一个开源框架，2003年兴起的一个轻量级的java开发框架，是为了解决企业级应用开发的复杂性而创建的，简化开发</p><h3 id="Spring是如何简化Java开发的？"><a href="#Spring是如何简化Java开发的？" class="headerlink" title="Spring是如何简化Java开发的？"></a>Spring是如何简化Java开发的？</h3><p>为了降低java开发的复杂性，Spring采用了以下4中关键策略：</p><ol><li>基于POJO的轻量级和最小侵入性编程；</li><li>通过IOC，依赖注入（DI）和面向接口实现松耦合</li><li>基于切面（AOP）和管理进行声明式编程；</li><li>通过切面和模板减少代码；</li></ol><h3 id="什么是SpringBoot？"><a href="#什么是SpringBoot？" class="headerlink" title="什么是SpringBoot？"></a>什么是SpringBoot？</h3><p>学习过javaweb的同学就知道，开发一个web应用，从最初的servlt+tomcat跑一个helloworld都要经历一些很复杂的步骤；后来就用了框架Struts，再到SpringMVC，最后到现在的SpringBoot，过一两年可能又到其他的web框架；目前SpringBoot在当下是非常火的，那什么是SpringBoot呢？就是一个javaweb的开发框架，和SpringMVC类似，对比其他javaweb框架的好处，官方说是简化开发，约定大于配置，能迅速的开发web应用，几行代码开发一个http接口；</p><p>java企业级应用-&gt;J2EE-&gt;Spring-&gt;SpringBoot的过程</p><p>==Springboot的核心思想：约定大于配置==</p><p>==Springboot的主要优点：==</p><p>Springboot的主要优点：</p><ul><li><p>为所有Spring开发者更快的入门</p></li><li><p>开箱即用，提供各种默认配置来简化项目配置</p></li><li><p>内嵌式容器简化web项目</p></li><li><p>没有冗余代码生成和xml配置的要求</p></li></ul><h2 id="2、微服务"><a href="#2、微服务" class="headerlink" title="2、微服务"></a>2、微服务</h2><h3 id="什么是微服务？"><a href="#什么是微服务？" class="headerlink" title="什么是微服务？"></a>什么是微服务？</h3><p>微服务是一种架构风格，他要求我们在开发一个应用的时候，这个应用必须构建成一系列小服务的组合，可以通过http的方式进行互通，要说微服务架构，先得说说过去我们的单体应用架构。</p><h3 id="单体应用架构"><a href="#单体应用架构" class="headerlink" title="单体应用架构"></a>单体应用架构</h3><p>所谓单体应用架构（all in one）是指，我们将一个应用中的所有服务都封装成一个应用中。</p><p>无论是ERP、CRM或是其他什么系统，你都把数据库访问，web访问等等各个功能放到一个war包内</p><ul><li>这样做的好处是，易于开发和测试，也十分方便部署，当需要扩展时，只需要将war包复制多份，然后放到多个服务器上，再做负载均衡就可以了。</li><li>单体应用架构的缺点是，哪怕我要修改一个非常小的地方，我都需要停掉整个服务，重新打包，部署这个应用war包，特别是对于一个大型应用，我们不可能把所有内容都放在一个应用里面，我们如何维护、如何分工合作都是问题。</li></ul><h3 id="微服务架构"><a href="#微服务架构" class="headerlink" title="微服务架构"></a>微服务架构</h3><p>所谓微服务架构，就是打破之前all in one的架构方式，把每个功能元素独立出来，把独立出来的功能元素动态组合，需要的功能元素才去拿来组合，需要多一些时可以整合多个功能元素，所以微服务架构是对功能元素进行复制，而没有对整个应用进行复制。这样的好处是：</p><ul><li>节省了调用资源</li><li>每个功能元素的服务都是一个可替换的，可独立升级的软件代码</li></ul><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/hAm7SJidDw8zBvE.png" alt="image-20200522100647296"></p><h3 id="如何构建微服务？"><a href="#如何构建微服务？" class="headerlink" title="如何构建微服务？"></a>如何构建微服务？</h3><p>一个大型系统的微服务架构，就像一个复杂交织的神经网络，每一个神经元素就是一个功能元素，他们各自完成自己的功能，然后通过http相互请求调用，比如一个电话系统，查缓存，连接数据库，浏览页面，结账，支付等服务都是一个个独立的功能服务，都被微化了，它们作为一个个微服务功能构建了一个庞大的系统，如果修改其中的一个功能，只需要更新升级其中一个功能服务单元即可。</p><p>但是这种庞大的系统架构给部署和运维带来很大的难度，于是，spring为我们带来了构建大型分布式微服务的全套、全程产品</p><ul><li>构建一个个功能独立的微服务应用单元，可以使用springboot，可以帮我们快速构建一个应用。</li><li>大型分布式网络服务的调用跟，这部分由spring cloud来完成，实现分布式</li><li>在分布式中间，进行流式数据计算，批处理，我们有spring cloud data flow</li><li>spring为我们想清楚了整个从开始构建应用到大型分布式应用全流程方案</li></ul><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/bYTKHqEBsP9c7ak.png" alt="image-20200522101356127"></p><h2 id="3、第一个SpringBoot程序"><a href="#3、第一个SpringBoot程序" class="headerlink" title="3、第一个SpringBoot程序"></a>3、第一个SpringBoot程序</h2><p>方式一：</p><p>可通过官网快速创建一个项目，然后再使用idea导入项目即可</p><p><a href="https://start.spring.io/" target="_blank" rel="noopener">https://start.spring.io/</a></p><p>方式二：</p><p>通过idea直接创建一个SpringBoot项目</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/mgs6jEGqVQK4o98.png" alt="image-20200522111520753"></p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/xqenk7igH23L8E6.png" alt="image-20200522111634851"></p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/oxnItEzj2KFPiwl.png" alt="image-20200522111707023"></p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/Esn8wKxo2mUPDak.png" alt="image-20200522111725987"></p><p>创建完之后，直接写一个controller来测试即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/Dz6NGSUMQnKoid4.png" alt="image-20200522111843413"></p><p>可以修改banner：在resources目录中新建一个banner.text，把想要的banner写进去即可，</p><p>获取banner网站推荐：<a href="https://www.bootschool.net/ascii" target="_blank" rel="noopener">https://www.bootschool.net/ascii</a></p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/Yqt8mTdhwOs3Dyx.png" alt="image-20200522112332122"></p><p>体验了第一个springboot程序之后↓↓↓↓</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/AJOQD83lfNmxKW1.png" alt="image-20200522112749484"></p><h2 id="4、原理初探"><a href="#4、原理初探" class="headerlink" title="4、原理初探"></a>4、原理初探</h2><p>为什么会这么简单呢？因为springboot中间帮我们做了很多事情，我们来看看一下</p><h3 id="4-1、pom-xml"><a href="#4-1、pom-xml" class="headerlink" title="4.1、pom.xml"></a>4.1、pom.xml</h3><ul><li>spring-boot-starter-parent=》spring-boot-starter-parent：核心依赖都在父工程中</li><li>我们在写或者引入一些Springboot依赖的时候，不需要指定版本号，就是因为这些版本仓库</li></ul><p>启动器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>启动器说白了就是Springboot的启动场景</li><li>比如上面这个spring-boot-starter-web，他会帮我妈自动导入web环境所有的依赖</li><li>springboot会将所有的功能场景，都变成一个个的启动器</li><li>我们需要使用什么功能，就只需要找到对应的启动器就可以了</li><li>启动器有很多，我们可以通过官网文档可以看到：</li></ul><p><a href="https://docs.spring.io/spring-boot/docs/2.3.0.RELEASE/reference/html/using-spring-boot.html#using-boot-starter" target="_blank" rel="noopener">https://docs.spring.io/spring-boot/docs/2.3.0.RELEASE/reference/html/using-spring-boot.html#using-boot-starter</a></p><h3 id="4-2、主程序（重点）"><a href="#4-2、主程序（重点）" class="headerlink" title="4.2、主程序（重点）"></a>4.2、主程序（重点）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="comment">//标注这个类是一个springboot的应用</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Springboot01HelloApplication</span> </span>&#123;</span><br><span class="line">    <span class="comment">//将springboot应用启动</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(Springboot01HelloApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个程序看起来很简单， 但是里面的注解和启动程序并不简单啊</p><p>我们先来分析这个注解都干了什么！！</p><h4 id="SpringBootApplication"><a href="#SpringBootApplication" class="headerlink" title="@SpringBootApplication"></a>@SpringBootApplication</h4><p>作用：标注在某个类上说明这个类是SpringBoot的主配置类，SpringBoot就应该运行这个类的main方法来启动SpringBoot应用；</p><p>进入这个注解，可以看到还有很多其他注解！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootConfiguration</span></span><br><span class="line"><span class="meta">@EnableAutoConfiguration</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(excludeFilters = &#123; <span class="meta">@Filter</span>(type = FilterType.CUSTOM, classes = TypeExcludeFilter<span class="class">.<span class="keyword">class</span>),</span></span><br><span class="line"><span class="class">      @<span class="title">Filter</span>(<span class="title">type</span> </span>= FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter<span class="class">.<span class="keyword">class</span>) &#125;)</span></span><br><span class="line"><span class="class"><span class="title">public</span> @<span class="title">interface</span> <span class="title">SpringBootApplication</span> </span>&#123;...&#125;</span><br></pre></td></tr></table></figure><p>我们来看核心的几个注解即可</p><h5 id="ComponentScan"><a href="#ComponentScan" class="headerlink" title="@ComponentScan"></a>@ComponentScan</h5><p>这个注解在Spring中很重要，他对应XML配置中的元素</p><p>作用：自动扫描并加载符合条件的组件或者bean，将这个bean定义加载到IOC容器中</p><h5 id="SpringBootConfiguration"><a href="#SpringBootConfiguration" class="headerlink" title="@SpringBootConfiguration"></a>@SpringBootConfiguration</h5><p>作用：SpringBoot的配置类，标注在某个类上，表示这是一个SpringBoot的配置类</p><p>我们继续进去这个注解查看</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> SpringBootConfiguration &#123;&#125;</span><br></pre></td></tr></table></figure><p>这里的 @Configuration，说明这是一个配置类 ，配置类就是对应Spring的xml 配置文件；</p><p>继续点</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Configuration &#123;&#125;</span><br></pre></td></tr></table></figure><p>里面的@Component这就说明，启动类本身也是Spring中的一个组件，负责启动应用！</p><p>到这里，我们再回到SpringApplication注解中继续看另外一个重要注解</p><h5 id="EnableAutoConfiguration"><a href="#EnableAutoConfiguration" class="headerlink" title="@EnableAutoConfiguration"></a>@EnableAutoConfiguration</h5><p>@EnableAutoConfiguration：开启自动配置功能</p><p>以前我们需要自己配置的东西，而现在SpringBoot可以自动帮我妈配置；</p><p>@EnableAutoConfiguration告诉SpringBoot开启自动配置功能，这样自动配置才能生效，我们点进去注解继续看看这个注解都干了些什么</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@AutoConfigurationPackage</span></span><br><span class="line"><span class="meta">@Import</span>(AutoConfigurationImportSelector<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> @<span class="title">interface</span> <span class="title">EnableAutoConfiguration</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure><p>首先是@AutoConfigurationPackage：自动配置包</p><p>点进这个注解看看</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Import</span>(AutoConfigurationPackages.Registrar<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> @<span class="title">interface</span> <span class="title">AutoConfigurationPackage</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure><p>@Import：Spring底层注解@Import，给容器导入一个组件</p><p>Registrar.class作用：将主启动类的所在包及包下所有子包里面的所有组件扫描到Spring容器</p><p>这个分析完了，我们退回上一步继续看另一个注解</p><p>@Import(AutoConfigurationImportSelector.class)：给容器导入组件</p><p>AutoConfigurationImportSelector：自动配置导入选择器，那么他会导入哪些组件的选择器呢？我们点击进去这个类看源码：</p><ol><li>这个类中有一个这样的方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获得候选的配置</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> List&lt;String&gt; <span class="title">getCandidateConfigurations</span><span class="params">(AnnotationMetadata metadata, AnnotationAttributes attributes)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//这里的getSpringFactoriesLoaderFactoryClass（）方法</span></span><br><span class="line">    <span class="comment">//返回的就是我们最开始看的启动自动导入配置文件的注解类；EnableAutoConfiguration</span></span><br><span class="line">    List&lt;String&gt; configurations = SpringFactoriesLoader.loadFactoryNames(<span class="keyword">this</span>.getSpringFactoriesLoaderFactoryClass(), <span class="keyword">this</span>.getBeanClassLoader());</span><br><span class="line">    Assert.notEmpty(configurations, <span class="string">"No auto configuration classes found in META-INF/spring.factories. If you are using a custom packaging, make sure that file is correct."</span>);</span><br><span class="line">    <span class="keyword">return</span> configurations;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>这个方法又调用了 SpringFactoriesLoader 类的静态方法，我们进入 SpringFactoriesLoader 类的静态方法类的loadFactoryNames() 方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title">loadFactoryNames</span><span class="params">(Class&lt;?&gt; factoryClass, @Nullable ClassLoader classLoader)</span> </span>&#123;</span><br><span class="line">    String factoryClassName = factoryClass.getName();</span><br><span class="line">    <span class="comment">//这里它又调用了 loadSpringFactories 方法</span></span><br><span class="line">    <span class="keyword">return</span> (List)loadSpringFactories(classLoader).getOrDefault(factoryClassName, Collections.emptyList());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>我们继续点击查看 loadSpringFactories 方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String, List&lt;String&gt;&gt; loadSpringFactories(<span class="meta">@Nullable</span> ClassLoader classLoader) &#123;</span><br><span class="line">    <span class="comment">//获得classLoader ， 我们返回可以看到这里得到的就是EnableAutoConfiguration标注的类本身</span></span><br><span class="line">    MultiValueMap&lt;String, String&gt; result = (MultiValueMap)cache.get(classLoader);</span><br><span class="line">    <span class="keyword">if</span> (result != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//去获取一个资源 "META-INF/spring.factories"</span></span><br><span class="line">            Enumeration&lt;URL&gt; urls = classLoader != <span class="keyword">null</span> ? classLoader.getResources(<span class="string">"META-INF/spring.factories"</span>) : ClassLoader.getSystemResources(<span class="string">"META-INF/spring.factories"</span>);</span><br><span class="line">            LinkedMultiValueMap result = <span class="keyword">new</span> LinkedMultiValueMap();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//将读取到的资源遍历，封装成为一个Properties</span></span><br><span class="line">            <span class="keyword">while</span>(urls.hasMoreElements()) &#123;</span><br><span class="line">                URL url = (URL)urls.nextElement();</span><br><span class="line">                UrlResource resource = <span class="keyword">new</span> UrlResource(url);</span><br><span class="line">                Properties properties = PropertiesLoaderUtils.loadProperties(resource);</span><br><span class="line">                Iterator var6 = properties.entrySet().iterator();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span>(var6.hasNext()) &#123;</span><br><span class="line">                    Entry&lt;?, ?&gt; entry = (Entry)var6.next();</span><br><span class="line">                    String factoryClassName = ((String)entry.getKey()).trim();</span><br><span class="line">                    String[] var9 = StringUtils.commaDelimitedListToStringArray((String)entry.getValue());</span><br><span class="line">                    <span class="keyword">int</span> var10 = var9.length;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> var11 = <span class="number">0</span>; var11 &lt; var10; ++var11) &#123;</span><br><span class="line">                        String factoryName = var9[var11];</span><br><span class="line">                        result.add(factoryClassName, factoryName.trim());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            cache.put(classLoader, result);</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException var13) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Unable to load factories from location [META-INF/spring.factories]"</span>, var13);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>发现一个多次出现的文件，spring.factories，全局搜索它</li></ol><h4 id="Spring-factories"><a href="#Spring-factories" class="headerlink" title="Spring.factories"></a>Spring.factories</h4><p>我们根据源头打开spring.factories ， 看到了很多自动配置的文件；这就是自动配置根源所在！</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/lxeJC8Uz2BZQvFn.png" alt="image-20200522145947713"></p><p><strong>WebMvcAutoConfiguration</strong></p><p>我们在上面的自动配置类随便找一个打开看看，比如WebMvcAutoConfiguration</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/wuJT1V5zRpItrXO.png" alt="image-20200522150058398"></p><p>可以看到这些一个个的都是JavaConfig配置类，而且都注入了一些Bean，可以找一些自己认识的类，看着熟悉一下！</p><p>所以，自动配置真正实现是从classpath中搜寻所有的META-INF/spring.factories配置文件，并将其中对应的 org.springframework.boot.autoconfigure. 包下的配置项，通过反射实例化为对应标注了 @Configuration的JavaConfig形式的IOC容器配置类 ， 然后将这些都汇总成为一个实例并加载到IOC容器中。</p><p>结论：</p><ol><li>SpringBoot在启动的时候从类路径下的META-INF/spring.factories中获取EnableAutoConfiguration指定的值</li><li>将这些值作为自动配置类导入容器，自动配置类就生效，帮我们进行自动配置工作</li><li>整个J2EE的整体解决方案和自动配置都在springboot-autoconfigure的jar包中；</li><li>他会给容器中导入非常多的自动配置类（xxxAutoConfiguration），就是给容器中导入这个场景需要的所有组件，并配置好这些组件</li><li>有了自动配置类，免去了我们手动编写配置注入功能组件等的工作</li></ol><p>现在应该大概的了解了下，SpringBoot的运行原理，后面我们还会深化一次</p><h4 id="run方法"><a href="#run方法" class="headerlink" title="run方法"></a>run方法</h4><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/3zs5MXfboGgdRqk.png" alt="image-20200522164631175"></p><h2 id="5、SpringBoot配置"><a href="#5、SpringBoot配置" class="headerlink" title="5、SpringBoot配置"></a>5、SpringBoot配置</h2><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>SpringBoot使用一个全局的配置文件，配置文件名称是固定的</p><ul><li>application.properties<ul><li>语法结构：key=value</li></ul></li><li>application.yaml（官方推荐）<ul><li>语法结构：key:空格value</li></ul></li></ul><p>配置文件的作用：修改SpringBoot自动配置的默认值，因为SpringBoot在底层都给我们自动配置好了。</p><h3 id="YAML"><a href="#YAML" class="headerlink" title="YAML"></a>YAML</h3><p>百度百科：<em>YAML<em>是”YAML Ain’t a Markup Language”（YAML不是一种<a href="https://baike.baidu.com/item/标记语言" target="_blank" rel="noopener">标记语言</a>）的<a href="https://baike.baidu.com/item/递归缩写" target="_blank" rel="noopener">递归缩写</a>。在开发的这种语言时，</em>YAML</em> 的意思其实是：”Yet Another Markup Language”（仍是一种<a href="https://baike.baidu.com/item/标记语言" target="_blank" rel="noopener">标记语言</a>），但为了强调这种语言以数据做为中心，而不是以标记语言为重点，而用反向缩略语重命名。</p><p>标记语言</p><p>我们来对比一下xml和yaml</p><p>yaml配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 8080</span><br></pre></td></tr></table></figure><p>xml配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">port</span>&gt;</span>8080<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br></pre></td></tr></table></figure><p>yaml语法</p><p>基础语法：</p><p>k: (空格)v</p><p>以此来表示一对键值对（空格不能省略）；以空格的缩进来控制层级关系，只要左边对齐的一系列数据都是同一个层级的。</p><p>注意属性和值的大小写都是十分敏感的</p><p>值得写法</p><p>字面量: 普通的值（数字，布尔值，字符串）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">k:</span> <span class="string">v</span></span><br></pre></td></tr></table></figure><p>字面量直接写在后面就可以，字符串默认不用加上双引号或者单引号</p><p>“”双引号，不会转义字符串里面的特殊字符，特殊字符作为本身想要表示的意思；</p><p>比如name: “kuang \n shen” 输出：kuang 换行 shen</p><p>对象、map集合：比如一个student对象，有name和age属性</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#对象</span></span><br><span class="line"><span class="attr">student:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">ryan</span></span><br><span class="line"><span class="attr">age:</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#行内写法(注意对象冒号的空格也不能省略)</span></span><br><span class="line"><span class="attr">student:</span> <span class="string">&#123;name:</span> <span class="string">ryan,age:</span> <span class="number">8</span><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>数组，类似markdown语法的列表语法：-空格</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cat</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">dog</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">bird</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#行内写法</span></span><br><span class="line"><span class="attr">pet:</span> <span class="string">[cat,dog,bird]</span></span><br></pre></td></tr></table></figure><p>一般掌握以上三种就差不多够用了 </p><h2 id="6、给属性赋值的几种方式"><a href="#6、给属性赋值的几种方式" class="headerlink" title="6、给属性赋值的几种方式"></a>6、给属性赋值的几种方式</h2><p>方式一：使用原来的@Value注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line">    <span class="comment">//给实体类属性赋值</span></span><br><span class="line">    <span class="comment">//方式一：使用@Value注解</span></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"旺财，你死的好惨啊"</span>)</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"2"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Springboot02YamlApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//别忘了自动装配，而这里自动装配的前提是实体类中使用@Component等注解</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(dog);<span class="comment">//Dog&#123;name='旺财，你死的好惨啊', age=2&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方式二：使用配置文件：application.yaml</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span><span class="comment">//注册bean</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@ConfigurationProperties作用：</span></span><br><span class="line"><span class="comment">将配置文件中配置的每一个属性的值，映射到这个组件中；</span></span><br><span class="line"><span class="comment">告诉SpringBoot将本类的所有属性和配置文件中相关的配置进行绑定；</span></span><br><span class="line"><span class="comment">参数prefix + "person"：将配置文件中的person下面的所有属性一一对应</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">只有这个组件是容器的组件，才能使容器提供的@@ConfigurationProperties功能</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"dog"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>application.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方式二：使用yaml配置文件的方式来实现给实体类属性赋值</span></span><br><span class="line"><span class="comment"># 不过前提是你得在实体类中使用注解：@ConfigurationProperties(prefix = "dog")</span></span><br><span class="line"><span class="attr">dog:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">"大家好，我是旺财"</span></span><br><span class="line">  <span class="attr">age:</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><p>测试：略</p><p>再来试试复杂的一点的实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"person"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> sex;</span><br><span class="line">    <span class="keyword">private</span> Date birth;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Object&gt; list;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, Object&gt; map;</span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>application.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 复杂一点的实体类我，注意一些对象或者集合或者数组的写法</span></span><br><span class="line"><span class="attr">person:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">鸡你太美</span></span><br><span class="line">  <span class="attr">age:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">sex:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">birth:</span> <span class="number">2020</span><span class="string">/02/20</span></span><br><span class="line">  <span class="attr">list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">唱</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">跳</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">rap</span></span><br><span class="line">  <span class="attr">map:</span> <span class="string">&#123;k1:</span> <span class="string">v1,k2:</span> <span class="string">v2&#125;</span></span><br><span class="line">  <span class="attr">dog:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">柯基</span></span><br><span class="line">    <span class="attr">age:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Springboot02YamlApplicationTests</span> </span>&#123;</span><br><span class="line">    <span class="comment">//别忘了自动装配，而这里自动装配的前提是实体类中使用@Component等注解</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Person person;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(person);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        Person&#123;name='鸡你太美',</span></span><br><span class="line"><span class="comment">               age=10, sex=false,</span></span><br><span class="line"><span class="comment">               birth=Thu Feb 20 00:00:00 CST 2020,</span></span><br><span class="line"><span class="comment">               list=[唱, 跳, rap],</span></span><br><span class="line"><span class="comment">               map=&#123;k1=v1, k2=v2&#125;,</span></span><br><span class="line"><span class="comment">               dog=Dog&#123;name='柯基', age=0&#125;&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>实体类别忘了加上@Component注解，否则无法被扫描到，测试的时候，对象别忘了加上自动装配注解@Autowired</li><li>使用yaml的时候，别忘了在实体类中添加一个注解，并加上前缀（对象名称）:@ConfigurationProperties(prefix = “person”)</li></ul><p>对比yaml配置和@Value，发现yaml还是挺强大的</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/pjGgWthJlczo6CY.png" alt="image-20200522203106700"></p><ul><li>cp只需要写一次即可，value则需要每个字段都添加</li><li>松散绑定:这个什么意思呢？比如我的yaml中写last-name，这个和lastName是一样的，-后面跟着的字母默认是大写的，这就是松散绑定</li><li>JSR303数据校验，这个就是我们可以在字段增加一层过滤器验证，可以保证数据的合法性</li><li>复杂类型封装，yaml中可以封装对象，使用@Value就不支持</li></ul><p>方式三：properties配置</p><p>先在实体类中添加注解@PropertySource(“classpath:xxx.properties”)，属性使用SPEL表达式取出配置文件的值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PropertySource</span>(<span class="string">"classpath:xxx.properties"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"><span class="comment">//SPEL表达式取出配置文件的值</span></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;name&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> sex;</span><br><span class="line">    <span class="keyword">private</span> Date birth;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Object&gt; list;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, Object&gt; map;</span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在properties配置文件中写键值对即可</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name</span>=<span class="string">ryan</span></span><br></pre></td></tr></table></figure><p>测试：略</p><p>注意：如果想要使用properties的话，记得在idea中设置properties的编码格式为utf-8，不然会乱码</p><p>结论：</p><ul><li>配置yaml和配置properties都可以获取到值，强烈推荐yaml</li><li>如果我们在某个业务中，只需要获取配置文件中的某个值，可以使用一下@Value</li><li>如果说，我们专门编写了一个JavaBean来和配置文件进行映射，就直接使用@ConfigurationProperties，不要犹豫！</li></ul><h2 id="7、JSR303数据校验"><a href="#7、JSR303数据校验" class="headerlink" title="7、JSR303数据校验"></a>7、JSR303数据校验</h2><p>JSR-303 是 JAVA EE 6 中的一项子规范，叫做 Bean Validation。</p><p>在任何时候，当你要处理一个应用程序的业务逻辑，数据校验是你必须要考虑和面对的事情。应用程序必须通过某种手段来确保输入进来的数据从语义上来讲是正确的。在通常的情况下，应用程序是分层的，不同的层由不同的开发人员来完成。很多时候同样的数据验证逻辑会出现在不同的层，这样就会导致代码冗余和一些管理的问题，比如说语义的一致性等。为了避免这样的情况发生，最好是将验证逻辑与相应的域模型进行绑定。</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/w9qisGt52xEbjSB.png" alt="image-20200522213632036"></p><p>使用：</p><ol><li><p>启动validation自动装配（导入依赖）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>结合参数给对象添加校验注解</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@Component</span><br><span class="line">@ConfigurationProperties(prefix = <span class="string">"person"</span>)</span><br><span class="line">@Validated</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    private Integer id;</span><br><span class="line">    @NotBlank(message = <span class="string">"用户名不能为空"</span>)</span><br><span class="line">    private <span class="built_in">String</span> username;</span><br><span class="line">    @Pattern(regexp = <span class="string">"^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]&#123;8,16&#125;$"</span>, message = <span class="string">"密码必须为8~16个字母和数字组合"</span>)</span><br><span class="line">    private <span class="built_in">String</span> password;</span><br><span class="line">    @Email</span><br><span class="line">    private <span class="built_in">String</span> email;</span><br><span class="line">    private Integer gender;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具体怎么去校验，后面再去学</p><h2 id="8、配置文件路径"><a href="#8、配置文件路径" class="headerlink" title="8、配置文件路径"></a>8、配置文件路径</h2><p>SpringBoot启动会扫描以下位置的application.properties或者application.yaml文件作为springboot的默认配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">优先级1：项目路径下的config文件夹配置文件</span><br><span class="line">优先级2：项目路径下配置文件</span><br><span class="line">优先级3：资源路径下的config文件夹配置文件</span><br><span class="line">优先级4：资源路径下配置文件</span><br></pre></td></tr></table></figure><p>优先级由高到第排列，高优先级的配置会覆盖低优先级的配置</p><p>再强调一下，强烈推荐使用yaml去配置</p><p>如果有多个环境，可以这样</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果不同环境需要用到不同的端口，我们可以写多个端口出来，并使用---来分隔开</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"><span class="comment"># 然后通过设置使用哪个端口</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">dev</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8082</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">test</span></span><br></pre></td></tr></table></figure><h2 id="9、自动装配原理再理解"><a href="#9、自动装配原理再理解" class="headerlink" title="9、自动装配原理再理解"></a>9、自动装配原理再理解</h2><p>思考：配置文件中到底能写什么？怎么写？</p><p>从springboot官方文档中可以看到大量的配置， 我们不可能真的去背他的，要去了解他的一些规律和原理</p><p>以<strong>HttpEncodingAutoConfiguration（Http编码自动配置）</strong>为例解释自动配置原理；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//表示这是一个配置类，和以前编写的配置文件一样，也可以给容器中添加组件；</span></span><br><span class="line"><span class="meta">@Configuration</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">//启动指定类的ConfigurationProperties功能；</span></span><br><span class="line">  <span class="comment">//进入这个HttpProperties查看，将配置文件中对应的值和HttpProperties绑定起来；</span></span><br><span class="line">  <span class="comment">//并把HttpProperties加入到ioc容器中</span></span><br><span class="line"><span class="meta">@EnableConfigurationProperties</span>(&#123;HttpProperties<span class="class">.<span class="keyword">class</span>&#125;) </span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">//<span class="title">Spring</span>底层@<span class="title">Conditional</span>注解</span></span><br><span class="line"><span class="class">  //根据不同的条件判断，如果满足指定的条件，整个配置类里面的配置就会生效；</span></span><br><span class="line"><span class="class">  //这里的意思就是判断当前应用是否是<span class="title">web</span>应用，如果是，当前配置类生效</span></span><br><span class="line"><span class="class">@<span class="title">ConditionalOnWebApplication</span>(</span></span><br><span class="line"><span class="class">    <span class="title">type</span> </span>= Type.SERVLET</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断当前项目有没有这个类CharacterEncodingFilter；SpringMVC中进行乱码解决的过滤器；</span></span><br><span class="line"><span class="meta">@ConditionalOnClass</span>(&#123;CharacterEncodingFilter<span class="class">.<span class="keyword">class</span>&#125;)</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">//判断配置文件中是否存在某个配置：<span class="title">spring</span>.<span class="title">http</span>.<span class="title">encoding</span>.<span class="title">enabled</span>；</span></span><br><span class="line"><span class="class">  //如果不存在，判断也是成立的</span></span><br><span class="line"><span class="class">  //即使我们配置文件中不配置<span class="title">pring</span>.<span class="title">http</span>.<span class="title">encoding</span>.<span class="title">enabled</span></span>=<span class="keyword">true</span>，也是默认生效的；</span><br><span class="line"><span class="meta">@ConditionalOnProperty</span>(</span><br><span class="line">    prefix = <span class="string">"spring.http.encoding"</span>,</span><br><span class="line">    value = &#123;<span class="string">"enabled"</span>&#125;,</span><br><span class="line">    matchIfMissing = <span class="keyword">true</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpEncodingAutoConfiguration</span> </span>&#123;</span><br><span class="line">    <span class="comment">//他已经和SpringBoot的配置文件映射了</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Encoding properties;</span><br><span class="line">    <span class="comment">//只有一个有参构造器的情况下，参数的值就会从容器中拿</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HttpEncodingAutoConfiguration</span><span class="params">(HttpProperties properties)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.properties = properties.getEncoding();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//给容器中添加一个组件，这个组件的某些值需要从properties中获取</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@ConditionalOnMissingBean</span> <span class="comment">//判断容器没有这个组件？</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CharacterEncodingFilter <span class="title">characterEncodingFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        CharacterEncodingFilter filter = <span class="keyword">new</span> OrderedCharacterEncodingFilter();</span><br><span class="line">        filter.setEncoding(<span class="keyword">this</span>.properties.getCharset().name());</span><br><span class="line">        filter.setForceRequestEncoding(<span class="keyword">this</span>.properties.shouldForce(org.springframework.boot.autoconfigure.http.HttpProperties.Encoding.Type.REQUEST));</span><br><span class="line">        filter.setForceResponseEncoding(<span class="keyword">this</span>.properties.shouldForce(org.springframework.boot.autoconfigure.http.HttpProperties.Encoding.Type.RESPONSE));</span><br><span class="line">        <span class="keyword">return</span> filter;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//..............</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一句话总总结：根据当前不同的条件判断，决定这个配置类是否生效！</p><ul><li>一旦这个配置类生效，这个配置类就会给容器添加各种组件</li><li>这些组件的属性是从对应的properties类中获取的，这些类里面的每一个属性又是和配置文件绑定的</li><li>所有在配置文件中能配置的属性都是在xxxProperties类封装着的</li><li>配置文件能配置什么就可以参照某个功能对应的这个属性类</li></ul><p>例如随便点进一个JdbcTemplateAutoConfiguration</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/s3yPiCBnI4ETcJW.png" alt="image-20200523092859905"></p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/uXzRxQgOEIMsfCF.png" alt="image-20200523093108163"></p><p>在配置文件能写的也就是上面的一些属性</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/rpAsYdLG7DS3Eyc.png" alt="image-20200523093017499"></p><p>这就是自动装配的原理</p><p><strong>精髓：</strong></p><ol><li>springboot启动会加载大量的自动配置类</li><li>我们看我们需要的功能有没有在SpringBoot默认写好的自动装配类当中</li><li>我们再来看这个自动装配类中到底配置了哪些组件（只要我们要用的组件存在其中，我们就需要再手动配置了）</li><li>给容器中自动配置类添加组件的时候，会从properties类中获取某些属性，我们只需要在配置文件中指定这些属性的值即可</li></ol><p>xxxAutoConfiguration:自动配置类；给容器添加组件</p><p>xxxProperties：封装配置文件中相关属性</p><p>了解：<strong>@Conditional</strong></p><p>了解完自动装配的原理后，我们来关注一个细节问题，<strong>自动配置类必须在一定的条件下才能生效；</strong></p><p><strong>@Conditional派生注解（Spring注解版原生的@Conditional作用）</strong></p><p>作用：必须是@Conditional指定的条件成立，才给容器中添加组件，配置配里面的所有内容才生效；</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/YFX32s5eA4xizpg.png" alt="image-20200523094302849"></p><p><strong>那么多的自动配置类，必须在一定的条件下才能生效；也就是说，我们加载了这么多的配置类，但不是所有的都生效了。</strong></p><p>我们怎么知道哪些自动配置类生效？</p><p><strong>我们可以通过启用 debug=true属性；来让控制台打印自动配置报告，这样我们就可以很方便的知道哪些自动配置类生效；</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启springboot的调试类</span></span><br><span class="line"><span class="attr">debug:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>从输出的日志可以看到：</p><p><strong>Positive matches:（自动配置类启用的：正匹配）</strong></p><p><strong>Negative matches:（没有启动，没有匹配成功的自动配置类：负匹配）</strong></p><p><strong>Unconditional classes: （没有条件的类）</strong></p><h2 id="10、SpringBoot-web开发"><a href="#10、SpringBoot-web开发" class="headerlink" title="10、SpringBoot web开发"></a>10、SpringBoot web开发</h2><p>说到web开发，我们在springboot要思考一下如何处理以下问题：</p><ul><li>导入静态资源</li><li>首页</li><li>jsp，模板引擎Thymeleaf</li><li>装配扩展SpringMVC</li><li>增删改查</li><li>拦截器</li><li>国际化</li></ul><p>从webmvcConfiguration源码中可以获取到一些如何以上问题的方法</p><h3 id="10-1、静态资源处理"><a href="#10-1、静态资源处理" class="headerlink" title="10.1、静态资源处理"></a>10.1、静态资源处理</h3><ul><li><p>webjars <code>localhost:8080/webjars</code>(极少使用)</p></li><li><p>classpath（resources）目录下的</p><ul><li>public, static, /**, resources    <code>localhost:8080/</code></li></ul><p>优先级：resources&gt;static(默认)&gt;public</p></li></ul><h3 id="10-2、首页如何定制"><a href="#10-2、首页如何定制" class="headerlink" title="10.2、首页如何定制"></a>10.2、首页如何定制</h3><p>在静态资源目录下新建一个index.html即可</p><h3 id="10-3、thymeleaf"><a href="#10-3、thymeleaf" class="headerlink" title="10.3、thymeleaf"></a>10.3、thymeleaf</h3><p>使用thymeleaf之前，我们要知道templates目录下的资源只能通过controller去访问</p><p>简单使用：</p><ul><li>先导入相关依赖，可以直接开启一个启动器，或者直接导入相关依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--thymeleaf--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>编写一个controller</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/t1"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">"msg"</span>, <span class="string">"hello,thymeleaf"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"test"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在templates目录下编写一个test.html，加入thymeleaf约束，并通过thymeleaf语法获取值</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:text</span>=<span class="string">"$&#123;msg&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如何通过thymeleaf表达式获取前端返回的值，先了解两种</p><ol><li>普通值</li><li>集合遍历</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/t1"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">"msg"</span>, <span class="string">"&lt;h1&gt;hello,thymeleaf&lt;/h1&gt;"</span>);</span><br><span class="line">        model.addAttribute(<span class="string">"users"</span>, Arrays.asList(<span class="string">"ryan"</span>,<span class="string">"kobe"</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"test"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:text</span>=<span class="string">"$&#123;msg&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:utext</span>=<span class="string">"$&#123;msg&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--遍历：使用each，将users集合取出元素为user，然后再遍历每个元素的值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:each</span>=<span class="string">"user:$&#123;users&#125;"</span> <span class="attr">th:text</span>=<span class="string">"$&#123;user&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/zeMadK4VXOgZYR6.png" alt="image-20200523115312133"></p><h3 id="10-4、webmvc自动配置原理"><a href="#10-4、webmvc自动配置原理" class="headerlink" title="10.4、webmvc自动配置原理"></a>10.4、webmvc自动配置原理</h3><p>在写项目之前，我们先了解一下webmvc的自动配置原理以及怎么去扩展webmvc</p><p>原理：可通过源码分析，此处略</p><p>扩展：</p><p>我们要做的就是编写一个@Configuration注解类，并且类型要为WebMvcConfigurer，还不能标注@EnableWebMvc注解；我们去自己写一个；我们新建一个包叫config，写一个类MyMvcConfig；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ryan.interceptor.LoginInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.LocaleResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.ViewControllerRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="comment">//应为类型要求为WebMvcConfigurer，所以我们实现其接口</span></span><br><span class="line"><span class="comment">//可以使用自定义类扩展MVC的功能</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMvcConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line">    <span class="comment">//项目的首页定制,添加一个视图解析器</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//通过以下访问路径可以访问到index.html页面，</span></span><br><span class="line">        registry.addViewController(<span class="string">"/"</span>).setViewName(<span class="string">"index"</span>);</span><br><span class="line">        registry.addViewController(<span class="string">"/index.html"</span>).setViewName(<span class="string">"index"</span>);</span><br><span class="line">        <span class="comment">//登陆后不希望在地址栏上显示相关信息，可自定义一个地址，登陆时重定向到此即可</span></span><br><span class="line">        registry.addViewController(<span class="string">"/main.html"</span>).setViewName(<span class="string">"dashboard"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将自定义的国际化组件放到容器中</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> LocaleResolver <span class="title">localeResolver</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MyLocaleResolver();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//拦截器配置</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//拦截所有请求，除了登陆页面，静态资源后面再继续完善配置</span></span><br><span class="line">        registry.addInterceptor(<span class="keyword">new</span> LoginInterceptor()).</span><br><span class="line">                addPathPatterns(<span class="string">"/**"</span>).</span><br><span class="line">                excludePathPatterns(<span class="string">"/index.html"</span>, <span class="string">"/user/login"</span>,<span class="string">"/"</span>,<span class="string">"/css/**"</span>,<span class="string">"/js/**"</span>,<span class="string">"/img/**"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>实体类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Department</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String departmentName;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Employee</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> Integer gender;<span class="comment">//1表示男生，0表示女生</span></span><br><span class="line">    <span class="keyword">private</span> Department department;</span><br><span class="line">    <span class="keyword">private</span> Date birth;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">(Integer id, String name, String email, Integer gender, Department department)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">        <span class="keyword">this</span>.gender = gender;</span><br><span class="line">        <span class="keyword">this</span>.department = department;</span><br><span class="line">        <span class="keyword">this</span>.birth = <span class="keyword">new</span> Date();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>dao+伪造数据库</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ryan.pojo.Department;</span><br><span class="line"><span class="keyword">import</span> com.ryan.pojo.Employee;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmployeeDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DepartmentDao departmentDao;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;Integer, Employee&gt; employees = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        employees.put(<span class="number">1001</span>,<span class="keyword">new</span> Employee(<span class="number">1001</span>,<span class="string">"小王"</span>, <span class="string">"wang@qq.com"</span>,<span class="number">1</span>,<span class="keyword">new</span> Department(<span class="number">101</span>, <span class="string">"教学部"</span>)));</span><br><span class="line">        employees.put(<span class="number">1002</span>,<span class="keyword">new</span> Employee(<span class="number">1002</span>,<span class="string">"小红"</span>, <span class="string">"wang@qq.com"</span>,<span class="number">0</span>,<span class="keyword">new</span> Department(<span class="number">102</span>, <span class="string">"教研部"</span>)));</span><br><span class="line">        employees.put(<span class="number">1003</span>,<span class="keyword">new</span> Employee(<span class="number">1003</span>,<span class="string">"小明"</span>, <span class="string">"wang@qq.com"</span>,<span class="number">1</span>,<span class="keyword">new</span> Department(<span class="number">103</span>, <span class="string">"市场部"</span>)));</span><br><span class="line">        employees.put(<span class="number">1004</span>,<span class="keyword">new</span> Employee(<span class="number">1004</span>,<span class="string">"小花"</span>, <span class="string">"wang@qq.com"</span>,<span class="number">0</span>,<span class="keyword">new</span> Department(<span class="number">104</span>, <span class="string">"后勤部"</span>)));</span><br><span class="line">        employees.put(<span class="number">1005</span>,<span class="keyword">new</span> Employee(<span class="number">1005</span>,<span class="string">"小张"</span>, <span class="string">"wang@qq.com"</span>,<span class="number">1</span>,<span class="keyword">new</span> Department(<span class="number">105</span>, <span class="string">"技术部"</span>)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//CRUD</span></span><br><span class="line">    <span class="comment">//增加一个员工</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Integer employeeId = <span class="number">1006</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Employee employee)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (employee.getId() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            employee.setId(employeeId++);</span><br><span class="line">        &#125;</span><br><span class="line">        employee.setDepartment(departmentDao.getDepartmentById(employee.getDepartment().getId()));</span><br><span class="line">        employees.put(employee.getId(),employee);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteEmployeeById</span><span class="params">(Integer id)</span></span>&#123;</span><br><span class="line">        employees.remove(id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查询所有员工</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection&lt;Employee&gt; <span class="title">getAllEmployee</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> employees.values();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//通过id查询员工</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Employee <span class="title">getEmployeeById</span><span class="params">(Integer id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> employees.get(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ryan.pojo.Department;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DepartmentDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">//使用java模拟一个数据库</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;Integer, Department&gt; departments = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        departments.put(<span class="number">101</span>,<span class="keyword">new</span> Department(<span class="number">101</span>, <span class="string">"教学部"</span>));</span><br><span class="line">        departments.put(<span class="number">102</span>,<span class="keyword">new</span> Department(<span class="number">102</span>, <span class="string">"教研部"</span>));</span><br><span class="line">        departments.put(<span class="number">103</span>,<span class="keyword">new</span> Department(<span class="number">103</span>, <span class="string">"市场部"</span>));</span><br><span class="line">        departments.put(<span class="number">104</span>,<span class="keyword">new</span> Department(<span class="number">104</span>, <span class="string">"后勤部"</span>));</span><br><span class="line">        departments.put(<span class="number">105</span>,<span class="keyword">new</span> Department(<span class="number">105</span>, <span class="string">"技术部"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//CRUD</span></span><br><span class="line">    <span class="comment">//查询所有部门</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection&lt;Department&gt; <span class="title">getAllDepartment</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> departments.values();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//通过id查询所在部门</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Department <span class="title">getDepartmentById</span><span class="params">(Integer id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> departments.get(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><p>前端模板</p><ul><li>对于公共部分（导航栏+侧边栏），可抽出来代码复用</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap core CSS --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/bootstrap.min.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Custom styles for this template --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/dashboard.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--公共部分--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--顶部导航栏--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0"</span> <span class="attr">th:fragment</span>=<span class="string">"topbar"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-brand col-sm-3 col-md-2 mr-0"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/main.html&#125;"</span>&gt;</span>[[$&#123;session.loginUser&#125;]]<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control form-control-dark w-100"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"Search"</span> <span class="attr">aria-label</span>=<span class="string">"Search"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"navbar-nav px-3"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item text-nowrap"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"nav-link"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/user/logout&#125;"</span>&gt;</span>注销<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--侧边栏--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"col-md-2 d-none d-md-block bg-light sidebar"</span> <span class="attr">th:fragment</span>=<span class="string">"sidebar"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"sidebar-sticky"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav flex-column"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:class</span>=<span class="string">"$&#123;active=='main.html'?'nav-link active':'nav-link'&#125;"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/main.html&#125;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> <span class="attr">width</span>=<span class="string">"24"</span> <span class="attr">height</span>=<span class="string">"24"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 24 24"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke</span>=<span class="string">"currentColor"</span> <span class="attr">stroke-width</span>=<span class="string">"2"</span> <span class="attr">stroke-linecap</span>=<span class="string">"round"</span> <span class="attr">stroke-linejoin</span>=<span class="string">"round"</span> <span class="attr">class</span>=<span class="string">"feather feather-home"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">"9 22 9 12 15 12 15 22"</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">                    首页 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>(current)<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"nav-link"</span> <span class="attr">href</span>=<span class="string">"http://getbootstrap.com/docs/4.0/examples/dashboard/#"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> <span class="attr">width</span>=<span class="string">"24"</span> <span class="attr">height</span>=<span class="string">"24"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 24 24"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke</span>=<span class="string">"currentColor"</span> <span class="attr">stroke-width</span>=<span class="string">"2"</span> <span class="attr">stroke-linecap</span>=<span class="string">"round"</span> <span class="attr">stroke-linejoin</span>=<span class="string">"round"</span> <span class="attr">class</span>=<span class="string">"feather feather-file"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">"13 2 13 9 20 9"</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">                    Orders</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"nav-link"</span> <span class="attr">href</span>=<span class="string">"http://getbootstrap.com/docs/4.0/examples/dashboard/#"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> <span class="attr">width</span>=<span class="string">"24"</span> <span class="attr">height</span>=<span class="string">"24"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 24 24"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke</span>=<span class="string">"currentColor"</span> <span class="attr">stroke-width</span>=<span class="string">"2"</span> <span class="attr">stroke-linecap</span>=<span class="string">"round"</span> <span class="attr">stroke-linejoin</span>=<span class="string">"round"</span> <span class="attr">class</span>=<span class="string">"feather feather-shopping-cart"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">"9"</span> <span class="attr">cy</span>=<span class="string">"21"</span> <span class="attr">r</span>=<span class="string">"1"</span>&gt;</span><span class="tag">&lt;/<span class="name">circle</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">"20"</span> <span class="attr">cy</span>=<span class="string">"21"</span> <span class="attr">r</span>=<span class="string">"1"</span>&gt;</span><span class="tag">&lt;/<span class="name">circle</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">                    Products</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:class</span>=<span class="string">"$&#123;active=='list.html'?'nav-link active':'nav-link'&#125;"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/employees&#125;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> <span class="attr">width</span>=<span class="string">"24"</span> <span class="attr">height</span>=<span class="string">"24"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 24 24"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke</span>=<span class="string">"currentColor"</span> <span class="attr">stroke-width</span>=<span class="string">"2"</span> <span class="attr">stroke-linecap</span>=<span class="string">"round"</span> <span class="attr">stroke-linejoin</span>=<span class="string">"round"</span> <span class="attr">class</span>=<span class="string">"feather feather-users"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">"9"</span> <span class="attr">cy</span>=<span class="string">"7"</span> <span class="attr">r</span>=<span class="string">"4"</span>&gt;</span><span class="tag">&lt;/<span class="name">circle</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M23 21v-2a4 4 0 0 0-3-3.87"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M16 3.13a4 4 0 0 1 0 7.75"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">                    员工管理</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"nav-link"</span> <span class="attr">href</span>=<span class="string">"http://getbootstrap.com/docs/4.0/examples/dashboard/#"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> <span class="attr">width</span>=<span class="string">"24"</span> <span class="attr">height</span>=<span class="string">"24"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 24 24"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke</span>=<span class="string">"currentColor"</span> <span class="attr">stroke-width</span>=<span class="string">"2"</span> <span class="attr">stroke-linecap</span>=<span class="string">"round"</span> <span class="attr">stroke-linejoin</span>=<span class="string">"round"</span> <span class="attr">class</span>=<span class="string">"feather feather-bar-chart-2"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">"18"</span> <span class="attr">y1</span>=<span class="string">"20"</span> <span class="attr">x2</span>=<span class="string">"18"</span> <span class="attr">y2</span>=<span class="string">"10"</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">"12"</span> <span class="attr">y1</span>=<span class="string">"20"</span> <span class="attr">x2</span>=<span class="string">"12"</span> <span class="attr">y2</span>=<span class="string">"4"</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">"6"</span> <span class="attr">y1</span>=<span class="string">"20"</span> <span class="attr">x2</span>=<span class="string">"6"</span> <span class="attr">y2</span>=<span class="string">"14"</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">                    Reports</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"nav-link"</span> <span class="attr">href</span>=<span class="string">"http://getbootstrap.com/docs/4.0/examples/dashboard/#"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> <span class="attr">width</span>=<span class="string">"24"</span> <span class="attr">height</span>=<span class="string">"24"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 24 24"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke</span>=<span class="string">"currentColor"</span> <span class="attr">stroke-width</span>=<span class="string">"2"</span> <span class="attr">stroke-linecap</span>=<span class="string">"round"</span> <span class="attr">stroke-linejoin</span>=<span class="string">"round"</span> <span class="attr">class</span>=<span class="string">"feather feather-layers"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">polygon</span> <span class="attr">points</span>=<span class="string">"12 2 2 7 12 12 22 7 12 2"</span>&gt;</span><span class="tag">&lt;/<span class="name">polygon</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">"2 17 12 22 22 17"</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">"2 12 12 17 22 12"</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">                    Integrations</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">h6</span> <span class="attr">class</span>=<span class="string">"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>Saved reports<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"d-flex align-items-center text-muted"</span> <span class="attr">href</span>=<span class="string">"http://getbootstrap.com/docs/4.0/examples/dashboard/#"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> <span class="attr">width</span>=<span class="string">"24"</span> <span class="attr">height</span>=<span class="string">"24"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 24 24"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke</span>=<span class="string">"currentColor"</span> <span class="attr">stroke-width</span>=<span class="string">"2"</span> <span class="attr">stroke-linecap</span>=<span class="string">"round"</span> <span class="attr">stroke-linejoin</span>=<span class="string">"round"</span> <span class="attr">class</span>=<span class="string">"feather feather-plus-circle"</span>&gt;</span><span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">"12"</span> <span class="attr">cy</span>=<span class="string">"12"</span> <span class="attr">r</span>=<span class="string">"10"</span>&gt;</span><span class="tag">&lt;/<span class="name">circle</span>&gt;</span><span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">"12"</span> <span class="attr">y1</span>=<span class="string">"8"</span> <span class="attr">x2</span>=<span class="string">"12"</span> <span class="attr">y2</span>=<span class="string">"16"</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span><span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">"8"</span> <span class="attr">y1</span>=<span class="string">"12"</span> <span class="attr">x2</span>=<span class="string">"16"</span> <span class="attr">y2</span>=<span class="string">"12"</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav flex-column mb-2"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"nav-link"</span> <span class="attr">href</span>=<span class="string">"http://getbootstrap.com/docs/4.0/examples/dashboard/#"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> <span class="attr">width</span>=<span class="string">"24"</span> <span class="attr">height</span>=<span class="string">"24"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 24 24"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke</span>=<span class="string">"currentColor"</span> <span class="attr">stroke-width</span>=<span class="string">"2"</span> <span class="attr">stroke-linecap</span>=<span class="string">"round"</span> <span class="attr">stroke-linejoin</span>=<span class="string">"round"</span> <span class="attr">class</span>=<span class="string">"feather feather-file-text"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">"14 2 14 8 20 8"</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">"16"</span> <span class="attr">y1</span>=<span class="string">"13"</span> <span class="attr">x2</span>=<span class="string">"8"</span> <span class="attr">y2</span>=<span class="string">"13"</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">"16"</span> <span class="attr">y1</span>=<span class="string">"17"</span> <span class="attr">x2</span>=<span class="string">"8"</span> <span class="attr">y2</span>=<span class="string">"17"</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">"10 9 9 9 8 9"</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">                    Current month</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"nav-link"</span> <span class="attr">href</span>=<span class="string">"http://getbootstrap.com/docs/4.0/examples/dashboard/#"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> <span class="attr">width</span>=<span class="string">"24"</span> <span class="attr">height</span>=<span class="string">"24"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 24 24"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke</span>=<span class="string">"currentColor"</span> <span class="attr">stroke-width</span>=<span class="string">"2"</span> <span class="attr">stroke-linecap</span>=<span class="string">"round"</span> <span class="attr">stroke-linejoin</span>=<span class="string">"round"</span> <span class="attr">class</span>=<span class="string">"feather feather-file-text"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">"14 2 14 8 20 8"</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">"16"</span> <span class="attr">y1</span>=<span class="string">"13"</span> <span class="attr">x2</span>=<span class="string">"8"</span> <span class="attr">y2</span>=<span class="string">"13"</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">"16"</span> <span class="attr">y1</span>=<span class="string">"17"</span> <span class="attr">x2</span>=<span class="string">"8"</span> <span class="attr">y2</span>=<span class="string">"17"</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">"10 9 9 9 8 9"</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">                    Last quarter</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"nav-link"</span> <span class="attr">href</span>=<span class="string">"http://getbootstrap.com/docs/4.0/examples/dashboard/#"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> <span class="attr">width</span>=<span class="string">"24"</span> <span class="attr">height</span>=<span class="string">"24"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 24 24"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke</span>=<span class="string">"currentColor"</span> <span class="attr">stroke-width</span>=<span class="string">"2"</span> <span class="attr">stroke-linecap</span>=<span class="string">"round"</span> <span class="attr">stroke-linejoin</span>=<span class="string">"round"</span> <span class="attr">class</span>=<span class="string">"feather feather-file-text"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">"14 2 14 8 20 8"</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">"16"</span> <span class="attr">y1</span>=<span class="string">"13"</span> <span class="attr">x2</span>=<span class="string">"8"</span> <span class="attr">y2</span>=<span class="string">"13"</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">"16"</span> <span class="attr">y1</span>=<span class="string">"17"</span> <span class="attr">x2</span>=<span class="string">"8"</span> <span class="attr">y2</span>=<span class="string">"17"</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">"10 9 9 9 8 9"</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">                    Social engagement</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"nav-link"</span> <span class="attr">href</span>=<span class="string">"http://getbootstrap.com/docs/4.0/examples/dashboard/#"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> <span class="attr">width</span>=<span class="string">"24"</span> <span class="attr">height</span>=<span class="string">"24"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 24 24"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke</span>=<span class="string">"currentColor"</span> <span class="attr">stroke-width</span>=<span class="string">"2"</span> <span class="attr">stroke-linecap</span>=<span class="string">"round"</span> <span class="attr">stroke-linejoin</span>=<span class="string">"round"</span> <span class="attr">class</span>=<span class="string">"feather feather-file-text"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">"14 2 14 8 20 8"</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">"16"</span> <span class="attr">y1</span>=<span class="string">"13"</span> <span class="attr">x2</span>=<span class="string">"8"</span> <span class="attr">y2</span>=<span class="string">"13"</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">"16"</span> <span class="attr">y1</span>=<span class="string">"17"</span> <span class="attr">x2</span>=<span class="string">"8"</span> <span class="attr">y2</span>=<span class="string">"17"</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">"10 9 9 9 8 9"</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">                    Year-end sale</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>其他页面，导入公共部分后，再使用框架添加组件即可</p><p>index.html</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, shrink-to-fit=no"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"author"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>请登录<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Bootstrap core CSS --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/bootstrap.min.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Custom styles for this template --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/signin.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">"text-center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-signin"</span> <span class="attr">th:action</span>=<span class="string">"@&#123;/user/login&#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"mb-4"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/img/bootstrap-solid.svg&#125;"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"72"</span> <span class="attr">height</span>=<span class="string">"72"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"h3 mb-3 font-weight-normal"</span> <span class="attr">th:text</span>=<span class="string">"#&#123;login.tip&#125;"</span>&gt;</span>Please sign in<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red"</span> <span class="attr">th:text</span>=<span class="string">"$&#123;msg&#125;"</span> <span class="attr">th:if</span>=<span class="string">"$&#123;not #strings.isEmpty(msg)&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">th:placeholder</span>=<span class="string">"#&#123;login.username&#125;"</span> <span class="attr">required</span>=<span class="string">""</span> <span class="attr">autofocus</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">th:placeholder</span>=<span class="string">"#&#123;login.password&#125;"</span> <span class="attr">required</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox mb-3"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"remember-me"</span>&gt;</span> [[#&#123;login.remember&#125;]]</span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-lg btn-primary btn-block"</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>[[#&#123;login.sign&#125;]]<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"mt-5 mb-3 text-muted"</span>&gt;</span>© 2017-2018<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--国际化操作，thymeleaf传参使用()--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-sm"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/index.html(l=zh_CN)&#125;"</span>&gt;</span>中文<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-sm"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/index.html(l=en_US)&#125;"</span>&gt;</span>English<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​        dashboard.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- saved from url=(0052)http://getbootstrap.com/docs/4.0/examples/dashboard/ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, shrink-to-fit=no"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"author"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Dashboard Template for Bootstrap<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Bootstrap core CSS --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/bootstrap.min.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Custom styles for this template --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/dashboard.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css"><span class="comment">/* Chart.js */</span></span></span><br><span class="line"></span><br><span class="line"><span class="css"><span class="keyword">@-webkit-keyframes</span> chartjs-render-animation &#123;</span></span><br><span class="line">from &#123;</span><br><span class="line"><span class="css"><span class="selector-tag">opacity</span>: 0<span class="selector-class">.99</span></span></span><br><span class="line">&#125;</span><br><span class="line">to &#123;</span><br><span class="line">opacity: 1</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="keyword">@keyframes</span> chartjs-render-animation &#123;</span></span><br><span class="line">from &#123;</span><br><span class="line"><span class="css"><span class="selector-tag">opacity</span>: 0<span class="selector-class">.99</span></span></span><br><span class="line">&#125;</span><br><span class="line">to &#123;</span><br><span class="line">opacity: 1</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.chartjs-render-monitor</span> &#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">-webkit-animation</span>: <span class="selector-tag">chartjs-render-animation</span> 0<span class="selector-class">.001s</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">animation</span>: <span class="selector-tag">chartjs-render-animation</span> 0<span class="selector-class">.001s</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--顶部导航栏--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">"~&#123;comment/comments::topbar&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--侧边栏--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--为解决高亮问题，传递参数给组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">"~&#123;comment/comments::sidebar(active='main.html')&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">main</span> <span class="attr">role</span>=<span class="string">"main"</span> <span class="attr">class</span>=<span class="string">"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"chartjs-size-monitor"</span> <span class="attr">style</span>=<span class="string">"position: absolute; left: 0px; top: 0px; right: 0px; bottom: 0px; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"chartjs-size-monitor-expand"</span> <span class="attr">style</span>=<span class="string">"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position:absolute;width:1000000px;height:1000000px;left:0;top:0"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"chartjs-size-monitor-shrink"</span> <span class="attr">style</span>=<span class="string">"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position:absolute;width:200%;height:200%;left:0; top:0"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"h2"</span>&gt;</span>Dashboard<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-toolbar mb-2 mb-md-0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group mr-2"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-sm btn-outline-secondary"</span>&gt;</span>Share<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-sm btn-outline-secondary"</span>&gt;</span>Export<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-sm btn-outline-secondary dropdown-toggle"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span> <span class="attr">width</span>=<span class="string">"24"</span> <span class="attr">height</span>=<span class="string">"24"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 24 24"</span> <span class="attr">fill</span>=<span class="string">"none"</span> <span class="attr">stroke</span>=<span class="string">"currentColor"</span> <span class="attr">stroke-width</span>=<span class="string">"2"</span> <span class="attr">stroke-linecap</span>=<span class="string">"round"</span> <span class="attr">stroke-linejoin</span>=<span class="string">"round"</span> <span class="attr">class</span>=<span class="string">"feather feather-calendar"</span>&gt;</span><span class="tag">&lt;<span class="name">rect</span> <span class="attr">x</span>=<span class="string">"3"</span> <span class="attr">y</span>=<span class="string">"4"</span> <span class="attr">width</span>=<span class="string">"18"</span> <span class="attr">height</span>=<span class="string">"18"</span> <span class="attr">rx</span>=<span class="string">"2"</span> <span class="attr">ry</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span><span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">"16"</span> <span class="attr">y1</span>=<span class="string">"2"</span> <span class="attr">x2</span>=<span class="string">"16"</span> <span class="attr">y2</span>=<span class="string">"6"</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span><span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">"8"</span> <span class="attr">y1</span>=<span class="string">"2"</span> <span class="attr">x2</span>=<span class="string">"8"</span> <span class="attr">y2</span>=<span class="string">"6"</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span><span class="tag">&lt;<span class="name">line</span> <span class="attr">x1</span>=<span class="string">"3"</span> <span class="attr">y1</span>=<span class="string">"10"</span> <span class="attr">x2</span>=<span class="string">"21"</span> <span class="attr">y2</span>=<span class="string">"10"</span>&gt;</span><span class="tag">&lt;/<span class="name">line</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">                This week</span><br><span class="line">              <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">class</span>=<span class="string">"my-4 chartjs-render-monitor"</span> <span class="attr">id</span>=<span class="string">"myChart"</span> <span class="attr">width</span>=<span class="string">"1076"</span> <span class="attr">height</span>=<span class="string">"454"</span> <span class="attr">style</span>=<span class="string">"display: block; width: 1076px; height: 454px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Bootstrap core JavaScript</span></span><br><span class="line"><span class="comment">    ================================================== --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Placed at the end of the document so the pages load faster --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/jquery-3.2.1.slim.min.js&#125;"</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/popper.min.js&#125;"</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/bootstrap.min.js&#125;"</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Icons --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/feather.min.js&#125;"</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">feather.replace()</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Graphs --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/Chart.min.js&#125;"</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> ctx = <span class="built_in">document</span>.getElementById(<span class="string">"myChart"</span>);</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> myChart = <span class="keyword">new</span> Chart(ctx, &#123;</span></span><br><span class="line"><span class="actionscript">type: <span class="string">'line'</span>,</span></span><br><span class="line">data: &#123;</span><br><span class="line"><span class="actionscript">labels: [<span class="string">"Sunday"</span>, <span class="string">"Monday"</span>, <span class="string">"Tuesday"</span>, <span class="string">"Wednesday"</span>, <span class="string">"Thursday"</span>, <span class="string">"Friday"</span>, <span class="string">"Saturday"</span>],</span></span><br><span class="line">datasets: [&#123;</span><br><span class="line">data: [15339, 21345, 18483, 24003, 23489, 24092, 12034],</span><br><span class="line">lineTension: 0,</span><br><span class="line"><span class="actionscript">backgroundColor: <span class="string">'transparent'</span>,</span></span><br><span class="line"><span class="actionscript">borderColor: <span class="string">'#007bff'</span>,</span></span><br><span class="line">borderWidth: 4,</span><br><span class="line"><span class="actionscript">pointBackgroundColor: <span class="string">'#007bff'</span></span></span><br><span class="line">&#125;]</span><br><span class="line">&#125;,</span><br><span class="line">options: &#123;</span><br><span class="line">scales: &#123;</span><br><span class="line">yAxes: [&#123;</span><br><span class="line">ticks: &#123;</span><br><span class="line"><span class="actionscript">beginAtZero: <span class="literal">false</span></span></span><br><span class="line">&#125;</span><br><span class="line">&#125;]</span><br><span class="line">&#125;,</span><br><span class="line">legend: &#123;</span><br><span class="line"><span class="actionscript">display: <span class="literal">false</span>,</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>add.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- saved from url=(0052)http://getbootstrap.com/docs/4.0/examples/dashboard/ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, shrink-to-fit=no"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"author"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Dashboard Template for Bootstrap<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap core CSS --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/bootstrap.min.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Custom styles for this template --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/dashboard.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="comment">/* Chart.js */</span></span></span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="keyword">@-webkit-keyframes</span> chartjs-render-animation &#123;</span></span><br><span class="line">            from &#123;</span><br><span class="line"><span class="css">                <span class="selector-tag">opacity</span>: 0<span class="selector-class">.99</span></span></span><br><span class="line">            &#125;</span><br><span class="line">            to &#123;</span><br><span class="line">                opacity: 1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="keyword">@keyframes</span> chartjs-render-animation &#123;</span></span><br><span class="line">            from &#123;</span><br><span class="line"><span class="css">                <span class="selector-tag">opacity</span>: 0<span class="selector-class">.99</span></span></span><br><span class="line">            &#125;</span><br><span class="line">            to &#123;</span><br><span class="line">                opacity: 1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.chartjs-render-monitor</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">-webkit-animation</span>: <span class="selector-tag">chartjs-render-animation</span> 0<span class="selector-class">.001s</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">animation</span>: <span class="selector-tag">chartjs-render-animation</span> 0<span class="selector-class">.001s</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--顶部导航栏--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">"~&#123;comment/comments::topbar&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--侧边栏--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">"~&#123;comment/comments::sidebar(active='list.html')&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">main</span> <span class="attr">role</span>=<span class="string">"main"</span> <span class="attr">class</span>=<span class="string">"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">"@&#123;/add&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"name"</span>&gt;</span>name<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"name"</span> <span class="attr">placeholder</span>=<span class="string">"name"</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"email"</span>&gt;</span>email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"email"</span> <span class="attr">placeholder</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--这里别忘了添加value（1代表男性，0代表女性）--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>男</span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span>女</span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span>&gt;</span>department<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--我们在controller接收的是一个employee，所以我们需要提交的是其中一个属性--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"department.id"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">th:each</span>=<span class="string">"dept:$&#123;departments&#125;"</span> <span class="attr">th:text</span>=<span class="string">"$&#123;dept.getDepartmentName()&#125;"</span> <span class="attr">th:value</span>=<span class="string">"$&#123;dept.getId()&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"birth"</span>&gt;</span>birth<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"birth"</span> <span class="attr">placeholder</span>=<span class="string">"birth"</span> <span class="attr">name</span>=<span class="string">"birth"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Bootstrap core JavaScript</span></span><br><span class="line"><span class="comment">================================================== --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Placed at the end of the document so the pages load faster --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/jquery-3.2.1.slim.min.js&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/popper.min.js&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/bootstrap.min.js&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Icons --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/feather.min.js&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    feather.replace()</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Graphs --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/Chart.min.js&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> ctx = <span class="built_in">document</span>.getElementById(<span class="string">"myChart"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> myChart = <span class="keyword">new</span> Chart(ctx, &#123;</span></span><br><span class="line"><span class="actionscript">        type: <span class="string">'line'</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="actionscript">            labels: [<span class="string">"Sunday"</span>, <span class="string">"Monday"</span>, <span class="string">"Tuesday"</span>, <span class="string">"Wednesday"</span>, <span class="string">"Thursday"</span>, <span class="string">"Friday"</span>, <span class="string">"Saturday"</span>],</span></span><br><span class="line">            datasets: [&#123;</span><br><span class="line">                data: [15339, 21345, 18483, 24003, 23489, 24092, 12034],</span><br><span class="line">                lineTension: 0,</span><br><span class="line"><span class="actionscript">                backgroundColor: <span class="string">'transparent'</span>,</span></span><br><span class="line"><span class="actionscript">                borderColor: <span class="string">'#007bff'</span>,</span></span><br><span class="line">                borderWidth: 4,</span><br><span class="line"><span class="actionscript">                pointBackgroundColor: <span class="string">'#007bff'</span></span></span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;,</span><br><span class="line">        options: &#123;</span><br><span class="line">            scales: &#123;</span><br><span class="line">                yAxes: [&#123;</span><br><span class="line">                    ticks: &#123;</span><br><span class="line"><span class="actionscript">                        beginAtZero: <span class="literal">false</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;,</span><br><span class="line">            legend: &#123;</span><br><span class="line"><span class="actionscript">                display: <span class="literal">false</span>,</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>list.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- saved from url=(0052)http://getbootstrap.com/docs/4.0/examples/dashboard/ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, shrink-to-fit=no"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"author"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">title</span>&gt;</span>Dashboard Template for Bootstrap<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- Bootstrap core CSS --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/bootstrap.min.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- Custom styles for this template --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/dashboard.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css">         <span class="comment">/* Chart.js */</span></span></span><br><span class="line">         </span><br><span class="line"><span class="css">         <span class="keyword">@-webkit-keyframes</span> chartjs-render-animation &#123;</span></span><br><span class="line">            from &#123;</span><br><span class="line"><span class="css">               <span class="selector-tag">opacity</span>: 0<span class="selector-class">.99</span></span></span><br><span class="line">            &#125;</span><br><span class="line">            to &#123;</span><br><span class="line">               opacity: 1</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         </span><br><span class="line"><span class="css">         <span class="keyword">@keyframes</span> chartjs-render-animation &#123;</span></span><br><span class="line">            from &#123;</span><br><span class="line"><span class="css">               <span class="selector-tag">opacity</span>: 0<span class="selector-class">.99</span></span></span><br><span class="line">            &#125;</span><br><span class="line">            to &#123;</span><br><span class="line">               opacity: 1</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         </span><br><span class="line"><span class="css">         <span class="selector-class">.chartjs-render-monitor</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">-webkit-animation</span>: <span class="selector-tag">chartjs-render-animation</span> 0<span class="selector-class">.001s</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">animation</span>: <span class="selector-tag">chartjs-render-animation</span> 0<span class="selector-class">.001s</span>;</span></span><br><span class="line">         &#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--顶部导航栏--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">"~&#123;comment/comments::topbar&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--侧边栏--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">"~&#123;comment/comments::sidebar(active='list.html')&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">main</span> <span class="attr">role</span>=<span class="string">"main"</span> <span class="attr">class</span>=<span class="string">"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4"</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/toAdd"</span> <span class="attr">class</span>=<span class="string">"btn btn-sm btn-success"</span>&gt;</span>添加员工<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">               <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"table-responsive"</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-striped table-sm"</span>&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">th</span>&gt;</span>id<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">th</span>&gt;</span>name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">th</span>&gt;</span>email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">th</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">th</span>&gt;</span>department<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">th</span>&gt;</span>birth<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                     <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">"emp : $&#123;employees&#125;"</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;emp.getId()&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;emp.getName()&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;emp.getEmail()&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;emp.getGender()&#125;==1?'男':'女'"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;emp.getDepartment().getDepartmentName()&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;#dates.format(emp.getBirth(),'yyyy-MM-dd HH:mm:ss')&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                              <span class="comment">&lt;!--点击,restful风格传参--&gt;</span></span><br><span class="line">                              <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-sm btn-primary"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/toUpdate/&#125;+$&#123;emp.getId()&#125;"</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                              <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-sm btn-danger"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/delete/&#125;+$&#123;emp.getId()&#125;"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                     <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- Bootstrap core JavaScript</span></span><br><span class="line"><span class="comment">    ================================================== --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- Placed at the end of the document so the pages load faster --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/jquery-3.2.1.slim.min.js&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/popper.min.js&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/bootstrap.min.js&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- Icons --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/feather.min.js&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">         feather.replace()</span><br><span class="line">      <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- Graphs --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/Chart.min.js&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">         <span class="keyword">var</span> ctx = <span class="built_in">document</span>.getElementById(<span class="string">"myChart"</span>);</span></span><br><span class="line"><span class="actionscript">         <span class="keyword">var</span> myChart = <span class="keyword">new</span> Chart(ctx, &#123;</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'line'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">               labels: [<span class="string">"Sunday"</span>, <span class="string">"Monday"</span>, <span class="string">"Tuesday"</span>, <span class="string">"Wednesday"</span>, <span class="string">"Thursday"</span>, <span class="string">"Friday"</span>, <span class="string">"Saturday"</span>],</span></span><br><span class="line">               datasets: [&#123;</span><br><span class="line">                  data: [15339, 21345, 18483, 24003, 23489, 24092, 12034],</span><br><span class="line">                  lineTension: 0,</span><br><span class="line"><span class="actionscript">                  backgroundColor: <span class="string">'transparent'</span>,</span></span><br><span class="line"><span class="actionscript">                  borderColor: <span class="string">'#007bff'</span>,</span></span><br><span class="line">                  borderWidth: 4,</span><br><span class="line"><span class="actionscript">                  pointBackgroundColor: <span class="string">'#007bff'</span></span></span><br><span class="line">               &#125;]</span><br><span class="line">            &#125;,</span><br><span class="line">            options: &#123;</span><br><span class="line">               scales: &#123;</span><br><span class="line">                  yAxes: [&#123;</span><br><span class="line">                     ticks: &#123;</span><br><span class="line"><span class="actionscript">                        beginAtZero: <span class="literal">false</span></span></span><br><span class="line">                     &#125;</span><br><span class="line">                  &#125;]</span><br><span class="line">               &#125;,</span><br><span class="line">               legend: &#123;</span><br><span class="line"><span class="actionscript">                  display: <span class="literal">false</span>,</span></span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;);</span><br><span class="line">      <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>update.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- saved from url=(0052)http://getbootstrap.com/docs/4.0/examples/dashboard/ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, shrink-to-fit=no"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"author"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Dashboard Template for Bootstrap<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap core CSS --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/bootstrap.min.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Custom styles for this template --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/dashboard.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="comment">/* Chart.js */</span></span></span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="keyword">@-webkit-keyframes</span> chartjs-render-animation &#123;</span></span><br><span class="line">            from &#123;</span><br><span class="line"><span class="css">                <span class="selector-tag">opacity</span>: 0<span class="selector-class">.99</span></span></span><br><span class="line">            &#125;</span><br><span class="line">            to &#123;</span><br><span class="line">                opacity: 1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="keyword">@keyframes</span> chartjs-render-animation &#123;</span></span><br><span class="line">            from &#123;</span><br><span class="line"><span class="css">                <span class="selector-tag">opacity</span>: 0<span class="selector-class">.99</span></span></span><br><span class="line">            &#125;</span><br><span class="line">            to &#123;</span><br><span class="line">                opacity: 1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.chartjs-render-monitor</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">-webkit-animation</span>: <span class="selector-tag">chartjs-render-animation</span> 0<span class="selector-class">.001s</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">animation</span>: <span class="selector-tag">chartjs-render-animation</span> 0<span class="selector-class">.001s</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--顶部导航栏--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">"~&#123;comment/comments::topbar&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--侧边栏--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">"~&#123;comment/comments::sidebar(active='list.html')&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">main</span> <span class="attr">role</span>=<span class="string">"main"</span> <span class="attr">class</span>=<span class="string">"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">"@&#123;/update&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">th:value</span>=<span class="string">"$&#123;employee.getId()&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"name"</span>&gt;</span>name<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"name"</span> <span class="attr">placeholder</span>=<span class="string">"name"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">th:value</span>=<span class="string">"$&#123;employee.getName()&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"email"</span>&gt;</span>email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"email"</span> <span class="attr">placeholder</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">th:value</span>=<span class="string">"$&#123;employee.getEmail()&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--这里别忘了添加value（1代表男性，0代表女性）--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">th:checked</span>=<span class="string">"$&#123;employee.getGender()==1&#125;"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>男</span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">th:checked</span>=<span class="string">"$&#123;employee.getGender()==0&#125;"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span>女</span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span>&gt;</span>department<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--我们在controller接收的是一个employee，所以我们需要提交的是其中一个属性--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"department.id"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">th:selected</span>=<span class="string">"$&#123;employee.getDepartment().getId()==dept.getId()&#125;"</span> <span class="attr">th:each</span>=<span class="string">"dept:$&#123;departments&#125;"</span> <span class="attr">th:text</span>=<span class="string">"$&#123;dept.getDepartmentName()&#125;"</span> <span class="attr">th:value</span>=<span class="string">"$&#123;dept.getId()&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"birth"</span>&gt;</span>birth<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"birth"</span> <span class="attr">placeholder</span>=<span class="string">"birth"</span> <span class="attr">name</span>=<span class="string">"birth"</span> <span class="attr">th:value</span>=<span class="string">"$&#123;#dates.format(employee.getBirth(),'yyyy/MM/dd')&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Bootstrap core JavaScript</span></span><br><span class="line"><span class="comment">================================================== --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Placed at the end of the document so the pages load faster --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/jquery-3.2.1.slim.min.js&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/popper.min.js&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/bootstrap.min.js&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Icons --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/feather.min.js&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    feather.replace()</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Graphs --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/Chart.min.js&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> ctx = <span class="built_in">document</span>.getElementById(<span class="string">"myChart"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> myChart = <span class="keyword">new</span> Chart(ctx, &#123;</span></span><br><span class="line"><span class="actionscript">        type: <span class="string">'line'</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="actionscript">            labels: [<span class="string">"Sunday"</span>, <span class="string">"Monday"</span>, <span class="string">"Tuesday"</span>, <span class="string">"Wednesday"</span>, <span class="string">"Thursday"</span>, <span class="string">"Friday"</span>, <span class="string">"Saturday"</span>],</span></span><br><span class="line">            datasets: [&#123;</span><br><span class="line">                data: [15339, 21345, 18483, 24003, 23489, 24092, 12034],</span><br><span class="line">                lineTension: 0,</span><br><span class="line"><span class="actionscript">                backgroundColor: <span class="string">'transparent'</span>,</span></span><br><span class="line"><span class="actionscript">                borderColor: <span class="string">'#007bff'</span>,</span></span><br><span class="line">                borderWidth: 4,</span><br><span class="line"><span class="actionscript">                pointBackgroundColor: <span class="string">'#007bff'</span></span></span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;,</span><br><span class="line">        options: &#123;</span><br><span class="line">            scales: &#123;</span><br><span class="line">                yAxes: [&#123;</span><br><span class="line">                    ticks: &#123;</span><br><span class="line"><span class="actionscript">                        beginAtZero: <span class="literal">false</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;,</span><br><span class="line">            legend: &#123;</span><br><span class="line"><span class="actionscript">                display: <span class="literal">false</span>,</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>控制器</p><ul><li>login.controller</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.thymeleaf.util.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/user/login"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(@RequestParam(<span class="string">"username"</span>)</span> String username, @<span class="title">RequestParam</span><span class="params">(<span class="string">"password"</span>)</span> String password, Model model, HttpSession session)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"ryan"</span>.equals(username) &amp;&amp; <span class="string">"ryan123"</span>.equals(password))&#123;</span><br><span class="line">            session.setAttribute(<span class="string">"loginUser"</span>,username);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"redirect:/main.html"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        model.addAttribute(<span class="string">"msg"</span>, <span class="string">"用户名或者密码错误"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/user/logout"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">logout</span><span class="params">(HttpSession session)</span></span>&#123;</span><br><span class="line">        session.invalidate();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:/index.html"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>employeeController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ryan.dao.DepartmentDao;</span><br><span class="line"><span class="keyword">import</span> com.ryan.dao.EmployeeDao;</span><br><span class="line"><span class="keyword">import</span> com.ryan.pojo.Department;</span><br><span class="line"><span class="keyword">import</span> com.ryan.pojo.Employee;</span><br><span class="line"><span class="keyword">import</span> org.aopalliance.intercept.Interceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.Banner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmployeeController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> EmployeeDao employeeDao;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DepartmentDao departmentDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/employees"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">list</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        Collection&lt;Employee&gt; employees = employeeDao.getAllEmployee();</span><br><span class="line">        model.addAttribute(<span class="string">"employees"</span>,employees);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"/emp/list"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/toAdd"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toAddPage</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        Collection&lt;Department&gt; departments = departmentDao.getAllDepartment();</span><br><span class="line">        model.addAttribute(<span class="string">"departments"</span>,departments);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"emp/add"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/add"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">(Employee employee)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"add==&gt;"</span> + employee);</span><br><span class="line">        employeeDao.save(employee);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:/employees"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//别忘了使用restful风格接收数据</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/toUpdate/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toUpdate</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> Integer id, Model model)</span>&#123;</span><br><span class="line">        Employee employee = employeeDao.getEmployeeById(id);</span><br><span class="line">        model.addAttribute(<span class="string">"employee"</span>,employee);</span><br><span class="line">        Collection&lt;Department&gt; departments = departmentDao.getAllDepartment();</span><br><span class="line">        model.addAttribute(<span class="string">"departments"</span>,departments);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"emp/update"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/update"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">update</span><span class="params">(Employee employee)</span></span>&#123;</span><br><span class="line">        employeeDao.save(employee);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:/employees"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/delete/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">delete</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span>Integer id)</span>&#123;</span><br><span class="line">        employeeDao.deleteEmployeeById(id);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:/employees"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li>测试:略</li></ol><p>注意点：</p><ul><li>掌握扩展mvc配置，比如视图解析器，地区解析器，拦截器等</li><li>掌握国际化操作（语言切换）</li><li>常见thymeleaf表达式要会使用，下面是从官方文档复制过来的</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Simple expressions:</span><br><span class="line">Variable Expressions: $&#123;...&#125;</span><br><span class="line">Selection Variable Expressions: *&#123;...&#125;</span><br><span class="line">Message Expressions: #&#123;...&#125;</span><br><span class="line">Link URL Expressions: @&#123;...&#125;</span><br><span class="line">Fragment Expressions: ~&#123;...&#125;</span><br><span class="line">Literals</span><br><span class="line">Text literals: &#39;one text&#39; , &#39;Another one!&#39; ,…</span><br><span class="line">Number literals: 0 , 34 , 3.0 , 12.3 ,…</span><br><span class="line">Boolean literals: true , false</span><br><span class="line">Null literal: null</span><br><span class="line">Literal tokens: one , sometext , main ,…</span><br><span class="line">Text operations:</span><br><span class="line">String concatenation: +</span><br><span class="line">Literal substitutions: |The name is $&#123;name&#125;|</span><br><span class="line">Arithmetic operations:</span><br><span class="line">Binary operators: + , - , * , &#x2F; , %</span><br><span class="line">Minus sign (unary operator): -</span><br><span class="line">Boolean operations:</span><br><span class="line">Binary operators: and , or</span><br><span class="line">Boolean negation (unary operator): ! , not</span><br><span class="line">Comparisons and equality:</span><br><span class="line">Comparators: &gt; , &lt; , &gt;&#x3D; , &lt;&#x3D; ( gt , lt , ge , le )</span><br><span class="line">Equality operators: &#x3D;&#x3D; , !&#x3D; ( eq , ne )</span><br><span class="line">Conditional operators:</span><br><span class="line">If-then: (if) ? (then)</span><br><span class="line">If-then-else: (if) ? (then) : (else)</span><br><span class="line">Default: (value) ?: (defaultvalue)</span><br></pre></td></tr></table></figure><ul><li>学会抽取公共部分，然后在其他页面中插入即可， 这样可以节省大量代码量</li><li>学会高亮技巧（传参，三元运算符判断）</li><li>强化增删改查基本操作</li></ul><p>推荐模板：layui、x-admin</p><h2 id="11、Spring-Data（整合JDBC和DRUID）"><a href="#11、Spring-Data（整合JDBC和DRUID）" class="headerlink" title="11、Spring Data（整合JDBC和DRUID）"></a>11、Spring Data（整合JDBC和DRUID）</h2><p>Spring Data简介</p><p>对于数据访问层，无论是 SQL(关系型数据库) 还是 NOSQL(非关系型数据库)，Spring Boot 底层都是采用 Spring Data 的方式进行统一处理。</p><p>Spring Boot 底层都是采用 Spring Data 的方式进行统一处理各种数据库，Spring Data 也是 Spring 中与 Spring Boot、Spring Cloud 等齐名的知名项目。</p><p>整合JDBC</p><ol><li>创建一个项目（记得勾选数据库相关的配置）</li></ol><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/71a5VuU4PNxEjtw.png" alt="image-20200526224954667"></p><ol start="2"><li><p>确保导入好相关依赖</p></li><li><p>编写yaml配置文件连接数据库，数据源可以通过type来修改，这里修改为druid</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">1227</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#Spring Boot 默认是不注入这些属性值的，需要自己绑定</span></span><br><span class="line">    <span class="comment">#druid 数据源专有配置</span></span><br><span class="line">    <span class="attr">initialSize:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">minIdle:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">maxActive:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">maxWait:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">timeBetweenEvictionRunsMillis:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">minEvictableIdleTimeMillis:</span> <span class="number">300000</span></span><br><span class="line">    <span class="attr">validationQuery:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">    <span class="attr">testWhileIdle:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">testOnBorrow:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">testOnReturn:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">poolPreparedStatements:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入</span></span><br><span class="line">    <span class="comment">#如果允许时报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority</span></span><br><span class="line">    <span class="comment">#则导入 log4j 依赖即可，Maven 地址：https://mvnrepository.com/artifact/log4j/log4j</span></span><br><span class="line">    <span class="attr">filters:</span> <span class="string">stat,wall,log4j</span></span><br><span class="line">    <span class="attr">maxPoolPreparedStatementPerConnectionSize:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">useGlobalDataSourceStat:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">connectionProperties:</span> <span class="string">druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500</span></span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>配置完这一些东西后，我们就可以直接去使用了，因为SpringBoot已经默认帮我们进行了自动配置；去测试类测试一下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Spring04DataApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//自动配置数据源（application.yaml）</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DataSource dataSource;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="comment">//查看默认的数据源</span></span><br><span class="line">        <span class="comment">//经测试是使用hikari的数据源</span></span><br><span class="line">        <span class="comment">//我们还可以通过配置来指定使用哪种数据源，例如druid：class com.alibaba.druid.pool.DruidDataSource，当然底层永远都是jdbc</span></span><br><span class="line">        System.out.println(dataSource.getClass());<span class="comment">//class com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">        <span class="comment">//获取连接,报错，需要设置时区，回到配置文件中设置时区</span></span><br><span class="line">        Connection connection = dataSource.getConnection();</span><br><span class="line">        System.out.println(connection);<span class="comment">//HikariProxyConnection@350703813 wrapping com.mysql.cj.jdbc.ConnectionImpl@242ff747</span></span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="JDBCTemplate"><a href="#JDBCTemplate" class="headerlink" title="JDBCTemplate"></a>JDBCTemplate</h2><p>1、有了数据源(com.zaxxer.hikari.HikariDataSource)，然后可以拿到数据库连接(java.sql.Connection)，有了连接，就可以使用原生的 JDBC 语句来操作数据库；</p><p>2、即使不使用第三方第数据库操作框架，如 MyBatis等，Spring 本身也对原生的JDBC 做了轻量级的封装，即JdbcTemplate。</p><p>3、数据库操作的所有 CRUD 方法都在 JdbcTemplate 中。</p><p>4、Spring Boot 不仅提供了默认的数据源，同时默认已经配置好了 JdbcTemplate 放在了容器中，程序员只需自己注入即可使用</p><p>5、JdbcTemplate 的自动配置是依赖 org.springframework.boot.autoconfigure.jdbc 包下的 JdbcTemplateConfiguration 类</p><p><strong>JdbcTemplate主要提供以下几类方法：</strong></p><ul><li>execute方法：可以用于执行任何SQL语句，一般用于执行DDL语句；</li><li>update方法及batchUpdate方法：update方法用于执行新增、修改、删除等语句；batchUpdate方法用于执行批处理相关语句；</li><li>query方法及queryForXXX方法：用于执行查询相关语句；</li><li>call方法：用于执行存储过程、函数相关语句。</li></ul><p>编写一个Controller，注入 jdbcTemplate，编写测试方法进行访问测试；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//从源码可以看到，springboot已经有默认的数据源，然后我们也配置了相关数据，所以JdbcTemplate我们可以直接使用</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/query"</span>)</span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&lt;String, Object&gt;&gt; query()&#123;</span><br><span class="line">        String sql = <span class="string">"select * from mybatis.user"</span>;</span><br><span class="line">        List&lt;Map&lt;String, Object&gt;&gt; maps = jdbcTemplate.queryForList(sql);</span><br><span class="line">        <span class="keyword">return</span> maps;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/add"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String sql = <span class="string">"insert into mybatis.user(id,username,gender,address) values(8,'ryan','male','guangzhou')"</span>;</span><br><span class="line">        jdbcTemplate.update(sql);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"insert ok"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/update/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">update</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">int</span> id)</span>&#123;</span><br><span class="line">        String sql = <span class="string">"update mybatis.user set username=?,gender=?,address=? where id="</span>+ id;</span><br><span class="line">        <span class="comment">//封装</span></span><br><span class="line">        Object[] objects = <span class="keyword">new</span> Object[<span class="number">3</span>];</span><br><span class="line">        objects[<span class="number">0</span>] = <span class="string">"ryan24"</span>;</span><br><span class="line">        objects[<span class="number">1</span>] = <span class="string">"female"</span>;</span><br><span class="line">        objects[<span class="number">2</span>] = <span class="string">"beijing"</span>;</span><br><span class="line">        jdbcTemplate.update(sql,objects);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"update ok"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/delete/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">delete</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">int</span> id)</span>&#123;</span><br><span class="line">        String sql = <span class="string">"delete from mybatis.user where id="</span> + id;</span><br><span class="line">        jdbcTemplate.update(sql);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"delete ok"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Druid简介"><a href="#Druid简介" class="headerlink" title="Druid简介"></a>Druid简介</h2><p>Java程序很大一部分要操作数据库，为了提高性能操作数据库的时候，又不得不使用数据库连接池。</p><p>Druid 是阿里巴巴开源平台上一个数据库连接池实现，结合了 C3P0、DBCP 等 DB 池的优点，同时加入了日志监控。</p><p>Druid 可以很好的监控 DB 池连接和 SQL 的执行情况，天生就是针对监控而生的 DB 连接池。</p><p>Druid已经在阿里巴巴部署了超过600个应用，经过一年多生产环境大规模部署的严苛考验。</p><p>Spring Boot 2.0 以上默认使用 Hikari 数据源，可以说 Hikari 与 Driud 都是当前 Java Web 上最优秀的数据源，我们来重点介绍 Spring Boot 如何集成 Druid 数据源，如何实现数据库监控。</p><p>使用：</p><ol><li><p>添加依赖</p></li><li><p>yaml配置文件中切换数据源类型</p></li><li><p>测试类中测试数据源类型是否切换成功</p></li><li><p>现在需要程序员自己为 DruidDataSource 绑定全局配置文件中的参数，再添加到容器中，而不再使用 Spring Boot 的自动生成了；我们需要 自己添加 DruidDataSource 组件到容器中，并绑定属性；</p></li><li><p>接着配置后台监控和过滤器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.support.http.StatViewServlet;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.support.http.WebStatFilter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.FilterRegistrationBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.ServletRegistrationBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.Filter;</span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绑定druid的数据源</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">druidDataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置后台监控</span></span><br><span class="line">    <span class="comment">//其实这里的配置相当于之前的web.xml配置，只是springboot内置了servlet，就没有了servlet，config就成了一种替代方法，想要配置什么就new什么即可</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletRegistrationBean <span class="title">statViewServlet</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ServletRegistrationBean&lt;StatViewServlet&gt; bean = <span class="keyword">new</span> ServletRegistrationBean&lt;&gt;(<span class="keyword">new</span> StatViewServlet(), <span class="string">"/druid/*"</span>);</span><br><span class="line">        <span class="comment">//后台需要有人登陆</span></span><br><span class="line">        Map&lt;String, String&gt; initParameters = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="comment">//用户名和密码为固定参数，不要乱写</span></span><br><span class="line">        initParameters.put(<span class="string">"loginUsername"</span>,<span class="string">"ryan"</span>);</span><br><span class="line">        initParameters.put(<span class="string">"loginPassword"</span>,<span class="string">"ryan123"</span>);</span><br><span class="line">        <span class="comment">//允许谁访问</span></span><br><span class="line">        initParameters.put(<span class="string">"allow"</span>,<span class="string">""</span>);</span><br><span class="line">        bean.setInitParameters(initParameters);<span class="comment">//初始化参数，通过源码可以看到需要传一个map</span></span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置过滤器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FilterRegistrationBean <span class="title">webStatFilter</span><span class="params">()</span></span>&#123;</span><br><span class="line">        FilterRegistrationBean&lt;Filter&gt; bean = <span class="keyword">new</span> FilterRegistrationBean&lt;&gt;();</span><br><span class="line">        bean.setFilter(<span class="keyword">new</span> WebStatFilter());</span><br><span class="line">        Map&lt;String, String&gt; initParameters = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        initParameters.put(<span class="string">"exclusions"</span>,<span class="string">"*.js,*.css,/druid/*"</span>);</span><br><span class="line">        bean.setInitParameters(initParameters);</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完毕后，我们可以选择访问 ：<a href="http://localhost:8080/druid/login.html" target="_blank" rel="noopener">http://localhost:8080/druid/login.html</a></p></li></ol><h2 id="12、springboot整合mybatis"><a href="#12、springboot整合mybatis" class="headerlink" title="12、springboot整合mybatis"></a>12、springboot整合mybatis</h2><ol><li><p>新建一个项目，记得勾选web、sql相关</p></li><li><p>额外导入两个依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--mybatis-springboot--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--lombok--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>配置数据源</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">1227</span></span><br><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line"><span class="meta">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="comment"># 别名</span></span><br><span class="line"><span class="meta">mybatis.type-aliases-package</span>=<span class="string">com.ryan.pojo</span></span><br></pre></td></tr></table></figure></li><li><p>连接数据库</p></li><li><p>编写pojo类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写mapper接口，并添加@Mapper注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ryan.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="comment">//使用 @Mapper，最终 Mybatis 会有一个拦截器，会自动的把 @Mapper 注解的接口生成动态代理类。</span></span><br><span class="line"><span class="comment">// 这点可以在 MapperRegistry 类中的源代码中查看。</span></span><br><span class="line"><span class="comment">//@Mapper 注解针对的是一个一个的类，相当于是一个一个 Mapper.xml 文件。</span></span><br><span class="line"><span class="comment">// 如果一个接口一个接口的使用 @Mapper，太麻烦了，于是 @MapperScan 就应用而生了。可以在application类中使用</span></span><br><span class="line"><span class="comment">// @MapperScan 配置一个或多个包路径，自动的扫描这些包路径下的类，自动的为它们生成代理类。</span></span><br><span class="line"><span class="meta">@Mapper</span><span class="comment">//一般都是使用在接口上</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select * from mybatis.user"</span>)</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">queryUserList</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select * from mybatis.user where id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function">User <span class="title">queryUserById</span><span class="params">(@Param(<span class="string">"id"</span>)</span> <span class="keyword">int</span> id)</span>;</span><br><span class="line">    <span class="meta">@Insert</span>(<span class="string">"insert into user(id,username,gender,address) values(#&#123;id&#125;,#&#123;username&#125;,#&#123;gender&#125;,#&#123;address&#125;)"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">addUser</span><span class="params">(User user)</span></span>;</span><br><span class="line">    <span class="meta">@Delete</span>(<span class="string">"delete from mybatis.user where id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteUserById</span><span class="params">(@Param(<span class="string">"id"</span>)</span> <span class="keyword">int</span> id)</span>;</span><br><span class="line">    <span class="meta">@Update</span>(<span class="string">"update mybatis.user set username=#&#123;username&#125;,address=#&#123;address&#125; where id=#&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateUser</span><span class="params">(User user)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写service层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.serviece;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ryan.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">queryUserList</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">User <span class="title">queryUserById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">addUser</span><span class="params">(User user)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteUserById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateUser</span><span class="params">(User user)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.serviece;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ryan.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.ryan.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;<span class="comment">//此处报错，程序本身没有问题，是idea的问题</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserMapper</span><span class="params">(UserMapper userMapper)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userMapper = userMapper;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">queryUserList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.queryUserList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryUserById</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.queryUserById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">addUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.addUser(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteUserById</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.deleteUserById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.updateUser(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写controller层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ryan.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.ryan.serviece.UserServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserServiceImpl userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/queryUserList"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">queryUserList</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;User&gt; users = userService.queryUserList();</span><br><span class="line">        <span class="keyword">return</span> users;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/queryUserById/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryUserById</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">int</span> id)</span>&#123;</span><br><span class="line">        User user = userService.queryUserById(id);</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/addUser"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">addUser</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">        user.setId(<span class="number">11</span>);</span><br><span class="line">        user.setUsername(<span class="string">"ryan222"</span>);</span><br><span class="line">        user.setGender(<span class="string">"男"</span>);</span><br><span class="line">        user.setAddress(<span class="string">"天河"</span>);</span><br><span class="line">        userService.addUser(user);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"insert ok"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/deleteUserById/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">deleteUserById</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">int</span> id)</span>&#123;</span><br><span class="line">        userService.deleteUserById(id);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"delete ok"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/updateUser"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">updateUser</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">        user.setId(<span class="number">8</span>);</span><br><span class="line">        user.setUsername(<span class="string">"ryan1111"</span>);</span><br><span class="line">        user.setAddress(<span class="string">"shanghai"</span>);</span><br><span class="line">        userService.updateUser(user);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"update ok"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试：略</p></li></ol><p>注意点：</p><ul><li>整和mybatis时，别忘了导入mybatis提供的启动器（依赖）</li><li>别忘了配置数据源，同时可以通过mybatis.配置相关mybatis</li><li>写mapper接口时别忘了加上注解@Mapper</li><li>写serviece层时自动装配可能会出现报错：Could not autowire. No beans of ‘UserMapper’ type found.，可以忽略，程序可正常运行，可能属于idea的bug</li></ul><h2 id="13、Spring-Security"><a href="#13、Spring-Security" class="headerlink" title="13、Spring Security"></a>13、Spring Security</h2><p>安全简介</p><p>在 Web 开发中，安全一直是非常重要的一个方面。安全虽然属于应用的非功能性需求，但是应该在应用开发的初期就考虑进来。如果在应用开发的后期才考虑安全的问题，就可能陷入一个两难的境地：一方面，应用存在严重的安全漏洞，无法满足用户的要求，并可能造成用户的隐私数据被攻击者窃取；另一方面，应用的基本架构已经确定，要修复安全漏洞，可能需要对系统的架构做出比较重大的调整，因而需要更多的开发时间，影响应用的发布进程。因此，从应用开发的第一天就应该把安全相关的因素考虑进来，并在整个应用的开发过程中。</p><p>市面上存在比较有名的：Shiro，Spring Security ！</p><p>这里需要阐述一下的是，每一个框架的出现都是为了解决某一问题而产生了，那么Spring Security框架的出现是为了解决什么问题呢？</p><p>Spring Security是一个功能强大且高度可定制的身份验证和访问控制框架。它实际上是保护基于spring的应用程序的标准。</p><p>Spring Security是一个框架，侧重于为Java应用程序提供身份验证和授权。与所有Spring项目一样，Spring安全性的真正强大之处在于它可以轻松地扩展以满足定制需求</p><p>从官网的介绍中可以知道这是一个权限框架。想我们之前做项目是没有使用框架是怎么控制权限的？对于权限 一般会细分为功能权限，访问权限，和菜单权限。代码会写的非常的繁琐，冗余。</p><p>怎么解决之前写权限代码繁琐，冗余的问题，一些主流框架就应运而生而Spring Scecurity就是其中的一种。</p><p>Spring 是一个非常流行和成功的 Java 应用开发框架。Spring Security 基于 Spring 框架，提供了一套 Web 应用安全性的完整解决方案。一般来说，Web 应用的安全性包括用户认证（Authentication）和用户授权（Authorization）两个部分。用户认证指的是验证某个用户是否为系统中的合法主体，也就是说用户能否访问该系统。用户认证一般要求用户提供用户名和密码。系统通过校验用户名和密码来完成认证过程。用户授权指的是验证某个用户是否有权限执行某个操作。在一个系统中，不同用户所具有的权限是不同的。比如对一个文件来说，有的用户只能进行读取，而有的用户可以进行修改。一般来说，系统会为不同的用户分配不同的角色，而每个角色则对应一系列的权限。</p><p>对于上面提到的两种应用情景，Spring Security 框架都有很好的支持。在用户认证方面，Spring Security 框架支持主流的认证方式，包括 HTTP 基本认证、HTTP 表单验证、HTTP 摘要认证、OpenID 和 LDAP 等。在用户授权方面，Spring Security 提供了基于角色的访问控制和访问控制列表（Access Control List，ACL），可以对应用中的领域对象进行细粒度的控制。</p><p>实战测试：</p><ol><li><p>新建一个项目，需支持web和thylmeleaf</p></li><li><p>导入静态资源</p></li><li><p>编写一个controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RouterController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(&#123;<span class="string">"/"</span>,<span class="string">"/index"</span>&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/toLogin"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toLogin</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"views/login"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/level1/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">level1</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">int</span> id)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"views/level1/"</span>+id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/level2/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">level2</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">int</span> id)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"views/level2/"</span>+id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/level3/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">level3</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">int</span> id)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"views/level3/"</span>+id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li>测试实验环境是否ok</li></ol><p>认识SpringSecurity</p><p>Spring Security 是针对Spring项目的安全框架，也是Spring Boot底层安全模块默认的技术选型，他可以实现强大的Web安全控制，对于安全控制，我们仅需要引入spring-boot-starter-security 模块，进行少量的配置，即可实现强大的安全管理！</p><p>记住几个类：</p><ul><li>WebSecurityConfigurerAdapter：自定义Security策略</li><li>AuthenticationManagerBuilder：自定义认证策略</li><li>@EnableWebSecurity：开启WebSecurity模式</li></ul><p>Spring Security的两个主要目标是 “认证” 和 “授权”（访问控制）。</p><p><strong>“认证”（Authentication）</strong></p><p>身份验证是关于验证您的凭据，如用户名/用户ID和密码，以验证您的身份。</p><p>身份验证通常通过用户名和密码完成，有时与身份验证因素结合使用。</p><p> <strong>“授权” （Authorization）</strong></p><p>授权发生在系统成功验证您的身份后，最终会授予您访问资源（如信息，文件，数据库，资金，位置，几乎任何内容）的完全权限。</p><p>这个概念是通用的，而不是只在Spring Security 中存在。</p><p>认证和授权</p><p>目前，我们的测试环境，是谁都可以访问的，我们使用 Spring Security 增加上认证和授权的功能</p><ol><li><p>导入SpringSecurity依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--spring security--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写SpringSecurity配置类</p><ul><li>写一个配置类，继承WebSecurityConfigurerAdapter类，并加上@EnableWebSecurity注解</li><li>重写两个配置方法（授权和认证）：configure(HttpSecurity http)、configure(AuthenticationManagerBuilder auth)</li><li>然后定制相关安全操作即可</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"></span><br><span class="line"><span class="comment">//AOP思想，拦截器</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line">    <span class="comment">//请求授权的规则</span></span><br><span class="line">    <span class="comment">//假设，首页所有人都可以访问，功能页需要权限才能访问</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        http.authorizeRequests()</span><br><span class="line">                .antMatchers(<span class="string">"/"</span>).permitAll()</span><br><span class="line">                .antMatchers(<span class="string">"/level1/**"</span>).hasRole(<span class="string">"vip1"</span>)</span><br><span class="line">                .antMatchers(<span class="string">"/level2/**"</span>).hasRole(<span class="string">"vip2"</span>)</span><br><span class="line">                .antMatchers(<span class="string">"/level3/**"</span>).hasRole(<span class="string">"vip3"</span>);</span><br><span class="line">        <span class="comment">//没有权限会默认跳到登陆页面</span></span><br><span class="line">        <span class="comment">//登陆页面默认使用自带的，还可以自定义成自己写的</span></span><br><span class="line">        <span class="comment">//注意默认的用户名和密码是username,password，如果前端的name属性不一样，可在前端改，也可以在这里改</span></span><br><span class="line">        http.formLogin().loginPage(<span class="string">"/toLogin"</span>).loginProcessingUrl(<span class="string">"/login"</span>);</span><br><span class="line">        <span class="comment">//添加记住我功能,注意参数名称也是要和前端的保持一致,本质也是cookie，默认保存2周时间</span></span><br><span class="line">        http.rememberMe().rememberMeParameter(<span class="string">"remember"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//注销</span></span><br><span class="line">        http.csrf().disable();<span class="comment">//关闭csrf功能</span></span><br><span class="line">        http.logout().logoutSuccessUrl(<span class="string">"/"</span>);<span class="comment">//注销成功后跳到首页</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//认证</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//正常情况下是从数据库中获取数据，这里没连接数据库就从内存中设置用户即可</span></span><br><span class="line">        <span class="comment">//测试登陆后报了一个500错误：There is no PasswordEncoder mapped for the id "null"</span></span><br><span class="line">        <span class="comment">//这是新版本要求的，需要设置密码编码</span></span><br><span class="line">        auth.inMemoryAuthentication().passwordEncoder(<span class="keyword">new</span> BCryptPasswordEncoder())</span><br><span class="line">                .withUser(<span class="string">"guest"</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">"123456"</span>)).roles(<span class="string">"vip1"</span>).and()</span><br><span class="line">                .withUser(<span class="string">"ryan"</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">"123456"</span>)).roles(<span class="string">"vip1"</span>,<span class="string">"vip2"</span>).and()</span><br><span class="line">                .withUser(<span class="string">"root"</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">"123456"</span>)).roles(<span class="string">"vip1"</span>,<span class="string">"vip2"</span>,<span class="string">"vip3"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试：略</p></li></ol><p>注意：</p><ul><li><p>在静态资源中会整合security和thymeleaf，具体可以看下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:sec</span>=<span class="string">"http://www.thymeleaf.org/thymeleaf-extras-springsecurity4"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, maximum-scale=1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--semantic-ui--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/semantic-ui/2.4.1/semantic.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/qinjiang/css/qinstyle.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--主容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui container"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui segment"</span> <span class="attr">id</span>=<span class="string">"index-header-nav"</span> <span class="attr">th:fragment</span>=<span class="string">"nav-menu"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui secondary menu"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>  <span class="attr">th:href</span>=<span class="string">"@&#123;/index&#125;"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--登录注销--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right menu"</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--未登录，就现实登陆按钮--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">sec:authorize</span>=<span class="string">"!isAuthenticated()"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/toLogin&#125;"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"address card icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 登录</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--已登录，就显示用户名和注销按钮--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">sec:authorize</span>=<span class="string">"isAuthenticated()"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">sec:authentication</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">sec:authorize</span>=<span class="string">"isAuthenticated()"</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--注销--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/logout&#125;"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"sign-out icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 注销</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui segment"</span> <span class="attr">style</span>=<span class="string">"text-align: center"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Spring Security Study by 秦疆<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui three column stackable grid"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--vip1角色只显示level1，下同，也就是动态菜单，根据不同的用户权限来现实不同的信息--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span> <span class="attr">sec:authorize</span>=<span class="string">"hasRole('vip1')"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui raised segment"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span>Level 1<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/level1/1&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"bullhorn icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-1-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/level1/2&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"bullhorn icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-1-2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/level1/3&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"bullhorn icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-1-3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span> <span class="attr">sec:authorize</span>=<span class="string">"hasRole('vip2')"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui raised segment"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span>Level 2<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/level2/1&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"bullhorn icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-2-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/level2/2&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"bullhorn icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-2-2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/level2/3&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"bullhorn icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-2-3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span> <span class="attr">sec:authorize</span>=<span class="string">"hasRole('vip3')"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui raised segment"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span>Level 3<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/level3/1&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"bullhorn icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-3-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/level3/2&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"bullhorn icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-3-2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/level3/3&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"bullhorn icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-3-3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/qinjiang/js/jquery-3.1.1.min.js&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/qinjiang/js/semantic.min.js&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>有些参数名称，前端和后台的要保持一致,比如用户名、密码还有记住我的参数， 都是在后台提供的功能，这里要和后台保持一致</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, maximum-scale=1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--semantic-ui--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/semantic-ui/2.4.1/semantic.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--主容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui container"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui segment"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align: center"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui placeholder segment"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui column very relaxed stackable grid"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"column"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui form"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">"@&#123;/login&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"field"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">label</span>&gt;</span>Username<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui left icon input"</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"Username"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"user icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"field"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">label</span>&gt;</span>Password<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui left icon input"</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"lock icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"field"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"remember"</span>&gt;</span> 记住我</span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"ui blue submit button"</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align: center"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui label"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">i</span>&gt;</span>注册</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">small</span>&gt;</span>blog.kuangstudy.com<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui segment"</span> <span class="attr">style</span>=<span class="string">"text-align: center"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Spring Security Study by 秦疆<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/qinjiang/js/jquery-3.1.1.min.js&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/qinjiang/js/semantic.min.js&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>spring security的思想也是依靠aop思想的，不需要修改任何原来的代码，只需要添加一个config</p></li></ul><h2 id="14、Shiro"><a href="#14、Shiro" class="headerlink" title="14、Shiro"></a>14、Shiro</h2><p>什么是Shiro？</p><ul><li>Apache Shiro是一个java的安全（权限）框架</li><li>Shiro可以非常容易开发出足够好的应用，其不仅可以用在javaSE环境，也可以用在javaEE环境</li><li>Shiro可以完成认证、授权、会话管理、web集成、缓存等</li></ul><p>有哪些功能？</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/Doat3FYZqfA8B2I.png" alt="image-20200527183704882"></p><p>Authentication：用户认证（登录）<br>Authorization：权限控制<br>Session Management：会话管理<br>Cryptography：数据加密<br>Web Support：支持web的API<br>Caching：缓存<br>Concurrency：支持多线程应用程序<br>Testing：测试的支持<br>“Run As”：假设一个用户为另一个用户的身份<br>“Remember Me”：在Session中保存用户身份</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/nVKjvNiy792YtaQ.png" alt="image-20200528102704408"></p><p>可以看到：应用代码直接交互的对象是Subject，也就是说Shiro的对外API核心就是Subject；<br>其每个 API 的含义：<br>Subject ：主体，代表了当前“用户”，这个用户不一定是一个具体的人，与当前应用交互<br>的任何东西都是 Subject，如网络爬虫，机器人等；即一个抽象概念；所有 Subject 都绑定<br>到 SecurityManager，与 Subject 的所有交互都会委托给 SecurityManager；可以把 Subject 认<br>为是一个门面；SecurityManager 才是实际的执行者；<br>SecurityManager ：安全管理器；即所有与安全有关的操作都会与 SecurityManager 交互；<br>且它管理着所有 Subject；可以看出它是 Shiro 的核心，它负责与后边介绍的其他组件进行<br>交互，如果学习过 SpringMVC，你可以把它看成 DispatcherServlet 前端控制器；<br>Realm： ：域，Shiro 从从 Realm 获取安全数据（如用户、角色、权限），就是说 SecurityManager<br>要验证用户身份，那么它需要从 Realm 获取相应的用户进行比较以确定用户身份是否合法；</p><p>也需要从 Realm 得到用户相应的角色/权限进行验证用户是否能进行操作；可以把 Realm 看<br>成 DataSource，即安全数据源。</p><p>也就是说对于我们而言，最简单的一个 Shiro 应用：<br>1、 应用代码通过 Subject 来进行认证和授权，而 Subject 又委托给 SecurityManager；<br>2、 我们需要给 Shiro 的 SecurityManager 注入 Realm，从而让 SecurityManager 能得到合法<br>的用户及其权限进行判断。</p><p><strong>接下来我们来从 Shiro 内部来看下 Shiro 的架构</strong></p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/78xm6yEjActw1pY.png" alt="image-20200528102855937"></p><h3 id="shiro整合springboot"><a href="#shiro整合springboot" class="headerlink" title="shiro整合springboot"></a>shiro整合springboot</h3><ol><li><p>新建项目，确保导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ryan<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-shiro<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-shiro<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>11<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--shiro-spring --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--数据库驱动--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--shiro整合thymeleaf--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--thymeleaf-extras-shiro --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.theborakompanioni<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-extras-shiro<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--mybatis-springboot--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--druid --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--lombok--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>创建数据库</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/NZu7t1eg5zqnbrQ.png" alt="image-20200528103402908"></p></li><li><p>配置yaml/properties文件（整合mybatis）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">1227</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#Spring Boot 默认是不注入这些属性值的，需要自己绑定</span></span><br><span class="line">    <span class="comment">#druid 数据源专有配置</span></span><br><span class="line">    <span class="attr">initialSize:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">minIdle:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">maxActive:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">maxWait:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">timeBetweenEvictionRunsMillis:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">minEvictableIdleTimeMillis:</span> <span class="number">300000</span></span><br><span class="line">    <span class="attr">validationQuery:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">    <span class="attr">testWhileIdle:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">testOnBorrow:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">testOnReturn:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">poolPreparedStatements:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入</span></span><br><span class="line">    <span class="comment">#如果允许时报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority</span></span><br><span class="line">    <span class="comment">#则导入 log4j 依赖即可，Maven 地址：https://mvnrepository.com/artifact/log4j/log4j</span></span><br><span class="line">    <span class="attr">filters:</span> <span class="string">stat,wall,log4j</span></span><br><span class="line">    <span class="attr">maxPoolPreparedStatementPerConnectionSize:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">useGlobalDataSourceStat:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">connectionProperties:</span> <span class="string">druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500</span></span><br></pre></td></tr></table></figure><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mybatis.type-aliases-package</span>=<span class="string">com.ryan.pojo</span></span><br><span class="line"><span class="meta">mybatis.mapper-locations</span>=<span class="string">classpath:mapper/*.xml</span></span><br></pre></td></tr></table></figure></li><li><p>编写实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String perms;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="5"><li><p>编写mapper接口和mapper.xml(此文件放在classpath的mapper目录下)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ryan.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function">User <span class="title">queryUserByName</span><span class="params">(String username)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.ryan.mapper.UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"queryUserByName"</span> <span class="attr">resultType</span>=<span class="string">"user"</span>&gt;</span></span><br><span class="line">        select * from mybatis.user where username=#&#123;username&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ol start="6"><li><p>导入静态资源：略</p></li><li><p>编写controller并测试环境</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.security.SecurityUtil;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.IncorrectCredentialsException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UnknownAccountException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(&#123;<span class="string">"/"</span>,<span class="string">"/index"</span>&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">"msg"</span>,<span class="string">"hello,Shiro"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/user/add"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"/user/add"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/user/update"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">update</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"/user/update"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/toLogin"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toLogin</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"login"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/login"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(String username, String password,Model model)</span></span>&#123;</span><br><span class="line">        <span class="comment">//获取当前用户</span></span><br><span class="line">        Subject currentUser = SecurityUtils.getSubject();</span><br><span class="line">        <span class="comment">//封装用户的账号密码</span></span><br><span class="line">        UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(username, password);</span><br><span class="line">        <span class="comment">//执行登陆方法，如果用户名或者密码有误则分别抛出异常,如果正确则进入首页</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            currentUser.login(token);</span><br><span class="line">            model.addAttribute(<span class="string">"msg"</span>,username);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (UnknownAccountException e)&#123;</span><br><span class="line">            model.addAttribute(<span class="string">"msg"</span>,<span class="string">"用户名错误"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"login"</span>;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IncorrectCredentialsException e)&#123;</span><br><span class="line">            model.addAttribute(<span class="string">"msg"</span>,<span class="string">"密码错误"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"login"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/unauthorized"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">unauthorizedUrl</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"抱歉，未经授权无法访问次网页"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="8"><li><p>编写config</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ryan.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.ryan.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.ryan.service.UserServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.AuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.SimpleAuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.AuthorizingRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.PrincipalCollection;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义一个Realm，只需要继承AuthorizingRealm类并重写方法即可</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserServiceImpl userService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//授权</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principalCollection)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"执行了=&gt;doGetAuthorizationInfo方法"</span>);</span><br><span class="line">        SimpleAuthorizationInfo info = <span class="keyword">new</span> SimpleAuthorizationInfo();</span><br><span class="line">        Subject subject = SecurityUtils.getSubject();</span><br><span class="line">        User currentUser = (User) subject.getPrincipal();<span class="comment">//获取当前用户并强转</span></span><br><span class="line">        String perms = currentUser.getPerms();<span class="comment">//需要携带权限</span></span><br><span class="line">        info.addStringPermission(perms);<span class="comment">//有权限的才会房型</span></span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//认证</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken token)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"执行了=&gt;doGetAuthenticationInfo方法"</span>);</span><br><span class="line">        UsernamePasswordToken userToken = (UsernamePasswordToken) token;</span><br><span class="line">        User user = userService.queryUserByName(userToken.getUsername());</span><br><span class="line">        <span class="keyword">if</span>(user == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;<span class="comment">//抛出异常</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//密码错误，shiro来操作,这里的principal为user，这样在授权也可以获取到此用户</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SimpleAuthenticationInfo(user,user.getPassword(),<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> at.pollux.thymeleaf.shiro.dialect.ShiroDialect;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.Realm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.DefaultSecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.spring.web.ShiroFilterFactoryBean;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.web.mgt.DefaultWebSecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShiroConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//第三步：ShiroFilterFactoryBean</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ShiroFilterFactoryBean <span class="title">shiroFilterFactoryBean</span><span class="params">(@Qualifier(<span class="string">"securityManager"</span>)</span> DefaultSecurityManager defaultSecurityManager)</span>&#123;</span><br><span class="line">        ShiroFilterFactoryBean bean = <span class="keyword">new</span> ShiroFilterFactoryBean();</span><br><span class="line">        <span class="comment">//设置安全管理器</span></span><br><span class="line">        bean.setSecurityManager(defaultSecurityManager);</span><br><span class="line">        <span class="comment">//添加shiro的内置过滤器</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            anon:无需认证就可以访问</span></span><br><span class="line"><span class="comment">            authc：必须认证了才能访问</span></span><br><span class="line"><span class="comment">            user:必须拥有 记住我 功能才能使用</span></span><br><span class="line"><span class="comment">            perms：拥有对某个资源的权限才能访问</span></span><br><span class="line"><span class="comment">            role：拥有某个角色权限才能访问</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt; filterMap = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line">        <span class="comment">//设置授权,注意，授权要设置在认证之前，经测试如果放在认证后面会失效</span></span><br><span class="line">        <span class="comment">//添加了授权设置之后，应该在数据库的用户表中添加授权数据，并在UserRealm接收和判断</span></span><br><span class="line">        filterMap.put(<span class="string">"/user/add"</span>,<span class="string">"perms[add]"</span>);</span><br><span class="line">        filterMap.put(<span class="string">"/user/update"</span>,<span class="string">"perms[update]"</span>);</span><br><span class="line">        <span class="comment">//filterMap.put("/user/add","authc");</span></span><br><span class="line">        <span class="comment">//filterMap.put("/user/update","authc");</span></span><br><span class="line">        <span class="comment">//获取使用通配符</span></span><br><span class="line">        filterMap.put(<span class="string">"/user/*"</span>,<span class="string">"authc"</span>);</span><br><span class="line">        bean.setFilterChainDefinitionMap(filterMap);</span><br><span class="line">        <span class="comment">//设置登陆页面</span></span><br><span class="line">        bean.setLoginUrl(<span class="string">"/toLogin"</span>);</span><br><span class="line">        <span class="comment">//设置未授权页面</span></span><br><span class="line">        bean.setUnauthorizedUrl(<span class="string">"/unauthorized"</span>);</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//第二步：SecurityManager</span></span><br><span class="line">    <span class="comment">//需要传参并绑定userRealm的bean，没有其别名的话默认就是其方法名</span></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"securityManager"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DefaultWebSecurityManager <span class="title">getDefaultWebSecurityManager</span><span class="params">(@Qualifier(<span class="string">"userRealm"</span>)</span> UserRealm userRealm)</span>&#123;</span><br><span class="line">        DefaultWebSecurityManager securityManager = <span class="keyword">new</span> DefaultWebSecurityManager();</span><br><span class="line">        <span class="comment">//关联UserRealm</span></span><br><span class="line">        securityManager.setRealm(userRealm);</span><br><span class="line">        <span class="keyword">return</span> securityManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//第一步：Realm</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserRealm <span class="title">userRealm</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//需要另外自定义一个Realm类</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> UserRealm();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//shiro整合thymeleaf需要以下设置</span></span><br><span class="line">    <span class="comment">//添加这段代码的目的就是为了在thymeleaf中使用shiro的自定义tag。</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ShiroDialect <span class="title">shiroDialect</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ShiroDialect();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="9"><li><p>整合shiro-thymeleaf</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:shiro</span>=<span class="string">"http://www.pollix.at/thymeleaf/shiro"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">"$&#123;msg&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--未登陆--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--验证当前用户是否为“访客”，即未认证（包含未记住）的用户--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">shiro:guest</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:text</span>=<span class="string">"登陆"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/toLogin&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--已登录--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 认证通过或已记住的用户--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">shiro:user</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:text</span>=<span class="string">"注销"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--是否有add权限--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">shiro:hasPermission</span>=<span class="string">"add"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/user/add&#125;"</span>&gt;</span>add<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--是否有update权限--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">shiro:hasPermission</span>=<span class="string">"update"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/user/update&#125;"</span>&gt;</span>update<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ol start="10"><li>测试：略</li></ol><h2 id="15、Swagger"><a href="#15、Swagger" class="headerlink" title="15、Swagger"></a>15、Swagger</h2><p>学习目标：</p><ul><li>了解Swagger的作用和概念</li><li>了解前后端分离</li><li>在SpringBoot中集成Swagger</li></ul><p>swagger简介</p><p>现在开发，很多采用前后端分离的模式，前端只负责调用接口，进行渲染，前端和后端的唯一联系，变成了API接口。因此，API文档变得越来越重要。swagger是一个方便我们更好的编写API文档的框架，而且swagger可以模拟http请求调用。</p><p>大部分采取的方式：Vue + SpringBoot，Vue通过js渲染页面，后端把数据传递给js，早期前端只负责写页面，然后把写好的HTML页面给后端，后端使用模板引擎（Jsp，Thymeleaf、 freemarker）进行开发。</p><p>前后端分离的好处：各自开发，相对独立，松耦合，前后端通过API进行交互，后端提供接口给前端，前端去调用该接口，但可能会导致前后端团队人员不能做到及时协商，出现一些问题。解决方式：早期使用实时更新文档，但非常繁琐，后来又使用postman来进行一些测试。</p><p>使用：</p><ol><li><p>新建一个springboot+web项目</p></li><li><p>导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ryan<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-08-swagger<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-08-swagger<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>11<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--springfox-swagger2 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--springfox-swagger-ui --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试环境：略</p></li><li><p>编写Swagger配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.swagger.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.env.Environment;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.RequestHandler;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.PathSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.RequestHandlerSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.ApiInfo;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.Contact;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spi.DocumentationType;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spring.web.plugins.Docket;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.swagger2.annotations.EnableSwagger2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger</span>2</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerConfig</span> </span>&#123;</span><br><span class="line">    <span class="comment">//swagger有自己的bean实例——Docket</span></span><br><span class="line">    <span class="comment">//配置了swagger</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">docket</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//假设这里有一个业务，我只希望在生产环境中使用swagger，其他环境不需要</span></span><br><span class="line">        <span class="comment">//第一步，配置多个环境，第二步：传一个环境参数（Environment），</span></span><br><span class="line">        <span class="comment">//第三步：获取当前环境（environment.acceptsProfiles(profiles)），第四步：判断环境，第五步，传到enable方法中即可</span></span><br><span class="line">        <span class="comment">//这里就不多测试了</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                <span class="comment">//自定义组名（团队开发中的一组），如果有多个组，就是多个Docket，一个组对应一个Docket</span></span><br><span class="line">                .groupName(<span class="string">"ryan"</span>)</span><br><span class="line">                .enable(<span class="keyword">true</span>)<span class="comment">//是否开启swagger，如果为false，则swagger不能在浏览器中被访问</span></span><br><span class="line">                <span class="comment">//测试题，</span></span><br><span class="line">                .select()</span><br><span class="line">                <span class="comment">//配置指定需要扫描的包，除了basePackage还有其他的可以点出来看，例如any none...</span></span><br><span class="line">                .apis(RequestHandlerSelectors.basePackage(<span class="string">"com.ryan.swagger.controller"</span>))</span><br><span class="line">                <span class="comment">//.paths(PathSelectors.any())//此方法为过滤方法</span></span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        Contact contact = <span class="keyword">new</span> Contact(<span class="string">"ryan"</span>, <span class="string">"https://blog.csdn.net/codebeef"</span>, <span class="string">"635726567@qq.com"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ApiInfo(</span><br><span class="line">                <span class="string">"ryan的SwaggerApi文档"</span>,</span><br><span class="line">                <span class="string">"努力努力再努力"</span>,</span><br><span class="line">                <span class="string">"v1.0"</span>,</span><br><span class="line">                <span class="string">"https://blog.csdn.net/codebeef"</span>,</span><br><span class="line">                contact,</span><br><span class="line">                <span class="string">"Apache 2.0"</span>,</span><br><span class="line">                <span class="string">"http://www.apache.org/licenses/LICENSE-2.0"</span>,</span><br><span class="line">                <span class="keyword">new</span> ArrayList()</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/F8BYDHotq2gMA7d.png" alt="image-20200528152547254"></p></li><li><p>编写实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.swagger.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModel;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiModel</span>(<span class="string">"用户实体类"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(<span class="string">"用户名"</span>)</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(<span class="string">"密码"</span>)</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String username, String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：通过注解给实体类添加api</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/gIzq4Ju6PNlMYSk.png" alt="image-20200528152717170"></p></li><li><p>编写controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.swagger.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ryan.swagger.pojo.User;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.Api;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiOperation;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Api</span>(description = <span class="string">"用户管理API"</span>)</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation</span>(<span class="string">"添加用户"</span>)</span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/add"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">add</span><span class="params">(@ApiParam(<span class="string">"用户名"</span>)</span> String username, @<span class="title">ApiParam</span><span class="params">(<span class="string">"密码"</span>)</span> String password)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> User();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation</span>(<span class="string">"修改用户"</span>)</span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/update"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">update</span><span class="params">(@ApiParam(<span class="string">"用户名"</span>)</span> String username, @<span class="title">ApiParam</span><span class="params">(<span class="string">"密码"</span>)</span> String password)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"修改完成"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation</span>(<span class="string">"删除用户"</span>)</span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/delete"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">delete</span><span class="params">(@ApiParam(<span class="string">"用户编号"</span>)</span> Integer id)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"已删除"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation</span>(<span class="string">"查询用户"</span>)</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/query"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">query</span><span class="params">()</span></span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(<span class="string">"ryan"</span>);</span><br><span class="line">        user.setPassword(<span class="string">"ryan123"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> User();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：通过注解添加api，注意RequestMapping会把所有方式都显示出来</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/N1o6Pzg4UC9Ws7t.png" alt="image-20200528152847741"></p><p>还可以在上面进行测试</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/oMPz4sZSGWCbyjB.png" alt="image-20200528153050771"></p></li></ol><p>注解总结：</p><p>swagger通过注解表明该接口会生成文档，包括接口名、请求方法、参数、返回信息</p><p>@Api：修饰整个类，描述Controller的作用</p><p>@ApiOperation：描述一个类的一个方法，或者说一个接口</p><p>@ApiModel：用对象来接收参数 ，修饰类</p><p>@ApiModelProperty：用对象接收参数时，描述对象的一个字段</p><p>@ApiResponse：HTTP响应其中1个描述</p><p>@ApiResponses：HTTP响应整体描述，一般描述错误的响应</p><p>@ApiIgnore：使用该注解忽略这个API</p><p>@ApiError ：发生错误返回的信息</p><p>@ApiParam：单个参数描述</p><p>@ApiImplicitParam：一个请求参数，用在方法上</p><p>@ApiImplicitParams：多个请求参数</p><p>总要的两个依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--springfox-swagger2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--springfox-swagger-ui --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>优点总结：</p><ul><li>我们可以通过Swagger给一些比较难理解的属性或者接口，增加注释信息</li><li>接口文档实时更新</li><li>可以在线测试</li></ul><p>Swagger是一个优秀的工具，几乎所有大公司都有使用他</p><p>注意：在正事发布的时候，关闭Swagger，这是出于安全考虑，同时可以减小内存</p><h2 id="16、异步任务"><a href="#16、异步任务" class="headerlink" title="16、异步任务"></a>16、异步任务</h2><p>在Java中，一般在处理类似的场景之时，都是基于创建独立的线程去完成相应的异步调用逻辑，通过主线程和不同的线程之间的执行流程，从而在启动独立的线程之后，主线程继续执行而不会产生停滞等待的情况。</p><p>使用：</p><ol><li><p>在方法上使用<strong>@Async</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.Async;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AsyncService</span> </span>&#123;</span><br><span class="line">    <span class="comment">//在Spring中，基于@Async标注的方法，称之为异步方法；这些方法将在执行的时候，将会在独立的线程中被执行，</span></span><br><span class="line">    <span class="comment">//调用者无需等待它的完成，即可继续其他的操作。</span></span><br><span class="line">    <span class="comment">//@Async所修饰的函数不要定义为static类型，这样异步调用不会生效</span></span><br><span class="line">    <span class="meta">@Async</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">async</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"hello"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在启动类或者controller类使用@EnableAsync注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.EnableAsync;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在启动类或者Control类加上 @EnableAsync 注解</span></span><br><span class="line"><span class="meta">@EnableAsync</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Springboot09AsyncEmailApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(Springboot09AsyncEmailApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ryan.service.AsyncService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AsyncController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    AsyncService asyncService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/async"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">async</span><span class="params">()</span></span>&#123;</span><br><span class="line">        asyncService.async();<span class="comment">//对于前段来说，线程睡3秒，前段页面则会白屏3秒（转圈），这个用户体验非常不好</span></span><br><span class="line">        <span class="comment">//那我们要怎么去解决他呢？spring帮我们做了，只需要添加相关注解即可</span></span><br><span class="line">        <span class="comment">//第一步，在async()方法上添加@Async注解</span></span><br><span class="line">        <span class="comment">//第二步：在启动类开启异步注解@EnableAsync</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"3秒后"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试：略</p></li></ol><h2 id="17、邮件发送"><a href="#17、邮件发送" class="headerlink" title="17、邮件发送"></a>17、邮件发送</h2><p>在实际项目中，经常需要用到邮件通知功能。比如，用户通过邮件注册，通过邮件找回密码等；又比如通过邮件发送系统情况，通过邮件发送报表信息等等，实际应用场景很多。这里学习以下怎么在springboot中使用邮件功能</p><ol><li><p>在qq邮箱中开启smtp，并生成授权码（配置文件需要使用）</p></li><li><p>新建一个springboot+web项目</p></li><li><p>导入mail依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.mail.host</span>=<span class="string">smtp.qq.com</span></span><br><span class="line"><span class="meta">spring.mail.username</span>=<span class="string">635726567@qq.com</span></span><br><span class="line"><span class="meta">spring.mail.password</span>=<span class="string">上面生成的授权码</span></span><br><span class="line"><span class="meta">spring.mail.protocol</span>=<span class="string">smtp</span></span><br><span class="line"><span class="meta">spring.mail.default-encoding</span>=<span class="string">utf-8</span></span><br></pre></td></tr></table></figure></li><li><p>编写测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.SimpleMailMessage;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.javamail.JavaMailSenderImpl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.javamail.MimeMessageHelper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.mail.MessagingException;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Springboot09AsyncEmailApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span><span class="comment">//注入JavaMailSenderImpl</span></span><br><span class="line">    JavaMailSenderImpl mailSender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//发送一个简单的邮件</span></span><br><span class="line">        <span class="comment">//先创建一个简单邮件实例</span></span><br><span class="line">        SimpleMailMessage simpleMailMessage = <span class="keyword">new</span> SimpleMailMessage();</span><br><span class="line">        simpleMailMessage.setSubject(<span class="string">"ryan，恭喜您中了500万"</span>);<span class="comment">//标题</span></span><br><span class="line">        simpleMailMessage.setText(<span class="string">"请登陆xxx网站领取你的500万奖金，过期不候"</span>);<span class="comment">//内容</span></span><br><span class="line">        simpleMailMessage.setTo(<span class="string">"635726567@qq.com"</span>);<span class="comment">//收件人</span></span><br><span class="line">        simpleMailMessage.setFrom(<span class="string">"635726567@qq.com"</span>);<span class="comment">//发件人</span></span><br><span class="line">        mailSender.send(simpleMailMessage);<span class="comment">//调用mailSender发送</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">contextLoads2</span><span class="params">()</span> <span class="keyword">throws</span> MessagingException </span>&#123;</span><br><span class="line">        <span class="comment">//发送一个复杂的邮件，包括图片，html等等</span></span><br><span class="line">        <span class="comment">//先创建一个复杂邮件实例</span></span><br><span class="line">        MimeMessage mimeMessage = mailSender.createMimeMessage();</span><br><span class="line">        <span class="comment">//复杂邮件组装器,如果需要设置替代文本或添加内联元素或附件,需要开启multipart</span></span><br><span class="line">        MimeMessageHelper helper = <span class="keyword">new</span> MimeMessageHelper(mimeMessage, <span class="keyword">true</span>);</span><br><span class="line">        helper.setSubject(<span class="string">"ryan我爱你"</span>);</span><br><span class="line">        <span class="comment">//写一个html文本，并开启解析html</span></span><br><span class="line">        helper.setText(<span class="string">"&lt;p style='color:red'&gt;自学java，走上致富道路&lt;/p&gt;"</span>, <span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//添加文件</span></span><br><span class="line">        helper.addAttachment(<span class="string">"1.jpg"</span>,<span class="keyword">new</span> File(<span class="string">"C:\\Users\\86131\\Pictures\\1.jpg"</span>));</span><br><span class="line">        helper.setTo(<span class="string">"635726567@qq.com"</span>);</span><br><span class="line">        helper.setFrom(<span class="string">"635726567@qq.com"</span>);</span><br><span class="line">        mailSender.send(mimeMessage);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>总结：</p><ul><li>重点需要导入mail依赖</li><li>然后配置文件，需要填写自己的邮箱信息</li></ul><p>本文讲解了如何在springboot中快速的发邮件。介绍了两种发送邮件的方式：1、普通模式；2、HTML模式。其实还支持多种丰富的模式，比如模板引擎等，这里就不讲解了，其实使用起来大同小异。</p><h2 id="18、Spring-Task-定时任务"><a href="#18、Spring-Task-定时任务" class="headerlink" title="18、Spring Task 定时任务"></a>18、Spring Task 定时任务</h2><ol><li><p>在上一个项目service层直接写一个方法，然后直接执行即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.Async;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.Scheduled;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AsyncService</span> </span>&#123;</span><br><span class="line">    <span class="comment">//在Spring中，基于@Async标注的方法，称之为异步方法；这些方法将在执行的时候，将会在独立的线程中被执行，</span></span><br><span class="line">    <span class="comment">//调用者无需等待它的完成，即可继续其他的操作。</span></span><br><span class="line">    <span class="comment">//@Async所修饰的函数不要定义为static类型，这样异步调用不会生效</span></span><br><span class="line">    <span class="meta">@Async</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">async</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"hello"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        在springboot中开启定时任务，只需要在启动类开启定时支持@EnableScheduling，</span></span><br><span class="line"><span class="comment">        然后在方法上使用即可@Scheduled</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**默认是fixedDelay 上一次执行完毕时间后执行下一轮*/</span></span><br><span class="line">    <span class="comment">//cron表达式，可以百度一下，比较复杂，不需要刻意去记忆</span></span><br><span class="line">    <span class="meta">@Scheduled</span>(cron = <span class="string">"0/5 * * * * *"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        Thread.sleep(<span class="number">6000</span>);</span><br><span class="line">        System.out.println(Thread.currentThread().getName()+<span class="string">"=====&gt;&gt;&gt;&gt;&gt;使用cron  &#123;&#125;"</span>+(System.currentTimeMillis()/<span class="number">1000</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**fixedRate:上一次开始执行时间点之后5秒再执行*/</span></span><br><span class="line">    <span class="meta">@Scheduled</span>(fixedRate = <span class="number">5000</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run1</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        Thread.sleep(<span class="number">6000</span>);</span><br><span class="line">        System.out.println(Thread.currentThread().getName()+<span class="string">"=====&gt;&gt;&gt;&gt;&gt;使用fixedRate  &#123;&#125;"</span>+(System.currentTimeMillis()/<span class="number">1000</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**fixedDelay:上一次执行完毕时间点之后5秒再执行*/</span></span><br><span class="line">    <span class="meta">@Scheduled</span>(fixedDelay = <span class="number">5000</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run2</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        Thread.sleep(<span class="number">7000</span>);</span><br><span class="line">        System.out.println(Thread.currentThread().getName()+<span class="string">"=====&gt;&gt;&gt;&gt;&gt;使用fixedDelay  &#123;&#125;"</span>+(System.currentTimeMillis()/<span class="number">1000</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**第一次延迟2秒后执行，之后按fixedDelay的规则每5秒执行一次*/</span></span><br><span class="line">    <span class="meta">@Scheduled</span>(initialDelay = <span class="number">2000</span>, fixedDelay = <span class="number">5000</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run3</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName()+<span class="string">"=====&gt;&gt;&gt;&gt;&gt;使用initialDelay  &#123;&#125;"</span>+(System.currentTimeMillis()/<span class="number">1000</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>总结：</p><ul><li>第一步：启动类开启定时任务支持@EnableScheduling</li><li>第二步：在指定的方法上使用@Scheduled注解</li><li>相关表达式不需要刻意去记，要用的时候再面向百度编程即可</li></ul><h2 id="19、springboot整合redis"><a href="#19、springboot整合redis" class="headerlink" title="19、springboot整合redis"></a>19、springboot整合redis</h2><p>SpringBoot操作数据：spring-data jpa jdbc mongodb redis!</p><p>SpringData也是和SpringBoot齐名的项目！</p><p>说明：在SpringBoot2.x之后，原来使用的jedis被替换为了lettuce</p><p>jedis：采用的直连，多个线程操作的话，是不安全的，如果想要避免不安全的问题，需要使用jedis pool连接池，更像BIO模式</p><p>lettuce：采用netty，实例可以在多个线程中进行分享，不存在线程不安全的情况，可以减少线程数据了，更像NIO模式</p><p>源码分析：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span>(proxyBeanMethods = <span class="keyword">false</span>)</span><br><span class="line"><span class="meta">@ConditionalOnClass</span>(RedisOperations<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">EnableConfigurationProperties</span>(<span class="title">RedisProperties</span>.<span class="title">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">Import</span>(</span>&#123; LettuceConnectionConfiguration<span class="class">.<span class="keyword">class</span>, <span class="title">JedisConnectionConfiguration</span>.<span class="title">class</span> &#125;)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">RedisAutoConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@ConditionalOnMissingBean</span>(name = <span class="string">"redisTemplate"</span>)<span class="comment">//如果存在我们自定义的RedisTemplate，默认的就会失效</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> RedisTemplate&lt;Object, Object&gt; <span class="title">redisTemplate</span><span class="params">(RedisConnectionFactory redisConnectionFactory)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> UnknownHostException </span>&#123;</span><br><span class="line">        <span class="comment">//默认的RedisTemplate没有过多的设置，redis对象都是需要序列化的，记住</span></span><br><span class="line">        <span class="comment">//两个泛型都是object，我们最常用的是String，Object，所以下面也单独题了一个方法出来</span></span><br><span class="line">        <span class="comment">//我们一般也不会使用默认的，可以自己自定义一个</span></span><br><span class="line">RedisTemplate&lt;Object, Object&gt; template = <span class="keyword">new</span> RedisTemplate&lt;&gt;();</span><br><span class="line">template.setConnectionFactory(redisConnectionFactory);</span><br><span class="line"><span class="keyword">return</span> template;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@ConditionalOnMissingBean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> StringRedisTemplate <span class="title">stringRedisTemplate</span><span class="params">(RedisConnectionFactory redisConnectionFactory)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> UnknownHostException </span>&#123;</span><br><span class="line">StringRedisTemplate template = <span class="keyword">new</span> StringRedisTemplate();</span><br><span class="line">template.setConnectionFactory(redisConnectionFactory);</span><br><span class="line"><span class="keyword">return</span> template;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>序列化配置，系统默认的是jdk序列化</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/ZCwUrMXlbOe7PFK.png" alt="image-20200528225323673"></p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/06/24/YEhmb1oaNWjdGqT.png" alt="image-20200528225334987"></p><p>如果保存的是一个对象，而这个对象没有序列化，则会报一个错：</p><p>org.springframework.data.redis.serializer.SerializationException</p><blockquote><p>下面来整合springboot测试下</p></blockquote><ol><li><p>新建一个springboot+web项目</p></li><li><p>导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ryan<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-10-redis-simple<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-10-redis-simple<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>11<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试环境:略</p></li><li><p>自定义一个RedisConfig</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.springboot10redissimple.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonAutoDetect;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.PropertyAccessor;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.RedisConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.StringRedisSerializer;</span><br><span class="line"></span><br><span class="line"><span class="comment">//固定模板</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//自己定义一个RedisTemplate</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"all"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> RedisTemplate&lt;String, Object&gt; <span class="title">redisTemplate</span><span class="params">(RedisConnectionFactory factory)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 我们为了自己开发方便，一般直接使用 &lt;String, Object &gt;</span></span><br><span class="line">        RedisTemplate&lt;String, Object&gt; template = <span class="keyword">new</span> RedisTemplate&lt;String, Object&gt;();</span><br><span class="line">        template.setConnectionFactory(factory);</span><br><span class="line">        <span class="comment">// Json序列化配置</span></span><br><span class="line">        Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = <span class="keyword">new</span> Jackson2JsonRedisSerializer(Object<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        objectMapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span><br><span class="line">        jackson2JsonRedisSerializer.setObjectMapper(objectMapper);</span><br><span class="line">        <span class="comment">// String 的序列化</span></span><br><span class="line">        StringRedisSerializer stringRedisSerializer = <span class="keyword">new</span> StringRedisSerializer();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// key采用String的序列化方式</span></span><br><span class="line">        template.setKeySerializer(stringRedisSerializer);</span><br><span class="line">        <span class="comment">// hash的key也采用String的序列化方式</span></span><br><span class="line">        template.setHashKeySerializer(stringRedisSerializer);</span><br><span class="line">        <span class="comment">// value序列化 方式采用jackson</span></span><br><span class="line">        template.setValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line">        <span class="comment">// hash的value序列化方式采用jackson</span></span><br><span class="line">        template.setHashValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line">        template.afterPropertiesSet();</span><br><span class="line">        <span class="keyword">return</span> template;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.springboot10redissimple.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.CollectionUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisUtil</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="comment">// @Qualifier("redisTemplate")</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class="line">    <span class="comment">// =============================common============================</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 指定缓存失效时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time 时间(秒)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">expire</span><span class="params">(String key, <span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                redisTemplate.expire(key, time, TimeUnit.SECONDS);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据key 获取过期时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键 不能为null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 时间(秒) 返回0代表为永久有效</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getExpire</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.getExpire(key, TimeUnit.SECONDS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断key是否存在</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true 存在 false不存在</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasKey</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.hasKey(key);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除缓存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 可以传一个值 或多个</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">del</span><span class="params">(String... key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (key != <span class="keyword">null</span> &amp;&amp; key.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (key.length == <span class="number">1</span>) &#123;</span><br><span class="line">                redisTemplate.delete(key[<span class="number">0</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                redisTemplate.delete(CollectionUtils.arrayToList(key));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ============================String=============================</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 普通缓存获取</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">get</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> key == <span class="keyword">null</span> ? <span class="keyword">null</span> : redisTemplate.opsForValue().get(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 普通缓存放入</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true成功 false失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">set</span><span class="params">(String key, Object value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForValue().set(key, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 普通缓存放入并设置时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time  时间(秒) time要大于0 如果time小于等于0 将设置无限期</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true成功 false 失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">set</span><span class="params">(String key, Object value, <span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                redisTemplate.opsForValue().set(key, value, time, TimeUnit.SECONDS);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                set(key, value);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 递增</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> delta 要增加几(大于0)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">incr</span><span class="params">(String key, <span class="keyword">long</span> delta)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (delta &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"递增因子必须大于0"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().increment(key, delta);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 递减</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> delta 要减少几(小于0)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">decr</span><span class="params">(String key, <span class="keyword">long</span> delta)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (delta &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"递减因子必须大于0"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().increment(key, -delta);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ================================Map=================================</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * HashGet</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  键 不能为null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> item 项 不能为null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">hget</span><span class="params">(String key, String item)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().get(key, item);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取hashKey对应的所有键值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 对应的多个键值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;Object, Object&gt; <span class="title">hmget</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().entries(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * HashSet</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map 对应多个键值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true 成功 false 失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hmset</span><span class="params">(String key, Map&lt;String, Object&gt; map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForHash().putAll(key, map);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * HashSet 并设置时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map  对应多个键值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time 时间(秒)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true成功 false失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hmset</span><span class="params">(String key, Map&lt;String, Object&gt; map, <span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForHash().putAll(key, map);</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                expire(key, time);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向一张hash表中放入数据,如果不存在将创建</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> item  项</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true 成功 false失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hset</span><span class="params">(String key, String item, Object value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForHash().put(key, item, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向一张hash表中放入数据,如果不存在将创建</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> item  项</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time  时间(秒) 注意:如果已存在的hash表有时间,这里将会替换原有的时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true 成功 false失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hset</span><span class="params">(String key, String item, Object value, <span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForHash().put(key, item, value);</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                expire(key, time);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除hash表中的值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  键 不能为null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> item 项 可以使多个 不能为null</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hdel</span><span class="params">(String key, Object... item)</span> </span>&#123;</span><br><span class="line">        redisTemplate.opsForHash().delete(key, item);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断hash表中是否有该项的值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  键 不能为null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> item 项 不能为null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true 存在 false不存在</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hHasKey</span><span class="params">(String key, String item)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().hasKey(key, item);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * hash递增 如果不存在,就会创建一个 并把新增后的值返回</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> item 项</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> by   要增加几(大于0)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">hincr</span><span class="params">(String key, String item, <span class="keyword">double</span> by)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().increment(key, item, by);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * hash递减</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key  键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> item 项</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> by   要减少记(小于0)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">hdecr</span><span class="params">(String key, String item, <span class="keyword">double</span> by)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().increment(key, item, -by);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ============================set=============================</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据key获取Set中的所有值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;Object&gt; <span class="title">sGet</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForSet().members(key);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据value从一个set中查询,是否存在</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true 存在 false不存在</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">sHasKey</span><span class="params">(String key, Object value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForSet().isMember(key, value);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将数据放入set缓存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key    键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> values 值 可以是多个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 成功个数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">sSet</span><span class="params">(String key, Object... values)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForSet().add(key, values);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将set数据放入缓存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key    键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time   时间(秒)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> values 值 可以是多个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 成功个数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">sSetAndTime</span><span class="params">(String key, <span class="keyword">long</span> time, Object... values)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Long count = redisTemplate.opsForSet().add(key, values);</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>)</span><br><span class="line">                expire(key, time);</span><br><span class="line">            <span class="keyword">return</span> count;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取set缓存的长度</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">sGetSetSize</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForSet().size(key);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移除值为value的</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key    键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> values 值 可以是多个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 移除的个数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">setRemove</span><span class="params">(String key, Object... values)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Long count = redisTemplate.opsForSet().remove(key, values);</span><br><span class="line">            <span class="keyword">return</span> count;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ===============================list=================================</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取list缓存的内容</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> start 开始</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> end   结束 0 到 -1代表所有值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Object&gt; <span class="title">lGet</span><span class="params">(String key, <span class="keyword">long</span> start, <span class="keyword">long</span> end)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForList().range(key, start, end);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取list缓存的长度</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">lGetListSize</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForList().size(key);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过索引 获取list中的值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index 索引 index&gt;=0时， 0 表头，1 第二个元素，依次类推；index&lt;0时，-1，表尾，-2倒数第二个元素，依次类推</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">lGetIndex</span><span class="params">(String key, <span class="keyword">long</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> redisTemplate.opsForList().index(key, index);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将list放入缓存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lSet</span><span class="params">(String key, Object value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForList().rightPush(key, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将list放入缓存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time  时间(秒)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lSet</span><span class="params">(String key, Object value, <span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForList().rightPush(key, value);</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>)</span><br><span class="line">                expire(key, time);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将list放入缓存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lSet</span><span class="params">(String key, List&lt;Object&gt; value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForList().rightPushAll(key, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将list放入缓存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time  时间(秒)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lSet</span><span class="params">(String key, List&lt;Object&gt; value, <span class="keyword">long</span> time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForList().rightPushAll(key, value);</span><br><span class="line">            <span class="keyword">if</span> (time &gt; <span class="number">0</span>)</span><br><span class="line">                expire(key, time);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据索引修改list中的某条数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index 索引</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lUpdateIndex</span><span class="params">(String key, <span class="keyword">long</span> index, Object value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForList().set(key, index, value);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移除N个值为value</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> count 移除多少个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 移除的个数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">lRemove</span><span class="params">(String key, <span class="keyword">long</span> count, Object value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Long remove = redisTemplate.opsForList().remove(key, count, value);</span><br><span class="line">            <span class="keyword">return</span> remove;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.springboot10redissimple.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试：略</p></li></ol><p>注意点：</p><ul><li><p>主要的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>从springboot2.x开始，jedis很多东西不支持了，都是推荐使用lettuce（从源码中也可以看到）</p></li><li><p>原生态的redis代码非常繁琐冗余，我们首先可以自己配置一个redisTemplate，然后再写一个工具类，这些都是死代码，在企业实际开发中也是这么用的，可以大大减少在业务层的代码量</p></li></ul><p>总结：redis使用起来还是比较简单的，重要的是要去思考、理解其中的思想， 这也是在面试过程中的谈资，当然这里也只是在springboot中插播一下redis，后面会再去详细解析redis</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1、SpringBoot&quot;&gt;&lt;a href=&quot;#1、SpringBoot&quot; class=&quot;headerlink&quot; title=&quot;1、SpringBoot&quot;&gt;&lt;/a&gt;1、SpringBoot&lt;/h2&gt;&lt;h3 id=&quot;回顾下什么是Spring？&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
    
      <category term="后端" scheme="http://yoursite.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="springboot" scheme="http://yoursite.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>SSM框架——ssm整合</title>
    <link href="http://yoursite.com/2020/06/24/M%E6%A1%86%E6%9E%B6%E2%80%94%E2%80%94ssm%E6%95%B4%E5%90%88/"/>
    <id>http://yoursite.com/2020/06/24/M%E6%A1%86%E6%9E%B6%E2%80%94%E2%80%94ssm%E6%95%B4%E5%90%88/</id>
    <published>2020-06-24T07:12:00.000Z</published>
    <updated>2020-06-24T07:15:33.150Z</updated>
    
    <content type="html"><![CDATA[<h1 id="整合ssm框架"><a href="#整合ssm框架" class="headerlink" title="整合ssm框架"></a>整合ssm框架</h1><ol><li><p>新建一个项目，确保导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ryan<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ssmbuild<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--依赖：junit mysql数据库 数据库连接池 jsp mybatis spring lombok--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--junit--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--数据库--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--数据库连接池，这里尝试使用c3p0--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--jsp--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--mybatis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 日志 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--spring--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--lombok--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--静态资源导出问题--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--jdk版本问题--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--修改Language level--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>11<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--修改Java Compiler--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>11<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>新建必要的包：pojo、dao、service、controller</p></li><li><p>提供配置文件</p><ul><li><p>两大核心配置文件：mybatis的mybatis-config.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--mybatis的主配置文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"logImpl"</span> <span class="attr">value</span>=<span class="string">"LOG4J"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.ryan.pojo"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">"com.ryan.dao.BookMapper"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><ol start="4"><li><p>完善mybatis层</p><ul><li><p>提供数据库文件database.properties和日志文件log4j.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将等级为DEBUG的日志信息输出到console和file这两个目的地，console和file的定义在下面的代码</span></span><br><span class="line"><span class="meta">log4j.rootLogger</span>=<span class="string">DEBUG,console,file</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#控制台输出的相关设置</span></span><br><span class="line"><span class="meta">log4j.appender.console</span> = <span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="meta">log4j.appender.console.Target</span> = <span class="string">System.out</span></span><br><span class="line"><span class="meta">log4j.appender.console.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout.ConversionPattern</span>=<span class="string">[%c]-%m%n</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#文件输出的相关设置</span></span><br><span class="line"><span class="meta">log4j.appender.file</span> = <span class="string">org.apache.log4j.RollingFileAppender</span></span><br><span class="line"><span class="meta">log4j.appender.file.File</span>=<span class="string">./log/ryan.log</span></span><br><span class="line"><span class="meta">log4j.appender.file.MaxFileSize</span>=<span class="string">10mb</span></span><br><span class="line"><span class="meta">log4j.appender.file.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout.ConversionPattern</span>=<span class="string">[%p][%d&#123;yy-MM-dd&#125;][%c]%m%n</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#日志输出级别</span></span><br><span class="line"><span class="meta">log4j.logger.org.mybatis</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql.Statement</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql.ResultSet</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql.PreparedStatement</span>=<span class="string">DEBUG</span></span><br></pre></td></tr></table></figure><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">jdbc.driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/ssmbuild?useSSL=true&amp;useUnicode=true&amp;characterEncoding=UTF-8</span></span><br><span class="line"><span class="meta">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">jdbc.password</span>=<span class="string">1227</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><ul><li><p>编写pojo包下的实体类</p></li><li><p>编写dao包下的接口和对应的mapper</p></li><li><p>编写mybatis核心配置文件（注册mapper）</p></li><li><p>编写servece包下的接口和实现类</p></li></ul><ol start="5"><li><p>完善spring层</p><ul><li><p>整合spring-dao：连接数据库和连接池，获取sqlSessionFactory，自动注入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--1.获取数据库配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:database.properties"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--2.连接池,这里使用c3p0,以后还会接触druid，之前使用的是spring自带的--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.mchange.v2.c3p0.ComboPooledDataSource"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClass"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcUrl"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--c3p0连接池的私有属性--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--最大连接数和最小连接数--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxPoolSize"</span> <span class="attr">value</span>=<span class="string">"30"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minPoolSize"</span> <span class="attr">value</span>=<span class="string">"10"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--关闭连接后补自动commit--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"autoCommitOnClose"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--获取连接超时时间--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"checkoutTimeout"</span> <span class="attr">value</span>=<span class="string">"10000"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--当获取连接失败重试次数--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"acquireRetryAttempts"</span> <span class="attr">value</span>=<span class="string">"2"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--3.获取sqlSessionFactory--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--绑定Mybatis核心配置文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span> <span class="attr">value</span>=<span class="string">"classpath:mybatis-config.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--4.配置dao接口扫描包，动态的实现了DAO接口可以注入到spring容器中--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--注入sqlSessionFactory--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sqlSessionFactoryBeanName"</span> <span class="attr">value</span>=<span class="string">"sqlSessionFactory"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--要扫描的dao包--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basePackage"</span> <span class="attr">value</span>=<span class="string">"com.ryan.dao"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><ul><li><p>整合spring-service：扫描service包，业务注入，声明式事务配置、aop织入（需要的话）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--1.扫描service包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.ryan.service"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--2.将service层的业务都注入到spring中，可用xml配置，也可以使用注解，这里配置一下--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"BookServiceImpl"</span> <span class="attr">class</span>=<span class="string">"com.ryan.service.BookServiceImpl"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"bookMapper"</span> <span class="attr">ref</span>=<span class="string">"bookMapper"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--3.声明式事务--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--4.如果有需要的话，还可以添加aop织入,这里就不加了--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ol start="6"><li><p>完善springmvc层</p><ul><li><p>增加web项目支持，确保lib目录导入</p></li><li><p>编写web.xml配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"4.0"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Dispatcher--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--中文乱码--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--sqlSession--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">session-config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span>15<span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><ul><li><p>编写springmvc.xml配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--扫描包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.ryan.controller"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--注解驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--过滤静态资源--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--视图解析器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/jsp/"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ol start="7"><li><p>整合所有spring配置文件：applicationContext.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/aop/spring-aop.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"spring-dao.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"spring-service.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"spring-mvc.xml"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写controller层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ryan.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ryan.pojo.Books;</span><br><span class="line"><span class="keyword">import</span> com.ryan.service.BookService;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/book"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookController</span> </span>&#123;</span><br><span class="line">    <span class="comment">//Controller调service层</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier</span>(<span class="string">"BookServiceImpl"</span>)</span><br><span class="line">    <span class="keyword">private</span> BookService bookService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/allBooks"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">list</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        List&lt;Books&gt; list = bookService.queryAllBooks();</span><br><span class="line">        model.addAttribute(<span class="string">"list"</span>,list);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"allBooks"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//跳转到增加书籍页面</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/toAddBook"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toAddPaper</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"addBook"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增加书籍后回到书籍列表</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/addBook"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">addBook</span><span class="params">(Books book)</span></span>&#123;</span><br><span class="line">        bookService.addBook(book);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:/book/allBooks"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除书籍</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/deleteBook/&#123;bookID&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">deleteBook</span><span class="params">(@PathVariable(<span class="string">"bookID"</span>)</span> <span class="keyword">int</span> id)</span>&#123;</span><br><span class="line">        bookService.deleteBook(id);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:/book/allBooks"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//跳转到修改书籍页面</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/toUpdateBook/&#123;bookID&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toUpdatePaper</span><span class="params">(@PathVariable(<span class="string">"bookID"</span>)</span><span class="keyword">int</span> id,  Model model)</span>&#123;</span><br><span class="line">        Books books = bookService.queryBookById(id);</span><br><span class="line">        model.addAttribute(<span class="string">"books"</span>,books);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"updateBook"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改书籍页面</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/updateBook"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">updateBook</span><span class="params">(Books book)</span></span>&#123;</span><br><span class="line">        bookService.updateBook(book);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:/book/allBooks"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>结合第8步编写前端页面</p><ul><li>书籍列表（查询全部书籍）</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"zh-CN"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;!-- 上述<span class="number">3</span>个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span><br><span class="line">    &lt;title&gt;图书管理系统&lt;/title&gt;</span><br><span class="line">    &lt;script src="$&#123;pageContext.request.contextPath&#125;/js/jquery3.5.0.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;link href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/bootstrap.min.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &lt;script src="$&#123;pageContext.request.contextPath&#125;/js/bootstrap.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"container"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row clearfix"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-md-12"</span>&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"page-header"</span>&gt;</span><br><span class="line">                &lt;h1&gt;</span><br><span class="line">                    &lt;small&gt;书籍列表——————显示所有书籍&lt;/small&gt;</span><br><span class="line">                &lt;/h1&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-md-4"</span>&gt;</span><br><span class="line">            &lt;a class="btn btn-default" role="button" href="$&#123;pageContext.request.contextPath&#125;/book/toAddBook"&gt;添加书籍&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div style=<span class="string">"float: right"</span>&gt;</span><br><span class="line">            &lt;form <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-inline"</span>&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">                    &lt;input type=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"queryBookName"</span> name=<span class="string">"bookName"</span> placeholder=<span class="string">"书籍名称"</span>&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;button type="submit" class="btn btn-default"&gt;查询&lt;/button&gt;</span><br><span class="line">            &lt;/form&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row clearfix"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-md-12"</span>&gt;</span><br><span class="line">            &lt;table <span class="class"><span class="keyword">class</span></span>=<span class="string">"table table-hover table-striped"</span>&gt;</span><br><span class="line">                &lt;thead&gt;</span><br><span class="line">                    &lt;tr&gt;</span><br><span class="line">                        &lt;th&gt;书籍编号&lt;/th&gt;</span><br><span class="line">                        &lt;th&gt;书籍名称&lt;/th&gt;</span><br><span class="line">                        &lt;th&gt;书籍库存&lt;/th&gt;</span><br><span class="line">                        &lt;th&gt;书籍描述&lt;/th&gt;</span><br><span class="line">                        &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">                    &lt;/tr&gt;</span><br><span class="line">                &lt;/thead&gt;</span><br><span class="line"></span><br><span class="line">                &lt;tbody&gt;</span><br><span class="line">                    &lt;c:forEach <span class="keyword">var</span>=<span class="string">"book"</span>  items=<span class="string">"$&#123;list&#125;"</span>&gt;</span><br><span class="line">                        &lt;tr&gt;</span><br><span class="line">                            &lt;td&gt;$&#123;book.bookID&#125;&lt;/td&gt;</span><br><span class="line">                            &lt;td&gt;$&#123;book.bookName&#125;&lt;/td&gt;</span><br><span class="line">                            &lt;td&gt;$&#123;book.bookCounts&#125;&lt;/td&gt;</span><br><span class="line">                            &lt;td&gt;$&#123;book.detail&#125;&lt;/td&gt;</span><br><span class="line">                            &lt;td&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/book/toUpdateBook/$&#123;book.bookID&#125;"&gt;修改&lt;/a&gt; | &lt;a href="$&#123;pageContext.request.contextPath&#125;/book/deleteBook/$&#123;book.bookID&#125;"&gt;删除&lt;/a&gt; &lt;/td&gt;</span><br><span class="line">                        &lt;/tr&gt;</span><br><span class="line">                    &lt;/c:forEach&gt;</span><br><span class="line">                &lt;/tbody&gt;</span><br><span class="line">            &lt;/table&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li>添加书籍</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"zh-CN"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;!-- 上述<span class="number">3</span>个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span><br><span class="line">    &lt;title&gt;图书管理系统-新增书籍&lt;/title&gt;</span><br><span class="line">    &lt;script src="$&#123;pageContext.request.contextPath&#125;/js/jquery3.5.0.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;link href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/bootstrap.min.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &lt;script src="$&#123;pageContext.request.contextPath&#125;/js/bootstrap.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"container"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row clearfix"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-md-12 colum"</span>&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"page-header"</span>&gt;</span><br><span class="line">                &lt;h1&gt;</span><br><span class="line">                    &lt;small&gt;新增书籍&lt;/small&gt;</span><br><span class="line">                &lt;/h1&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/book/addBook"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label for="bkname"&gt;书籍名称&lt;/label&gt;</span><br><span class="line">            &lt;input type=<span class="string">"text"</span> name=<span class="string">"bookName"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"bkname"</span>&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label for="bkcounts"&gt;书籍库存&lt;/label&gt;</span><br><span class="line">            &lt;input type=<span class="string">"text"</span> name=<span class="string">"bookCounts"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"bkcounts"</span>&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label for="detail"&gt;书籍描述&lt;/label&gt;</span><br><span class="line">            &lt;input type=<span class="string">"text"</span> name=<span class="string">"detail"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"detail"</span>&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;button type="submit" class="btn btn-default"&gt;添加&lt;/button&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li>修改书籍</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"zh-CN"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;!-- 上述<span class="number">3</span>个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span><br><span class="line">    &lt;title&gt;图书管理系统-修改书籍&lt;/title&gt;</span><br><span class="line">    &lt;script src="$&#123;pageContext.request.contextPath&#125;/js/jquery3.5.0.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;link href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/bootstrap.min.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &lt;script src="$&#123;pageContext.request.contextPath&#125;/js/bootstrap.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"container"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row clearfix"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-md-12 colum"</span>&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"page-header"</span>&gt;</span><br><span class="line">                &lt;h1&gt;</span><br><span class="line">                    &lt;small&gt;修改书籍&lt;/small&gt;</span><br><span class="line">                &lt;/h1&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/book/updateBook"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"bookID"</span> value=<span class="string">"$&#123;books.bookID&#125;"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label for="bkname"&gt;书籍名称&lt;/label&gt;</span><br><span class="line">            &lt;input type=<span class="string">"text"</span> name=<span class="string">"bookName"</span> value=<span class="string">"$&#123;books.bookName&#125;"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"bkname"</span>&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label for="bkcounts"&gt;书籍库存&lt;/label&gt;</span><br><span class="line">            &lt;input type=<span class="string">"text"</span> name=<span class="string">"bookCounts"</span> value=<span class="string">"$&#123;books.bookCounts&#125;"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"bkcounts"</span>&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label for="detail"&gt;书籍描述&lt;/label&gt;</span><br><span class="line">            &lt;input type=<span class="string">"text"</span> name=<span class="string">"detail"</span> value=<span class="string">"$&#123;books.detail&#125;"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"detail"</span>&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;button type="submit" class="btn btn-default"&gt;修改&lt;/button&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ol><p>总结：</p><ul><li>配置太多，不用特意去死记硬背，可以一边做项目一边加强记忆</li><li>controller层和前端的逻辑一定要清晰</li><li>前端提交表单的，要考虑到以下几点<ul><li>属性：action、method、name</li><li>是否需要传参</li></ul></li><li>前端的一些样式还是要稍微去学习以下</li></ul><p>展望：ssm框架的重要程度是不言而喻的，学到这里，大家已经可以进行基本网站的单独开发，但是这只是增删改查的基本操作，可以说学到这里，大家才算是真正的步入了后台开发的门，也就是能找一个后台相关工作的底线。</p><p>或许很多人，工作就是做这些事情，但是对于个人的提高来说，这远远不够！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;整合ssm框架&quot;&gt;&lt;a href=&quot;#整合ssm框架&quot; class=&quot;headerlink&quot; title=&quot;整合ssm框架&quot;&gt;&lt;/a&gt;整合ssm框架&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;新建一个项目，确保导入依赖&lt;/p&gt;
&lt;figure class=&quot;highligh
      
    
    </summary>
    
    
    
      <category term="ssm" scheme="http://yoursite.com/tags/ssm/"/>
    
  </entry>
  
</feed>
